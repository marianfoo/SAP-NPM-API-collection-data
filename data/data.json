{"packages":[{"name":"abap-deploy","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# abap-deploy\r\n\r\n## Installation\r\n\r\n```\r\nnpm install @sap/abap-deploy\r\n```\r\n\r\n## Simple Usage\r\n\r\n- execute `abap-deploy` in your terminal and answer the questions in the terminal.\r\n- or `abap-deploy --help` to explore the CLI Options.\r\n\r\n### Running CLI on local environment\r\n\r\n#### Prerequisite:\r\n\r\nIn order to run the abap-deploy CLI on your local environment, you need to add SAP Global Root CA Certificate to your trusted certificate list.\r\nThis can be achieved by navigating to your SAP System using your browser (e.g. `https://<host>:<port>/sap/bc/adt/discovery`), exporting the certificate from your browser, and then adding it to NODE_EXTRA_CA_CERTS\r\nYou can find more details in here: `https://help.sap.com/viewer/a9f57505bbb34a6da3c5ba3a49d409d8/Latest/en-US/4b318bede7eb4021a8be385c46c74045.html`\r\n\r\n- Add: \"@sap/abap-deploy\": \"`<version>`\" to devDependencies section of your project's package.json\r\n- Execute `npm install`\r\n- Execute `npm run build`\r\n- Execute `abap-deploy` in your terminal and answer the questions in the terminal.\r\n\r\nNote: When requested to provide Target System url make sure you are using https and not http.\r\n\r\n## In Depth Guide\r\n\r\n### Interactive mode\r\n\r\nBy default the abap-deploy tool will ask the user for any missing configuration.\r\n\r\n### CLI Arguments\r\n\r\nConfiguration options may be passed as command line arguments, e.g:\r\n`abap-deploy --targetSystem=https://foo.com --client=010`\r\n\r\nThe list of CLI options can be printed by running `abap-deploy --help`\r\n\r\nCLI arguments may be useful to avoid re-typing the same values or to inject values from environment variables for certain options.\r\n\r\n### Configuration files\r\n\r\nAny configuration options that can be set via the command line can also be specified within a separate configuration file. A variety of default config files flavors are available:\r\n\r\n| File name               | File Association |\r\n| ----------------------- | ---------------- |\r\n| `.abap-deployrc`        | JSON or YAML     |\r\n| `.abap-deployrc.json`   | JSON             |\r\n| `.abap-deployrc.yaml`   | YAML             |\r\n| `.abap-deployrc.yml`    | YAML             |\r\n| `.abap-deployrc.js`     | CommonJS export  |\r\n| `abap-deploy.config.js` | CommonJS export  |\r\n\r\nThese default configuration files will be searched \"upwards\" starting from the CWD.\r\n\r\n#### Custom Name Configuration Files.\r\n\r\nA specific configuration file path may be provided using the configPath option, e.g:\r\n\r\n- `abap-deploy --config-path=./my-custom.config.json`\r\n\r\nMultiple custom name configuration files may be useful to manage presets of deployment\r\nscenarios, e.g `test` vs `productive` systems.\r\n\r\n#### package.json configuration\r\n\r\nThe configuration can also be embedded in the project's package.json inside the \"abap-deploy\" key, e.g:\r\n\r\n- ```json\r\n  {\r\n    \"name\": \"myApp\",\r\n    \"version\": \"0.2.0\",\r\n    \"dependencies\": {},\r\n    \"devDependencies\": {},\r\n    \"abap-deploy\": {}\r\n  }\r\n  ```\r\n\r\n#### Sample JSON Configuration File\r\n\r\n```json\r\n{\r\n  \"deploy\": {\r\n    \"sourceFolder\": \"./dist\",\r\n    \"targetSystem\": \"http://abc.com\",\r\n    \"client\": \"010\",\r\n    \"username\": \"Tom\",\r\n    \"password\": \"abcd1234\",\r\n    \"appName\": \"foo\"\r\n  },\r\n  \"cli\": {\r\n    \"interactiveFallBack\": false\r\n  }\r\n}\r\n```\r\n\r\n#### Sample YAML Configuration File\r\n\r\n```yaml\r\ndeploy:\r\n  sourceFolder: \"./dist\"\r\n  targetSystem: http://abc.com\r\n  client: \"010\"\r\n  username: Tom\r\n  password: abcd1234\r\n  appName: foo\r\ncli:\r\n  interactiveFallBack: false\r\n```\r\n\r\n### Combining Interactive / CLI / Config Files\r\n\r\nOptions from different sources have different precedence levels.\r\n\r\n- CLI arguments (e.g --source-folder) options have the highest priority and will override any other options.\r\n- Configuration files options are next on the priority list.\r\n- Interactive options are the lowest priority and will only be asked for options which have no values assigned by either CLI/Config FIle.\r\n\r\n### Options Reference\r\n\r\n#### sourceFolder\r\n\r\n|                 |                                                |\r\n| --------------- | ---------------------------------------------- |\r\n| Description     | Project's Pre-Built Artifacts Folder to Deploy |\r\n| Type            | String                                         |\r\n| CLI Name        | `--source-folder`                              |\r\n| CLI Alias       | `--sf`                                         |\r\n| Config File Key | `deploy.sourceFolder`                          |\r\n| Default         | `./dist` (if exists)                           |\r\n\r\n#### targetSystem\r\n\r\n|                 |                              |\r\n| --------------- | ---------------------------- |\r\n| Description     | ABAP system URL to Deploy to |\r\n| Type            | String                       |\r\n| CLI Name        | `--target-system`            |\r\n| CLI Alias       | `--ts`                       |\r\n| Config File Key | `deploy.targetSystem`        |\r\n\r\n#### client\r\n\r\n|                 |                           |\r\n| --------------- | ------------------------- |\r\n| Description     | ABAP system client number |\r\n| Type            | String                    |\r\n| CLI Name        | `--client`                |\r\n| CLI Alias       | `--c`                     |\r\n| Config File Key | `deploy.client`           |\r\n\r\n#### username\r\n\r\n|                 |                      |\r\n| --------------- | -------------------- |\r\n| Description     | ABAP System username |\r\n| Type            | String               |\r\n| CLI Name        | `--username`         |\r\n| CLI Alias       | `--u`                |\r\n| Config File Key | `deploy.username`    |\r\n\r\n#### password\r\n\r\n|                 |                      |\r\n| --------------- | -------------------- |\r\n| Description     | ABAP System password |\r\n| Type            | String               |\r\n| CLI Name        | `--password`         |\r\n| CLI Alias       | `--p`                |\r\n| Config File Key | `deploy.password`    |\r\n\r\n#### appName\r\n\r\n|                 |                                  |\r\n| --------------- | -------------------------------- |\r\n| Description     | Application Name (folder in BSP) |\r\n| Type            | String                           |\r\n| CLI Name        | `--app-name`                     |\r\n| CLI Alias       | `--ap`                           |\r\n| Config File Key | `deploy.appName`                 |\r\n\r\n#### description\r\n\r\n|                 |                         |\r\n| --------------- | ----------------------- |\r\n| Description     | Application Description |\r\n| Type            | String                  |\r\n| CLI Name        | `--description`         |\r\n| CLI Alias       | `--d`                   |\r\n| Config File Key | `deploy.description`    |\r\n\r\n#### interactiveFallBack\r\n\r\n|                 |                                                           |\r\n| --------------- | --------------------------------------------------------- |\r\n| Description     | Fallback to Interactive mode in case of missing arguments |\r\n| Type            | Boolean                                                   |\r\n| CLI Name        | `--interactive-fallback`                                  |\r\n| CLI Alias       | `--if`                                                    |\r\n| Config File Key | `cli.interactiveFallBack`                                 |\r\n| Default         | true                                                      |\r\n\r\n#### configPath\r\n\r\n|                 |                                     |\r\n| --------------- | ----------------------------------- |\r\n| Description     | Relative Path to Configuration file |\r\n| Type            | Boolean                             |\r\n| CLI Name        | `--config-path`                     |\r\n| CLI Alias       | `--cf`                              |\r\n| Config File Key | `cli.configPath`                    |\r\n| Default         | See \"Configuration Files\" section   |\r\n\r\n#### logLevel\r\n\r\n|                 |                                                                                                                                                                                           |\r\n| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| Description     | The level of logs to report for notification purposes. Any logs of a higher level than the logLevel setting will be written to the abap-deploy.log file in the current working directory. |\r\n| Type            | \"off\" or \"fatal\" or \"error\" or \"warn\" or \"info\" or \"debug\" or \"trace\"                                                                                                                     |\r\n| CLI Name        | `--log-level`                                                                                                                                                                             |\r\n| CLI Alias       | `--ll`                                                                                                                                                                                    |\r\n| Config File Key | `cli.logLevel`                                                                                                                                                                            |\r\n| Default         | \"off\"                                                                                                                                                                                     |\r\n\r\n### Support channel\r\n\r\nFor reporting an issue, open a BCP ticket with component CA-BAS-DPL-ABAP\r\nFor reporting a feature request, please open an influence request (https://influence.sap.com/sap/ino/#campaign/2538)\r\n","changelog":"<a name=\"0.10.19\"></a>\r\n\r\n## [0.10.19](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.10.15...v0.10.19) (2020-12-23)\r\n\r\n### Bug Fixes\r\n\r\n- add CondenseMessagesInHttpResponseHeader parameter in update url ([#61](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/61)) ([de0f2cf](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/de0f2cf))\r\n- dummy version for github testing ([#59](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/59)) ([291e3e0](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/291e3e0))\r\n\r\n<a name=\"0.10.11\"></a>\r\n\r\n## [0.10.17](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.10.11...v0.10.17) (2020-11-10)\r\n\r\n### Bug Fixes\r\n\r\n- devxbugs 7825 abap-deploy does not specify condense parameter when updating\r\n\r\n<a name=\"0.10.11\"></a>\r\n\r\n## [0.10.11](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.9.5...v0.10.11) (2020-10-15)\r\n\r\n### Bug Fixes\r\n\r\n- devxbugs 7659 use dest for onpremise ([#46](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/46)) ([c19eecb](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/c19eecb))\r\n- devxbugs-7475 deploy fail in case app id is changed ([#47](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/47))\r\n\r\n### Features\r\n\r\n- support local NoAuth by default ([#42](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/42)) ([bd70b5c](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/bd70b5c))\r\n\r\n<a name=\"0.10.7\"></a>\r\n\r\n## [0.10.7](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.9.6...v0.10.7) (2020-08-05)\r\n\r\n### Features\r\n\r\n- Support abap deploy from local environment\r\n\r\n<a name=\"0.9.5\"></a>\r\n\r\n## [0.9.5](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.8...v0.9.5) (2020-07-29)\r\n\r\n### Bug Fixes\r\n\r\n- fix ([7806129](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/7806129))\r\n- remove sap procedures from official README file ([1e546df](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/1e546df))\r\n- typo error ([e68bb3d](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/e68bb3d))\r\n\r\n# [0.9.2](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.9.1...v0.9.2)\r\n\r\n### Bug Fixes\r\n\r\n- s4hana use host name and support uppercase\r\n\r\n# [0.9.0](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.8...v0.9.0) (2020-06-17)\r\n\r\n### Bug Fixes\r\n\r\n- fix header content-type ([8cc1212](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/8cc121285990f3f0fe14a1f33297771c0dc21b74))\r\n\r\n### Features\r\n\r\n- handle valid ato response and tests ([1e01f80](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/1e01f80e12e8d2c94ac0d846bb7a9c9b8f67127b))\r\n- [DEVXTOKYO-1673] Deploy Fiori app to S4Cloud sys ([e1699b8](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/e1699b872f496ba8c39da7582c1cbc086e3cfa7b))\r\n\r\n# [0.7.8](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.3...v0.7.8) (2020-06-03)\r\n\r\n### Bug Fixes\r\n\r\n- encode customer namespace\r\n- update string + remove odata_abap usage in deploy ([79fa61b](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/79fa61b9c66825db42feb22a5fce005cb76f56db))\r\n- update string + remove odata_abap usage in deploy ([ed3e691](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/ed3e691bd65a3eb17cff4d8e680629f2c7b6351e))\r\n\r\n## [0.7.3](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.6.2...v0.7.3) (2020-05-06)\r\n\r\n### Bug Fixes\r\n\r\n- bug undefined transport ([#22](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/22)) ([143851c](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/143851c99929b4051a8da94ccae3411deae1686a))\r\n\r\n### Features\r\n\r\n- enhance console output in success flow and add warnings ([#23](https://github.wdf.sap.corp/devx-wing/abap-deploy/issues/23)) ([c7fe6f8](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/c7fe6f883220f7420db9e7afe4846b450fc3d87d))\r\n\r\n## [0.7.1](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.7.0...v0.7.1) (2020-05-05)\r\n\r\n### Features\r\n\r\n- enhance console output in success flow and add warnings ([983cd42](https://github.wdf.sap.corp/devx-wing/abap-deploy/commit/983cd42e825edc439e970946c7d6b43f42a626ec))\r\n\r\n<a name=\"0.7.0\"></a>\r\n\r\n# [0.7.0](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.6.2...v0.7.0) (2020-05-05)\r\n\r\n### Features\r\n\r\n- Support deploy to steampunk\r\n\r\n<a name=\"0.6.2\"></a>\r\n\r\n# [0.6.2](https://github.wdf.sap.corp/devx-wing/abap-deploy/compare/v0.5.1...v0.6.2) (2020-04-23)\r\n\r\n### Features\r\n\r\n- Add support for packge and transport input\r\n\r\n<a name=\"0.5.0\"></a>\r\n\r\n# [0.5.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.4.0...v0.5.0) (2020-01-05)\r\n\r\n### Bug Fixes\r\n\r\n- additional fixes for user facing strings ([9d58c94](https://github.tools.sap/devx-wing/abap-deploy/commit/9d58c94))\r\n\r\n### Features\r\n\r\n- technical writer review for some user facing strings ([#30](https://github.tools.sap/devx-wing/abap-deploy/issues/30)) ([dc19408](https://github.tools.sap/devx-wing/abap-deploy/commit/dc19408))\r\n- use CondenseMessagesInHttpResponseHeader url param ([cb92da8](https://github.tools.sap/devx-wing/abap-deploy/commit/cb92da8))\r\n\r\n<a name=\"0.4.0\"></a>\r\n\r\n# [0.4.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.3.0...v0.4.0) (2019-12-30)\r\n\r\n### Bug Fixes\r\n\r\n- add return before sendDeploy ([7f0dafb](https://github.tools.sap/devx-wing/abap-deploy/commit/7f0dafb))\r\n\r\n### Features\r\n\r\n- add description Option ([757b462](https://github.tools.sap/devx-wing/abap-deploy/commit/757b462))\r\n- description validation ([#26](https://github.tools.sap/devx-wing/abap-deploy/issues/26)) ([b73949c](https://github.tools.sap/devx-wing/abap-deploy/commit/b73949c))\r\n- handle deploy Error Details as plain text ([1ba3036](https://github.tools.sap/devx-wing/abap-deploy/commit/1ba3036))\r\n- support namespace and Application name validation ([56e1aca](https://github.tools.sap/devx-wing/abap-deploy/commit/56e1aca))\r\n\r\n<a name=\"0.3.0\"></a>\r\n\r\n# [0.3.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.2.0...v0.3.0) (2019-12-18)\r\n\r\n### Bug Fixes\r\n\r\n- clear Error Msg when the session cookie is missing ([e6a119a](https://github.tools.sap/devx-wing/abap-deploy/commit/e6a119a))\r\n- do not print `undefined` for system without client ([8d17719](https://github.tools.sap/devx-wing/abap-deploy/commit/8d17719))\r\n\r\n### Features\r\n\r\n- getAppStatus even if an appName has been provided by config/args ([ff7a286](https://github.tools.sap/devx-wing/abap-deploy/commit/ff7a286))\r\n- isAlive visual indicator during network requests ([7df8561](https://github.tools.sap/devx-wing/abap-deploy/commit/7df8561))\r\n- print Error In Bright Red ([904393f](https://github.tools.sap/devx-wing/abap-deploy/commit/904393f))\r\n- print Mode(create/update) and appName used before deploy requests ([5be1450](https://github.tools.sap/devx-wing/abap-deploy/commit/5be1450))\r\n\r\n<a name=\"0.2.0\"></a>\r\n\r\n# [0.2.0](https://github.tools.sap/devx-wing/abap-deploy/compare/v0.1.0...v0.2.0) (2019-12-17)\r\n\r\n### Features\r\n\r\n- display ABAP Error Details (if available) ([a372dc1](https://github.tools.sap/devx-wing/abap-deploy/commit/a372dc1))\r\n\r\n<a name=\"0.1.0\"></a>\r\n\r\n# 0.1.0 (2019-12-17)\r\n\r\n- Initial Version\r\n"},{"name":"apihub-service-provider","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"\r\n# The apihub-service-provider Repository\r\n\r\nThis repository reveals the 'SAP API Business Hub' service provider that can be used for local development.\r\n\r\nThe service provider extends the 'Consume-Services', which prompts the user to enter information to extend the generated project.\r\n\r\nThe 'SAP API Business Hub' service provider prompts the user to enter input to populate the generated project. After entering the input, the project, which consumes data from the SAP API Business Hub can be built and run.\r\n\r\nThe 'SAP API Business Hub' service provider provides a \"modules.json\" file for the 'Consume-services' to discover and prompt its questions. \r\n\r\nThe *modules.json* file includes the following parameters: \r\n\r\n```\r\n{\r\n  \"serviceProvider\": [\r\n    {\r\n      \"name\": \"SAP API Business Hub\", \t// The displayed name in the yeoman-based prompt as part of the service provider's list.\r\n      \"path\": \"/extbin/serviceProviders/apihub-service-provider\", \t// The path to the service provider's package.\r\n      \"entryPoint\": { \t\t\t// The main entry point to trigger the specific service provider's logic.\r\n        \"class\": \"ApihubServiceProvider\",\r\n        \"method\": \"apihubServiceProviderPrompt\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe 'SAP API Business Hub' service provider returns the following JSON containing the connectivity details below.\r\n \r\n```\r\nConnectivityDetails {\r\n  destination: { Name: \"apihub_sandbox\" },\r\n  serviceURL: \"/dummyPath\",\r\n  apiKey: \"dummyApiKey\",\r\n  serviceMetadata: {\r\n    odataContent: \"<dummyXML></dummyXML>\" \r\n    }\r\n}\r\n```\r\n\r\n# Public APIs\r\n\r\n### getListODataServices\r\n**Description:** *Provides a list of OData services for 'SAP API Business Hub'*  \r\n**Signiture:** ```async function getListODataServices()```  \r\n**Input:** none  \r\n**Output:** Json object containing array of OData services  \r\n\r\n### getApihubKey\r\n**Description:** *Retrieves an APIhub key from 'SAP API Business Hub' when passing in a valid username and password*  \r\n**Signiture:** ```async function getApihubKey(username: string, password: string): Promise<string>```  \r\n**Input:** *username:* The user's username that is used to login to 'SAP API Business Hub'  \r\n           *password:* The user's password that is used to login to 'SAP API Business Hub'  \r\n**Output:** Promise that resolves a string holding the user's apihub user key  \r\n\r\n### getMetadata\r\n**Description:** *Retrieves xml metadata for a specific service - as configured in the connectivityDetails.servicepath*  \r\n**Signiture:** ```async function getMetadata(connectivityDetails: ConnectionDetails, serviceName: string)```  \r\n**Input:** *connectivityDetails:* Object that contains the selected 'servicePath' and the generated 'apiHubApiKey'  \r\n  *serviceName:* The name of the selected service  \r\n**Output:** Beautified XML object including the selected service's metadata  \r\n\r\n### getListOfServiceName\r\n**Description:** *Retrieves a mapped list of all the OData services names for 'SAP API Business Hub'*  \r\n**Signiture:** ```function getListOfServiceNames(jsonServices: any): string[]```  \r\n**Input:** Json object including array of OData services  \r\n**Output:** String array of service names  \r\n"},{"name":"approuter","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/approuter\r\n==============\r\n\r\n<!-- toc -->\r\n\r\n- [Overview](#overview)\r\n- [Deploying a business application with microservices](#deploying-a-business-application-with-microservices)\r\n- [Working directory](#working-directory)\r\n- [Configurations](#configurations)\r\n  * [Destinations](#destinations)\r\n    + [Environment-destinations](#environment-destinations)\r\n    + [Destination-service](#destination-service)\r\n  * [UAA configuration](#uaa-configuration)\r\n  * [Additional headers configuration](#additional-headers-configuration)\r\n  * [Additional cookies configuration](#additional-cookies-configuration)\r\n  * [Plugins configuration](#plugins-configuration)\r\n  * [Session timeout configuration](#session-timeout-configuration)\r\n  * [X-Frame-Options configuration](#x-frame-options-configuration)\r\n  * [Cross-Origin Resource Sharing configuration](#cross-origin-resource-sharing-configuration)\r\n  * [Direct Routing URI Patterns configuration](#direct-routing-uri-patterns-configuration)\r\n  * [NodeJS Minimal Logging Level configuration](#nodejs-minimal-logging-level-configuration)\r\n- [Routes](#routes)\r\n  * [Example routes](#example-routes)\r\n- [Replacements](#replacements)\r\n- [*xs-app.json* configuration file](#xs-appjson-configuration-file)\r\n  * [*welcomeFile* property](#welcomefile-property)\r\n  * [*authenticationMethod* property](#authenticationmethod-property)\r\n  * [*routes* property](#routes-property)\r\n  * [*login* property](#login-property)\r\n  * [*logout* property](#logout-property)\r\n  * [*destinations* property](#destinations-property)\r\n  * [*services* property](#services-property)\r\n  * [*responseHeaders* property](#responseHeaders-property)\r\n  * [*compression* property](#compression-property)\r\n  * [*pluginMetadataEndpoint* property](#pluginmetadataendpoint-property)\r\n  * [*whitelistService* property](#whitelistservice-property)\r\n  * [*websockets* property](#websockets-property)\r\n  * [*errorPage* property](#errorpage-property)\r\n  * [*cors* property](#cors-property)\r\n  * [Complete example of an *xs-app.json* configuration file](#complete-example-of-an-xs-appjson-configuration-file)\r\n- [Headers](#headers)\r\n  * [Forwarding Headers](#forwarding-headers)\r\n  * [Hop-by-hop Headers](#hop-by-hop-headers)\r\n  * [Custom Headers](#custom-headers)\r\n  * [Authorization Header](#authorization-header)\r\n- [CSRF Protection](#csrf-protection)\r\n- [Support of SAP Statistics](#support-of-sap-statistics)\r\n- [Connectivity](#connectivity)\r\n- [SaaS Application Registration in CF](#saas-application-registration-in-cloud-foundry)\r\n  * [How To Expose Approuter for SaaS Subscription](#how-to-expose-approuter-for-saas-subscription)\r\n- [Authentication with Identity Service (IAS)](#authentication-with-identity-service-ias)\r\n- [Mutual TLS Authentication (mTLS) and Certificates Handling](#mutual-tls-authentication-mtls-and-certificates-handling)\r\n- [Integration with HTML5 Application Repository](#integration-with-html5-application-repository)\r\n- [Integration with Business Services](#integration-with-business-services)\r\n- [Web Sockets](#web-sockets)\r\n- [Session Handling](#session-handling)\r\n  * [Session Contents](#session-contents)\r\n- [External Session Management](#external-session-management)\r\n- [Service to Application Router](#service-to-application-router)\r\n- [Central Logout](#central-logout)\r\n- [User API Service](#user-api-service)\r\n- [Allowlist Service](#whitelist-service)\r\n  * [Enable the service](#enable-the-service)\r\n  * [Configuring allowed hostnames / domains](#configuring-allowed-hostnames--domains)\r\n  * [Return value](#return-value)\r\n- [Scaling](#scaling)\r\n- [Sizing Guide for Application Router](#sizing-guide-for-application-router)\r\n- [Configure server-side HTTPS](#configure-server-side-https)\r\n- [Audit-Log Service](#audit-log-service)\r\n- [Troubleshooting](#troubleshooting)\r\n- [Getting Support](#getting-support)\r\n- [Extending Application Router](#extending-application-router)\r\n- [Best practices](#best-practices)\r\n  * [Security best practices](#security-best-practices)\r\n    + [Content-Security-Policy](#content-security-policy)\r\n\r\n<!-- tocstop -->\r\n\r\n## Overview\r\n\r\nWhen a business application consists of several different apps  (microservices),\r\nthe application router is used to provide a single entry point to that business application.\r\nIt has the responsibility to:\r\n\r\n* Dispatch requests to backend microservices (reverse proxy)\r\n* Authenticate users\r\n* Serve static content\r\n\r\n\r\n![Application router overview diagram](doc/app-router-diagram.png \"Overview diagram\")\r\n\r\n\r\nLet's think of the different apps (microservices) as _destinations_ to which the incoming request will be forwarded.\r\nThe rules that determine which request should be forwarded to which destination are called _routes_.\r\nFor every destination there can be more than one route. You may read more on the concept of [routes](#routes) later in this document.\r\nIf the backend microservices require authentication, the application router can be configured to authenticate the users and propagate the user information.\r\nAgain by using routes, the application router can serve static content.\r\n\r\nThe application router is designed to work in XS Advanced - Cloud Foundry and XS OnPremise Runtime.\r\n\r\nA calling component accesses a target service by means of the application router only if there is no JWT token available, for example, \r\nif a user invokes the application from a Web browser.\r\nIf a JWT token is already available, for example, because the user has already been authenticated, or the calling component uses a JWT token for its own OAuth client,\r\nthe calling component calls the target service directly; it does not need to use the application router.\r\n\r\n**Note** that the application router does not hide the backend microservices in any way. They are still directly accessible bypassing the application router. So the backend microservices _must_ protect all their endpoints by validating the JWT token and implementing proper scope checks. Network isolation is not provided currently by the platform.\r\n\r\n## Deploying a business application with microservices\r\n\r\nFor example we can have a business application that has the following structure:\r\n\r\n<pre>\r\n+-- manifest.yml\r\n+-- manifest-op.yml\r\n|  +-- microservice-1\r\n|  | +-- ...\r\n|  | +-- ...\r\n|  +-- microservice-2\r\n|  | +-- ...\r\n|  | +-- ...\r\n|  +-- web\r\n|  | +-- ...\r\n|  | +-- ...\r\n</pre>\r\n\r\nThe *manifest.yml* file is used to deploy the business application on Cloud Foundry and the *manifest-op.yml* - on the XS OnPremise Runtime.\r\nThese files should describe all the microservices for that business application.\r\n\r\nFolders are used to isolate the different microservices. Let's assume that the application router is the microservice in the *web* folder (every business application has its own application router).\r\nHere is how we can include the application router:\r\n\r\n* Manually create the *node_modules* folder in the *web* folder.\r\n* Copy and paste the folder that contains the self-contained application router into *node_modules*. In this example the name of that folder is *@sap/approuter*, see the *start* script in the *package.json* below.\r\n* Check the version of the application router you just copied.\r\n* Create a *package.json* file in *web* with content similar to the following and replace the version's value with the version of your application router:\r\n\r\n```json\r\n{\r\n    \"name\": \"hello-world-approuter\",\r\n    \"dependencies\": {\r\n       \"@sap/approuter\": \"2.6.1\"\r\n    },\r\n    \"scripts\": {\r\n        \"start\": \"node node_modules/@sap/approuter/approuter.js\"\r\n    }\r\n}\r\n```\r\n\r\nIn order to use the application router you don't have to write any JavaScript code.\r\nOnly some configurations have to be provided in the *web* folder. Here is a complete example:\r\n\r\n<pre>\r\n+-- web\r\n| +-- package.json\r\n| +-- xs-app.json\r\n| +-- resources\r\n| | +-- hello-world.html\r\n| | +-- my-page.html\r\n| +-- node_modules\r\n| |   +-- ...\r\n| +-- default-env.json\r\n| +-- default-services.json\r\n</pre>\r\n\r\nThe *web* folder contains the *package.json*, *node_modules*, some configuration files used by the application router, and static resources to be served.\r\nYou can read more about the [configurations](#configurations) later in this document.\r\n\r\nBy default, the application router runs on port 5000 (if started locally) or it takes the port from the `PORT` environment variable.\r\n\r\n## Working directory\r\n\r\nThe working directory contains configuration files that the application router needs and static resources that can be served at runtime.\r\nIn the [previous example](#deploying-a-business-application-with-microservices), the *web* folder is the working directory.\r\nBy default the current directory is the working directory.\r\nIt is possible to configure it during start up of the application router with the following command line argument:\r\n\r\n```bash\r\nnode approuter.js -w <working-dir>\r\n```\r\n\r\nApplication router will abort if the working directory does not contain *xs-app.json* file.\r\n\r\n## Configurations\r\n\r\nThe application router makes use of the following configurations:\r\n\r\n- [Main configuration](#xs-appjson-configuration-file) - this is the *xs-app.json* file. This file is mandatory and contains the main configurations of the application router.\r\n\r\n- [UAA configuration](#uaa-configuration) - the application router reads this configuration either from the `VCAP_SERVICES` environment variable (when deployed on Cloud Foundry or XS Advanced OnPremise Runtime)\r\nor from the *default-services.json* file (when running locally). Refer to the documentation of the `@sap/xsenv` package for more details.\r\n\r\n- Configurations from the environment - these configurations are either read from the application router's environment (when deployed on Cloud Foundry or XS Advanced OnPremise Runtime)\r\nor from the *default-env.json* file (when running locally). Refer to the documentation of the `@sap/xsenv` package for more details.\r\nThe environment variables that the application router takes into account are:\r\n\r\n\r\nConfiguration | Environment variable | Description\r\n------------- | -------------------- | ------------\r\n[UAA service name](#uaa-configuration) | `UAA_SERVICE_NAME` | Contains the name of the UAA service to be used.\r\n[Destinations](#destinations) | `destinations` | Provides information about the available destinations.\r\n[Additional headers](#additional-headers-configuration) | `httpHeaders` | Provides headers that the application router will return to the client in its responses.\r\n[Additional cookies](#additional-cookies-configuration) | `COOKIES` | Provides cookies that the application router will return to the client in its responses. Currently only SameSite cookie is supported.\r\n[Plugins](#plugins-configuration) | `plugins` | A plugin is just like a [*route*](#routes) except that you can't configure some inner properties.\r\n[Session timeout](#session-timeout-configuration) | `SESSION_TIMEOUT` | Positive integer representing the session timeout in minutes. The default timeout is 15 minutes.\r\n[X-Frame-Options](#x-frame-options-configuration) | `SEND_XFRAMEOPTIONS`, `httpHeaders` | Configuration for the X-Frame-Options header value.\r\n[Allowlist service](#whitelist-service) | `CJ_PROTECT_WHITELIST` | Configuration for the allowlist that is preventing clickjack attacks.\r\n[Web Sockets origins allowlist](#web-sockets) | `WS_ALLOWED_ORIGINS` | An allowlist configuration that is used for verifying the `Origin` header of the initial upgrade request when establishing a web socket connection.\r\nJWT Token refresh | `JWT_REFRESH` | The time in minutes before a JWT token expires and the application router should trigger a token refresh routine.\r\nIncoming connection timeout | `INCOMING_CONNECTION_TIMEOUT` | Maximum time in milliseconds for a client connection. After that time the connection is closed. If set to 0, the timeout is disabled. Default: 120000 (2 min)\r\nTenant host pattern | `TENANT_HOST_PATTERN` | String containing a regular expression with a capturing group. The request host is matched against this regular expression. The value of the first capturing group is used as tenant id.\r\nDestination host pattern | `DESTINATION_HOST_PATTERN` | String containing a regular expression with a capturing group. The request host is matched against this regular expression. The value of the capturing group is used as destination name.\r\n[Compression](#compression-property) | `COMPRESSION` | Configuration regarding compressing resources before responding to the client.\r\n_Secure_ flag of session cookie | `SECURE_SESSION_COOKIE` | Can be set to `true` or `false`. By default, the _Secure_ flag of the session cookie is set depending on the environment the application router runs in. For example, when application router is behind a router (Cloud Foundry's router or SAP Web Dispatcher) that is configured to serve HTTPS traffic, then this flag will be present. During local development the flag is not set. This environment variable can be used to enforce setting or omitting the _Secure_ flag. **Note**: If the Secure flag is enforced, the application router will reject requests sent over unencrypted connection (http).\r\nTrusted CA certificates | `XS_CACERT_PATH` | List of files paths with trusted CA certificates used for outbound https connections (UAA, destinations, etc.). File paths are separated by [path.delimiter](https://nodejs.org/api/path.html#path_path_delimiter). If this is omitted, several well known \"root\" CAs (like VeriSign) will be used. This variable is set automatically by XSA On-premise runtime.\r\nReject untrusted certificates | `NODE_TLS_REJECT_UNAUTHORIZED` | By default an outbound https connection is terminated if the remote end does not provide a trusted certificate. This check can be disabled by setting `NODE_TLS_REJECT_UNAUTHORIZED` to `0`. This is a built-in feature of Node.js. **Note:** Do not use this in production as it compromises security!\r\nExternal reverse proxy flag | `EXTERNAL_REVERSE_PROXY` | Boolean value that indicates the use of application router behind an external reverse proxy (outside of Cloud Foundry domain)\r\nSkip client credentials tokens load on start | `SKIP_CLIENT_CREDENTIALS_TOKENS_LOAD` | Boolean value that indicates that no client credentials tokens should be created during the application router start phase \r\n[Cross-Origin Resource Sharing](#cross-origin-resource-sharing-configuration) | `CORS` | Configuration regarding CORS enablement.\r\nPreserve URL fragment | `PRESERVE_FRAGMENT` | When set to `true` or not set, fragment part of the URL provided during first request of not logged-in user to protected route will be preserved, and after login flow user is redirected to original URL including fragment part. However, this may break programmatic access to Approuter (e.g. e2e tests), since it introduces change in login flow, which is incompatible with Approuter version 4.0.1 and earlier. Setting value to `false` makes login flow backward compatible, however will not take fragment part of the URL into account.\r\n[Direct Routing URI Patterns](#direct-routing-uri-patterns-configuration) | `DIRECT_ROUTING_URI_PATTERNS` | Configuration for direct routing URI patterns. \r\n[NodeJS Minimal Logging Level](#nodejs-minimal-logging-level-configuration) | `CF_NODEJS_LOGGING_LEVEL` | Configuration for NodeJS minimal logging level. \r\nBackend Cookies Secret | `BACKEND_COOKIES_SECRET` | Secret that is used to encrypt backend session cookies in service to Application Router flow. Should be set in case multiple instances of Application Router are used. By default a random sequence of characters is used.\r\nService to Application Router | `SERVICE_2_APPROUTER` | If `true`, when the SAP Passport header is received from the application router, it will be transferred without modification to the backend application.\r\nClient certificate header name | `CLIENT_CERTIFICATE_HEADER_NAME` | When set application router will use this header name to get the client certificate from the request header in subscription callback. If not provided the default header name `x-forwarded-client-cert` is used.\r\nServer Keep Alive | `SERVER_KEEP_ALIVE` | server keep alive timeout (positive integer in milliseconds).\r\nMinimum Token Validity | `MINIMUM_TOKEN_VALIDITY` | positive integer in seconds. When set, approuter will check that the token returned from the authorization service has an expiration time higher than the minimum token validity value.\r\n\r\n\r\n**Note:** all those environment variables are optional.\r\n\r\n\r\n### Destinations\r\n\r\nThe destinations configuration can be provided by the `destinations` environment variable or by destination  service. There has to be a destination for every single app (microservice) that is a part of the business application.\r\n\r\n#### Environment destinations\r\n\r\nThe destinations configuration is an array of objects. Here are the properties that a destination can have:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nname | String | | A unique alphanumeric identifier of the destination.\r\nurl | String | | URL of the app (microservice).\r\nproxyHost | String | x | The host of the proxy server used in case the request should go through a proxy to reach the destination.\r\nproxyPort | String | x | The port of the proxy server used in case the request should go through a proxy to reach the destination.\r\nforwardAuthToken | Boolean | x | If `true`, the OAuth token is sent to the destination. The default value is `false`. This token contains user identity, scopes and other attributes. It is signed by the UAA or IAS service, so it can be used for user authentication and authorization with backend services.\r\nstrictSSL | Boolean | x | Configures whether the application router should reject untrusted certificates. The default value is `true`.<br />**Note:** Do not use this in production as it compromises security!\r\ntimeout | Number | x | Positive integer representing the maximum wait time for a response (in milliseconds) from the destination. Default is 30000ms.\r\nsetXForwardedHeaders | Boolean | x | If `true` , the application router adds X-Forwarded-(Host, Path, Proto) headers to the backend request.Default value is true.\r\nproxyType | String | x | Configures whether the destination is used to access applications in on-premise networks or on public Internet. Possible value: `OnPremise`. if the property is not provided, it is assumed that it is a public Internet access. <br />**Note:** if `OnPremise` value is set,  binding to SAP Cloud Platform connectivity service is required, and `forwardAuthToken` property should not be set.\r\n\r\n\r\n**Note:** The timeout specified will also apply to the [destination's logout path](#destinations-property) or  [service's logout path](#services-property) (if you have set one). <br />\r\n**Note:** `proxyHost` and `proxyPort` are optional, but if one of them is defined, then the other one becomes mandatory.\r\n\r\nSample content of the destinations environment variable:\r\n\r\n```json\r\n[\r\n  {\r\n    \"name\" : \"ui5\",\r\n    \"url\" : \"https://ui5.sap.com\",\r\n    \"proxyHost\" : \"proxy\",\r\n    \"proxyPort\" : \"8080\",\r\n    \"forwardAuthToken\" : false,\r\n    \"timeout\" : 1200\r\n  }\r\n]\r\n```\r\n\r\nIt is also possible to include the destinations in the *manifest.yml* and *manifest-op.yml* files:\r\n\r\n```yml\r\n- name: node-hello-world\r\n  memory: 100M\r\n  path: web\r\n  env:\r\n    destinations: >\r\n                  [\r\n                    {\"name\":\"ui5\", \"url\":\"https://ui5.sap.com\"}\r\n                  ]\r\n```\r\n\r\n#### Destination service\r\n\r\nDestination configuration can also be read from `destination service` .<br>\r\nHere are the Approuter limitations to destination properties configuration from destination service :\r\n\r\nProperty  | Additional Property | Description\r\n-------- |:--------:| -----------\r\nType | |only `HTTP` supported.\r\nAuthentication |  | All authentication types are supported. <br>**Note:** `User` and `Password` are mandatory if the authentication type is `basic authentication`.<br>**Note:** if the authentication type set to `principal propagation` the ProxyType have to be `on-premise`.<br>**Note:** if the authentication type set to `OAuth2SAMLBearerAssertion`, `uaa.user` scope in xs-security.json is required.\r\nProxyType |   | Supported proxy type : `on-premise`, `internet`, `private-link`.<br> **Note:** if ProxyType set to `on-premise`, binding to SAP Cloud Platform connectivity service is required.<br> **Note:** The `private-link` proxy type is a beta feature and is not meant for productive use. It is only available in Azure landscapes.\r\n\r\n\r\n##### Optional additional properties:\r\n\r\nProperty  | Additional Property | Description\r\n-------- |:--------:| -----------\r\nHTML5.ForwardAuthToken | x | If `true` the OAuth token will be sent to the destination. The default value is `false`. This token contains user identity, scopes and other attributes. It is signed by the UAA so it can be used for user authentication and authorization with backend services.<br> **Note:** if ProxyType set to `on-premise`, ForwardAuthToken property should not be set.<br> **Note:** if Authentication type is other than NoAuthentication, ForwardAuthToken property should not be set.\r\nHTML5.Timeout |  x | Positive integer representing the maximum wait time for a response (in milliseconds) from the destination. Default is 30000ms.**Note:** The timeout specified will also apply to the [destination's logout path](#destinations-property) or [service's logout path](#services-property) (if you have set one). \r\nHTML5.PreserveHostHeader | x | If `true` , the application router preserves the host header in the backend request.<br />This is expected by some back-end systems like AS ABAP, which do not process x-forwarded-* headers.\r\nHTML5.DynamicDestination | x | If `true` , the application router allows to use this destination dynamically on host or path level.\r\nHTML5.SetXForwardedHeaders | x | If `true` , the application router adds X-Forwarded-(Host, Path, Proto) headers to the backend request.Default value is true.\r\nsap-client | x | If provided, the application router propagates the sap-client and its value as a header in the backend request.<br />This is expected by ABAP back-end systems.\r\nURL.headers.`<header-name>` | x | If provided, the application router propagates this special attribute in the destination as the header. The application router can get the headers list from the destination API. Existing request headers are not overwritten.\r\n\r\n<br />**Note:** \r\n* In case destination with the same name is defined both in environment destination and destination service, the destination configuration will load from the environment.\r\n* Destinations on destination service instance level are supported.\r\n* Only destination client certificates of type p12 are supported.\r\n* Only destination trust certificates of the type privacy-enhanced mail (PEM) are supported.\r\n\r\n### UAA configuration\r\n\r\nThe User Account and Authentication (UAA) server is responsible for user authentication.\r\nIn Cloud Foundry and XS OnPremise Runtime a service is created for this configuration and by using the standard service binding mechanism\r\nthe content of this configuration is available in the `VCAP_SERVICES` environment variable.</br>\r\n**Note:** The service should have `xsuaa` in its tags or the environment variable `UAA_SERVICE_NAME` should be specified (stating the exact name of the UAA service).</br>\r\nDuring local development the UAA configuration is provided in the *default-services.json* file.\r\nWhen the UAA is used for authentication the user is redirected to the UAA's login page to enter their credentials.\r\n\r\nSample content for a *default-services.json* file:\r\n\r\n```json\r\n{\r\n    \"uaa\": {\r\n        \"url\" : \"http://my.uaa.server/\",\r\n        \"clientid\" : \"client-id\",\r\n        \"clientsecret\" : \"client-secret\",\r\n        \"xsappname\" : \"my-business-application\"\r\n    }\r\n}\r\n```\r\n\r\nThe application router supports the `$XSAPPNAME` placeholder (upper case letters). You may use it in your [route](#routes) configurations in the scope property.\r\nThe value of `$XSAPPNAME` is taken from the UAA configuration (the `xsappname` property).\r\n\r\n### Additional headers configuration\r\n\r\nIf configured, the application router can send additional http headers in its responses to the client.\r\nAdditional headers can be set in the `httpHeaders` environment variable.\r\n\r\nSample configuration for additional headers:\r\n\r\n```json\r\n[\r\n  {\r\n    \"X-Frame-Options\": \"ALLOW-FROM http://localhost\"\r\n  },\r\n  {\r\n    \"Test-Additional-Header\": \"1\"\r\n  }\r\n]\r\n```\r\nIn this case, the application router sends two additional headers in the responses to the client.<br>\r\nCustom response headers, configured in the application router configuration file (xs-app.json) are added to the list of additional http headers.\r\nIf the response header name already exists in the additional http headers list, the value of the response header name overrides the value of the http header.  \r\n\r\n**Caution:** For security reasons, the following headers must not be configured: authorization', 'cookie', and 'set-cookie'.\r\n\r\n### Additional cookies configuration\r\n\r\nIf configured, the application router will send additional cookie values in its responses to the client.\r\nAdditional cookie values can be set in the `COOKIES` environment variable.\r\n\r\nExample of configuration for cookies in the manifest.yml :\r\n\r\n```json\r\n  env:\r\n   COOKIES: >\r\n        { \"SameSite\":\"None\" }\r\n```\r\nIn this example, the application router sets the SameSite cookie attribute to None for the JSESSIONID cookie in the responses to the client.\r\n\r\nNote: Currently, only the SameSite cookie value is supported. SameSite = \"Strict\" is not supported.\r\n\r\n### Plugins configuration\r\n\r\nA plugin serves almost the same purpose as [*routes*](#routes). The difference is that plugins can be configured through the environment and that way you can add new routes to the application router without changing the design-time artefact *xs-app.json*. The plugin configuration properties are the same as those of a [*route*](#routes) except that you can't configure `localDir`, `replace` and `cacheControl`.\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nname | String | | The name of this plugin\r\nsource | String/Object | | Describes a regular expression that matches the incoming [request URL](https://nodejs.org/api/http.html#http_message_url).</br> **Note:** A request matches a particular route if its path __contains__  the given pattern. To ensure the RegExp matches the complete path, use the following form: ^<path>$`. </br> **Note:** Be aware that the RegExp is applied to on the full URL including query parameters.\r\ntarget | String | x | Defines how the incoming request path will be rewritten for the corresponding destination.\r\ndestination | String | | An alphanumeric name of the destination to which the incoming request should be forwarded.\r\nauthenticationType | String | x | The value can be ias, xsuaa, basic, or none. The default authenticationType depends on the authentication service binding: If the application router is bound to the Identity Authentication service, the default authenticationType is ias. Otherwise, the default value is xsuaa. If xsuaa or ias are used, the specified authentication server (Identity Authentication or User Account and Authentication) handles the authentication (the user is redirected to the login form of Identity Authentication or User Account and Authentication). The basic authenticationType works with SAP S/4HANA users, SAP ID service, and Identity Authentication service. For more information, see the SAP Note 3015211 - BASIC authentication options for SAP BTP Cloud Foundry applications. If the value none is used, no authentication is required for this route.\r\n</br>.\r\ncsrfProtection | Boolean | x | Enable [CSRF protection](#csrf-protection) for this route. The default value is `true`.\r\nscope | Array/String/Object | x | Scopes are related to the permissions a user needs to access a resource. This property holds the required scopes to access the target path. Access is granted if the user has at least one of the listed scopes. **Note:** Scopes are defined as part of the xsuaa service instance configuration. You can use `ias` as authenticationType and xsuaa scopes for authorization if the application router is bound to both (`ias` and `xsuaa`).\"\r\n\r\nSample content of the `plugins` environment variable:\r\n```json\r\n[\r\n  {\r\n    \"name\": \"insecurePlugin\",\r\n    \"source\": \"/plugin\",\r\n    \"destination\": \"plugin\",\r\n    \"target\": \"/\",\r\n    \"csrfProtection\": false,\r\n    \"scope\": [\"viewer\", \"reader\"]\r\n  },\r\n  {\r\n    \"name\": \"publicPlugin\",\r\n    \"source\": \"/public-plugin\",\r\n    \"destination\": \"publicPlugin\",\r\n    \"authenticationType\": \"none\"\r\n  }\r\n]\r\n```\r\n\r\n### Session timeout configuration\r\n\r\nFor example, if you have the following line in your *manifest.yml* or *manifest-op.yml* file:\r\n\r\n```yml\r\n- name: node-hello-world\r\n  memory: 100M\r\n  path: web\r\n  env:\r\n    SESSION_TIMEOUT: 40\r\n```\r\n\r\nAfter 40 minutes of user inactivity (no requests have been sent to the application router), a Central Logout will be triggered due to session timeout.\r\n\r\n**Note:** The application router depends on the UAA server for user authentication, if the `authenticationType` for a route is `xsuaa`. The UAA server may have a different session timeout configured.\r\nIt is recommended that the configurations of the application router and the UAA are identical.<br />\r\n\r\n### X-Frame-Options configuration\r\n\r\nApplication router sends `X-Frame-Options` header by default with value `SAMEORIGIN`. This behaviour can be changed in 2 ways:\r\n\r\n- Disable sending the default header value by setting `SEND_XFRAMEOPTIONS` environment variable to `false`\r\n- Override the value to be sent via [additional headers configuration](#additional-headers-configuration)\r\n\r\n## Cross-Origin Resource Sharing configuration\r\n\r\nThe CORS keyword enables you to provide support for cross-origin requests, for example, by allowing the modification of the request header. Cross-origin resource sharing (CORS) permits Web pages from other domains to make HTTP requests to your application domain, where normally such requests would automatically be refused by the Web browser's security policy.\r\nCross-origin resource sharing(CORS) is a mechanism that allows restricted resources on a webpage to be requested from another domain (/protocol/port) outside the domain (/protocol/port) from which the first resource was served. \r\nCORS configuration enables you to define details to control access to your application resource from other Web browsers. For example, you can specify where requests can originate from or what is allowed in the request and response headers. \r\n\r\nThe CORS configuration can be provided in the CORS environment variable or in the CORS property of the application router configuration file (xs-app.json).\r\nIf a cross-origin resource sharing (CORS) configuration exists in both the environment variables and the application router configuration file (xs-app.json), the application router gives priority to the CORS configuration in the application router configuration file.\r\n\r\nThe CORS configuration is an array of objects. Here are the properties that a CORS object can have:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nuriPattern| String | | A regular expression representing for which source routes CORS configuration is applicable. To ensure the RegExp matches the complete path, surround it with ^ and $. **Defaults:** none.\r\nallowedOrigin| Array | | A comma-separated list of objects that each one of them containing host name, port and protocol that are allowed by the server.for example: [{?host?: \"www.sap.com\"}] or [{?host?: ?*.sap.com?}]. **Note:** matching is case-sensitive. In addition, if port or protocol are not specified the default is ?_*_?.  **Defaults:** none.\r\nallowedMethods| Array of upper-case HTTP methods| x | Comma-separated list of HTTP methods that are allowed by the server. **Defaults:** [?GET?, ?POST?, ?HEAD?, ?OPTIONS?] (all) applies. **Note:** matching is case-sensitive.\r\nmaxAge| Number| x | A single value specifying how long, in seconds, a preflight response should be cached. A negative value will prevent CORS Filter from adding this response header to pre-flight response.  **Defaults:** 1800. \r\nallowedHeaders| Array of headers| x | Comma-separated list of request headers that are allowed by the serve. **Defaults:** [?Origin?, ?Accept?, ?X-Requested-With?, ?Content-Type?, ?Access-Control-Request-Method?, ?Access-Control-Request-Headers?].\r\nexposeHeaders| Array of headers| x | Comma-separated list of response headers (other than simple headers) that can be exposed. **Defaults:** none.\r\nallowedCredentials| Boolean| x | A flag that indicates whether the resource supports user credentials. **Defaults:** true.\r\n\r\nSample content of the CORS environment variable:\r\n\r\n```json\r\n[\r\n  {\r\n      \"uriPattern\": \"^\\route1$\",\r\n      \"allowedMethods\": [\r\n        \"GET\"\r\n      ],\r\n      \"allowedOrigin\": [\r\n        {\r\n          \"host\": \"my_example.my_domain\",\r\n          \"protocol\": \"https\",\r\n          \"port\": 345\r\n        }\r\n      ],\r\n      \"maxAge\": 3600,\r\n      \"allowedHeaders\": [\r\n        \"Authorization\",\r\n        \"Content-Type\"\r\n      ],\r\n      \"exposeHeaders\": [\r\n        \"customHeader1\",\r\n        \"customHeader2\"\r\n      ],\r\n      \"allowedCredentials\": true\r\n    }\r\n]\r\n```\r\n\r\nIt is also possible to include the CORS in the *manifest.yml* and *manifest-op.yml* files:\r\n\r\n```yml\r\n- name: node-hello-world\r\n  memory: 100M\r\n  path: web\r\n  env:\r\n    CORS: >\r\n      [\r\n        {\r\n          \"allowedOrigin\":[\r\n                            {\r\n                                \"host\":\"my_host\",\r\n                                \"protocol\":\"https\"\r\n                            }\r\n                          ],\r\n          \"uriPattern\":\"^/route1$\"\r\n        }\r\n      ]\r\n```\r\nFor route with source that match the REGEX ?^\\route1$?, the CORS configuration is enabled.\r\n\r\n## Direct Routing URI Patterns configuration\r\n\r\nWith the direct routing URI patterns configuration, you can define a list of URIs that are directed to the routing configuration file (xs-app.json file) of the application router instead of to a specific application's xs-app.json file that is stored in the HTML5 Application Repository. This configuration improves the application loading time and monitoring options because it prevents unnecessary calls to the HTML5 Application Repository.\r\n\r\nThe configuration is an array of strings or regular expressions. \r\nNote that the following regular expressions are preconfigured in the configuration array: \"^favicon.ico$\", \"^login$\".\r\nTherefore, do not name your HTML5 applications \"favicon.ico\" or \"login\"!\r\n\r\nYou have to provide only the first segment in the URL, after the approuter host. For example, for the URL https://approuter-host/route1/index.html, you enter \"route1\" in the direct routing URI patterns array.\r\n\r\nSample content of the Direct Routing URI Patterns environment variable:\r\n\r\n```json\r\n  env:\r\n    DIRECT_ROUTING_URI_PATTERNS: >\r\n      [\"route1\", \"^route2$\", \"route3\"]\r\n```\r\n\r\n## NodeJS Minimal Logging Level configuration\r\n\r\nWith this configuration, you can set the minimal logging level of the *cf-nodejs-logging-support* library of the application router. The following levels are available:\r\n\r\n* *off*\r\n\r\n* *error*\r\n\r\n* *warn*\r\n\r\n* *info*\r\n\r\n* *verbose*\r\n\r\n* *debug*\r\n\r\n* *silly*\r\n\r\nThe default value is \"error\".\r\n\r\nHere is a sample content for the NodeJS minimal logging level environment variable:\r\n\r\n```json\r\n  env:\r\n    CF_NODEJS_LOGGING_LEVEL: \"debug\"\r\n```\r\n\r\n**Note** The application router also uses the *@sap/logging* library. To configure the log level for this library, you use the *XS_APP_LOG_LEVEL* environment variable.\r\n\r\n## Routes\r\n\r\nA route is a configuration that instructs the application router how to process an incoming request with a specific path.\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nsource | String/Object | | Describes a regular expression that matches the incoming [request URL](https://nodejs.org/api/http.html#http_message_url).</br> **Note:** A request matches a particular route if its path __contains__  the given pattern. To ensure the RegExp matches the complete path, use the following form: ^<path>$`. </br> **Note:** Be aware that the RegExp is applied to on the full URL including query parameters.\r\nhttpMethods | Array of upper-case HTTP methods | x | Which HTTP methods will be served by this route; the methods supported are: `DELETE`, `GET`, `HEAD`, `OPTIONS`, `POST`, `PUT`, `TRACE`, `PATCH` (no extension methods are supported). If this option is not specified, the route will serve any HTTP method.\r\ntarget | String | x | Defines how the incoming request path will be rewritten for the corresponding destination or static resource.\r\ndestination | String | x | The name of the destination to which the incoming request should be forwarded.  The destination name can be a static string or a regular expression that defines how to dynamically fetch the destination name from the source property or from the host.\r\nservice | String | x | The name of the service to which the incoming request should be forwarded.\r\nendpoint | String | x | The name of the endpoint within the service to which the incoming request should be forwarded. Can only be used in a route containing a service attribute.\r\nlocalDir | String | x | Folder in the [working directory](#working-directory) from which the application router will serve static content **Note:** localDir routes support only HEAD and GET requests; requests with any other method receive a 405 Method Not Allowed.\r\npreferLocal | Boolean | x | Defines from which subaccount the destination is retrieved. If preferLocal is true, the destination is retrieved from the provider subaccount. If preferLocal is false or undefined, the destination is retrieved from the subscriber subaccount.\r\nreplace | Object | x | An object that contains the configuration for replacing placeholders with values from the environment. *It is only relevant for static resources*. Its structure is described in [Replacements](#replacements).\r\nauthenticationType | String | x | The value can be `xsuaa`,`ias`, `basic` or `none`. The default one is `ias`, if subaccount trusts an ias tenant, else `xsuaa`. When `xsuaa` or `ias` are used the specified authentication server will handle the authentication (the user is redirected to the authentication service login form). The `basic` mechanism works with SAP HANA users, SAP ID Service and SAP Identity Authentication service. Find more details in SAP Note 3015211 - BASIC authentication options for SAP BTP Cloud Foundry applications. If `none` is used then no authentication is needed for this route.\r\ncsrfProtection | Boolean | x | Enable [CSRF protection](#csrf-protection) for this route. The default value is `true`.\r\nscope | Array/String/Object | x | Scopes are related to the permissions a user needs to access a resource. This property holds the required scopes to access the target path.\r\ncacheControl | String | x | String representing the value of the `Cache-Control` header, which is set on the response when serving static resources. By default the `Cache-Control` header is not set. *It is only relevant for static resources.*\r\nidentityProvider | String | x | The name of the identity provider to use if provided in route’s definition. If not provided, the route will be authenticated with the default identity provider. **Note:** If the authenticationType is set to Basic Authentication or None, do not define the identityProvider property.\r\n\r\n\r\n**Note:** The properties `destination`, `localDir` and `service` are optional, but exactly one of them must be defined. <br />\r\n**Note:** When using the property `replace` it is mandatory to define the `localDir` property. <br />\r\n**Note:** The cacheControl property is effective only when one of the following settings is performed:\r\n*\tThe localDir property was set\r\n*\tA service pointing to HTML5 Application Repository (\"service\": \"html5-apps-repo-rt\") was set\r\n \r\n### Example routes\r\n\r\nFor example, if you have a configuration with the following destination:\r\n\r\n```json\r\n[\r\n  {\r\n    \"name\" : \"app-1\",\r\n    \"url\" : \"http://localhost:3001\"\r\n  }\r\n]\r\n```\r\n\r\nHere are some sample route configurations:\r\n\r\n* Route with a `destination` and no `target`\r\n\r\n```json\r\n{\r\n    \"source\": \"^/app1/(.*)$\",\r\n    \"destination\": \"app-1\"\r\n}\r\n```\r\n\r\nSince there is no `target` property for that route, no path rewriting will take place.\r\nIf we receive */app1/a/b* as a path, then a request to *http://localhost:3001/app1/a/b* is sent.\r\nThe source path is appended to the destination URL.\r\n\r\n* Route with case-insensitive matching\r\n\r\n```json\r\n{\r\n    \"source\": {\r\n      \"path\": \"^/app1/(.*)$\",\r\n      \"matchCase\": false\r\n    },\r\n    \"destination\": \"app-1\"\r\n}\r\n```\r\n\r\nThis example is much like the previous one,\r\nbut instead of accepting only paths starting with */app1/*, we accept any variation of _app1_'s case. </br>\r\nThat means if we receive */ApP1/a/B*, then a request to *http://localhost:3001/ApP1/a/B* is sent. </br>\r\n**Note:** The property `matchCase` has to be of type boolean. It is optional and has a default value `true`.\r\n\r\n* Route with a `destination` and a `target`\r\n\r\n```json\r\n{\r\n    \"source\": \"^/app1/(.*)$\",\r\n    \"target\": \"/before/$1/after\",\r\n    \"destination\": \"app-1\"\r\n}\r\n```\r\n* Route with a `service`, a `target` and an `endpoint`\r\n\r\n```json\r\n{\r\n     \"source\": \"^/odata/v2/(.*)$\",\r\n     \"target\": \"$1\",\r\n     \"service\": \"com.sap.appbasic.country\",\r\n     \"endpoint\": \"countryservice\"\r\n}\r\n```\r\n\r\nWhen a request with path */app1/a/b* is received, the path rewriting is done according to the rules in the `target` property.\r\nThe request will be forwarded to http://localhost:3001/before/a/b/after.\r\n\r\n**Note:** In regular expressions there is the term _capturing group_. If a part of a regular expression is surrounded with parenthesis, then what has been matched can be accessed using _$_ + the number of the group (starting from 1).\r\nIn the last example _$1_ is mapped to the _(.*)_ part of the regular expression in the `source` property.\r\n\r\n* Route with dynamic `destination` and `target`\r\n\r\n```json\r\n{\r\n      \"source\": \"^/destination/([^/]+)/(.*)$\",\r\n      \"target\": \"$2\",\r\n      \"destination\": \"$1\",\r\n      \"authenticationType\": \"xsuaa\"\r\n    }\r\n```\r\nIf you have a another destination configured:\r\n```json\r\n[\r\n\t{\r\n\t\"name\" : \"myDestination\",\r\n\t\"url\" : \"http://localhost:3002\"\r\n\t}\r\n]\r\n```\r\nwhen a request with the path /destination/myDestination/myTarget is received, the destination will be replaced with the url from \"myDestination\", the target will get \"myTarget\" and the request will be redirected to http://localhost:3002/myTarget\r\n\r\n**Note:** You can use a dynamic value (regex) or a static string for both destination and target values\r\n\r\n**Note:** The approuter first looks for the destination name in the mainfest.yaml file, and if not found, looks for it in the destination service.\r\n\r\n* Destination In Host\r\n\r\nFor legacy applications that do not support relative URL paths, you need to define your URL in the following way to enable the destination to be extracted from the host\r\nthe url should be defined in the following way:\r\n\r\n```https://<tenant>-<destination>.<customdomain>/<pathtofile>```\r\n\r\nTo enable the application router to determine the destination of the URL host, a DESTINATION_HOST_PATTERN attribute must be provided as an environment variable.\r\n\r\nExample:\r\nWhen a request with the path https://myDestination.some-approuter.someDomain.com/app1/myTarget is received, the following route is used:\r\n```json\r\n {\r\n      \"source\": \"^/app1/([^/]+)/\",\r\n      \"target\": \"$1\",\r\n      \"destination\": \"*\",\r\n      \"authenticationType\": \"xsuaa\"\r\n }\r\n```\r\n \r\n In this example, the target will be extracted from the source and the ‘$1’ value is replaced with ‘myTarget’. The destination value is extracted from the host and the ‘*’ value is replaced with ‘myDestination’.\r\n\r\n* Route with a `localDir` and no `target`\r\n\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"localDir\": \"my-static-resources\"\r\n}\r\n```\r\n\r\nSince there is no `target` property for that route, no path rewriting will take place.\r\nIf we receive a request with a path */web-pages/welcome-page.html*, the local file at *my-static-resources/web-pages/welcome-page.html*\r\nunder the working directory will be served.\r\n\r\n* Route with a `localDir` and a `target`\r\n\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"target\": \"$1\",\r\n    \"localDir\": \"my-static-resources\"\r\n}\r\n```\r\nIf we receive a request with a path '/web-pages/welcome-page.html', the local file at 'my-static-resources/welcome-page.html'\r\nunder the working directory will be served.</br> **Note:** The capturing group used in the `target` property.\r\n\r\n* Route with `localDir` and `cacheControl`\r\n\r\n```json\r\n{\r\n  \"source\": \"^/web-pages/\",\r\n  \"localDir\": \"my-static-resources\",\r\n  \"cacheControl\": \"public, max-age=1000,must-revalidate\"\r\n}\r\n```\r\n\r\n* Route with `service` \"html5-apps-repo-rt\" and `cacheControl`\r\n\r\n```json\r\n{\r\n  \"source\": \"^/index.html$\",\r\n  \"service\": \"html5-apps-repo-rt\",\r\n  \"authenticationType\": \"xsuaa\",\r\n  \"cacheControl\":\"public,max-age=1000,must-revalidate\"\r\n}\r\n```\r\n\r\n* Route with `httpMethods` restrictions\r\n\r\nThe `httpMethods` option allows you to split the same path across different targets depending on the HTTP method. For example:\r\n\r\n```json\r\n{\r\n  \"source\": \"^/app1/(.*)$\",\r\n  \"target\": \"/before/$1/after\",\r\n  \"httpMethods\": [\"GET\", \"POST\"]\r\n}\r\n```\r\n\r\nThis route will be able to serve only GET and POST requests. Any other method (including extension ones) will get a 405 Method Not Allowed response. The same endpoint can be split across multiple *destinations* depending on the HTTP method of the requests:\r\n\r\n```json\r\n{\r\n  \"source\": \"^/app1/(.*)$\",\r\n  \"destination\" : \"dest-1\",\r\n  \"httpMethods\": [\"GET\"]\r\n},\r\n{\r\n  \"source\": \"^/app1/(.*)$\",\r\n  \"destination\" : \"dest-2\",\r\n  \"httpMethods\": [\"DELETE\", \"POST\", \"PUT\"]\r\n}\r\n```\r\n\r\nThe setup above will route GET requests to the target *dest-1*, DELETE, POST and PUT to *dest-2*, and any other method receives a 405. It is also possible to specify \"catchAll\" routes, namely those that do not specify `httpMethods` restrictions:\r\n\r\n```json\r\n{\r\n  \"source\": \"^/app1/(.*)$\",\r\n  \"destination\" : \"dest-1\",\r\n  \"httpMethods\": [\"GET\"]\r\n},\r\n{\r\n  \"source\": \"^/app1/(.*)$\",\r\n  \"destination\" : \"dest-2\"\r\n}\r\n```\r\n\r\nIn the setup above, GET requests will be routed to *dest-1*, and all the rest to *dest-2*.\r\n\r\nWhy using `httpMethods`? It is often useful to split the implementation of microservices across multiple, highly specialized applications. For example, a Java application written to serve high amounts of GET requests that return large payloads is implemented, sized, scaled and load-tested differently than applications that offer APIs to upload limited amounts of data. `httpMethods` allows you to split your REST APIs, e.g., */Things* to different applications depending on the HTTP methods of the requests, without having to make the difference visible in the URL of the endpoints.\r\n\r\nAnother usecase for `httpMethods` is to \"disable\" parts of the REST API. For example, it may be necessary to disable some endpoints that accept DELETE for external usage. By allowing only certain methods in the route, you can hide functionalities of your microservice that should not be consumable without having to modify the code or configurations of your service.\r\n\r\n**Note:** `localDir` and `httpMethods` are incompatible. The following route is invalid:\r\n\r\n```json\r\n{\r\n  \"source\": \"^/app1/(.*)$\",\r\n  \"target\": \"/before/$1/after\",\r\n  \"localDir\": \"resources\",\r\n  \"httpMethods\": [\"GET\", \"POST\"]\r\n}\r\n```\r\n\r\nHowever, since `localDir` supports only GET and HEAD requests, returning 405 to requests with any other method, any `localDir` route is \"implicitly\" restricted in terms of supported HTTP methods.\r\n\r\n* Route with a `scope`\r\n\r\nAn application specific scope has the following format:\r\n\r\n```\r\n<application-name>.<scope-name>\r\n```\r\n\r\nIt is possible to configure what scope the user needs to possess in order to access a specific resource. Those configurations are per [route](#routes).\r\n\r\nIn this example, the user should have **at least** one of the scopes in order to access the corresponding resource.\r\n\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"target\": \"$1\",\r\n    \"scope\": [\"$XSAPPNAME.viewer\", \"$XSAPPNAME.reader\", \"$XSAPPNAME.writer\"]\r\n}\r\n```\r\n\r\nFor convenience if our route requires only one scope the `scope` property can be a string instead of an array. The following configuration is valid as well:\r\n\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"target\": \"$1\",\r\n    \"scope\": \"$XSAPPNAME.viewer\"\r\n}\r\n```\r\n\r\nYou can configure scopes for the different HTTP methods (GET, POST, PUT, HEAD, DELETE, CONNECT, TRACE, PATCH and OPTIONS). If some of the HTTP methods are not explicitly set, the behaviour for them is defined by the `default` property. In case there is no `default` property specified and the HTTP method is also not specified, the request is rejected by default.\r\n\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"target\": \"$1\",\r\n    \"scope\": {\r\n      \"GET\": \"$XSAPPNAME.viewer\",\r\n      \"POST\": [\"$XSAPPNAME.reader\", \"$XSAPPNAME.writer\"],\r\n      \"default\": \"$XSAPPNAME.guest\"\r\n    }\r\n}\r\n```\r\n\r\nThe application router supports the `$XSAPPNAME` placeholder. Its value is taken (and then substituted in the routes) from the UAA configuration.\r\nYou may read more about it [here](#uaa-configuration). </br>**Note:** The substitution is case sensitive.\r\n\r\nYou can use the name of the business application directly instead of using the `$XSAPPNAME` placeholder:\r\n\r\n```json\r\n{\r\n    \"source\": \"^/backend/(.*)$\",\r\n    \"scope\": \"my-business-application.viewer\"\r\n}\r\n```\r\n\r\n* Examples for Routes With `identityProvider`\r\n\r\nFor example, we can define several identity providers for different types of users. In this example, there are 2 categories: hospital patients and hospital personnel: \r\n1. patientsIDP – use for authenticating patients.\r\n2. hospitalIDP – use for authenticating all hospital personnel (doctors, nurses etc..).\r\n    \r\nWe can configure 2 routes with the following identityProvider properties:\r\n\r\n```json\r\n[\r\n    { \r\n\t\"source\": \"^/patients/sap/opu/odata/(.*)\",\r\n\t\"target\": \"/sap/opu/odata$1\",\r\n\t\"destination\": \"backend\",\r\n\t\"authenticationType\": \"xsuaa\",\r\n\t\"identityProvider\": \"patientsIDP\"\r\n    },\r\n    {\r\n        \"source\": \"^/hospital/sap/opu/odata/(.*)\",\r\n\t\"target\": \"/sap/opu/odata$1\",\r\n\t\"destination\": \"backend\", \"authenticationType\": \"xsuaa\",\r\n\t\"identityProvider\": \"hospitalIDP\"\r\n    }\r\n]\r\n```\r\nSo, a patient who tries to log into the system will be authenticated by patientIDP, and a doctor who tries to log in will be authenticated by hospitalIDP.\r\n\r\n**Note:** After logging in using one of the identity providers, to switch to the other one it is necessary to logout and perform a new log in.\r\n\r\n**Note:** Currently, dynamic provisioning of the subscriber account identity provider is not supported.\r\n\r\n**Note:** Identity provider configuration is only supported in the client side login redirect flow.\r\n\r\n\r\n## Replacements\r\n\r\nThis object configures the placeholder replacement in static text resources.\r\n\r\nProperty | Type | Description\r\n-------- | ---- | -----------\r\npathSuffixes | Array | An array containing the path suffixes that are relative to `localDir`. Only files with a path ending with any of these suffixes will be processed.\r\nvars | Array | A list with the environment variables that will be replaced in the files matching the suffix.\r\nservices | Object | An object describing bound services that will provide replacement values. Each property of this object is used to lookup a separate service. The property names are arbitrary. Service lookup format is described in _Service Query_ section in _@sap/xsenv_ documentation.\r\n\r\nThe supported tags for replacing environment variables are: `{{ENV_VAR}}` and `{{{ENV_VAR}}}`.\r\nIf there is such an environment variable it will be replaced, otherwise it will be just an empty string.\r\n\r\nFor services you can specify a property from the `credentials` section of the service binding which will be replaced.\r\nFor example `{{{my_service.property}}}` and `{{my_service.property}}`\r\n\r\nEvery variable that is replaced using two-brackets syntax will be HTML-escaped.\r\n\r\nFor example if the value of the environment variable is `ab\"cd` the result will be `ab&amp;quot;cd`.</br>\r\nThe triple brackets syntax is used when the replaced values don't need to be escaped and all values will be unchanged.\r\n\r\nFor example, if somewhere in your *xs-app.json* you have a route:\r\n\r\n```json\r\n{\r\n  \"source\": \"^/get/home(.*)\",\r\n  \"target\": \"$1\",\r\n  \"localDir\": \"resources\",\r\n  \"replace\": {\r\n    \"pathSuffixes\": [\"index.html\"],\r\n    \"vars\": [\"escaped_text\", \"NOT_ESCAPED\"],\r\n    \"services\": {\r\n      \"my-sapui5-service\": {\r\n        \"tag\": \"ui5\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nand you have the following `index.html`:\r\n\r\n```html\r\n<html>\r\n  <head>\r\n    <title>{{escaped_text}}</title>\r\n    <script src=\"{{{NOT_ESCAPED}}}/index.js\"/>\r\n    <script src=\"{{{my-sapui5-service.url}}}\"/>\r\n  </head>\r\n</html>\r\n```\r\nthen in `index.html`, `{{escaped_text}}` and `{{{NOT_ESCAPED}}}` will be replaced with the values of the environment variables `escaped_text` and `NOT_ESCAPED`.\r\n\r\nIf you have a service in VCAP_SERVICES like:\r\n\r\n```json\r\n{\r\n  \"sapui5_service\": [{\r\n    \"name\": \"sapui5\",\r\n    \"tags\": [\"ui5\"],\r\n    \"credentials\": {\r\n      \"url\": \"http://sapui5url\"\r\n    }\r\n  }]\r\n}\r\n```\r\nthen `{{{my-sapui5-service.url}}}` will be replaced with the `url` property from `sapui5` service - in this case `http://sapui5url`.\r\n\r\n**Note:** _All_ index.html files will be processed.\r\nIf you want to replace only specific files, you have to set the path of the file relative to `localDir`.\r\n\r\n**Note:** All files should be **UTF-8** encoded.\r\n\r\n**Note:** If a service is not found an error is thrown on startup.\r\n\r\n**Note:** If a service and an environment variable from `vars` have the same name, an error is thrown on startup.\r\n\r\nThe returned content type is based on the file extension. Currently the supported file extensions are:\r\n* .json - application/json\r\n* .txt - text/plain\r\n* .html - text/html\r\n* .js - application/javascript\r\n* .css - test/css\r\n\r\nIf the file extension is different, the default content type is `text/html`.\r\n\r\nExample for `pathSuffixes`:\r\n```json\r\n{\r\n  \"pathSuffixes\": [\".html\"]\r\n}\r\n```\r\nThe suffix `.html` means that all files with the extension *.html* under `localDir` and it's subfolders will be processed.\r\n```json\r\n{\r\n  \"pathSuffixes\": [\"/abc/main.html\", \"some.html\"]\r\n}\r\n```\r\nThe suffix `/abc/main.html` means that all files named *main.html* which are inside a folder named *abc* will be processed.\r\n\r\nThe suffix `some.html` means that all files which have a name that ends with *some.html* will be processed. For example: `some.html`, `awesome.html`.\r\n\r\n```json\r\n{\r\n  \"pathSuffixes\": [\"/some.html\"]\r\n}\r\n```\r\n\r\nThe suffix `/some.html` means that all files which have the **exact** name *some.html* will be processed. For example: `some.html`, `/abc/some.html`.\r\n\r\n**Note:** URL path parameters are not supported for replacements.\r\nFor example, replacements will not work if the path looks like '/test;color=red/index.html'. For more information regarding path parameters refer to [http://tools.ietf.org/html/rfc3986#section-3.3](http://tools.ietf.org/html/rfc3986#section-3.3).\r\n\r\n## *xs-app.json* configuration file\r\n\r\nThis is the main configuration file of the application router.\r\nIt contains a JSON object with the following properties:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\n[welcomeFile](#welcomefile-property) | String | x | The client is redirected to this page by default, if the request does not have a path. For more information, see [welcomeFile](#welcomefile-property).\r\n[authenticationMethod](#authenticationmethod-property) | String | x | If set to `none` the UAA login roundtrip is disabled. If the property is not set and authentication is defined per [route](#routes), the value is set to `route` by default.\r\nsessionTimeout | Number | x | Used to set session timeout. The default is 15 minutes. If the [SESSION_TIMEOUT](#session-timeout) environment variable is set this property will be overwritten.\r\n[routes](#routes-property) | Array | x | Contains all route configurations. The position of a configuration in this array is of significance for the application router in case a path matches more than one *source*. The first route whose *source* matches the path of the incoming request gets activated.\r\n[login](#login-property) | Object | x | Contains the configuration for the endpoint of the application router which will be used by the UAA during the OAuth2 authentication routine. By default this endpoint is `/login/callback`.\r\n[logout](#logout-property) | Object | x | Provides options for a [Central Logout](#central-logout) endpoint and a page to which the client to be redirected by the UAA after logout.\r\n[destinations](#destinations-property) | Object | x | Additional options for your destinations (besides the ones in the `destinations` environment variable).\r\n[services](#services-property) | Object | x | Additional options for your business services.\r\n[responseHeaders](#responseHeaders-property) | Array | x | Contains the optional response headers configuration.\r\n[compression](#compression-property) | Object | x | Configuration regarding compressing resources before responding to the client. If the [COMPRESSION](#compression-property) environment variable is set it will overwrite existing values.\r\n[pluginMetadataEndpoint](#pluginmetadataendpoint-property) | String | x | Adds an endpoint that will serve a JSON representing all configured plugins.\r\n[whitelistService](#whitelistservice-property) | Object | x | Options for the allowlist service preventing clickjack attacks.\r\n[websockets](#websockets-property) | Object | x | Options for the [web socket communication](#web-sockets).\r\n[errorPage](#errorpage-property) | Array | x | Optional configuration to set-up a custom error pages whenever the approuter encouters an error.\r\n[cors](#cors-property) | Array | x | Contains the configuration for cross-origin resource sharing.\r\n\r\n### *welcomeFile* property\r\n\r\nApprouter will redirect to this URL when `/`(root path) is requested.\r\nThis could be a file located inside the static resources folder or a resource hosted at a different location.\r\n\r\n**Note:** Approuter will serve the content of the resource instead of returning a redirect if the request contains a `x-csrf-token: fetch` header.\r\nSee [CSRF Protection](#csrf-protection).\r\n\r\n\r\nExample:\r\n```json\r\n\"welcomeFile\": \"/web-pages/hello-world.html\"\r\n```\r\n\r\n`web-pages` has to be a part of a local resource or an external destination\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"localDir\": \"my-static-resources\"\r\n}\r\n```\r\nor\r\n```json\r\n{\r\n    \"source\": \"^/web-pages/(.*)$\",\r\n    \"target\": \"$1\",\r\n    \"destination\": \"mydest\"\r\n}\r\n```\r\n\r\n\r\nNote: If there isn't a route with a localDir property, the folloing default is added to the list of routes:\r\n\r\n```json\r\n{\r\n  \"source\": \"^/(.*)$\",\r\n  \"localDir\": \"resources\"\r\n}\r\n```\r\n\r\n\r\n### *authenticationMethod* property\r\n\r\nIt may have the following values:\r\n\r\n* `none` - disables authentication for all routes\r\n* `route` - authentication type is defined in the [route](#routes) configurations\r\n\r\nThe default value is `route`.\r\n\r\n### *routes* property\r\n\r\nIt holds an array of route configuration objects. The order of the configurations is important for the application router.\r\nThe first route whose `source` pattern gets matched with the path of the incoming request will be activated.\r\nSee [Routes](#routes) for more info.\r\n\r\n### *login* property\r\n\r\nA redirect to the application router at a specific endpoint takes place during OAuth2 authentication with UAA.\r\nThis endpoint can be configured in order to avoid possible collisions. For example:\r\n\r\n```json\r\n\"login\": {\r\n  \"callbackEndpoint\": \"/custom/login/callback\"\r\n}\r\n```\r\n\r\nThe default endpoint is `/login/callback`.\r\n\r\n### *logout* property\r\n\r\nIn this object you can define your business application's central logout endpoint through the `logoutEndpoint` property.\r\nThe value of logout property should be an object with the following properties:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nlogoutPath | String |  | The path to be used when logging out from application router.\r\nlogoutPage | String | x | The logout page url path.\r\nlogoutMethod | String | x | Could be POST or GET. The default value is GET.\r\ncsrfProtection | Boolean | x | Can only be defined if logoutMethod is POST. If logoutMethod is POST and this property is not defined, default is true. It can be set to false – for example if csrfProtection is implemented in backend application.\r\n\r\nFor example, if somewhere in your *xs-app.json* you have:\r\n\r\n```json\r\n\"logout\": {\r\n  \"logoutEndpoint\": \"/my/logout\"\r\n}\r\n```\r\n\r\nThis will open an endpoint on application router which, when requested, will trigger the [central logout](#central-logout) routine.\r\nChanging the browser location from the client-side JavaScript code:\r\n\r\n```javascript\r\nwindow.location.replace('/my/logout');\r\n```\r\n\r\nwill trigger client initiated central Logout.\r\n\r\nIn addition, a page to which the user will be redirected by the UAA after logout can be configured using the `logoutPage` property.\r\nIt may hold:\r\n\r\n- URL path - the UAA will redirect the user back to the application router and the path will be interpreted according the configured [routes](#routes).\r\n\r\nThe `logoutEndpoint` can be called with query parameters. For example:\r\n```javascript\r\nwindow.location.replace('/my/logout?siteId=3');\r\n```\r\nThese parameters will be appended as is to the redirect url set by the `logoutPage` property.\r\nFor example, if the logout section is the following:\r\n```\r\n\"logout\": {\r\n    \"logoutEndpoint\": \"/logout\",\r\n    \"logoutPage\": \"/logoff.html\"\r\n  },\r\n```\r\nThe redirect url will end with:\r\n```\r\n/logoff.html?siteId=3\r\n```\r\n\r\n**Note**: The resource that matches the path should not require authentication. The property `authenticationType` should be set to `none` for that particular route.\r\n\r\nExample:\r\n\r\n```json\r\n{\r\n  \"authenticationMethod\": \"route\",\r\n  \"logout\": {\r\n    \"logoutEndpoint\": \"/my/logout\",\r\n    \"logoutPage\": \"/logout-page.html\"\r\n  },\r\n  \"routes\": [\r\n    {\r\n      \"source\": \"^/logout-page.html$\",\r\n      \"localDir\": \"my-static-resources\",\r\n      \"authenticationType\": \"none\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nIn this case *my-static-resources* (contains *logout-page.html*) is a folder with static resources in the working directory of the application router.\r\n\r\n**Note**: Be sure that your main route in your xs-app.json resource that matches the path is not cached by browser. Therefore, the best practice here would be to model cacheControl accordingly:\r\n\r\n```json\r\n{\r\n  \"routes\": [\r\n    {\r\n      \"source\": \"^/ui/index.html\",\r\n      \"target\": \"index.html\",\r\n      \"localDir\": \"web\",\r\n      \"cacheControl\": \"no-cache, no-store, must-revalidate\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n- Absolute http(s) URL - the UAA will redirect the user to a page (or application) different from the application router. \r\nFor example:\r\n\r\n```json\r\n\"logout\": {\r\n  \"logoutEndpoint\": \"/my/logout\",\r\n  \"logoutPage\": \"http://employees.portal\"\r\n}\r\n```\r\n\r\n**Note**: UAA will execute redirect only in case redirect URL is a valid redirect-uri in xs-security.json - redirect-uris are maintained as part of the oauth2-configuration section in the UAA application security descriptor JSON file given at the creation of the service instance. For example:\r\n\r\nUAA application security descriptor:\r\n```\r\n\"oauth2-configuration\": {    \r\n    \"redirect-uris\":\r\n    [\r\n     \"http://employees.portal\"\r\n    ]    \r\n}\r\n```\r\n\r\nUsing POST method for Logout\r\n\r\nFor security reasons it is recommended to model the logout flow using \"POST\" method and enable CSRF protection. \r\n\r\nIn that case, logoutMethod and csrfProtection parameters should be added in logout property:\r\n```json\r\n  \"logout\": {\r\n    \"logoutEndpoint\": \"/my/logout\",\r\n    \"logoutPage\": \"/logout-page.html\",\r\n    \"logoutMethod\": \"POST\",\r\n    \"csrfProtection\": true\r\n}\r\n```\r\n**Note**: For backward compatibility reasons logoutMethod default value is GET. \r\nThe csrfProtection property can only be set if logoutMethod is POST. \r\nIf logoutMethod is POST and csrfProtection property is not set, csrfProtection will be enabled by default.\r\n\r\nConsumption example:\r\nThe POST request should be an AJAX request and include CSRF token.\r\n```\r\nasync function getToken() {\r\n  return new Promise((resolve) => {\r\n  jQuery.ajax({\r\n    type: \"GET\",\r\n    url: 'my/logout',\r\n    headers: {\r\n      \"X-CSRF-Token\": 'fetch',\r\n      contentType: \"application/json\",\r\n    },\r\n    success: function(data, textStatus, request){\r\n      resolve(request.getResponseHeader('X-CSRF-Token'));\r\n    },\r\n   });\r\n });\r\n};\r\n```\r\nPOST request example:\r\n```\r\nconst token = await getToken();\r\njQuery.ajax({\r\n  type: \"POST\",\r\n  url: \"my/logout\",\r\n  headers: {\r\n    \"X-CSRF-Token\": token,\r\n    contentType: \"application/json\",\r\n  },\r\n  success: function (data) {\r\n    window.location.href = data;\r\n  }\r\n});\r\n```\r\n**Note**:  Make sure that url field matches logoutEndpoint.\r\n\r\n### *destinations* property\r\n\r\nLet's say you have a destination called `node-backend`. You can specify options for it by adding the `destinations` property in your xs-app.json:\r\n```json\r\n\"destinations\": {\r\n  \"node-backend\": {}\r\n}\r\n```\r\nThe value of `node-backend` should be an object with the following properties:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nlogoutPath | String | x | The logout endpoint for your destination.\r\nlogoutMethod | String | x | Could be POST, PUT, GET. The default value is POST.\r\n\r\nThe `logoutPath` will be called when [Central Logout](#central-logout) is triggered or a session is deleted due to timeout.\r\nThe request to the `logoutPath` will contain additional headers, including the JWT token.\r\nThe `logoutMethod` property specifies the HTTP method with which the `logoutPath` will be requested. For example:\r\n```json\r\n{\r\n  \"destinations\": {\r\n    \"node-backend\": {\r\n      \"logoutPath\": \"/ui5logout\",\r\n      \"logoutMethod\": \"GET\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### *services* property\r\n\r\nLet's say you have a service called `com.sap.appbasic.country`. You can specify options for it by adding the `services` property in your xs-app.json:\r\n```json\r\n\"services\": {\r\n  \"com.sap.appbasic.country\": {}\r\n}\r\n```\r\nThe value of `com.sap.appbasic.country` should be an object with the following properties:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nendpoint | String | x | The name of the attribute in the VCAP_SERVICES that contains the URL of the service.  \r\nlogoutPath | String | x | The path to be used when logging out from the service.\r\nlogoutMethod | String | x | Could be POST, PUT, GET. The default value is POST.\r\n\r\nThe `logoutPath` will be called when [Central Logout](#central-logout) is triggered or a session is deleted due to timeout.\r\nThe request to the `logoutPath` will contain additional headers, including the JWT token in header `authorization` and approuter host in header `x-approuter-host`.\r\nThe `logoutMethod` property specifies the HTTP method with which the `logoutPath` will be requested. For example:\r\n```json\r\n{\r\n  \"services\": {\r\n    \"com.sap.appbasic.country\": {\r\n      \"endpoint\": \"countryservice\",\r\n      \"logoutPath\": \"/countrieslogout\",\r\n      \"logoutMethod\": \"GET\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### *responseHeaders* property\r\n\r\nWith the custom response header property, you can add headers, which the application router returns to the client in its responses.<br> \r\nThe property is an array of objects, each object having the following properties:\r\n\r\nProperty | Type         | Optional | Description\r\n-------- | ------------ |:--------:| -----------\r\nname     | String       |          | response header name\r\nvalue    | String       |          | response header value\r\n\r\n\r\nExample:\r\n```json\r\n{ \"responseHeaders\" : [\r\n    {\"name\": \"header1\", \"value\": \"value1\"},\r\n    {\"name\": \"header2\", \"value\": \"value2\"}\r\n  ]\r\n}\r\n```\r\n\r\n### *compression* property\r\nBy default text resources are compressed before being sent to the client.\r\nThe default threshold for using compression is 1K. Text resources under this size will not be compressed.\r\nIf you need to change the compression size threshold, you can add the optional property `minSize`.\r\n\r\nHere is an example of a compression section (2048 bytes):\r\n```json\r\n{\r\n  \"compression\": {\r\n      \"minSize\": 2048\r\n  }\r\n}\r\n```\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nminSize | Number | x | Text resources larger than this size will be compressed.\r\nenabled | Boolean | x | Globally disables or enables compression. Default value is true.\r\ncompressResponseMixedTypeContent | Boolean | x | Determines whether response content of multipart/mixed content type should be compressed. The default value is false.\r\n\r\n**Note:** There are 3 ways to disable compression:\r\n* Global - within the compression section add ```\"enabled\": false```\r\n* Front-End - the client sends a header Accept-Encoding which omits gzip\r\n* Backend  - the application sends a header Cache-Control with the 'no-transform' directive\r\n\r\nExample of globally disabling compression using the environment variable `COMPRESSION`:\r\n```json\r\n{\r\n  \"enabled\": false\r\n}\r\n```\r\n\r\n**Note:** The header field `Content-Length` is used to determine the resource size.\r\nIf `Content-Length` is missing, the chunk size is used to determine whether to compress the resource.\r\nFor more information, see the npm module compression.\r\n\r\nHere is a complete example of the compression environment variable:\r\n```json\r\n  env:\r\n   COMPRESSION: >\r\n        { \r\n\t  \"enabled\": true,\r\n\t  \"minSize\": 2048,\r\n\t  \"compressResponseMixedTypeContent\": true\r\n\t  }\r\n```\r\n\r\n### *pluginMetadataEndpoint* property\r\n\r\nExample:\r\n```json\r\n{\r\n  \"pluginMetadataEndpoint\": \"/metadata\"\r\n}\r\n```\r\n\r\n**Note**: If you request relative path `/metadata` of your application, you will receive a JSON with configured plugins.\r\n\r\n### *whitelistService* property\r\n\r\nThe *whitelistService* property is used for enabling the allowlist service that prevents clickjack attacks.\r\nAn endpoint accepting GET requests will be opened at the relative path configured in the `endpoint` property.\r\nFor more details see [Allowlist service](#whitelist-service) section.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"whitelistService\": {\r\n    \"endpoint\": \"/whitelist/service\"\r\n  }\r\n}\r\n```\r\n\r\n### *websockets* property\r\n\r\nFor more details about the web socket communication see [Web sockets](#web-sockets) section.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"websockets\": {\r\n    \"enabled\": true\r\n  }\r\n}\r\n```\r\n\r\nTo use Websockets when approuter is integrated with HTML5 Application Repository, this property should be added to the xs-app.json of the deployed HTML5 application. When an incoming request for an application in the repository goes through approuter, approuter retrieves the application's configuration from the repository. If this flag is set, approuter creates a websockets connection with the backend (the target url of the request) and acts as a proxy which delivers messages on top of ws protocol from the backend to the user and vice versa.\r\n\r\n### *errorPage* property\r\n\r\nBy default, errors originating in the application router are shown the [status code](https://nodejs.org/api/http.html#http_http_status_codes) of the error.\r\nIt is also possible to display a custom error page using the `errorPage` property.\r\n\r\nThe property is an array of objects, each object having the following properties:\r\n\r\nProperty | Type         | Optional | Description\r\n-------- | ------------ |:--------:| -----------\r\nstatus   | Number/Array |          | HTTP status code\r\nfile     | String       |          | File path relative to the working directory of the application router\r\n\r\n\r\nExample:\r\n```json\r\n{ \"errorPage\" : [\r\n    {\"status\": [400,401,402], \"file\": \"./custom-err-40x.html\"},\r\n    {\"status\": 501, \"file\": \"./http_resources/custom-err-501.html\"}\r\n  ]\r\n}\r\n```\r\nIn the example above 400, 401 and 402 errors would be shown the content of  `./custom-err-4xx.html` and for 501 errors the user would see `./http_resources/custom-err-501.html`.\r\n\r\n**Note:** The errorPage conifiguration section has no effect on errors generated outside of the application router.\r\n\r\n### *cors* property\r\n\r\nWith the cors property, you can support cross-origin requests.<br> \r\nIf a cross-origin resource sharing (CORS) configuration exists in both the environment variables and the application router configuration file (xs-app.json), the application router gives priority to the CORS configuration in the application router configuration file.<br> \r\nFor more information about the CORS configuration see [Cross-Origin Resource Sharing configuration](#cross-origin-resource-sharing-configuration).\r\n\r\n### Complete example of an *xs-app.json* configuration file \r\n#### Without HTML5 Application Repository integration:\r\n```json\r\n{\r\n  \"welcomeFile\": \"index.html\",\r\n  \"authenticationMethod\": \"route\",\r\n  \"sessionTimeout\": 10,\r\n  \"pluginMetadataEndpoint\": \"/metadata\",\r\n  \"routes\": [\r\n    {\r\n      \"source\": \"^/sap/ui5/1(.*)$\",\r\n      \"target\": \"$1\",\r\n      \"destination\": \"ui5\",\r\n      \"csrfProtection\": false\r\n    },\r\n    {\r\n      \"source\": \"/employeeData/(.*)\",\r\n      \"target\": \"/services/employeeService/$1\",\r\n      \"destination\": \"employeeServices\",\r\n      \"authenticationType\": \"xsuaa\",\r\n      \"scope\": [\"$XSAPPNAME.viewer\", \"$XSAPPNAME.writer\"],\r\n      \"csrfProtection\": true\r\n    },\r\n    {\r\n      \"source\": \"^/(.*)$\",\r\n      \"target\": \"/web/$1\",\r\n      \"localDir\": \"static-content\",\r\n      \"replace\": {\r\n        \"pathSuffixes\": [\"/abc/index.html\"],\r\n        \"vars\": [\"NAME\"]\r\n      }\r\n    }\r\n  ],\r\n  \"login\": {\r\n    \"callbackEndpoint\": \"/custom/login/callback\"\r\n  },\r\n  \"logout\": {\r\n    \"logoutEndpoint\": \"/my/logout\",\r\n    \"logoutPage\": \"/logout-page.html\"\r\n  },\r\n  \"destinations\": {\r\n    \"employeeServices\": {\r\n      \"logoutPath\": \"/services/employeeService/logout\",\r\n      \"logoutMethod\": \"GET\"\r\n    }\r\n  },\r\n  \"compression\": {\r\n    \"minSize\": 2048\r\n  },\r\n  \"whitelistService\": {\r\n    \"endpoint\": \"/whitelist/service\"\r\n  },\r\n  \"websockets\": {\r\n    \"enabled\": true\r\n  },\r\n  \"errorPage\": [\r\n    {\"status\": [400,401,402], \"file\": \"/custom-err-4xx.html\"},\r\n    {\"status\": 501, \"file\": \"/custom-err-501.html\"}\r\n  ]\r\n}\r\n```\r\n#### With HTML5 Application Repository integration (xs-app.json file stored in HTML5 Application Repository):\r\n```json\r\n{\r\n  \"welcomeFile\": \"index.html\",\r\n  \"authenticationMethod\": \"route\",\r\n  \"routes\": [\r\n    {\r\n      \"source\": \"/employeeData/(.*)\",\r\n      \"target\": \"/services/employeeService/$1\",\r\n      \"destination\": \"employeeServices\",\r\n      \"authenticationType\": \"xsuaa\",\r\n      \"scope\": [\"$XSAPPNAME.viewer\", \"$XSAPPNAME.writer\"],\r\n      \"csrfProtection\": true\r\n    },\r\n    {\r\n       \"source\": \"^/odata/v2/(.*)$\",\r\n       \"target\": \"$1\",\r\n       \"service\": \"com.sap.appbasic.country\",\r\n       \"endpoint\": \"countryservice\"\r\n    },\r\n    {\r\n      \"source\": \"^(/.*)$\",\r\n      \"target\": \"$1\",\r\n      \"service\": \"html5-apps-repo-rt\",\r\n      \"authenticationType\": \"xsuaa\"\r\n    }\r\n  ],\r\n  \"logout\": {\r\n    \"logoutEndpoint\": \"/my/logout\",\r\n    \"logoutPage\": \"/logout-page.html\"\r\n  },\r\n  \"destinations\": {\r\n    \"employeeServices\": {\r\n      \"logoutPath\": \"/services/employeeService/logout\",\r\n      \"logoutMethod\": \"GET\"\r\n    }\r\n  },\r\n  \"services\": {\r\n    \"com.sap.appbasic.country\": {\r\n      \"logoutPath\": \"/countryService/logout\",\r\n      \"endpoint\": \"countryservice\",\r\n      \"logoutMethod\": \"GET\"\r\n    }\r\n  }\r\n}\r\n```\r\n**Note:** The route in bold is the route that provides access to the HTML5 Application Repository service.\r\n\r\n## Headers\r\n\r\n### Forwarding Headers\r\n\r\nThe application router passes the following x-forwarding-* headers to the route targets:\r\n\r\nHeader Name | Description\r\n----------- | -----------\r\nx-forwarded-host | Contains the *Host* header which was sent by the client to the application router.\r\nx-forwarded-proto | Contains the protocol which was used by the client to connect to the application router.\r\nx-forwarded-for | Contains the address of the client which connects to the application router.\r\nx-forwarded-path | Contains the original path which was requested by the client.\r\n\r\nIf a client performs a path rewriting, it sends the x-forwarded-proto, x-forwarded-host, and the x-forwarded-path headers to the application router. The values of these headers are forwarded to the route targets without modifications instead of being generated from the application router request URL. The x-forwarded-path header of a request does not impact the source pattern of routes in the xs-app.json.\r\n\r\n### Hop-by-hop Headers\r\n\r\nHop-by-hop headers are meaningful only for a single transport-level connection and therefore are not forwarded by the application router.\r\nThese headers are:\r\n* Connection\r\n* Keep-Alive\r\n* Public\r\n* Proxy-Authenticate\r\n* Transfer-Encoding\r\n* Upgrade\r\n\r\n### Custom Headers\r\n\r\n* x-custom-host: Contains the internal reverse proxy host. Relevant only if the application router is used behind an internal reverse proxy as well as an external reverse proxy (EXTERNAL_REVERSE_PROXY  environment variable is set to true). Add this header to the request to internal reverse proxy.\r\n\r\nIn a multi-tenancy landscape, the application router will calculate the tenant id based on the value of a certain request header as follows:\r\n - x-custom-host header or host if EXTERNAL_REVERSE_PROXY is true\r\n - x-forwarded-host header or host if EXTERNAL_REVERSE_PROXY is false or not specified\r\n\r\n### Authorization Header\r\n* x-approuter-authorization: Contains the JSON Web Token (JWT) or Open ID Connect (OIDC) access token to support the [Service to Application Router](#service-to-application-router-beta-version) scenario.\r\n\r\n## CSRF Protection\r\n\r\nBy default the application router enables CSRF protection for any HTTP method that is not `HEAD` or `GET` and the route is not public.\r\nA path is considered _public_, if it does not require authentication. This is the case for routes with `authenticationType: none` or if authentication is disabled completely via the top level property `authenticationMethod: none`.\r\n\r\nTo obtain a CSRF token one must send a `GET` or `HEAD` request with a `x-csrf-token: fetch` header to the application router.\r\nThe application router will return the created token in a `x-csrf-token: <token>` header, where `<token>` will be the value of the CSRF token.\r\n\r\nIf a CSRF protected route is requested with any of the above mentioned methods,\r\n`x-csrf-token: <token>` header should be present in the request with the previously obtained token.\r\nThis request must use the same session as the fetch token request.\r\nIf the `x-csrf-token` header is not present or invalid, the application router will return status code *403 Forbidden* and a response header `x-csrf-token: Required`.\r\n\r\n## Support of SAP Statistics\r\n\r\nThe application router provides performance statistics in an HTTP response header in the following cases:\r\n- The HTTP request contains an HTTP query parameter (URL parameter) sap-statistics=true.\r\n- The HTTP request contains an HTTP header field sap-statistics:true.\r\n\r\nIf an HTTP request that contains a header field or query parameter with \"sap-statistics=true\" reaches the application router, the application router forwards an \"sap-statistics\" header to the corresponding backend.\r\nIf SAP statistics is implemented for the backend, the backend returns to the application router a response header containing the statistics information from the backend.\r\n\r\nThe application router returns the following statistics information in an sap-statistics-approuter response header:\r\n- total: The time that has passed between the moment when the request entered into the application router and the moment when the application router started writing the response\r\n- ext (in case of destination forwarding): The time spent in the backend\r\n\r\nEach backend sub-component can add its own response header with the duration measurements when it receives the HTTP header sap-statistics:true.\r\n\r\n## Connectivity\r\n\r\nThe application router supports integration with SAP Cloud Platform connectivity service. The connectivity service handles proxy access to SAP Cloud Platform cloud connector, which tunnels connections to private network systems. In order to use connectivity, a connectivity service instance should be created and bound to the Approuter application. In addition, the relevant destination configurations should have `proxyType=OnPremise`. Also, a valid XSUAA login token should be obtained via the login flow.\r\n\r\n## SaaS Application Registration in Cloud Foundry\r\n\r\nThe application router supports SaaS registration. A SaaS business application based on application router may be registered in the SaaS registry  by creating and binding a SaaS Registry service instance.\r\nAfter fulfilling the CIS process to enable application subscription, the SaaS business application will be visible in the SAP Cloud Platform cockpit in the Cloud Foundry environment for all entitled customers. \r\nOnce a customer is entitled to the SaaS business application, the subaccounts (tenants) created under the global account will be able to view, subscribe to, and unsubscribe from the application. \r\nWhen a tenant is subscribed/unsubscribed to/from an application, the tenant will be subscribed/unsubscribed: \r\n* In the XSUAA instance of the application itself \r\n* In the reuse services (e.g.: destination ), if the application is dependent on the reuse service. \r\nAlso, onboarding and offboarding callbacks will be triggered for the subscribed/unsubscribed application and for the reuse services.\r\n\r\nIf you use IAS by binding a multi-tenant application router to an identity service instance, the subscription manager service (SMS) should be used to enable the subscription to a subscriber zone and an IAS tenant.\r\n\r\n\r\n### How To Expose Approuter for SaaS Subscription\r\n\r\n#### Multi-tenancy\r\nThe application router should be configured to handle multi-tenant access by maintaining the TENANT_HOST_PATTERN environment configuration.\r\n\r\n#### Entitle org for SaaS Application consumption\r\nThe SaaS Registry service and / or the Subscription Manager service should be available in your space marketplace.\r\n\r\n#### Authorize LPS for invoking callbacks\r\nSaaS business applications should grant LPS the authorization to invoke the application's callbacks. Callback scope should be granted to LPS in the application router’s xs-security.json file:\r\n\r\n*xs-security.json:*\r\n```\r\n...\r\n {  \r\n    \"name\":\"$XSAPPNAME.Callback\",\r\n    \"description\":\"With this scope set, the callbacks for tenant onboarding, \r\n     offboarding and getDependencies can be called.\",\r\n         \"grant-as-authority-to-apps\":[  \r\n            \"$XSAPPNAME(application,sap-provisioning,tenant-onboarding)\"\r\n         ]\r\n  }\r\n...  \r\n```\r\n\r\n## Authentication with Identity Service (IAS)\r\nTo use IAS authentication an identity service instance of plan application should be created with the following configuration:\r\n```\r\n{\r\n   \"oauth2-configuration\": {\r\n     \"redirect-uris\": [\"https://*.<landscapeDomain>/login/callback?authType=ias\"],  //Enable redirect after login\r\n     \"post-logout-redirect-uris\": [\"https://*.<landscapeDomain>/*/logout.html\" ]    //Enable redirect after logout\r\n   },\r\n   \"xsuaa-cross-consumption\":true, //Enable xsuaa trust\r\n   \"multi-tenant\":true //enable multitenancy\r\n}\r\n```\r\nAuthentication with IAS should be performed using X.509 certificates. To achieve this the identity service should be bound to approuter using the following configuration:\r\n```\r\n{\r\n  \"credential-type\": \"X509_GENERATED\"\r\n }\r\n```\r\n\r\n#### Register an application in SaaS Registry (SaaS Registry Configuration)\r\nFor a customer to be able to subscribe to an application through the SAP Cloud Platform cockpit, each SaaS business application should register itself on all CF landscapes where it is deployed.\r\n\r\nTo register a SaaS application in LPS, a service instance of saas-registry should be created and the SaaS business application should be bound to it.\r\nThe instance of saas-registry is created with a configuration json - *saas-config.json:*.\r\nIn the configuration.json file a url for the getDependencies and onSubscription callbacks must be provided. \r\nNote that the path segment of these urls are configurable however the tenantId url variable in onSubscription callback must be provided anyway.\r\n\r\n```\r\n{\r\n\t\"appId\" : \"<appId>\",  # xsappname generated by XSUAA - can be obtained by checking the xsuaa-> xsappname by executing: cf env <application name>\r\n\t\"appName\" : \"<appName>\",  # Business application name to be shown to subscribers \r\n\t\"appUrls\": { \r\n\t\t\"getDependencies\" : \"<approuter-host>/callback/v1.0/dependencies\",\r\n\t    \"onSubscription\" : \"<approuter-host>/callback/v1.0/tenants/{tenantId}\" \r\n\t},\r\n\t\"providerTenantId\" : \"<tenant>\"  # Approuter provider account tenant ID.\r\n}   \r\n\r\n```\r\n\r\n#### Register an application in Subscription Manager  (Subscription Manager Configuration)\r\nTo register an SaaS application in the subscription manager service, a service instance of the subscription manager has to be created and the SaaS business application has to be bound to it. \r\nThe instance of subscription manager is created with a configuration json file - sms-config.json:. In the configuration.json file, a url for the getDependencies callbacks and the onSubscription callbacks must be provided. \r\nNote that the path segments of these urls are configurable.\r\n\r\n```\r\n{\r\n  \"iasServiceInstanceName\" : [\"ias-provider-ias\"], #Name of the related IAS instance\r\n  \"applicationType\": \"application\",\r\n  \"xsuaaSaasApplicationServiceInstanceId\": \"88afb2a5-5ab3-409a-9c0c-b70e2b86b1cf\", #SaaS Registry service instance id\r\n  \"appCallbacks\" : {\r\n    \"dependenciesCallbacks\" : {\r\n      \"url\" : \"https://<providerZoneId>--<providerIASTenantId>.<approuterHost>.cert.<landscapeDomain>/v1.0/callback/zones/{zoneId}/dependencies\"\r\n    },\r\n    \"subscriptionCallbacks\" : {\r\n      \"url\" : \"https://<providerZoneId>--<providerIASTenantId>.<approuterHost>.cert.<landscapeDomain>/v1.0/callback/zones/{zoneId}\"\r\n    }\r\n  }\r\n}\r\n```\r\nNote that in order to provide certificates the url domain should contain a \"cert\" segment.\r\nIn addition the TENANT_HOST_PATTERN environment variable should be modified to support requests with the \"cert\" segment. \r\nFor example:\r\n```\r\n^(.*).<approuterHost>.(cert.)?<landscapeDomain>\r\n```\r\n\r\n## Mutual TLS Authentication (mTLS) and Certificates Handling\r\nApplication router supports certificates usage for token creation and mTLS handshake in backend connections. To enable that the XSUAA or IAS instance bound to the application router should provide in its credentials a certificates chain and a private key\r\n\r\nNote that application router also supports providing private key via environment variables: XSUAA_PRIVATE_KEY (XSUAA) and IAS_PRIVATE_KEY (IAS).\r\n\r\nIn case certificates and private key exists, application router fetches XSUAA/IAS tokens providing certificates chain and private key.\r\nWhen forwarding request to business services, application router also uses certificates to create a client_credentials token or exchange the login token.\r\n\r\nIf certificates available, HTTP connection to backend is created using private key and a concatenation of intermediate and client certificates, enabling mTLS handshake.\r\n\r\nCloud Foundry: client certificate is propagated via the x-forwarded-client-cert header. In order to enable that the backend url should contain a .cert segment in its domain.\r\n\r\n## Integration with HTML5 Application Repository\r\n\r\nThe application router supports seamless integration with the HTML5 Application Repository service. \r\nWhen the application router interacts with HTML5 Application Repository to serve HTML5 Applications, all static content and routes (xs-app.json) are retrieved from HTML5 Application Repository. \r\nIn case application router needs to route to non HTML5 Applications, it is possible to model that in the xs-app.json of the application router.\r\n\r\nTo integrate HTML5 Application Repository to an application router based it is required to create an instance of html5-apps-repo service of plan app-runtime and bind it to the application.\r\nxs-app.json routes that are used to retrieve static content from HTML5 Application Repository may be modeled in the following format:\r\n\r\n```\r\n { \r\n     \"source\": \"^(/.*)\",                                    \r\n     \"target\": \"$1\",                                        \r\n     \"service\": \"html5-apps-repo-rt\", \r\n     \"authenticationType\": \"xsuaa\"                      \r\n }\r\n```\r\n### HTML5 Application Repository Multitenancy\r\nThe HTML5 Application Repository is a multitenant service. Non-public HTML5 Applications are visible only to the application providers (with provider subaccounts) and the consumers subscribed to the applications (with consumer subaccounts).\r\n\r\nWhen a multitenant application router is subscribed to a subaccount, the HTML5 Application Repository app-runtime instance that is bound to the application router is returned as a dependency, which triggers the subscription to the app-runtime instance.\r\nYou can also bind HTML5 Application Repository app-host service instances to the application router to enable the subscription of the corresponding HTML5 applications.\r\nDuring runtime, the application router creates an HTML5 Application Repository app-runtime client_credentials token using the tenant URL that the application router determines from the TENANT_HOST_PATTERN environment variable.\r\n\r\nNote:  The creation of the token can fail if the app-runtime instance is not subscribed to the subaccount, which happens if, for example, the application router was subscribed to the subaccount before the HTML5 Application Repository became a multitenant service.\r\nIn this case the application router will create the token using the provider subaccount.\r\n\r\nYou can trigger the subscription to the HTML5 Application Repository app-runtime instance by using the SAAS Provisioning API: see https://api.sap.com/api/APISaasManagerService/resource\r\n```\r\nPATCH /saas-manager/v1/application/tenants/{tenantId}/subscriptions\r\n```\r\n\r\nNote:  If you have an old application router version, the HTML5 Application Repository app-runtime client_credentials token is created by using HTML5 application provider subaccount.\r\n\r\n### Blocked HTML5 Application Names\r\n\r\nThe following strings are used as predefined direct routing URIs, which lead the request to the routing configuration file of the application router: \"favicon.ico\", \"login\".\r\nTherefore, do not name your HTML5 applications \"favicon.ico\" or \"login\"!\r\n\r\n### Known Gaps in Integration with HTML5 Application Repository\r\n\r\nThe following limitations apply when application router is bound to HTML5 Application Repository service:\r\n\r\n1. It is not possible to implement the \"first\" middleware slot to provide routes dynamically.\r\n2. No option apart from workingDir can be provided in application router start.\r\n3. External session management via extensibility is not supported\r\n\r\n\r\n**Note:** Mixed scenario of modeling part of the static content in local resources folder and also retrieving static content from HTML5 Application Repository is not supported.</br>\r\n**Note:** This feature is only supported in Cloud Foundry. There is no HTML5 Application Repository service in XSA.\r\n\r\n### Runtime Processing\r\n\r\nDuring runtime, based on request url path (see URL Format), application router will try to fetch the xs-app.json file from the corresponding HTML5 Application in HTML5 Application Repository and use it for routing the request.\r\nThe following algorithm is applied for request processing:\r\n* If no HTML5 Application is found in HTML5 Application Repository for current request, central application router xs-app.json will be used for routing\r\n* If HTML5 Application exists in HTML5 Application Repository but no xs-app.json file is returned, an error message will be issued and request processing will be stopped.\r\n\r\n#### URL Format\r\n\r\nA valid request to application router that uses HTML5 Application Repository must have the following format:\r\n```\r\nhttps://<tenantId>.<appRouterHost>.<domain>/<bsPrefix>.<appName-appVersion>/<resourcePath>\r\n\r\n```\r\nbsPrefix (business service prefix) - Optional\r\n* It should be used in case the application is provided by a business service bound to this approuter\r\n\r\nappName (application name) - Mandatory\r\n* Used to uniquely identify the application in HTML5 Application Repository persistence\r\n* Must not contain dots or special characters\r\n\r\nappVersion (application version) - Optional\r\n* Used to uniquely identify a specific application version in HTML5 Application Repository persistence\r\n* If no version provided, default application version will be used\r\n\r\nresourcePath (path to file)\r\n* The path to the file as it was stored in HTML5 Application Repository persistence\r\n\r\nQuery Parameters:\r\n\r\nskipXSAppJsonCache - Optional\r\n* Value: true\r\n* Supports skipping the usage of cache when getting the xsApp configuration, bringing it remotely and re-setting the cache.\r\n* Note that the query parameter is removed from request url before route processing.\r\n\r\n### Cache Buster Handling\r\nA cache buster allows the application router to notify the browser to refresh the resources only when the application resources have been changed. Otherwise the resources are always fetched from the browser's cache.\r\nThis flow applies to requests that should be forwarded to HTML5 Application Repository. If requests are forwarded to backend applications that return data, cache buster handling is not applied.\r\n\r\n* When the second path segment of the request url contains the pattern “~timestamp~”, this segment is removed from the subsequent request to HTML5 Application Repository\r\n* In case the request had a cache buster segment, application router adds to corresponding response the header: Cache-Control: public, max-age=31536000\r\n\r\n**Note:** Cache buster flow is only supported in HTML5 Application Repository integration flow.\r\n\r\n### Integration with Business Services\r\n\r\nApplication router supports integration with Business Services. \r\nBusiness Services are a flavour of reuse-services that expose specific information in VCAP_SERVICES credentials block that enable application router to serve Business Service UI and/or data.\r\n* Business Service UI must be stored in HTML5 Application Repository to be accessible from application router\r\n* Business Service UI must be defined as \"public\" to be accessible from an application router in a different space than the one from where the UI was uploaded \r\n* Business Service data can be served using two grant types:\r\n  1. User Token Grant: Application router performs a token exchange between login JWT token and Business Service token and uses it to trigger a request to the Business Service endpoint\r\n  2. Client Credentials Grant: Application router generates a client_credentials token and uses it to trigger a request to the Business Service endpoint\r\n\r\n#### Business Service Credentials\r\nWhile binding a Business Service instance to application router the following information should be provided in VCAP_SERVICES credentials:\r\n\r\n* sap.cloud.service: Service name as referenced from xs-app.json route and business service prefix (if Business Service UI provided) - Mandatory\r\n* sap.cloud.service.alias: Short service name alias for user friendly URL business service prefix- Optional\r\n* endpoints: One or more endpoints that can be used to access Business Service data. \r\n* html5-apps-repo: html5-apps-repo.app_host_id contains one or more html5-apps-repo service instance GUIDs that can be used to retrieve Business Service UIs - Optional\r\n* saasregistryenabled: flag that indicates that this Business Service supports SaaS Registry subscription. If provided, application router will return this Business Service xsappname in SaaS Registry \r\n  getDependencies callback - Optional\r\n* grant_type: the grant type that should be used to trigger requests to the Business Service. Allowed values: user_token or client_credentials. \r\n  Default value, in case this attribute is not provided, user_token - Optional\r\n* forwardiastoken: flag that indicates if, in addition to the exchanged xsuaa token, the IAS token should be forwarded as well. IAS token is forwarded in request header: `x-ias-token`\r\n\r\n\r\nThe value of `endpoints` should be an object with the following properties:\r\n\r\nProperty | Type | Optional | Default |Description\r\n-------- | ---- |:--------:| ---- |-----------\r\nurl | String |   | |URL to access the Business Service data.\r\ntimeout | Number | x | 30000ms |Positive integer representing the maximum wait time for a response (in milliseconds) from the Business Service. \r\n\r\n\r\nFor example:\r\n```\r\n\"country\": [\r\n   {\r\n    ...\r\n    \"credentials\": {\r\n     \"sap.cloud.service\": \"com.sap.appbasic.country\", \r\n     \"sap.cloud.service.alias\": \"country\",            \r\n     \"endpoints\": {                                   \r\n      \"countryservice\": { \"url\": https://icf-countriesapp-test-service.cfapps.sap.hana.ondemand.com/odata/v2/countryservice\"},\r\n      \"countryconfig\":  { \r\n            \"url\": https://icf-countriesapp-test-service.cfapps.sap.hana.ondemand.com/rest/v1/countryconfig\",\r\n            \"timeout\": 120000 \r\n      }\r\n     },\r\n     \"html5-apps-repo\": {                           \r\n      \"app_host_id\": \"1bd7c044-6cf4-4c5a-b904-2d3f44cd5569, 1cd7c044-6cf4-4c5a-b904-2d3f44cd54445\"\r\n     },\r\n     \"saasregistryenabled\": true,\r\n     \"grant_type\": \"user_token\"\r\n   ....\r\n```\r\n\r\n#### Accessing Business Service Data\r\nTo access Business Service data xs-app.json configuration file should have a route referencing a specific sap.cloud.service or sap.cloud.service.alias via the service attribute.\r\nIf an endpoint attribute is also modeled, it will be used to get the service url otherwise the fallback url or uri attribute will be used.\r\n\r\nFor example:\r\n```\r\n\"routes\": [\r\n    {\r\n      \"source\": \"^/odata/v2/(.*)$\",\r\n      \"target\": \"$1\",\r\n      \"service\": \"com.sap.appbasic.country\",\r\n      \"endpoint\": \"countryservice\"\r\n    },\r\n\r\n```\r\n\r\nIn order to support JWT token exchange, the login JWT token should contain the uaa.user scope. For that the xs-security configuration must contain a role template that references the uaa.user scope.\r\nFor example:\r\n```\r\n{\r\n    \"xsappname\"   : \"simple-approuter\",\r\n    \"tenant-mode\" : \"shared\",\r\n    \"scopes\": [\r\n        {\r\n            \"name\": \"uaa.user\",\r\n            \"description\": \"UAA\"\r\n        },\r\n        {\r\n            \"name\": \"$XSAPPNAME.simple-approuter.admin\",\r\n            \"description\": \"Simple approuter administrator\"\r\n        }\r\n    ],\r\n    \"role-templates\": [\r\n        {\r\n            \"name\": \"Token_Exchange\",\r\n            \"description\": \"UAA\",\r\n            \"scope-references\": [\r\n                \"uaa.user\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"simple-approuter-admin\",\r\n            \"description\": \"Simple approuter administrator\",\r\n            \"scope-references\": [\r\n                \"$XSAPPNAME.simple-approuter.admin\"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n#### Accessing Business Service UI\r\nBusiness Service UI's must be stored in HTML5 Application Repository and defined in their manifest.json files as \"public: true\" in order to be accessible from an application router\r\napplication that is typically running in a different space than the Business Service space. In addition dataSources uris must be relative to base url (no slash as first character).\r\n\r\nBusiness Service manifest.json example:\r\n\r\n```\r\n{\r\n  “sap.app”: {\r\n    “id”:“com.sap.appbasic.country.list”,\r\n    “applicationVersion: {\r\n    “version”: “1.0.0”\r\n  },\r\n  \"dataSources\": {\r\n    \"mainService\":{\r\n      \"uri\": \"odata/v2/countryservice\",\r\n      \"type\": \"OData\"\r\n    }\r\n  },\r\n  “sap.cloud”: {\r\n    \"public\": true,\r\n    “service”: “com.sap.appbasic.country“\r\n  }\r\n}\r\n```\r\n\r\nA Business Service that exposes UI must provide one or more app-host GUIDs in an html5-apps-repo block in VCAP_SERVICES credentials (see Business Service credentials).\r\n\r\nTo access Business Service UI the request url that hits application router must contain a business service prefix as described above.\r\n\r\nRequest URL example:\r\n```\r\n  https://approuter-repo-examples.cfapps.sap.hana.ondemand.com/comsapappbasiccountry.comsapappbasicscountrylist/test/flpSandbox.html\r\n\r\n```\r\nIn this example \"comsapappbasiccountry\" is the business service prefix which matches the sap.cloud.service attribute in country service VCAP_SERVICES credentials (without dots).\r\nThe \"comsapappbasicscountrylist\" is the name of the HTML5 Application as defined in the app.id attribute in the manifest.json (without dots).\r\n\r\n## Web Sockets\r\nThe application router is capable of forwarding web socket communication.\r\nIn order to use the web socket communication, it should be enabled through the [*websockets* property](#websockets-property).\r\nIf the backend service requires authentication then the upgrade request should contain a valid session cookie.\r\nThe destination schemas \"ws\" and \"wss\" are supported in addition to \"http\" and \"https\".\r\nWhen the application router receives an upgrade request, it verifies that the `Origin` header holds the URL of the application router.\r\nIf this is not the case, then an HTTP response with status 403 is returned to the client.\r\nThis origin verification can be further configured via the environment variable `WS_ALLOWED_ORIGINS`.\r\nIt contains the allowed origins the application router verifies against. It's structure is the same as [`CJ_PROTECT_WHITELIST`](#configuring-allowed-hostnames--domains).\r\n\r\n**Note:** A current limitation is that a web socket ping is not forwarded to the backend service.\r\n\r\n## Session Handling\r\n\r\nThe application router establishes a session with the client (browser) using a session cookie.\r\n\r\nThe application router intercepts all _session_ cookies, sent by backend services and stores them in its own session. Backend session cookies are not sent to the client in order to prevent cookie collisions. Upon subsequent requests the application router sends back the cookies to the respective backend services so they can establish their own sessions.\r\n**Note:** Non-session cookies from backend services are forwarded to the client. Cookie collisions may occur and the application should be able to handle them.\r\n\r\nIf a pending request is canceled, the request cancellation will be propagated to the backend service.\r\n\r\nIf there is no session in the application router, either because there has been a session timeout or because no session has been created yet, and if the incoming request matches a non-public route, the application router triggers a redirect to the authentication service (UAA or IAS).\r\nAfter a successful login, a redirect back to application router takes place using the login callback endpoint, which triggers the creation of a new session.\r\nIf the incoming request is an AJAX request (has the request header X-Requested-With: XMLHttpRequest) or if the HTTP verb is not GET and no session exists (there is no session cookie and the request doesn’t have an x-approuter-authorization header), the application router returns the response code 401 - Unauthorized. This enables the client application to handle the 401 response before it navigates to the authentication service. For example, the application can store data entered by the user and prevent data loss.\r\nWhen the handling of the 401 response is completed, the client application should send a request without an xmlhttprequest object to trigger the application router authentication flow.\r\n\r\n### Session Contents\r\n\r\n* CSRF token - the generated CSRF token so it can be verified against the token in the request, see [CSRF Protection](#csrf-protection) above.\r\n* OAuth token - JSON Web Token (JWT) fetched from UAA and forwarded to backend services in the Authorization header. The client never gets this token.\r\nThe application router refreshes the JWT automatically before it expires (if the session is valid). By default this routine is triggered 5 minutes before the expiration of the JWT.\r\nThis can also be configured via the `JWT_REFRESH` environment variable (the value is in minutes). If `JWT_REFRESH` is set to 0 then the refresh is disabled.\r\n* OAuth scopes - scopes owned by the current user, used to check if the user has the scope required for each request. See `scope` in [Routes](#routes).\r\n* Backend session cookies - all session cookies sent by backend services.\r\n* Business Services OAuth tokens - JSON Web Token (JWT) exchanged and used to access re-use services bound to the application router\r\n\r\n**Note:** If the JWT is close to expiration and the session is still active a JWT refresh will be triggered in `JWT_REFRESH` minutes before expiration.\r\n`JWT_REFRESH` is an environment variable stating the number of minutes before the JWT expiration the refresh will be triggered. The default value is 5 minutes.\r\n\r\n## External Session Management\r\nThe application router supports a backup of user sessions in an external session store. This enables the session recovery in case the application router instance that stores a session crashes and another application router instance has to continue handling the running user session.  \r\nTo enable this capability, you must bind a service instance of a service that supports a fast persistence store, such as *Redis*. When such a service is bound, the application router backs up the in-memory session information into the external persistency store.  \r\nIf, in subsequent requests, the session information is not found in the in-memory session store, the application router tries to rebuild the in-memory session information from the external persistency store.   \r\n\r\nThe sessions are stored compressed. For capacity planning, you can assume 50 Kb per session storage in the fast persistence store. \r\n\r\n### External Session Management Configuration\r\nIn order to use this feature, you have to set the following environment variable:\r\n\r\n```EXT_SESSION_MGT```  \r\n\r\nThe variable value must be defined in the JSON format and provide the following properties:\r\n* **instanceName (mandatory)** - the name of the service instance of the storage service.\r\n* **storageType (mandatory)** - the type of the storage, for example - \"redis\". Note that if no custom storage driver is used, only “redis” is allowed.\r\n* **sessionSecret (mandatory)** - a secret to be used to generate a session cookie. Please generate a unique string with at least 64 characters.\r\n* **defaultRetryTimeout** - the maximum duration for automatic retries of failed Redis operations in milliseconds. The default value is 2000 ms.\r\n* **backOffMultiplier** - a multiplier of the Redis-defined pause that determines the time between consecutive automatic retries of failed Redis operations. The default value is 50.\r\n\r\nFor example: \r\n```json\r\n{\r\n    \"instanceName\": \"approuter-redis\",\r\n    \"storageType\": \"redis\",\r\n    \"sessionSecret\": \"someuniquesessionsecret\",\r\n    \"defaultRetryTimeout\": 10000,\r\n    \"backOffMultiplier\": 10\r\n}\r\n```\r\n\r\n> **_NOTE:_** Currently, the application router supports only a Redis store\r\n\r\n### Configuration of a Custom Storage Driver\r\nFor information about the configuration of a custom storage driver, see [Configuring a custom storage driver](doc/sessionManagement.md#custom-storage-driver)\r\n\r\n\r\n## Service to Application Router\r\n\r\nThe application router can receive a consumer service JWT token created by the SAP Authorization and Trust Management (xsuaa) service or an OIDC access token created by Identity Authentication service and use it to access the UI and the data. The token is passed to the application router in the \"x-approuter-authorization\" header of the request. For more information, see [Authorization Header](#authorization-header-beta-version).\r\n\r\nCookie Handling:\r\nIn this flow client cookies are merged to backend cookies in case a backend cookie with the same key does not exist.\r\n\r\nIf you have configured [external session management](#external-session-management), an external session is created for each token in the external session management service (for example, in Redis). Such an external session has the same expiration time as the token for which it was created. \r\nThe application router uses the external session to store cached data, such as the exchanged tokens and destination configurations, to improve the performance by reducing roundtrips to the authentication and destination services.\r\n\r\n**Note**: The XSUAA JWT token or the OIDC token are generated with the same XSUAA service instance or the same Identity service instance that is bound to the application router. \r\n\r\n\r\n## Central Logout\r\n\r\nCentral Logout can be client initiated or can be triggered due to session timeout.\r\n* Client initiated\r\n  * Deletes the user session.\r\n  * Requests all backend services logout paths (if configured in the [destinations property](#destinations-property)).\r\n  * Request all business services logout paths (if configured in the [services property](#services-property)).\r\n  * Redirects the client to logout from UAA.\r\n  * If configured, redirects back to a custom page (for XS OnPremise Runtime only). For more information, see [logout-property](#logout-property).\r\n* Session timeout\r\n  * Deletes the user session.\r\n  * Requests all backend services logout paths (if configured in the [destinations property](#destinations-property)).\r\n  * Requests all business services logout paths (if configured in the [services property](#services-property)).\r\n\r\nThe session timeout can be configured with the [SESSION_TIMEOUT](#session-timeout) variable through the environment.\r\n\r\n## Allowlist Service\r\n\r\nA protection concept is designed in SAP that uses UI libraries and an allowlist service for proper clickjack protection of applications. The general idea is that when an html page needs to be rendered in a frame, a check is done by calling the allowlist service to validate if the parent frame is allowed to render the content in a frame. The actual check is provided by the allowlist service.\r\n\r\n### Enable the service\r\n\r\nTo enable the allowlist service and to open the service endpoint you need to configure the [whitelistService](#whitelistservice-property) property in *xs-app.json*.\r\n\r\n### Configuring allowed hostnames / domains\r\n\r\nThe allowlist service reads allowed hostnames and domains from the environment variable `CJ_PROTECT_WHITELIST`.\r\nThe content is a JSON array of object with the following properties:\r\n\r\nProperty | Type | Optional | Description\r\n-------- | ---- |:--------:| -----------\r\nprotocol | String | x | URI scheme, for example `http`.\r\nhost | String |  | Hostname / domain - valid hostname, or domain defined with a star (\\*), for example `some.concrete.hostname`, or `*.example.domain`.\r\nport | String / Number | x | Port string or number containing a valid port.\r\n\r\nExample:\r\n```json\r\n[\r\n  {\r\n    \"protocol\": \"http\",\r\n    \"host\": \"*.example.domain\",\r\n    \"port\": 12345\r\n  },\r\n  {\r\n    \"host\": \"some.concrete.hostname\",\r\n  }\r\n]\r\n```\r\n\r\nMatching is done against provided properties. For example if only host is provided then the service will return `framing: true` for all and matching will be for all schemas and protocols.\r\n\r\n### Return value\r\n\r\nThe service accepts only `GET` requests and the response is a JSON object.\r\nThe allowlist service call uses the parent origin as URI parameter (URL encoded) as follows:\r\n\r\n```\r\nGET url/to/whitelist/service?parentOrigin=https://parent.domain.com\r\n```\r\n\r\nThe response is a JSON object with following properties:\r\n\r\n```\r\n{\r\n    \"version\" : \"1.0\",\r\n    \"active\"  : true | false,                   // indicates whether framing control is switched on\r\n    \"origin\"  : \"<same as passed to service>\",\r\n    \"framing\" : true | false                    // if active, describes if framing should be allowed\r\n}\r\n```\r\n\r\nThe property `active` will have value `false` only in case `CJ_PROTECT_WHITELIST` is not provided.\r\n\r\n**Note**: Keep in mind that the application router sends by default the X-Frame-Options header with value `SAMEORIGIN`, in the case the allowlist service is enabled, this header value probably needs to be changed, see the [X-Frame-Options](#x-frame-options-configuration) header section for details how to change it.\r\n\r\n## User API Service\r\nThe application router exposes a user API that returns the details of the user who is logged in. This API supports two endpoints: `/currentUser` and `/attributes`.\r\nThe /currentUser endpoint returns all details of logged in users, while the /attributes endpoint returns the main user properties.\r\nThe user API can be implemented by modelling an xs-app.json route using service sap-approuter-userapi.\r\n\r\nNote: The following applies if the route has the authentication type “xsuaa”:\r\n*\tUser scopes from the xsuaa access token will be added to the response of both endpoints.\r\n*\tUser attributes from the identity provider (IdP) chosen for the authentication will be added to the response of the “/attributes” endpoint. If a custom IdP is configured for Identity Authentication Service (IAS), the custom user attributes are also added to the response of the “/attributes” endpoint. For more information about the definition of custom properties in IAS, see [Configure the Default Attributes Sent to the Application](https://help.sap.com/docs/IDENTITY_AUTHENTICATION/6d6d63354d1242d185ab4830fc04feb1/a2f1e4692e7d4379ab82144ab309e7b3.html) on the SAP Help Portal.\r\n\r\nExamples:\r\n\r\nHandle both endpoints\r\n```\r\n{\r\n    \"source\": \"^/user-api(.*)\",\r\n    \"target\": \"$1\",\r\n    \"service\": \"sap-approuter-userapi\"\r\n},\r\n```\r\n\r\nHandle `/currentUser` endpoint only\r\n```\r\n{\r\n    \"source\": \"^/user-api/currentUser$\",\r\n    \"target\": \"/currentUser\",\r\n    \"service\": \"sap-approuter-userapi\"\r\n},\r\n```\r\nThe /currentUser endpoint response has the following format:\r\n```\r\n{\r\n   \"firstname\": \"John\",\r\n   \"lastname\": \"Doe\",\r\n   \"email\": \"john.doe@sap.com\",\r\n   \"name\": \"john.doe@sap.com\",\r\n   \"displayName\": \"John Doe (john.doe@sap.com)\",\r\n   \"scopes\": \"openid,user_attributes,uaa.user\" (See the note above about routes with authentication type “xsuaa”.)\r\n}\r\n```\r\nThe /attributes endpoint response has the following format:\r\n```\r\n{\r\n   \"firstname\": \"John\",\r\n   \"lastname\": \"Doe\",\r\n   \"email\": \"john.doe@sap.com\",\r\n   \"name\": \"john.doe@sap.com\",\r\n   \"scopes\": \"openid,user_attributes,uaa.user\", (See the note above about routes with authentication type “xsuaa”.)\r\n   <user attributes, including custom attributes> (See the note above about routes with authentication type “xsuaa”.)\r\n}\r\n```\r\nNote that the \"name\" property is the user ID in the identity provider, which in many cases is also the email address.\r\n## Scaling\r\n\r\nThe application router keeps all established sessions in local memory and does not sync them across multiple instances.\r\nIn order to scale the application router to multiple instances, session stickiness should be enabled.\r\nThis means that each HTTP session is handled by the same application router instance.\r\n\r\nIn Cloud Foundry's router, session stickiness is enabled from version 0.1.0.\r\n\r\nIn SAP HANA XS Advanced OnPremise Runtime session stickiness is enabled, if SAP Web Dispatcher is used as a router.\r\nThis is set by default from version 0.1535 of SAP HANA XS Advanced runtime.\r\nIf your on-premise runtime uses *nginx* as router, you can switch to SAP Web Dispatcher by passing the command line option `--router=webdispatcher` to `xs-controller`.\r\n\r\n## Sizing Guide for Application Router\r\n\r\nThe memory consumption of the application router is described in the [sizing guide](doc/sizingGuide.md).\r\n\r\n## Configure server-side HTTPS\r\n\r\nYou can configure application router to accept only HTTPS connections. See `httpsOptions` option of [start](doc/extending.md#startoptions-callback) function.\r\n\r\n## Audit-Log Service\r\n\r\nThe application router logs information regarding unauthorized requests. To avoid exposure of private information such as user id and IP address,  you must bind the consuming application to an instance of the audit-log service.\r\n\r\nIf you do not bind the consuming application to the audit-log service, the application router will log this information to the console output, using asterisks to mask the user id and IP address. (This is the default behavior.)\r\n\r\n\r\n## Troubleshooting\r\n\r\nThe application router uses _@sap/logging_ package so all of its features are available to control logging.\r\nFor example to set all logging and tracing to finest level set `XS_APP_LOG_LEVEL` environment variable to `debug`.\r\n\r\nIf the application is deployed on Cloud Foundry, you can change the log level by running command:\r\n```sh\r\ncf set-env <application-name> XS_APP_LOG_LEVEL debug\r\n```\r\n\r\nIf the application is deployed on XS Advanced On-premise Runtime, you can change the log level without restarting the application.\r\nFor example this command will set all logging and tracing to finest level.\r\n```sh\r\nxs set-logging-level <application-name> \"*\" debug\r\n```\r\nSee _@sap/logging_ documentation for details.\r\n\r\nYou can enable additional traces of the incoming and outgoing requests by setting the environment variable `REQUEST_TRACE` to `true`.\r\nWhen enabled they will log basic information for every incoming and outgoing request of the application router. This could have a performance impact.\r\n\r\nSome of the libraries used by this package employ other tracing mechanisms. For example many use the popular [debug](https://www.npmjs.com/package/debug) package. This means that by setting `DEBUG` environment variable, you can enable additional traces. Set it to `*` to enable all of them, but be careful as the output may be overwhelming.\r\nIn addition internal Node.js traces can be enabled via `NODE_DEBUG` environment variable. [This post](http://www.juliengilli.com/2013/05/26/Using-Node.js-NODE_DEBUG-for-fun-and-profit/) describes it in more detail.\r\n\r\n\r\n**Warning:** Enabling some of these options may trace security sensitive data, so use with caution.\r\n\r\nThe _@sap/logging_ package sets the header 'x-request-id' in the application router's responses.\r\nThis is useful if you would like to search entries belonging to a particular request execution in the application router's logs and traces.\r\nNote that the application router does not change the headers received from the backend and being forwarded to the client.\r\nIf the backend is a Node.js application which uses the _@sap/logging_ package (and also sets the 'x-request-id' header), then the value of the header\r\nthat the client will receive will be the one coming from the backend and not the one of the application router itself.\r\n\r\n## Getting Support\r\nCreate a BCP ticket on component `BC-XS-APR`\r\n\r\n## Extending Application Router\r\nSee [extending](doc/extending.md) for information how to extend the application router\r\nwith custom logic.\r\n\r\n## Best practices\r\n\r\n### Security best practices\r\n\r\n#### Content-Security-Policy\r\nSetting the `Content-Security-Policy` header - this is a response header which informs browsers (capable of interpreting it) about the trusted sources\r\nfrom which an application expects to load resources. This mechanism allows the client to detect and block malicious scripts injected into an application.\r\nA value can be set via the `httpHeaders` environment variable in the [additional headers configuration](#additional-headers-configuration).\r\nThe value represents a security policy which contains directive-value pairs. The value of a directive is an allowlist of trusted sources.\r\nIn case content-security-policy headers are returned from backend, they will override `httpHeaders` configuration. \r\nTo enable returning both (backend and local content-security-policy headers), configure environment variable `MERGE_CSP_HEADERS`.\r\n\r\nRefer to the `Content-Security-Policy` specification for more information on the header's value.\r\n\r\n**Note:** Usage of the `Content-Security-Policy` header is considered second line of defense. An application should always provide proper input validation and output encoding.\r\n\r\n### Identity Provider Configuration Best Practices\r\n\r\n#### Modelling options:\r\n\r\n1. If you to enable login in same browser window as doctor and patient you can create 2 cf routes to same approuter:\r\n```https://approuter-doctors.cfapps.hana.com/myapp/doctors/index.html```\r\n```json\r\n{\r\n  \"source\": \"^/doctors(/.*)\",\r\n  \"target\": \"$1\",\r\n  \"service\": \"html5-apps-repo-rt\",\r\n  \"authenticationType\": \"xsuaa\",\r\n  \"identityProvider\": \"doctorsIDP\"\r\n}\r\n```\r\n\r\n```https://approuter-patients.cfapps.hana.com/myapp/patients/index.html```\r\n```json\r\n{\r\n  \"source\": \"^/patients(/.*)\",\r\n  \"target\": \"$1\",\r\n  \"service\": \"html5-apps-repo-rt\",\r\n  \"authenticationType\": \"xsuaa\",\r\n  \"identityProvider\": \"patrientsIDP\"\r\n}\r\n```\r\n\r\n2. If you to enable single access at a time (force logout from doctors idp and re-login to patients idp), create a single cf route\r\n```https://approuter-hospital.cfapps.hana.com/myapp/doctors/index.html```\r\n```json\r\n{\r\n  \"source\": \"^/doctors(/.*)\",\r\n  \"target\": \"$1\",\r\n  \"service\": \"html5-apps-repo-rt\",\r\n  \"authenticationType\": \"xsuaa\",\r\n  \"identityProvider\": \"doctorsIDP\"\r\n}\r\n```\r\n \r\n```https://approuter-hospital.cfapps.hana.com/myapp/patients/index.html```\r\n```json\r\n{\r\n  \"source\": \"^/patients(/.*)\",\r\n  \"target\": \"$1\",\r\n  \"service\": \"html5-apps-repo-rt\",\r\n  \"authenticationType\": \"xsuaa\",\r\n  \"identityProvider\": \"patrientsIDP\"\r\n}\r\n```\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 11.2.1 - 2022-06-15\r\n\r\n### Fixed\r\n- When user-api/attributes fails to get user attributes, it returns the basic user details\r\n\r\n## 11.2.0 - 2022-06-14\r\n\r\n### Added\r\n- Expose the Redis retry strategy as an application router configuration.\r\n\r\n### Fixed\r\n- Support compressing multipart/mixed content type when compressResponseMixedTypeContent is configured in xs-app.json\r\n- Avoid token exchange in case of expired login token\r\n- Correct a null pointer exception issue in user-api-middleware\r\n\r\n## 11.1.0 - 2022-06-06\r\n\r\n### Added\r\n- Enhance user-api: both endpoints with user scopes, \"attributes\" endpoint with user attributes (including custom attributes)\r\n- Support TrustAll for Private-link proxy type\r\n\r\n### Fixed\r\n- SAML Assertion via Cloud Connector issue\r\n- ARBE cookie: null while working with multiple backends.\r\n\r\n## 11.0.1 - 2022-05-15\r\n\r\n### Fixed\r\n- ARBE cookie size issue\r\n\r\n## 11.0.0 - 2022-05-09\r\n\r\n### Added\r\n- Support node version 14 and node version 16 instead of node version 12 and node version 14\r\n\r\n### Updated dependencies\r\n- async removed\r\n\r\n## 10.15.4 - 2022-05-08\r\n\r\n### Fixed\r\n- Instance level destination handling\r\n- Error handling when calling svc2Approuter middleware\r\n\r\n### Updated dependencies\r\n- deps: @sap/xssec@3.2.13\r\n- Caret (^) added to: @sap/audit-logging,@sap/e2e-trace,@sap/logging,@sap/xssec,async,node-forge,urijs\r\n\r\n\r\n## 10.15.3 - 2022-04-26\r\n\r\n### Fixed\r\n- Request contains an invalid x-csrf-token\r\n\r\n## 10.15.2 - 2022-04-24\r\n\r\n### Fixed\r\n- Improve readme documentation\r\n- Token xsrf undefined, when approuter bound to external session storage \r\n\r\n### Updated dependencies\r\n- deps: @sap/logging@6.1.1\r\n- deps: async@3.2.3\r\n\r\n## 10.15.1 - 2022-04-07\r\n\r\n### Updated dependencies\r\n- should-send-same-site-none removed\r\n- request.js removed\r\n- moment removed\r\n- deps: urijs@1.19.11\r\n- deps: @sap/logging@6.1.0\r\n\r\n## 10.15.0 -  2022-04-03\r\n\r\n### Added\r\n- External session management support in service2approuter flow\r\n- Return auditLog, if has multi-tenant plan oauth2, as a dependency during subscription creation\r\n- Write auditLog error message into subscription tenant, when approuter runs in multi-tenant mode\r\n- Private-link proxy type support\r\n- Error stack in error-handler\r\n\r\n### Updated dependencies\r\n- deps: body-parser@1.2.0\r\n\r\n### Fixed\r\n- Type error in case of missing app.services\r\n\r\n## 10.14.2 -  2022-03-23\r\n\r\n### Updated dependencies\r\n- deps: node-forge@1.3.0\r\n\r\n## 10.14.1 -  2022-03-23\r\n\r\n### Fixed\r\n- Cookie addition in decrypt cookies and check in merge cookies\r\n- Improve destination service resilience in SaaS Approuter\r\n\r\n## 10.14.0 - 2022-03-15\r\n\r\n### Added\r\n- Auto-Pipeline for ioredis support\r\n\r\n### Fixed\r\n- web sockets fixed status code\r\n- IAS logout page redirect\r\n- convert environment variable EXTERNAL_REVERSE_PROXY to boolean type\r\n\r\n### Updated dependencies\r\n- bluebird removed\r\n\r\n## 10.13.2 - 2022-03-08\r\n\r\n### Fixed\r\n- Change log level to info for missing host destination\r\n- Null object error for user property\r\n\r\n### Updated dependencies\r\n- deps: urijs@1.19.10\r\n- deps: @sap/audit-logging@5.5.1\r\n- deps: @sap/xsenv@3.2.1\r\n\r\n## 10.13.1 - 2022-03-01\r\n\r\n### Fixed\r\n- Add check for correlationId header existence in getCorrelationId\r\n\r\n## 10.13.0 - 2022-02-27\r\n\r\n### Added \r\n- Support multiple zoneIds in same IAS tenant\r\n\r\n### Fixed\r\n- Avoid reading uaa property from a null object\r\n- Improve error handling in exchange token\r\n\r\n### Updated dependencies\r\n- deps: urijs@1.19.8\r\n- deps: axios@0.26.0\r\n\r\n## 10.12.0 - 2022-01-30\r\n\r\n### Added \r\n- Replace 'request' module by 'axios'\r\n- Support query params in user-api\r\n\r\n### Updated dependencies\r\n- deps: tough-cookie@4.0.0\r\n\r\n## 10.11.3 - 2022-01-25\r\n\r\n### Updated dependencies\r\n- deps: @sap/audit-logging@5.4.1\r\n- deps: @sap/xssec@3.2.12\r\n\r\n## 10.11.2 - 2022-01-13\r\n\r\n### Updated dependencies\r\n- deps: scmp@1.0.0\r\n\r\n## 10.11.1 - 2022-01-12\r\n\r\n### Updated dependencies\r\n- deps: node-forge@1.2.1\r\n\r\n## 10.11.0 - 2022-01-11\r\n\r\n### Added\r\n- POST method support for logout flows\r\n- New env. variable to skip loading client_credentials tokens on approuter start\r\n- Adding minimumTokenValidity from env variable\r\n\r\n### Fixed\r\n- Get uaadomain from subscription manager in case XSUAA is not bound\r\n- Logs reduction -remove stackTrace on error log level\r\n- Websocket try to get status code from message string when statusCode property undefined\r\n- isDynamicRouting read defaultEnv.json file only in development environment\r\n- accessToken references\r\n\r\n### Updated dependencies\r\n- deps: node-forge@1.2.0\r\n\r\n## 10.10.4 - 2021-12-16\r\n\r\n### Fixed\r\n- SameSite cookie property concatenation   \r\n\r\n## 10.10.3 - 2021-12-13\r\n\r\n### Fixed\r\n- Handle bad cookie decryption error\r\n- Fix missing session when token validity too short\r\n- Set client_credentials token by tenant timeout to 5000 ms\r\n- setXForwardedFor remove headers correction\r\n\r\n### Added\r\n- Adding serverKeepAlive from env variable to routerConfig\r\n\r\n### Updated dependencies\r\n- deps: @sap/audit-logging@5.3.0\r\n- deps: debug@4.3.2 \r\n- deps: uuid@8.3.2\r\n- deps: scmp@2.1.0\r\n\r\n## 10.10.2 - 2021-12-02\r\n\r\n### Fixed\r\n- Adding expiration date on login-callback-provider check \r\n- Increase client_credentials token request timeout to 5000 ms\r\n- Protect accessToken references\r\n\r\n### Updated dependencies\r\n- deps: compressible@2.0.18\r\n- deps: sap/xssec@3.2.11\r\n\r\n## 10.10.1 - 2021-11-21\r\n\r\n### Fixed\r\n- Avoid sending certificates if not authentication type is client certificate or trusted certificate\r\n\r\n## 10.10.0 - 2021-11-18\r\n\r\n### Added\r\n- Propagate correlationId to xssec and UAA requests\r\n- Support compression of response content with multipart/mixed content type\r\n\r\n### Fixed\r\n- Subscriber destination consumption in public flows\r\n- Samesite attribute in callback login response header\r\n- Support destination trust certificate propagation (format pem)\r\n\r\n### Updated dependencies\r\n- deps: sap/xssec@3.2.10\r\n\r\n## 10.9.2 - 2021-11-09\r\n\r\n### Fixed\r\n- Backend invalid cookies handling\r\n- Add checking for missing xsappConfig file along with xs-app.json on configuration load\r\n\r\n\r\n### Updated dependencies\r\n- deps: cf-nodejs-logging-support@6.11.0\r\n- deps: validator@13.7.0\r\n\r\n## 10.9.1 - 2021-10-28\r\n\r\n### Fixed\r\n- Missing HTML5 repo token in cache failure \r\n\r\n## 10.9.0 - 2021-10-24\r\n\r\n### Added\r\n- Additional cookie logs\r\n- Support client certificate authentication (format p12)\r\n- Change log level to info for backend logs \r\n- IAS token support in service to approuter flow\r\n\r\n### Updated dependencies\r\n- deps: sap/xssec@3.2.8\r\n\r\n## 10.8.2 - 2021-10-11\r\n\r\n### Fixed\r\n- Remove clientsecret validation for mtls\r\n\r\n## 10.8.1 - 2021-10-07\r\n\r\n### Added\r\n- New audit log SDK support\r\n- Kyma Redis credentials documentation\r\n\r\n### Fixed\r\n- Redis credentials handling in Kyma\r\n- X509 client secret validation in uua schema \r\n\r\n### Updated dependencies\r\n- deps: http-proxy-agent@4.0.1\r\n- deps: https-proxy-agent@5.0.0\r\n- deps: @sap/audit-logging@5.1.0\r\n\r\n## 10.8.0 - 2021-09-13\r\n\r\n### Added\r\n- Propagate destination headers in approuter\r\n\r\n### Fixed\r\n- Sessions expiration in Redis\r\n- Connections to Redis on Azure with premium plan\r\n- Same site support for Lax value\r\n- Request url with code parameter will be directed to authentication, in case it is required\r\n- Session handling documentation\r\n- When application name does not adhere to regex, the request will be directed to main routing configuration file\r\n \r\n## 10.7.1 - 2021-08-30\r\n\r\n### Added\r\n- Skip xs-app.json cache support\r\n- Login with XSUAA certificates \r\n- Mutual Transport Layer Security (mTLS) handling\r\n- Single use token support\r\n\r\n## 10.6.1 - 2021-08-03\r\n\r\n### Fixed\r\n- Subscription callback requests will be directed to main routing configuration file \r\n- App. config response headers modify additional headers value\r\n\r\n## 10.6.0 - 2021-07-28\r\n\r\n### Added\r\n- HTML5 Application Repository Tenant Awareness support\r\n\r\n### Fixed\r\n- nullifying the Redis client when there's a connection issue with Redis\r\n- Clear interval when  calling approuter.close()\r\n\r\n## 10.5.1 - 2021-07-25\r\n\r\n### Fixed\r\n- Return error immediately when reaches login callback middleware via query parameters\r\n\r\n### Updated dependencies\r\n- deps: urijs@1.19.7\r\n\r\n## 10.5.0 - 2021-07-14\r\n\r\n### Added\r\n- Support of the configuration of the minimal logging level for the cf-nodejs-logging-support library\r\n\r\n### Fixed\r\n- Return an error code when calling login callback directly\r\n- Fix for request traces that crash the application router \r\n\r\n## 10.4.3 - 2021-07-05\r\n\r\n### Fixed\r\n- Display log with tenant ID, also when using direct routing URIs\r\n- Support of session management with redis with multiple nodes plans\r\n\r\n## 10.4.2 - 2021-06-13\r\n\r\n### Fixed\r\n- Correcting additional bug when Websocket Proxy is crashing if excluding a route by DIRECT_ROUTING_URI_PATTERN\r\n\r\n## 10.4.1 - 2021-06-09\r\n\r\n### Fixed\r\n- Changing \"favico.ico\" to \"favicon.ico\" as a predefined direct routing URI\r\n- Parsing client certificate for non-CF SMS subscription\r\n- Improving logs in path-rewriter, request-handler, service-to-approuter-middleware, oauth2-strategy\r\n- Adding cache-Control header ('no-cache, no-store') to the User API response\r\n- Correcting a bug when Websocket Proxy is crashing if excluding a route by DIRECT_ROUTING_URI_PATTERN\r\n\r\n### Updated dependencies\r\n- deps: ws@7.4.6\r\n\r\n## 10.4.0 - 2021-05-24\r\n\r\n### Added\r\n- External session management support\r\n\r\n### Fixed\r\n- Client certificate handling for non-CF SMS subscription\r\n- Expose License\r\n\r\n## 10.3.0 - 2021-05-11\r\n\r\n### Added\r\n- CLIENT_CERTIFICATE_HEADER_NAME configuration for non CF flows\r\n- Support of SAP statistics for reporting the request performance\r\n- AfterRequestHandler and backendTimeout extension support\r\n\r\n### Fixed\r\n- Lazy html5-repo client-credentials token creation in case it could not be created during startup\r\n- Added \"login\" as a pre-configured direct URI route to prevent unnecessary calls to the HTML5 Application Repository\r\n\r\n### Updated dependencies\r\n- deps: cf-nodejs-logging-support@6.7.0\r\n\r\n## 10.2.0 - 2021-04-11\r\n\r\n### Added\r\n- Support of routing directly to the routing configuration file (xs-app.json) of the application router using the DIRECT_ROUTING_URI_PATTERNS environment variable \r\n- Caching support for destinations from destination service\r\n\r\n### Fixed\r\n- Verify cookie when IAS and XSUAA bound\r\n- Websockest pong callback handling\r\n- Empty getDependencies configuration handling in SaaS Registry subscription\r\n- Handle SMS apiURLs in K8S\r\n- Encode redirect logout url parameters in case of xsuaa authentication\r\n\r\n## 10.1.0 - 2021-03-21\r\n\r\n### Added\r\n- If you are using Identity Authentication (IAS), you can now use subdomains in multitenant URLs\r\n- Identity Authentication (IAS) is fully supported (no longer a Beta feature)\r\n\r\n### Fixed\r\n- Destination token exchange when using destinations on instance level\r\n\r\n## 10.0.0 - 2021-03-10\r\n\r\n### Added\r\n- Support node version 12 and node version 14 instead of node version 10 and node version 12\r\n\r\n## 9.4.0 - 2021-03-09\r\n\r\n### Added\r\n- Support the consumption of destinations from the provider subaccount via the preferLocal property\r\n- Support of cross-origin resource sharing via the application router configuration file (xs-app.json)\r\n\r\n### Fixed\r\n- logout flow while using system plan XSUAA instance\r\n- missing scope in XSUAA token after refresh\r\n\r\n### Updated dependencies\r\n- deps: lodash@4.17.21\r\n- deps: @sap/audit-logging@4.2.0\r\n- deps: @sap/logging@6.0.3\r\n\r\n## 9.3.0 - 2021-02-24\r\n\r\n### Fixed\r\n- user-api consumption from local approuter\r\n- avoid endless loop when calling approuter with /login/callback\r\n\r\n### Added\r\n- Service to approuter is not beta anymore, README file changed\r\n\r\n### Updated dependencies\r\n- deps: urijs@1.19.6\r\n\r\n## 9.2.0 - 2021-02-14\r\n\r\n### Added\r\n- Support of custom response headers via the application router configuration file (xs-app.json)\r\n\r\n### Fixed\r\n- Verify application key without query parameters\r\n\r\n### Updated dependencies\r\n- deps: e2e-trace@3.0.0\r\n- deps: xsenv@3.1.0\r\n\r\n## 9.1.0 - 2021-01-21\r\n\r\n### Added\r\n- User API\r\n\r\n### Fixed\r\n- Connectivity authentication issue in IAS flow\r\n- Initialize server keepAliveTimeout to zero\r\n\r\n### Updated dependencies\r\n-  deps: @sap/audit-logging@3.2.0\r\n\r\n## 9.0.2 - 2021-01-14\r\n\r\n### Fixed\r\n- Options handling for extensibility case when html5 repo is bound\r\n- Logout request handling when approuter session times out\r\n- Use \"http_header\" section of authTokens from the Destination Service response\r\n\r\n### Updated dependencies\r\n- deps: urijs@1.19.5\r\n\r\n## 9.0.1 - 2020-12-20\r\n\r\n### Fixed\r\n- Subprotocol handling in websockets flows\r\n\r\n### Updated dependencies\r\n- deps: validator@13.5.2\r\n- deps: @sap/logging@6.0.2\r\n\r\n## 9.0.0 - 2020-12-06\r\n\r\n### Added\r\n- IAS authentication support\r\n- Forward IAS token to destination\r\n- IAS authentication with  XSUAA authorization\r\n- Subscription manager (SMS) support\r\n\r\n### Updated dependencies\r\n- deps: base64-url@2.3.3\r\n\r\n## 8.6.1 - 2020-11-25\r\n\r\n### Fixed\r\n- Wrong application URL protocol returned by onSubscription callback additional fix\r\n\r\n## 8.6.0 - 2020-11-19\r\n\r\n### Fixed\r\n- Wrong application URL protocol returned by onSubscription callback\r\n\r\n## 8.5.5 - 2020-10-21\r\n\r\n### Fixed\r\n- Destination middleware improvement\r\n\r\n## 8.5.4 - 2020-10-14\r\n\r\n### Fixed\r\n- Fix invalid backend response handling\r\n\r\n## 8.5.3 - 2020-10-06\r\n\r\n### Fixed\r\n- Do not forward SAP-Connectivity-Authentication header in onPremise flows if destination authentication type is NoAuthentication\r\n\r\n## 8.5.2 - 2020-09-21\r\n\r\n### Fixed\r\n- Handle SameSite:None value in client side cookies (signature, locationAfterLogin and fragmentAfterLogin)\r\n\r\n## 8.5.1 - 2020-08-25\r\n\r\n### Updated dependencies\r\n- deps: lodash@4.17.20\r\n- deps: sap/logging@5.3.1\r\n- deps: cf-nodejs-logging-support@6.4.3\r\n\r\n### Fixed\r\n- Avoid crash if user provided service without credentials\r\n- Don't forward auth token to connectivity in service2approuter flow if destination.forwardToken = false\r\n\r\n## 8.5.0 - 2020-08-10\r\n\r\n### Updated dependencies\r\n- deps: @sap/audit-logging@3.1.1\r\n- deps: request@2.88.2\r\n- deps: @sap/xssec@3.0.9\r\n- deps: lodash@4.17.19\r\n- deps: ws@7.3.1\r\n\r\n### Fixed\r\n- Pass tenant id in service to approuter audit log message\r\n\r\n## 8.4.1 - 2020-08-02\r\n\r\n### Fixed\r\n- Fix token exchange for Business Service access\r\n\r\n## 8.4.0 - 2020-08-02\r\n\r\n### Added\r\n- Support merge of approuter and backend content-security-policy headers\r\n- Support cookie merge in service2Approuter flow\r\n\r\n### Fixed\r\n- Handle undefined user in refresh token flow\r\n\r\n## 8.3.1 - 2020-07-26\r\n\r\n### Fixed\r\n- Upgrade xssec version to 3.0.7 - fix big tokens exchange error\r\n\r\n## 8.3.0 - 2020-07-23\r\n\r\n### Fixed\r\n- Fix missing subdomain in exchange token\r\n\r\n## 8.2.2 - 2020-07-15\r\n\r\n### Fixed\r\n- Adapt to changes in @sap/xssec-3.0.6 - replace secContext private subdomain property by getSubdomain method\r\n- Fix websocket pong behavior when status is not open\r\n\r\n## 8.2.1 - 2020-07-09\r\n\r\n### Fixed\r\n- SAP Passport header handling fixed in service 2 approuter flow\r\n\r\n## 8.2.0 - 2020-07-02\r\n\r\n### Fixed\r\n- Passport handling fix in service 2 approuter flow – increment counter\r\n\r\n### Updated dependencies\r\n- deps: sap/xssec@3.0.6\r\n\r\n## 8.1.1 - 2020-06-24\r\n\r\n### Announcement\r\n- The Preserve URL fragment (PRESERVE_FRAGMENT) will not be deprecated as previously announced.\r\n\r\n### Fixed\r\n- Bug correction in forwardAuthToken in business service flow\r\n\r\n## 8.1.0 - 2020-06-14\r\n\r\n### Added\r\n- Added fallback mechanism for html5 repo client_credentials token refresh\r\n- Security improvement for signature verifying during login\r\n\r\n### Fixed\r\n- Bug fix when calling connectivity in a non-authenticated flow (no login in approuter)\r\n\r\n## 8.0.0 - 2020-05-26\r\n\r\n### Updated dependencies\r\n - deps: @sap/xssec@3.0.3\r\n\r\n### Removed\r\n- Remove of SAP_JWT_TRUST_ACL environment variable support (functionality now comes with audience validation)\r\n\r\n## 7.1.3 - 2020-05-17\r\n\r\n### Added\r\n- Enhances of the x-approuter-authorization token security check in the service2Approuter flow.\r\n\r\n## 7.1.2 - 2020-05-08\r\n\r\n### Fixed\r\n- Fix appurl usage of x-subscriber-tenant\r\n\r\n## 7.1.1 - 2020-05-05\r\n\r\n### Added\r\n- Cache improvements\r\n- Usage of x-subscriber-tenant header when provided.\r\n- handle html5 repo and xsuaa destinations separately\r\n\r\n### Fixed\r\n- Fix connectivity token handling for Kubernetes\r\n\r\n## 7.1.0 - 2020-04-16\r\n\r\n### Added\r\n- Enable service logout configuration in central xs-app.json.\r\n### Fixed\r\n- Destination token cached in session is never refreshed.\r\n\r\n## 7.0.0 - 2020-04-06\r\n\r\n### Added\r\n- Support node version 10 and node version 12 instead of node version 8 and node version 10\r\n\r\n## 6.8.2 - 2020-03-04\r\n\r\n### Fixed\r\n- Fix extension of resolveUaaConfig\r\n\r\n## 6.8.1 - 2020-02-20\r\n\r\n### Fixed\r\n- Fix default route\r\n\r\n## 6.8.0 - 2020-02-10\r\n\r\n### Added\r\n- Enable external session manager extensibility when using HTML5 Repository\r\n\r\n## 6.7.2 - 2020-01-30\r\n\r\n### Added\r\n- Support SameSite cookie attribute\r\n\r\n### Updated dependencies\r\n - deps: express-session@1.17.0\r\n - deps: @sap/logging@5.2.0\r\n\r\n## 6.7.1 - 2019-12-24\r\n\r\n### Added\r\n- Backend cookies secret variable (BACKEND_COOKIES_SECRET) Secret that is used to encrypt backend session cookies in service to Application Router flow. Should be set in case multiple instances of Application Router are used. By default a random sequence of characters is used.\r\n\r\n\r\n## 6.7.0 - 2019-11-24\r\n\r\n### Added\r\n- Enhance the use of the xsenv@2.1.0 library to access bound destination service credentials, which support reading destination service credentials in Kubernetes.\r\n\r\n### Fixed\r\n- Anonymous login on destination flow\r\n\r\n## 6.6.0 - 2019-11-12\r\n\r\n### Announcement\r\n- The Preserve URL fragment (PRESERVE_FRAGMENT) is being deprecated and will be removed in the near future\r\n\r\n### Updated dependencies\r\n- deps: sap/xsenv@2.1.0 Application Router uses xsenv library to access bound services credentials. We have upgraded the library to xsenv version 2.1.0 which supports reading credentials in Kubernetes.\r\n- deps: https-proxy-agent@2.2.4\r\n## 6.5.1 - 2019-10-10\r\n\r\n### Fixed\r\n- Adding sec-websocket-protocol header as the protocol of websockets\r\n\r\n## 6.5.0 - 2019-10-03\r\n\r\n### Added\r\n- Timeout for Business Service\r\n\r\n### Fixed\r\n- Adding destination token middleware for websockets\r\n\r\n## 6.4.1 - 2019-09-23\r\n\r\n### Fixed\r\n- CSP header fix return frame-ancestors in login\r\n\r\n## 6.4.0 - 2019-09-16\r\n\r\n### Added\r\n- Allowed dynamic destinations \r\n- Return CSP header with no cache\r\n- Added setXForwardedHeaders option\r\n\r\n## 6.3.0 - 2019-09-10\r\n\r\n### Added\r\n- Support Cache-Control for static content from html5-repo\r\n\r\n## 6.2.0 - 2019-09-03\r\n\r\n### Added\r\n- Support Subscription url from vcap.\r\n- Adding validation - Session created for one tenant must not be used by other tenants\r\n\r\n### Updated dependencies\r\n - deps: @sap/xssec@2.2.2\r\n\r\n## 6.1.2 - 2019-08-28\r\n- Support Xsuaa credentials in request body\r\n\r\n## 6.1.1 - 2019-08-27\r\n- Fix in destination middleware - session.update\r\n \r\n## 6.1.0 - 2019-07-31\r\n\r\n### Added\r\n- Support for redirection to logout page with query parameters after central logout\r\n- Connectivity is now returned in subscription getDependencies callback\r\n\r\n### Fixed\r\n- Error when processing unknown authentication types\r\n\r\n## 6.0.2 - 2019-07-14\r\n\r\n### Fixed\r\n- Validation of destination with OnPremise proxyType\r\n- CSRF protection in Service to Approuter flow\r\n### Updated dependencies\r\n- deps: lodash@4.17.13\r\n\r\n## 6.0.1 - 2019-05-30\r\n\r\n### Fixed\r\n- Fixed TypeError bug when Approuter saves a cookie from backend and should logout when session timeout exceeded. \r\n- Fixed calculation of location after login.\r\n\r\n## 6.0.0 - 2019-05-06\r\n\r\n### Added\r\n- Support node version 8 and node version 10 instead of node version 4.5 and node version 6\r\n\r\n## 5.15.0 - 2019-04-29\r\n\r\n### Added\r\n- Support for Service to Application Router functionality (Beta version).\r\n- Added destination in host support.\r\n\r\n## 5.14.1 - 2019-04-17\r\n\r\n### Added\r\n- Enhanced Approuter application logs when serving of static content (from HTML5 App Repo) was failed.\r\n\r\n### Fixed\r\n- Fixed subscription callbacks url.\r\n\r\n## 5.14.0 - 2019-04-04\r\n\r\n### Added\r\n- Websockets support for HTML5 Application Repository.\r\n\r\n### Fixed\r\n- onSubscription callback.\r\n\r\n## 5.13.1 - 2019-03-27\r\n\r\n### Added\r\n- Added automatic recovery of Approuter after recovery of UAA.\r\n\r\n### Fixed\r\n- Fixed subscription callbacks url.\r\n- Fixed avoid central appConfig routes overrides.\r\n\r\n### Updated dependencies\r\n - deps: @sap/xssec@2.1.16\r\n\r\n## 5.13.0 - 2019-02-14\r\n\r\n### Added\r\n- Ability to define identity provider for authentication in the route.\r\n\r\n## 5.12.0 - 2019-02-05\r\n\r\n### Added\r\n- Dynamic destination support.\r\n\r\n## 5.11.0 - 2019-01-22\r\n\r\n### Added\r\n- Client credentials token support.\r\n\r\n## 5.10.2 - 2019-01-08\r\n\r\n### Fixed\r\n- Fix proxy issue in Connectivity flow.\r\n\r\n## 5.10.1 - 2019-01-03\r\n\r\n### Fixed\r\n- Fixed flow of access destination via desination service.\r\n\r\n## 5.10.0 - 2018-12-30\r\n\r\n### Added\r\n- Propagation of approuter host during logout.\r\n\r\n## 5.9.0 - 2018-12-18\r\n\r\n### Added\r\n- Ability to change destination without restarting application on CF\r\n- Access destination that is exposed on destination service instance level.\r\n- Enabled all authentication types defined in the destination service.\r\n\r\n## 5.8.0 - 2018-10-27\r\n\r\n### Fixed\r\n- Fix login flow for URLs with empty query (URL that ends with '?').\r\n\r\n### Added\r\n- Documentation of integration with HTML5 Apps Repo.\r\n\r\n### Updated dependencies\r\n - deps: ws@1.1.5\r\n - deps: lodash@4.17.11\r\n - deps: @sap/logging@4.0.2\r\n    - deps: lodash@4.17.11\r\n\r\n## 5.7.0 - 2018-10-08\r\n\r\n### Added\r\n - Propagate client id to UAA during Logout\r\n \r\n## 5.6.4 - 2018-08-27\r\n\r\n### Updated dependencies\r\n- deps: @sap/audit-logging@2.2.4\r\n- deps: sync-request@5.0.0\r\n     \r\n### Fixed\r\n- Duplicate destination names in xs-app.json bug\r\n\r\n## 5.6.3 - 2018-08-15\r\n\r\n### Updated dependencies\r\n - deps: e2e-trace@1.3.0\r\n - deps: xssec@2.1.15\r\n    - deps: request@2.88.0\r\n\r\n### Fixed\r\n - Fix bug of post/put requests with content/type=application/json\r\n\r\n## 5.6.2 - 2018-08-09\r\n\r\n### Updated dependencies\r\n - deps: serve-static@1.13.2\r\n    - deps: send@0.16.1\r\n\t     - deps: mime@1.4.1\r\n\t     - \tdeps: debug@2.6.9\r\n\r\n### Fixed\r\n - Fix error in case of local destination and UAA with tenant mode shared\r\n \r\n## 5.6.1 - 2018-08-07\r\n\r\n### Updated dependencies\r\n - deps: body-parser@1.18.3\r\n - deps: uid-safe@2.1.5\r\n - deps: @sap/xssec@2.1.9\r\n - deps: send@0.16.2\r\n - deps: compression@1.7.3\r\n - deps: express-session@1.15.6\r\n - deps: connect@3.6.5\r\n\r\n## 5.6.0 - 2018-08-05\r\n\r\n### Added\r\n - Added SaaS application registration support (subscription)\r\n - Enhanced usage of PreserveHostHeader additional property\r\n\r\n### Fixed\r\n - Fix error handling in case of bad signature\r\n\r\n## 5.5.0 - 2018-07-19\r\n\r\n### Added\r\n - Added optional additional properties 'PreserveHostHeader' to Destination service\r\n - Added optional additional properties 'sap-client' to Destination service\r\n\r\n## 5.4.2 - 2018-07-04\r\n\r\n### Fixed\r\n - Fix refresh page location after timeout bug\r\n - Fix fragment cookie name bug\r\n - Fix vulnerabilities issues\r\n \r\n## 5.4.1 - 2018-06-25\r\n \r\n### Fixed\r\n - Fix logout bug\r\n\r\n## 5.4.0 - 2018-06-10\r\n\r\n### Added\r\n - Support extensibility of logout end-point \r\n \r\n### Fixed\r\n - Fix vulnerabilities issues\r\n\r\n## 5.3.0 - 2018-05-13\r\n\r\n### Added\r\n - Enable extended session management\r\n - Enable Correlation ID propagation\r\n\r\n## 5.2.1 - 2018-05-02\r\n\r\n### Added\r\n - Support audit log service\r\n\r\n## 5.2.0 - 2018-04-16\r\n\r\n### Added\r\n - Support routing to destination with authentication type OAuth2SAMLBearerAssertion\r\n\r\n### Fixed\r\n - Fix bug in forward undefine token\r\n\r\n\r\n## 5.1.0 - 2018-03-14\r\n\r\n### Added\r\n - Support destination configuration from destination service\r\n\r\n### Fixed\r\n - Fix bug in trace functionality\r\n - Fix bug in fragment functionality\r\n\r\n## 5.0.0 - 2018-01-29\r\n\r\n### Fixed\r\n - Minor fix in destinations handling in Extension flow.\r\n - Fix fragment handling in URL during Login flow.\r\n \r\n## 4.0.1 - 2018-01-01\r\n\r\n### Fixed\r\n - Minor fixes in CORs.\r\n\r\n## 4.0.0 - 2017-12-18\r\n\r\n### Added\r\n - Application router can consume content from the HTML5 application repository.\r\n\r\n### Fixed\r\n - Fix in headers handling when using CF destination and onPremise destination in same xs-app.json.\r\n - Minor fix in CORs.\r\n\r\n## 3.0.1 - 2017-10-08\r\n\r\n### Removed\r\n - Node 0.12 support.\r\n \r\n## 2.10.0 - 2017-07-30\r\n\r\n### Added\r\n - Enabled connectivity to on premise backend.\r\n - Added external reverse proxy support.\r\n\r\n### Fixed\r\n - Fix CSRF token generation to use a Secure Random number generator.\r\n\r\n## 2.9.1 - 2017-06-29\r\n\r\n### Fixed\r\n - Minor fixes in CORs.\r\n - Introduce CORs feature in README.md.\r\n \r\n## 2.9.0 - 2017-06-27\r\n\r\n### Added\r\n - Support for CORs functionality.\r\n\r\n## 2.8.2 - 2017-06-13\r\n\r\n### Fixed\r\n - Fix cancel request.\r\n - Fix logout in dynamic routing.\r\n\r\n## 2.8.1 - 2017-06-01\r\n\r\n### Fixed\r\n - Fixes in documentation of dynamic routing and troubleshooting section.\r\n - Fix logout when using websocket.\r\n\r\n## 2.8.0 - 2017-04-26\r\n\r\n### Added\r\n - Introduce table of contents in README.md.\r\n - Added JWT refresh in websocket connections.\r\n - Significant performance improvements via adopting @sap/logging version 3\r\n\r\n## 2.7.1 - 2017-03-20\r\n\r\n### Fixed\r\n - Add username to logs.\r\n - Minor fixes in websockets and session handling.\r\n\r\n## 2.7.0 - 2017-02-13\r\n\r\n### Added\r\n- Replacements from services.\r\n- Start approuter on https\r\n- Show warning when a route is explicitly both public and csrf protected.\r\n\r\n### Fixed\r\n- Should not escape client cookies.\r\n- Redirect to welcome page if not CSRF token fetch request.\r\n- Wrong basic authentication status codes.\r\n\r\n## 2.6.1 - 2017-01-25\r\n\r\n### Changed\r\n- Rename package to use @sap scope\r\n\r\n## 2.6.0 - 2017-01-25\r\n\r\n### Added\r\n- `REQUEST_TRACE` environment variable for enhanced request tracing.\r\n- Support for PATCH in router configuration.\r\n- New extensions - see extending.md.\r\n\r\n### Removed\r\n- Customizable UAA config resolution.\r\n\r\n### Fixed\r\n- Fixes in documentation.\r\n- Handling of request protocol.\r\n- Removed npm 2 restriction.\r\n\r\n## 2.5.0 - 2016-12-13\r\n\r\n### Added\r\n- Enable customizable UAA config resolution\r\n- Support for custom error pages (errorPage in xs-app.json)\r\n- Extend sizing guide\r\n\r\n### Fixed\r\n- Crash in error handler due to missing logger.\r\n- Does not cache login responses.\r\n- Does not log UAA missing when not needed.\r\n- In case of parallel logins Approuter may use wrong user.\r\n- Does not send basic credentials to backend, unless route is public.\r\n\r\n## 2.4.0 - 2016-11-16\r\n\r\n### Added\r\n- Introduce SECURE_SESSION_COOKIE environment variable - enforces the secure flag of application router's session cookie.\r\n- Additional checks for regular expressions during startup.\r\n\r\n### Changed\r\n- Previous component name in sap passport has been changed to 'XSA Approuter'.\r\n\r\n### Fixed\r\n - Missing logging context in error handler when using extensions.\r\n\r\n## 2.3.4 - 2016-11-04\r\n\r\n### Fixed\r\n- The _x-csrf-token_ header is no longer forwarded to backend in case a path requires authentication and CSRF token protection.\r\n- Set the _Secure_ flag of the session cookie depending on the environment application router runs in.\r\n- Some of the links in README.md were broken.\r\n\r\n## 2.3.3 - 2016-11-02\r\n\r\n### Added\r\n-\tAdd COMPRESSION env var to be able to configure compression.\r\n\r\n### Fixed\r\n- Do not cache wsAllowedOrigins across requests.\r\n- Favor UAA config from default-env.json over default-services.json.\r\n-\tExtend error message for proxy settings problem.\r\n-\tEnable compression by default when custom setting is provided.\r\n-\tPropagate errors to handler.\r\n- Avoid session resave at the end of request. Fix session overwrite.\r\n\r\n## 2.3.2 - 2016-09-30\r\n\r\n### Fixed\r\n- Cookie locationAfterLogin clash in port based routing.\r\n\r\n## 2.3.1 - 2016-09-28\r\n\r\n### Fixed\r\n- Unverified redirect via locationAfterLogin cookie.\r\n- Fallback to default UAA if no tenant captured.\r\n- Fix X-Frame-Options header overwriting.\r\n- Session cookie name - use application_id instead of instance_id.\r\n- Fix port validation for approuter.start().\r\n\r\n## 2.3.0 - 2016-09-02\r\n\r\n### Added\r\n- Multitenancy support.\r\n- Matching route by both URL path and HTTP method.\r\n\r\n### Fixed\r\n- Fixed race condition while CSRF token generation.\r\n\r\n## 2.2.0 - 2016-08-17\r\n\r\n### Added\r\n- Start approuter with xs-app.json passed as an object.\r\n- Follow symlinks in localDir config.\r\n- Document the Content-Security-Policy header as a best practice.\r\n\r\n## 2.1.3 - 2016-08-13\r\n\r\n### Added\r\n- Genarate CSRF token once per session.\r\n\r\n## 2.1.2 - 2016-08-06\r\n\r\n### Fixed\r\n- Remove instance cookies from client request.\r\n- Fix locatioinAfterLogin cookie path.\r\n\r\n## 2.1.1 - 2016-07-24\r\n\r\n### Fixed\r\n- Support to host welcome page externally.\r\n- Fix logout path matching.\r\n- Fix 500 sent in case locationAfterLogin cookie is missing.\r\n\r\n\r\n## 2.1.0 - 2016-07-17\r\n\r\n### Added\r\n- Allow source of route to be matched in case-insensitive way.\r\n- New configuration for maximum client connection timeout.\r\n- Add support for approuter extensions (custom middleware).\r\n- Allow fetching CSRF token with HEAD request.\r\n\r\n## 2.0.0 - 2016-05-12\r\n\r\n### Added\r\n- Configuration for the Cache-Control header in xs-app.json. The header is used when serving static resources.\r\n\r\n### Removed\r\n- local-* files (e.g. local-destinations, local-plugins) can no longer be used in the approuter during local development. Instead of these the approuter reads a single file located in the working directory (default-env.json), which contains the corresponding environment variables (e.g. destinations, plugins) and their values.\r\n"},{"name":"artifact-management-base-types","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Introduction\r\nThis package contains type definitions for [artifact-management-base](https://www.npmjs.com/package/@sap/artifact-management-base).\r\n\r\n# Usage\r\n npm i @sap/artifact-management-base-types"},{"name":"artifact-management-base","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Introduction\r\nThis package contains helper classes/methods that are used by [artifact-management](https://www.npmjs.com/package/@sap/artifact-management) and plugins.\r\nThis serves as the dependency for artifact-management and plugins.","changelog":"## 1.13.0 - 23 Jun, 2022\r\n* Version update for `@sap/artifact-managment@1.13.0`\r\n## 1.12.0 - 27 May, 2022\r\n* Version update for `@sap/artifact-managment@1.12.0`\r\n## 1.11.0 - 26 April, 2022\r\n* Version update for `@sap/artifact-managment@1.11.0`\r\n## 1.10.0 - 7 April, 2022\r\n* Version update for `@sap/artifact-managment@1.10.0`\r\n## 1.9.0 - 24 March, 2022\r\n* Version update for `@sap/artifact-managment@1.9.0`\r\n## 1.8.1 - 17 March, 2022\r\n* Version update for `@sap/artifact-managment@1.8.1`\r\n## 1.8.0 - 10 March, 2022\r\n* Version update for `@sap/artifact-managment@1.8.0`\r\n## 1.7.0 - 24 February, 2022\r\n* Version update for `@sap/artifact-managment@1.7.0`\r\n## 1.6.0 - 10 February, 2022\r\n* Version update for `@sap/artifact-managment@1.6.0`\r\n## 1.5.0 - 28 January, 2022\r\n* Version update for `@sap/artifact-managment@1.5.0`\r\n## 1.4.0 - 07 January, 2022\r\n* Version update for `@sap/artifact-managment@1.4.0`\r\n## 1.3.0 - 22 December, 2021\r\n* Version update for `@sap/artifact-managment@1.3.0`\r\n## 1.2.0 - 24 November, 2021\r\n* Version update for `@sap/artifact-managment@1.2.0`\r\n## 1.1.1 - 15 November, 2021\r\n### Changed\r\n* Remove import of `ReflectedModel` from cds and changed the type of csn object to `any`.\r\n* Updated chokidar version from `3.5.1` to `3.5.2`.\r\n\r\n## 1.1.0 - 25 October, 2021\r\n* Initial release.\r\n"},{"name":"artifact-management-types","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Introduction\r\nThis package contains type definitions for [artifact-management](https://www.npmjs.com/package/@sap/artifact-management).\r\n\r\n# Usage\r\n npm i @sap/artifact-management-types"},{"name":"artifact-management","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Introduction\r\n\r\nArtifact Management on SAP BTP facilitates the generation of project metadata comprising of multiple modules of different technologies,\r\nbundles the module into one single deployment artifact and supports one click deploy to Cloud Foundry\r\n\r\n## Key Capabilities\r\n* Access to project properties\r\n* Access to VSCode workspace\r\n* Provide list of modules and items of each module\r\n* Watchers to notify of changes to project\r\n* Support of tags and filter\r\n* Capability to Test run\r\n* Capability to generate \r\n[MTA yaml](https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.04/en-US/ebb42efc880c4276a5f2294063fae0c3.html) and \r\n[MTAR](https://sap.github.io/cloud-mta-build-tool)\r\n* Deployment of MTAR to [Cloud Foundry](https://www.cloudfoundry.org)\r\n* Plugins for SAP technologies such as \r\n[MDK](https://developers.sap.com/topics/mobile-development-kit.html),\r\n[FioriElement](https://sapui5.hana.ondemand.com/sdk/#/topic/03265b0408e2432c9571d6b3feb6b1fd),\r\n[Workflow](https://developers.sap.com/group.cp-workflow-cf.html),\r\n[CAP](https://cap.cloud.sap/docs/), \r\n[XSUAA](https://blogs.sap.com/2019/01/07/uaa-xsuaa-platform-uaa-cfuaa-what-is-it-all-about/)\r\n\r\n---\r\n\r\n### Pre-Requisites\r\n\r\n* Node.JS 12 or higher\r\n* CAP Development Kit (`npm install -g @sap/cds-dk`)\r\n\r\n### Pre-Requisites to Build and Deploy MTARs\r\n\r\n* [MTAR builder](https://www.npmjs.com/package/mbt) (`npm install -g mbt`)\r\n* Install [lerna] for mono-repo building (`npm install -g lerna`)\r\n* Install MDK-Tools, `npm install @sap/mdk-tools -g`\r\n* [Cloud Foundary CLI](https://docs.cloudfoundry.org/cf-cli/install-go-cli.html), Install cf-cli and run command `cf install-plugin multiapps`.\r\n\r\n---\r\n\r\n### Initialization\r\n```\r\nnpm i -g @sap/artifact-management\r\n```\r\nThere are two main sets of classes provided by the library. \r\n- `ProjectApi`, `ProjectImpl` : These are the interface and implmentation classes respectively for project level usages.\r\n- `WorkspaceApi`, `WorkspaceImpl` : These are the interface and implmentation classes respectively for Workspace level usages.\r\n\r\nYou can import the module in your code as follows:\r\n`import { ProjectImpl } from '@sap/artifact-management';`\r\n\r\nTo initialise Project API, instance of ProjectImpl has to be created which takes absolute path of a project.\r\n```\r\nimport { ProjectImpl } from '@sap/artifact-management';\r\nconst path = '<my-application-folder-root-path>';\r\n\r\n/**\r\n* readModuleAsProject Default value is false.\r\n* If the boolean is false, then only lcap/cap projects are read.\r\n* If true then any project can also be read.\r\n*/\r\nconst readModuleAsProject = false\r\n\r\nconst project = new ProjectImpl(path ,readModuleAsProject);\r\n```\r\n\r\nTo initialise Workspace API, instance of WorkspaceImpl has to be created.\r\n```\r\nimport { WorkspaceImpl } from '@sap/artifact-management';\r\nconst workspace = new WorkspaceImpl();\r\n```\r\n\r\nThe library also provides CLI `dev-project` which can be used to visualise the outputs of APIs as shown in the following section.\r\n\r\n---\r\n# APIs & Examples\r\n\r\n## Access to VSCode workspace\r\n### Get Projects \r\n###### Description\r\nGet all the projects in the workspace. Get the project based on tag if provided and Return type is array of ProjectAPIs / Returns ProjectAPI based on the tag.\r\n###### Method\r\n`getProjects(tag?: Tag) : Promise<ProjectApi[]>`\r\n\r\n###### Parameters\r\n- tag: (Optional) `Tag` value which can be used to filter projects.\r\n###### returns\r\n- array of `ProjectApi` instance or `undefined`\r\n\r\n###### Example\r\n```\r\nimport {Tag} from @sap/artifact-management'  //Optional\r\nconst ws = new WorkspaceImpl();\r\nconst projects = await ws.getProjects();\r\n```\r\n\r\n\r\n### Get Project URIs\r\n###### Description\r\nGet all project Uris in the workspace.\r\n###### Method\r\n`getProjectUris(): Promise<Uri[]>`\r\n\r\n###### returns\r\n- array of `Uri` or `undefined`\r\n\r\n###### Example\r\n```\r\nconst ws = new WorkspaceImpl();\r\nconst projectUris = await ws.getProjectUris();\r\n```\r\n\r\n\r\n### Start Watch \r\n###### Description\r\nit detects File addition or deletions in workspace and triggers the updated event\r\n###### Method\r\n`startWatch() : void`\r\n\r\n###### returns\r\n- `void`\r\n\r\n###### Example\r\n```\r\nconst ws = new WorkspaceImpl();\r\nawait ws.startWatch();\r\n```\r\n\r\n\r\n### Stop Watch \r\n###### Description\r\nit stops the watch event \r\n###### Method\r\n`stopWatch() : void`\r\n\r\n###### returns\r\n- `void`\r\n\r\n###### Example\r\n```\r\nconst ws = new WorkspaceImpl();\r\nawait ws.stopWatch();\r\n```\r\n\r\n### onWorkspaceChanged\r\n###### Description\r\nit captures the add/remove events for the folders in the Workspace \r\n###### Method\r\n`onWorkspaceChanged(handler: (event: string, folders: WorkspaceFolder[]) => void) : void`\r\n\r\n###### Parameters\r\n- a `function` which takes a string `event` (\"add\" | \"remove\") and array of `WorkspaceFolder` as arguments\r\n\r\n###### returns\r\n- `void`\r\n\r\n###### Example\r\n```\r\nimport { WorkspaceFolder } from 'vscode';\r\nconst ws = new WorkspaceImpl();\r\nws.onWorkspaceChanged((event: string, folders: WorkspaceFolder[]) => {\r\n  // add implementation \r\n});\r\n```\r\n\r\n---\r\n\r\n## Access to project properties\r\n### Get Project Structure \r\n###### Description\r\nRead the entire project and return the information about project, its CAP modules and their items.\r\n###### Method\r\n`read(logger? : IChildLogger, tag? : Tag): Promise<Project | undefined>;`\r\n\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\r\n- tag: (Optional) `Tag` value which can be used to filter projects.\r\n###### returns\r\n- `Project` instance or `undefined`\r\n\r\n###### Example\r\n```\r\nimport {Tag} from @sap/artifact-management'   //Optional\r\nconst api = new ProjectImpl(projectPath);\r\nconst project = await api.read();\r\n```\r\n###### CLI\r\n\r\n```\r\ndev-project show  <my-application-folder-root absolute path> \r\n```\r\n\r\n###### Sample Output\r\n```\r\n{\r\n  \"type\": \"com.sap.cap\",\r\n  \"path\": \"<Absolute Path of Project>\",\r\n  \"prefix\": \"DemoProject\",\r\n  \"cloudService\": \"com.DemoProject\",\r\n  \"name\": \"DemoProject\",\r\n  \"tags\": [\r\n    \"project\",\r\n    \"cap\"\r\n  ],\r\n  \"modules\": [\r\n    {\r\n      \"type\": \"com.sap.security.XsSecurity\",\r\n      \"name\": \"_To_Be_Generated_\",\r\n      \"path\": \"\",\r\n      \"items\": []\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Get Project information\r\n###### Description\r\nReads only Project level information without reading its modules and items.\r\n###### Method\r\n`getProjectInfo(logger? : IChildLogger): Promise<ProjectData | undefined>;`\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\r\n###### returns\r\n- `ProjectData` or `undefined`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nconst project = await api.getProjectInfo();\r\n```\r\n###### CLI\r\n```\r\ndev-project get-project-info  <my-application-folder-root absolute path> \r\n```\r\n###### Sample Output\r\n```\r\n{\r\n  \"type\": \"com.sap.cap\",\r\n  \"path\": \"<Absolute Path of Project>\",\r\n  \"prefix\": \"DemoProject\",\r\n  \"cloudService\": \"com.DemoProject\",\r\n  \"name\": \"DemoProject\",\r\n  \"tags\": [\r\n    \"project\",\r\n    \"cap\"\r\n  ]\r\n}\r\n```\r\n---\r\n\r\n## Provide list of modules and items of each module\r\n### Get Modules information\r\n###### Description\r\nReads only module level information for all the modules in the project without reading their items.\r\n###### Method\r\n`getModules(logger? : IChildLogger): Promise<ModuleData[] | undefined>;`\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- Array of `ModuleData` or `undefined`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nconst project = await api.getModules();\r\n```\r\n###### CLI\r\n```\r\ndev-project get-modules-info  <my-application-folder-root absolute path> \r\n```\r\n###### Sample Output\r\n```\r\n[\r\n  {\r\n    \"type\": \"com.sap.security.XsSecurity\",\r\n    \"name\": \"_To_Be_Generated_\",\r\n    \"path\": \"\"\r\n  }\r\n]\r\n```\r\n\r\n### Read Items\r\n###### Description\r\nRead the entire project and return the information about all the items/entities in the project.\r\n###### Method\r\n`readItems(filter? : ItemFilter, logger? : IChildLogger) : Promise<Item[]>;`\r\n###### Parameters\r\n- filter: (Optional) `ItemFilter` which can be used to filter items in the project.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- An array of `Item`\r\n###### Example\r\n```\r\nimport {ItemFilter} from @sap/artifact-management'  //Optional\r\nconst api = new ProjectImpl(projectPath);\r\nconst project = await api.readItems();\r\n```\r\n\r\n###### CLI\r\n\r\nRead all items\r\n\r\n```\r\ndev-project list-items  <my-application-folder-root absolute path> \r\n```\r\n###### Sample Output\r\n\r\n```\r\n[\r\n    {\r\n      \"external\": false,\r\n      \"name\": \"fioriApp\",\r\n      \"namespace\": \"sap.ui.demoproject\",\r\n      \"path\": \"db/schema.cds\",\r\n      \"ref\": \"sap.ui.demoproject.fioriApp\",\r\n      \"tags\": [\r\n          \"item\",\r\n          \"cap\"\r\n      ],\r\n      \"type\": \"com.sap.cds/Entity\"\r\n    },\r\n    ...\r\n    ...\r\n    ...\r\n]\r\n```\r\n\r\n---\r\n\r\n\r\n## Watchers to notify of changes to project\r\n###### Description\r\nRead and watch the items/entities in the project. Any changes in the items addition, deletion or updation which match the watch criteria will be notified by the event `updated` which is listened by `ItemWatcherApi`.\r\n###### Method\r\n`watchItems(filter? : ItemFilter, logger? : IChildLogger) : Promise<ItemWatcherApi>;`\r\n###### Parameters\r\n- filter: (Optional) `ItemFilter` which can be used to filter items in the project.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `ItemWatcherApi`. This can be used to read the updated items.\r\n\r\n###### Example\r\n```\r\nimport {ItemFilter} from @sap/artifact-management'  //Optional\r\nconst project = new ProjectImpl(projectPath);\r\nconst itemWatcher = await project.watchItems();\r\nconst items = await itemWatcher.readItems();\r\nitemWatcher.on('updated', () => {\r\n    console.log('Items updated');\r\n});\r\n```\r\n\r\n###### CLI\r\n\r\nRead all items\r\n\r\n```\r\ndev-project watch-items  <my-application-folder-root absolute path> \r\n```\r\n\r\n---\r\n\r\n\r\n## Support of Filters\r\n###### Description\r\nItems can be filtered on basis of `type`, `tag` and `ref`\r\nThe filter can be passed in `readItems` and `watchItems` APIs as an argument which will return items based on the filter. Check `readItems` and `watchItems` APIs for further information\r\n\r\n###### Example \r\n```\r\nimport {ItemFilter} from @sap/artifact-management'\r\n\r\n// Filter by type\r\nconst filter: ItemFilter = {types: [\"com.sap.cds/Entity\"]};\r\n\r\n// Filter by tags\r\nconst filter: ItemFilter = {​​​tags: {​​​values: [\"db\", \"srv\"]}​​​}​​​;\r\n\r\n// Filter by refs\r\nconst filter: ItemFilter= {refs: [\"<item ref>\"]​​​}​​​;\r\n\r\n\r\nconst api = new ProjectImpl(projectPath);\r\nconst entities = await api.readItems(filter);\r\n```\r\n\r\n---\r\n\r\n## Capability to Test run\r\n###### Method\r\n`run(option?: string[] | undefined, logger? : IChildLogger ) : Promise<void>`\r\n###### Description\r\nIt starts the CDS server and watches for any modifications in the files, if any changes detected it automatically restarts to serve the new content \r\n###### Parameters\r\n- options: (Optional) run options. Comma separated list of options and their values. e.g. ['port', '8008', 'open']. Currently only supports port number and open option.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Promise<void>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nawait api.run();\r\n```\r\n###### CLI\r\n```\r\ndev-project run  <my-application-folder-root absolute path> port 9039 open\r\n```\r\n\r\n---\r\n\r\n## Capability to generate MTA yaml and MTAR\r\n###### Method\r\n`build(options? : MtaGeneratorSettings, logger? : IChildLogger) : Promise<void>;`\r\n###### Description\r\nGenerate manifest for the project and all the modules and create a `mta.yaml` and `<app-name>.mtar` file.\r\n###### Parameters\r\n- options: (Optional) `MtaGeneratorSettings` build options.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Promise<void>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nawait api.build();\r\n```\r\n###### CLI\r\n```\r\ndev-project build  <my-application-folder-root absolute path> \r\n```\r\n###### Sample Output\r\n```\r\n_schema-version: '3.1'\r\nID: DemoProject\r\nversion: 1.0.0\r\ndescription: A simple CAP project.\r\nparameters:\r\n  enable-parallel-deployments: true\r\nbuild-parameters:\r\n  before-all:\r\n    - builder: custom\r\n      commands:\r\n        - bash -c \"cds compile srv --to xsuaa > xs-security.json\"\r\n    - builder: custom\r\n      commands:\r\n        - npm install --production\r\n        - >-\r\n          bash -c \"cds -v 2>/dev/null >/dev/null || npm install --no-save\r\n          @sap/cds-dk\"\r\n        - npx cds build --production\r\nmodules:\r\n  - name: DemoProject-db-deployer\r\n    type: hdb\r\n    path: gen/db\r\n    parameters:\r\n      buildpack: nodejs_buildpack\r\n    build-parameters:\r\n      builder: npm\r\n      ignore:\r\n        - node_modules\r\n    requires:\r\n      - name: DemoProject-service-uaa\r\n      - name: DemoProject-service-db\r\n    ...\r\n    ...\r\n    ...\r\n\r\nresources:\r\n  - type: org.cloudfoundry.managed-service\r\n    name: DemoProject-service-uaa\r\n    parameters:\r\n      service: xsuaa\r\n      service-plan: application\r\n      service-name: DemoProject-uaa\r\n      path: xs-security.json\r\n    ...\r\n    ...\r\n    ...\r\n\r\n```\r\n\r\n---\r\n\r\n## Capability to generate MTA yaml and MTAD yaml\r\n###### Method\r\n`buildV2(options? : MtaGeneratorSettings, logger? : IChildLogger) : Promise<void>;`\r\n###### Description\r\nGenerate manifest for the project and the modules specified in .status_tracker file and create a `mta.yaml` and `mtad.yaml` file.\r\n###### Parameters\r\n- options: (Optional) `MtaGeneratorSettings` build options.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Promise<void>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nawait api.buildV2();\r\n```\r\n###### CLI\r\n```\r\ndev-project buildV2  <my-application-folder-root absolute path> \r\n```\r\n###### Sample Output\r\n```\r\n_schema-version: '3.1'\r\nID: DemoProject\r\nversion: 1.0.0\r\ndescription: A simple CAP project.\r\nparameters:\r\n  enable-parallel-deployments: true\r\nbuild-parameters:\r\n  before-all:\r\n    - builder: custom\r\n      commands:\r\n        - bash -c \"cds compile srv --to xsuaa > xs-security.json\"\r\n    - builder: custom\r\n      commands:\r\n        - npm install --production\r\n        - >-\r\n          bash -c \"cds -v 2>/dev/null >/dev/null || npm install --no-save\r\n          @sap/cds-dk\"\r\n        - npx cds build --production\r\nmodules:\r\n  - name: DemoProject-db-deployer\r\n    type: hdb\r\n    path: gen/db\r\n    parameters:\r\n      buildpack: nodejs_buildpack\r\n    build-parameters:\r\n      builder: npm\r\n      ignore:\r\n        - node_modules\r\n    requires:\r\n      - name: DemoProject-service-uaa\r\n      - name: DemoProject-service-db\r\n    ...\r\n    ...\r\n    ...\r\n\r\nresources:\r\n  - type: org.cloudfoundry.managed-service\r\n    name: DemoProject-service-uaa\r\n    parameters:\r\n      service: xsuaa\r\n      service-plan: application\r\n      service-name: DemoProject-uaa\r\n      path: xs-security.json\r\n    ...\r\n    ...\r\n    ...\r\n\r\n```\r\n\r\n#### Get MTA Manifest content\r\n###### Method\r\n`getManifest(logger? : IChildLogger) : Promise<any>;`\r\n###### Description\r\nGet the content of the `mta.yaml` file.\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\r\n###### returns\r\n- `Promise<any>`\r\n###### CLI\r\n```\r\n./src/project-api/bin/dev-project show-manifest ../risk-management-example\r\n```\r\n###### Sample Output\r\n```\r\n_schema-version: '3.1'\r\nID: cpapp\r\nversion: 1.0.0\r\ndescription: \"A simple CAP project.\"\r\nparameters:\r\n  enable-parallel-deployments: true\r\n\r\nbuild-parameters:\r\n  before-all:\r\n   - builder: custom\r\n     commands:\r\n      - npm install --production\r\n      ...\r\n      ...\r\n\r\nmodules:\r\n - name: cpapp-app\r\n   type: html5\r\n   path: app\r\n   build-parameters:\r\n     builder: custom\r\n     commands:\r\n      - bash build.sh\r\n     supported-platforms: []\r\n     build-result: dist\r\n  ...\r\n  ...\r\n\r\n```\r\n---\r\n\r\n## Deployment of MTAR to Cloud Foundry\r\n###### Method\r\n`deploy(logger? : IChildLogger) : Promise<void>;`\r\n###### Description\r\nDeploy the generated `<app-name>.mtar` file to currently targeted CF space.\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Promise<void>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nawait api.deploy();\r\n```\r\n###### CLI\r\nBuild and deploy in one step\r\n```\r\ndev-project deploy  <my-application-folder-root absolute path> \r\n```\r\n\r\n---\r\n\r\n## Deployment of MTAR to Cloud Foundry\r\n###### Method\r\n`deployV2(logger? : IChildLogger) : Promise<void>;`\r\n###### Description\r\nGenerate the `<app-name>.mtar` file based on contents of .status_tracker file and deploy to currently targeted CF space.\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Promise<void>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nawait api.deployV2();\r\n```\r\n###### CLI\r\nBuild and deploy in one step\r\n```\r\ndev-project deployV2  <my-application-folder-root absolute path> \r\n```\r\n\r\n---\r\n\r\n## Get Project Overview URL\r\n###### Method\r\n`getProjectOverviewURL(logger? : IChildLogger) : Promise<string | undefined>;`\r\n###### Description\r\nGet the Project Overview URL of application deployed to currently targeted CF space.\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\r\n###### returns\r\n- `Promise<string | undefined>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nconst projectOverviewURL = await api.getProjectOverviewURL();\r\n```\r\n###### CLI\r\n```\r\ndev-project get-projectoverview-url <my-application-folder-root absolute path>\r\n```\r\n###### Sample Output\r\n```\r\n{\r\n  applicationOverviewURL : <projectOverviewURL>\r\n}\r\n```\r\n---\r\n\r\n## Get Application Deployment Summary\r\n###### Method\r\n`getApplicationDeploymentSummary(logger? : IChildLogger) : Promise<{ ProjectOverviewURL?: string; DeployedUTCTime?: String; } | undefined>;`\r\n###### Description\r\nGet the Application Deployment Summary of application deployed to currently targeted CF space which contains ProjectOverviewURL and DeployedUTCTime.\r\n###### Parameters\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of Project API.\r\n###### returns\r\n- `Promise<{ ProjectOverviewURL?: string; DeployedUTCTime?: String; } | undefined>`\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nconst applicationSummary = await api.getApplicationDeploymentSummary();\r\n```\r\n###### CLI\r\n```\r\ndev-project get-application-deployment-summary <my-application-folder-root absolute path>\r\n```\r\n###### Sample Output\r\n```\r\n{\r\n  applicationOverviewURL : <projectOverviewURL>,\r\n  DeployedUTCTime : <deployedUTCTime>\r\n}\r\n```\r\n---\r\n\r\n## Get Detail Information of Entities\r\n#### Get Detail information\r\n###### Method\r\n`getDetailInfo(type: ItemType, ref: string, entityPath?: string, logger? : IChildLogger) :Promise<Item | undefined>;`\r\n###### Description\r\nGet additional detail information about a particular item.\r\n###### Parameters\r\n- type: `ItemType` type of the Item.\r\n- ref: Unique reference of the Item.\r\n- entityPath: (Optional) Path of the item.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Item` or `undefined`\r\n\r\n###### Example\r\n```\r\nimport {ItemType} from \"src/project-glue/ItemType.ts\"  //Optional\r\nconst api = new ProjectImpl(projectPath);\r\nconst entities = await api.getDetailInfo(type, ref, entityPath)\r\n```\r\n###### CLI\r\n```\r\ndev-project get-detail-info  <my-application-folder-root absolute path> <type> <ref>\r\n```\r\n###### Sample Output\r\n```\r\n{\r\n  \"type\": \"com.sap.cds/Entity\",\r\n  \"name\": \"fioriApp\",\r\n  \"ref\": \"sap.ui.demoproject.fioriApp\",\r\n  \"path\": \"schema.cds\",\r\n  \"info\": {\r\n    \"ID\": {\r\n      \"@Core.Computed\": true,\r\n      \"key\": true,\r\n      \"type\": \"cds.UUID\"\r\n    },\r\n    \"title\": {\r\n      \"type\": \"cds.String\",\r\n      \"length\": 100\r\n    },\r\n    \"owner\": {\r\n      \"type\": \"cds.String\"\r\n    },\r\n    \"descr\": {\r\n      \"type\": \"cds.String\"\r\n    },\r\n    \"miti\": {\r\n      \"type\": \"cds.Association\",\r\n      \"target\": \"sap.ui.demo.ui5App\"\r\n    },\r\n    \"impact\": {\r\n      \"type\": \"cds.Integer\"\r\n    },\r\n    \"criticality\": {\r\n      \"type\": \"cds.Integer\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\n## Get Data Information\r\n###### Method\r\n`getDataInfo(data: any, mainEntityName?: string, logger? : IChildLogger): Promise<any>;`\r\n###### Description\r\nRead and parse an Excel data file (CSV or XML format), or generate the main entity for a data model.\r\n###### Parameters\r\n- data: Path of the data file, or a data model parsed from an Excel file.\r\n- mainEntityName: (Optional) Name of the entity taken as the main entity.\r\n- logger: (Optional) An instance of IChildLogger which can be implemented by consumers of this library.\r\n###### returns\r\n- `Promise<any>`\r\n\r\n###### Example\r\n```\r\nconst api = new ProjectImpl(projectPath);\r\nconst data = await api.getDataInfo(filePath);\r\nconst dataWithMainEntity = await api.getDataInfo(data, 'mainEntity');\r\n```\r\n###### CLI\r\n```\r\ndev-project get-data-info  <data file absolute path>\r\n```\r\n###### Sample Output\r\n```\r\n[\r\n  {\r\n    \"entity\": \"entity\",\r\n    \"values\": [\r\n      [\r\n        \"9a8a4cad-19c1-46b2-a599-4b735e82374f\",\r\n        \"1\",\r\n        \"1000000\",\r\n        \"Technology\"\r\n      ],\r\n      [\r\n        \"c84a8e54-ce5a-423b-923e-dab637d298c1\",\r\n        \"2\",\r\n        \"1500000\",\r\n        \"Products\"\r\n      ],\r\n      [\r\n        \"939be63d-7175-4b53-b593-aa0dde74a04e\",\r\n        \"3\",\r\n        \"2000000\",\r\n        \"Technology\"\r\n      ]\r\n    ],\r\n    \"labels\": [\r\n      {\r\n        \"label\": \"ID\",\r\n        \"value\": \"ID\"\r\n      },\r\n      {\r\n        \"label\": \"Capex Request\",\r\n        \"value\": \"capex_request\"\r\n      },\r\n      {\r\n        \"label\": \"Total Cost\",\r\n        \"value\": \"total_cost\"\r\n      },\r\n      {\r\n        \"label\": \"Department\",\r\n        \"value\": \"department\"\r\n      }\r\n    ],\r\n    \"props\": [\r\n      {\r\n        \"name\": \"ID\",\r\n        \"kind\": \"dataType\",\r\n        \"type\": \"UUID\"\r\n      },\r\n      {\r\n        \"name\": \"capex_request\",\r\n        \"kind\": \"dataType\",\r\n        \"type\": \"String\"\r\n      },\r\n      {\r\n        \"name\": \"total_cost\",\r\n        \"kind\": \"dataType\",\r\n        \"type\": \"String\"\r\n      },\r\n      {\r\n        \"name\": \"department\",\r\n        \"kind\": \"dataType\",\r\n        \"type\": \"String\"\r\n      }\r\n    ],\r\n    \"dbProps\": [\r\n      \"ID\",\r\n      \"capex_request\",\r\n      \"total_cost\",\r\n      \"department\"\r\n    ]\r\n  }\r\n]\r\n```\r\n---","changelog":"## 1.13.0 - 21 June, 2022\r\n### Added\r\n* Support manual mta editing\r\n### Changed\r\n* Enhance CLI api 'get-data-info' for data first UI flow\r\n## 1.12.1 - 8 June, 2022\r\n### Fixed\r\n* Adjust the banner image for preview & launchpad.\r\n* Reference higher ui5 version for launchpad to enable latest features from FE app.\r\n## 1.12.0 - 27 May, 2022\r\n### Added\r\n* Added new CLI api `get-data-info` to support parsing data file (csv, xml)\r\n### Changed\r\n* Refactor mta.yaml to support CI/CD service\r\n## 1.11.1 - 17 May, 2022\r\n### Fixed\r\n* Reference ui5 with specific version for preview & launchpad.\r\n## 1.11.0 - 26 April, 2022\r\n### Added\r\n* Enable application logs service.\r\n## 1.10.0 - 7 April, 2022\r\n### Changed\r\n* Changed logic to identify PDM entities and service.\r\n### Fixed\r\n* Fixed Delta Deployment failure on first deploy issue.\r\n* Fixed the error thrown in getProjectInfo API when result is undefined.\r\n## 1.9.0 - 24 March, 2022\r\n### Added\r\n* Added support to create destination to workflow instance on deploy.\r\n## 1.8.1 - 17 March, 2022\r\n### Fixed\r\n* Duplicate MDK UI apps fixed.\r\n## 1.8.0 - 10 March, 2022\r\n### Added\r\n* Added support for Delta-build.\r\n* Added support for Delta-deploy.\r\n### Fixed\r\n* Fixed Deploy failure issue when MDK Task UI app uses Document FormCell control.\r\n* Fixed issue where wrong MDK display name was returned to homepage.\r\n* Fixed issue where incorrect description of role is added to mta.yaml.\r\n* Fixed Deploy failure issue if Role Collection already exists in this subaccount.\r\n\r\n## 1.7.0 - 24 February, 2022\r\n### Added\r\n* Added support for Personal Data Manager.\r\n### Fixed\r\n* Fixed Deploy failure issue due to missing xsappname from xs-security.json.\r\n* Fixed issue with generating new role on Cloud Foundry if the project is already deployed.\r\n\r\n## 1.6.0 - 10 February, 2022\r\n### Added\r\n* Added immutability/read-only view to Project-API result object data structures.\r\n### Changed\r\n* Removed in-memory cache for project summary.\r\n### Fixed\r\n* Fixed roles issue when xs-security.json is absent.\r\n\r\n## 1.5.0 - 28 January, 2022\r\n### Added\r\n* Support capability to return the user roles for LCAP application.\r\n### Changed\r\n* Enhanced taskUi item name to use name of the app instead of `TaskUI`.\r\n### Fixed\r\n* Fixed issue related to persistence of links even when dependency was deleted.\r\n* Fixed issue where click on the application tile in preview page was unresponsive.\r\n\r\n## 1.4.0 - 07 January, 2022\r\n### Added\r\n* Added new API getApplicationDeploymentSummary() which provides information about project overview url and the time of last successful deployment time in UTC format.\r\n### Fixed\r\n* Fixed UI issues on preview and application overview pages.\r\n* Fixed the issue where sample data for external service was not read immediately after creation.\r\n\r\n## 1.3.0 - 22 December, 2021\r\n### Added\r\n* Support dependency relationship between entity and sample data.\r\n* Support version deployment as per the version in project.\r\n* Support sample data for external services.\r\n* Added support for reading full name of external entity.\r\n* Set default runtime allocation for LCAP apps.\r\n### Changed\r\n* Updated open source libraries to newer versions. \r\n* Handling references from artifact-management and it's corresponding types.\r\n* Enhanced `getProjectOverviewURL` cache.\r\n### Fixed\r\n* Improved performance w.r.t. watch functionality.\r\n* Fixed launching of Fiori app while link opened without launchpad.\r\n* Fixed issue w.r.t. project in subfolder structure.\r\n\r\n## 1.2.0 - 24 November, 2021\r\n### Added\r\n* Added workflow section containing workflow apps such as My Inbox, Workflow Definitions and Workflow Instances in `Application overview page`.\r\n* Added cache implementation for `getProjectOverviewURL` api.\r\n* Enhanced info message codes to indicate the source module in case of exceptions.\r\n* Added item links between workflow and taskUi app, workflow and service entity, and two db entities.\r\n### Changed\r\n* Force update mdk module during deployment.\r\n* Enhanced the mechanism to identify the workflow folder.\r\n### Fixed\r\n* Fixed issue related to concurrent access to `readItems` api.\r\n\r\n\r\n## 1.1.2 - 16 November, 2021\r\n### Fixed\r\n* Fixed deploy issue with respect to launchpad.\r\n\r\n## 1.1.1 - 15 November, 2021\r\n### Changed\r\n* Changed the title of landing page after deployment from `Project Preview` to `Application Overview`.\r\n\r\n### Fixed\r\n* Fixed Fiori application deployement issue by adding @ui5/cli dependency for HTML5 module in mta.yaml.\r\n* Handled scenarios where CDS returns empty folders map.\r\n* Fixed import issues in artifact-management-types by adding correct references to artifact-management-base-types.\r\n\r\n## 1.1.0 - 25 October, 2021\r\n### Added\r\n* Added new api `getManifest` and corresponding CLI command `show-manifest` to get contents of mta.yaml.\r\n* Added new api `getProjectOverviewURL` and corresponding CLI command `get-projectoverview-url` to get the url of project overview page on CF.\r\n\r\n* Created separate package `@sap/artifact-management-types` for declaration files.\r\n* Created separate package `@sap/artifact-management-base` which contains helper classes and methods that are used by `@sap/artifact-management` and plugins.\r\n\r\n* Added `workflowTaskEnabled` tag to service entity which corresponds to the data model annotated as workflow task enabled.\r\n* Added `db` and `srv` tags to identify db and srv modules distinctly.\r\n\r\n* Added support of port option in run api.\r\n* Added support of identifying and reading projects when present in subfolders of given path.\r\n* Added support of info messages in project data which describe reasons for missing data or errors.\r\n* Added resource for connectivity in mta.yaml to support external services.\r\n\r\n### Changed\r\n* Enhanced mta.yaml creation to add workflow service only when workflow module is present in project.\r\n* Enhanced `run` and `deploy` api to generate project overview page which showcases web applications and services in a new UI.\r\n* Remove enum types from project.\r\n* Made tags non-optional.\r\n\r\n### Fixed\r\n* Removed log comments from CLI output\r\n* Fixed failure of logging to console even when debug option was provided in CLI command.\r\n* Fixed failure of `build` api when called for more than one project.\r\n\r\n\r\n----\r\n\r\n## 1.0.1 - 20 August, 2021\r\n### Added\r\n* Added support to package the library with webpack.\r\n\r\n### Changed\r\n* Removed workflow application from html5 app container of local run and Cloud Foundry deploy.\r\n\r\n### Fixed\r\n* Fixed failure of watch items when content of any file is invalid.\r\n\r\n----\r\n## 1.0.0 - 03 August, 2021\r\n* Initial release.\r\n"},{"name":"asp-middleware","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/asp-middleware\r\n==============\r\n\r\n<!-- toc -->\r\n\r\n- [@sap/asp-middleware](#sapasp-middleware)\r\n\t- [Overview](#overview)\r\n\t- [Usage](#usage)\r\n\t\t- [Approuter Middleware](#approuter-middleware)\r\n\t\t- [ABAP Solution Runtime Client](#abap-solution-runtime-client)\r\n\t\t\t- [Get Tenant](#get-tenant)\r\n\t\t- [Configuration](#configuration)\r\n\t\t\t- [Custom User Onboarding Path](#custom-user-onboarding-path)\r\n\t- [Supported Approuter versions](#supported-approuter-versions)\r\n\t- [Getting Support](#getting-support)\r\n\r\n<!-- tocstop -->\r\n\r\n## Overview\r\nThe `asp-middleware` is an extension for the [@sap/approuter](https://www.npmjs.com/package/@sap/approuter) that enables usage of the *ABAP Solution* Service offered for the *SAP Cloud Platform, ABAP Environment*.\r\n\r\n**It takes care of the following:**\r\n- User onboarding for the initial administrator of a new tenant\r\n- Routing to the right tenant url once a user onboarding is completed successfully\r\n\r\n## Usage\r\n\r\n### Approuter Middleware\r\n\r\nThis module must be loaded as an extension into the [@sap/approuter](https://www.npmjs.com/package/@sap/approuter).\r\n\r\n\r\nThe simplest way to achieve this is:\r\n```javascript\r\nconst approuter = require('@sap/approuter');\r\nconst ar = approuter();\r\n\r\nar.start({\r\n  extensions: [ require('@sap/asp-middleware') ]\r\n});\r\n```\r\n\r\n### ABAP Solution Runtime Client\r\n\r\nThe AspRuntimeClient allows you to communicate with the ABAP Solution Service to get information about your tenants.\r\n\r\n```javascript\r\nconst AspRuntimeClient = require('@sap/asp-middleware/asp-runtime-client');\r\n\r\nconst client = AspRuntimeClient.getInstance();\r\nconst tenant = client.getTenant({\r\n  consumerZoneId: '<consumer-zone-id>'\r\n})\r\n```\r\n\r\n#### Get Tenant\r\n\r\nThe parameter *consumerZoneId* is passed to you during the getDependency call (as *tenantId* URL parameter) and the onSubscription call (as *subscribedTenantId* in the body), that is by default handled by the approuter component, but can also be implemented manually.\r\n\r\nThe getTenant call results in a Promise of a Tenant object, which has the following fields:\r\n\r\n| Name | Description |\r\n|---|---|\r\n| tenantHost | The host of the ABAP tenant corresponding to this consumer |\r\n| consumerZoneId | The zone ID of the consumer (as passed into the getTenant call) |\r\n| abapServiceInstanceId | The service instance ID of the ABAP service instance the tenant is located on | \r\n| abapTenantId | The id of the ABAP tenant itself |\r\n\r\n### Configuration\r\n\r\nA service instance of service `abap-solution` in plan `standard` must be bound to the approuter application.\r\n\r\nAs a last step the `xs-app.json` must be configured to route to the `abap-solution` service. As a minimum this results in the following `xs-app.json` file:\r\n```json\r\n{\r\n\t\"authenticationMethod\": \"route\",\r\n\t\"welcomeFile\": \"/ui\",\r\n\t\"logout\": {\r\n\t\t\"logoutEndpoint\": \"/public/logout\",\r\n\t\t\"logoutPage\": \"/ui\"\r\n\t},\r\n\t\"routes\": [\r\n\t\t{\r\n\t\t\t\"source\": \"^/sap/(.*)$\",\r\n\t\t\t\"target\": \"/sap/$1\",\r\n\t\t\t\"authenticationType\": \"xsuaa\",\r\n\t\t\t\"service\": \"com.sap.cloud.abap.solution\",\r\n\t\t\t\"csrfProtection\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"source\": \"^/ui(.*)$\",\r\n\t\t\t\"target\": \"/ui$1\",\r\n\t\t\t\"authenticationType\": \"xsuaa\",\r\n\t\t\t\"service\": \"com.sap.cloud.abap.solution\",\r\n\t\t\t\"csrfProtection\": false\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n\r\n#### Custom User Onboarding Path\r\n\r\nBy configuring an environment variable called ASP_USER_ONBOARDING_PATHS, the application can decide, which paths should be intercepted for the onboarding of the initial user in the ABAP tenant. By default this is only /ui as this is the path to the ABAP Fiori Launchpad.\r\n\r\nThe variable should be configured as a JSON array. E.g. \r\n\r\n```json\r\n[\"/path/to/entry_point_1\",\"/path/to/entry_point_2\"]\r\n```\r\n\r\n## Supported Approuter versions\r\n\r\nSupported [@sap/approuter](https://www.npmjs.com/package/@sap/approuter) versions are (meaning every minor version of version 8): `^8.0.0`\r\n\r\nIt can be installed using: `npm i @sap/approuter@^8`\r\n\r\n## Getting Support\r\nCreate a BCP Ticket on `BC-CP-ABA-INT`\r\n"},{"name":"audit-logging","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/audit-logging\r\n\r\nProvides audit logging functionalities for Node.js applications.\r\n\r\n<!-- toc -->\r\n\r\n- [Overview](#overview)\r\n  * [General audit logging principles](#general-audit-logging-principles)\r\n  * [Prerequisites](#prerequisites)\r\n  * [Versions](#versions)\r\n  * [Express Middleware](#express-middleware)\r\n    - [Simple Usage](#simple-usage)\r\n    - [Making Use of the SecurityContext and User Token Exchange Flow](#making-use-of-the-securitycontext-and-user-token-exchange-flow)\r\n    - [Plugging Middleware Only When Needed](#plugging-middleware-only-when-needed)\r\n  * [mTLS Support](#mtls-support)\r\n- [API - v1](#api---v1)\r\n  * [Importing the library](#importing-the-library)\r\n  * [Data access messages](#data-access-messages)\r\n  * [Data modification messages](#data-modification-messages)\r\n  * [Update data modification](#update-data-modification)\r\n  * [Configuration change messages](#configuration-change-messages)\r\n  * [Update configuration change](#update-configuration-change)\r\n  * [General security messages](#general-security-messages)\r\n  * [Logging a message](#logging-a-message)\r\n- [API - v2](#api---v2)\r\n  * [Importing the library](#importing-the-library-1)\r\n  * [Data access messages](#data-access-messages-1)\r\n  * [Data modification messages](#data-modification-messages-1)\r\n  * [Configuration change messages](#configuration-change-messages-1)\r\n  * [General security messages](#general-security-messages-1)\r\n- [OAuth2 User Token Exchange](#oauth2-user-token-exchange)\r\n- [Local development](#local-development)\r\n  * [Without Audit log service](#without-audit-log-service)\r\n  * [With Audit log service](#with-audit-log-service)\r\n\r\n<!-- tocstop -->\r\n\r\n## Overview\r\n\r\nAudit logging is about writing entries in a specific format to a log storage. Subject to audit logging are events of significant importance.\r\nFor example, security events which may impact the confidentiality, the integrity or the availability of a system.\r\nAnother example of such an event would be access to personal data (both reading and altering) like bank accounts, political opinion,\r\nhealth status etc.\r\n\r\nWhile the consumer of ordinary logs is a system administrator who would like to keep track of the state of a system,\r\naudit logs are read by an auditor. There are legal requirements (in some countries stricter than in others) regarding audit logging.\r\n\r\nIn general the events that are supposed to be audit logged can be grouped in 3 main categories:\r\n- changes to system configurations (which may have significant effect on the system itself)\r\n- access to personal data (related to data privacy)\r\n- general security events (like starting/stopping a system, failed authorization checks etc.)\r\n\r\n\r\n### General audit logging principles\r\n\r\n- All attempts to perform an action in a system should be audit logged no matter if they have been successful or not.\r\n- Audit log entries should be consistent with the state of the system. If, for example, the writing of the audit log entry fails,\r\nbut the changes to system critical parameters have been applied, then those changes should be reverted. Best practice is to wait for\r\nthe callback of the logger before continuing with the execution of other code.\r\n- Especially important is which user (or other agent) has triggered the corresponding event that is being audit logged.\r\nFor most of the cases the library will validate that such a field is provided in the message.\r\n- All audit log entries should be in English. Numbers should be converted to strings with English locale.\r\nAll time fields should be in UTC time in order to avoid timezone and day light saving time issues.\r\n- Passwords should never be audit logged.\r\n\r\n### Prerequisites\r\n\r\nAn application using the audit log library needs to be bound to an instance of the Audit log service.\r\n\r\n### Versions\r\n\r\nThe Audit log service provides REST APIs that are available to applications for\r\nlogging relevant messages. The latest Audit log server supports 2 versions\r\nof the REST APIs. This library provides JavaScript programming interfaces for\r\nboth of these versions of the server's APIs.\r\n**Note:** It is recommended to use REST APIs v2 if available on the Audit log server being in use (and respectively the JavaScript v2 APIs).\r\nThe initial version of the Audit log server REST APIs is deprecated in favor of the v2 version. The same applies to the JavaScript APIs provided by this library.\r\n\r\n### Express Middleware\r\n\r\nThe Audit Log client provides an easier way to use the auditlog client in an express application. Below you can find a few examples on how to make use of the express middleware. The middleware works with both **v1** and **v2** of the Auditlog Service.\r\n\r\n#### Simple Usage\r\n\r\n```js\r\nconst express = require(\"express\");\r\nconst app = express();\r\n\r\nconst auditMiddleware = require('./node-audit-logging/middleware');\r\n\r\n// Config for auditLoggingService.\r\nconst auditLogConfig = {...}; // Retrieved from the environment using @sap/xsenv.\r\n// app.use(auditMiddleware(auditLogConfig, 1)); // Here we select using v1.\r\napp.use(auditMiddleware(auditLogConfig, 2));\r\n\r\napp.get('/', async function (req, res) {\r\n  let auditLog = req.auditLog;\r\n  // ...\r\n});\r\n```\r\n\r\n#### Making Use of the SecurityContext and User Token Exchange Flow\r\n\r\nIn order to make use also of the *SecurityContext* that comes from the *@sap/xssec* library, you need to make sure you import the *@sap/xssec* middleware before the auditlogging. **This only works with the OAuth2 plan.**\r\n\r\n```js\r\nconst express = require('express');\r\n// Includes required for xssec.\r\nconst passport = require('passport');\r\nconst { JWTStrategy } = require('xssec');\r\n// Includes required for auditLogging.\r\nconst auditLogMiddleware = require('@sap/audit-logging/middleware');\r\n\r\nconst app = express();\r\n\r\n// Config for xssec middelware.\r\nconst xsuaaConfig = {...}; // Retrieved from the environment using @sap/xsenv.\r\npassport.use(new JWTStrategy(xsuaaConfig));\r\napp.use(passport.initialize());\r\napp.use(passport.authenticate('JWT', { session: false, failWithError: true }));\r\n\r\n// Config for auditLoggingService.\r\nconst auditLogConfig = {...}; // Retrieved from the environment using @sap/xsenv.\r\napp.use(auditLogMiddleware(auditLogConfig));\r\n\r\napp.get('/', async function (req, res) {\r\n  let auditLog = req.auditLog;\r\n  // ...\r\n});\r\n```\r\n\r\n#### Plugging Middleware Only When Needed\r\n\r\nIf you have the case where you do not want to include the auditLog to a request, you can plug the middleware only on the routes it is required:\r\n\r\n```js\r\nconst express = require('express');\r\n// Includes required for xssec.\r\nconst passport = require('passport');\r\nconst { JWTStrategy } = require('xssec');\r\n// Includes required for auditLogging.\r\nconst auditLogMiddleware = require('@sap/audit-logging/middleware');\r\n\r\nconst app = express();\r\n\r\n// Config for xssec middelware.\r\nconst xsuaaConfig = {...}; // Retrieved from the environment using @sap/xsenv.\r\npassport.use(new JWTStrategy(xsuaaConfig));\r\napp.use(passport.initialize());\r\napp.use(passport.authenticate('JWT', { session: false, failWithError: true }));\r\n\r\n// Config for auditLoggingService.\r\nconst auditLogConfig = {...}; // Retrieved from the environment using @sap/xsenv.\r\n\r\n// In this API we need auditlog, so we add the auditLogMiddleware\r\napp.get('/withAuditLog', auditLogMiddleware(auditLogConfig), function(req, res) {\r\n    let auditLog = req.auditLog; // This will be undefined.\r\n    // ...\r\n});\r\n\r\n// Here we do not need the auditLog, so we do not add the auditLogMiddleware.\r\napp.get('/withoutAuditLog', function(req, res) {\r\n    let auditLog = req.auditLog; // This will be undefined.\r\n    // ...\r\n});\r\n```\r\n\r\n### mTLS Support\r\n\r\nThe library also supports certificate based authentication. In order to use this type of authentication, you need to create x509 credentials and pass them to the auditlog library the same way you would pass all other credential types. If you are retrieving credentials via *@sap/xsenv* you might need to create **binding** and not **service key**.\r\n\r\nFor further information how to create the appropriate credential type, visit [Audit Log Retrieval API Usage for the Cloud Foundry Environment](https://help.sap.com/products/BTP/65de2977205c403bbc107264b8eccf4b/30ece35bac024ca69de8b16bff79c413.html).\r\n\r\n## API - v1\r\n\r\nThe library provides an API for writing audit messages of type configuration changes, data modifications, data accesses and security events.\r\n\r\n### Importing the library\r\n\r\n`credentials` object is the bound audit log service's credentials.\r\nTake a look at *@sap/xsenv* package for more information on how to retrieve service credentials.\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nvar credentials = {\r\n  \"user\": \"user\",\r\n  \"password\": \"password\",\r\n  \"url\": \"https://host:port\"\r\n};\r\nvar auditLog = require('@sap/audit-logging')(credentials);\r\n```\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nvar credentials = {\r\n  \"uaa\": {\r\n    \"clientid\": \"clientid\",\r\n    \"clientsecret\": \"clientsecret\",\r\n    \"url\": \"https://host:port\"\r\n  }\r\n  \"url\": \"https://host:port\"\r\n};\r\nvar auditLog = require('@sap/audit-logging')(credentials, securityContext);\r\n```\r\n\r\n* `credentials` - Retrieved from the environment.\r\n* `securityContext` - *Optional* - created manually or through usage of the req.AuthInfo from **@sap/xssec**.\r\n\r\n### Data access messages\r\n\r\nLet's suppose we need to create an entry for a data access operation over personal data. We can achieve that with the following code:\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nauditLog.read('user123')\r\n  .attribute('username', true)\r\n  .attribute('first name', true)\r\n  .attribute('last name', true)\r\n  .accessChannel('UI')\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `read` - takes a string which identifies the object which is being *accessed*.\r\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being accessed.\r\n  * `successful` - specifies whether the access was successful or not.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `accessChannel` - takes a string which specifies *channel* of access.\r\n* `attachment(id, name)` - if attachments or files are downloaded or displayed, information identifying the attachment shall be logged.\r\n  * `id` - attachment id\r\n  * `name` - attachment name\r\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nauditLog.read('user123')\r\n  .attribute('username', true)\r\n  .attribute('first name', true)\r\n  .attribute('last name', true)\r\n  .accessChannel('UI')\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `read` - takes a string which identifies the object which is being *accessed*.\r\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being accessed.\r\n  * `successful` - specifies whether the access was successful or not.\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `accessChannel` - takes a string which specifies *channel* of access.\r\n* `attachment(id, name)` - if attachments or files are downloaded or displayed, information identifying the attachment shall be logged.\r\n  * `id` - attachment id\r\n  * `name` - attachment name\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n### Data modification messages\r\n\r\nHere is how to create an entry for a data modification operation:\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nauditLog.update('user123')\r\n  .attribute('first name', 'john', 'John')\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .log(...);\r\n```\r\n\r\n**Note**: Specifying an old and a new value for an attribute is only supported in newer versions of the Audit log service. Providing these values while working with an older version of the service results in an error in the callback. In such cases one may use the `attribute` method with an alternative signature:\r\n\r\n```js\r\nauditLog.update('user123')\r\n  .attribute('password', false)\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `update` - takes a string which identifies the object which is being *updated*.\r\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being modified.\r\n  * `oldValue` - is the current value of the attribute.\r\n  * `newValue` - is the value of the attribute after the change.\r\n\r\n  **Note**: One may use this signature of the `attribute` method only if the Audit log service being consumed supports old and new values.\r\n\r\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being modified.\r\n  * `successful` - specifies whether the modification was successful or not.\r\n\r\n  **Note**: this signature of the method is **deprecated**. It should be used only if the consumed Audit log service does not support old and new values.\r\n\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nauditLog.update('user123')\r\n  .attribute('first name', 'john', 'John')\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .log(...);\r\n```\r\n\r\n**Note**: Specifying an old and a new value for an attribute is only supported in newer versions of the Audit log service. Providing these values while working with an older version of the service results in an error in the callback. In such cases one may use the `attribute` method with an alternative signature:\r\n\r\n```js\r\nauditLog.update('user123')\r\n  .attribute('password', false)\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `update` - takes a string which identifies the object which is being *updated*.\r\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being modified.\r\n  * `oldValue` - is the current value of the attribute.\r\n  * `newValue` - is the value of the attribute after the change.\r\n\r\n  **Note**: One may use this signature of the `attribute` method only if the Audit log service being consumed supports old and new values.\r\n\r\n* `attribute(name, successful)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being modified.\r\n  * `successful` - specifies whether the modification was successful or not.\r\n\r\n  **Note**: this signature of the method is **deprecated**. It should be used only if the consumed Audit log service does not support old and new values.\r\n\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n### Update data modification\r\n\r\n```js\r\nauditLog.updateDataModification(id, isSuccessful)\r\n  .log(...);\r\n```\r\n\r\n* `updateDataModification(id, isSuccessful)` - takes two arguments.\r\n  * `id` - id of the data modification message saved earlier (see [log](#logging-a-message))\r\n  * `isSuccessful` - denotes whether the data modification was successful or not.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n**Note**: This function should only be used with an Audit log service that supports old and new values.\r\n\r\n### Configuration change messages\r\n\r\nHere is how to create an entry for a configuration change operation:\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nauditLog.configurationChange('configuration object')\r\n  .attribute('session timeout', '5', '25')\r\n  .tenant('tenantId')\r\n  .by('Application Admin')\r\n  .successful(true)\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `configurationChange` - takes a string which identifies the object which is being *configured*.\r\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being accessed.\r\n  * `oldValue` - is the current value of the attribute being changed.\r\n  * `newValue` - is the value of the attribute after the change.\r\n* `successful(isSuccessful)` - used to mark whether the configuration change is finished with success, failure.\r\n  If not called configuration change will be marked as *pending*.\r\n  * `isSuccessful` - should be a valid boolean.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nauditLog.configurationChange('configuration object')\r\n  .attribute('session timeout', '5', '25')\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .successful(true)\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `configurationChange` - takes a string which identifies the object which is being *configured*.\r\n* `attribute(name, oldValue, newValue)` - sets object attributes. It is **mandatory** to provide at least one attribute.\r\n  * `name` - is the name of the attribute being accessed.\r\n  * `oldValue` - is the current value of the attribute being changed.\r\n  * `newValue` - is the value of the attribute after the change.\r\n* `successful(isSuccessful)` - used to mark whether the configuration change is finished with success, failure.\r\n  If not called configuration change will be marked as *pending*.\r\n  * `isSuccessful` - should be a valid boolean.\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n### Update configuration change\r\n\r\n```js\r\nauditLog.updateConfigurationChange(id, isSuccessful)\r\n  .log(...);\r\n```\r\n\r\n* `updateConfigurationChange(id, isSuccessful)` - takes two arguments.\r\n  * `id` - id of the configuration message saved earlier (see [log](#logging-a-message))\r\n  * `isSuccessful` - denotes whether the configuration change was successful or not.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n### General security messages\r\n\r\nHere is how to create a general security audit log message:\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .externalIP('127.0.0.1')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\r\n* `externalIP` - states the IP of the machine that contacts the system. It is not mandatory, but it should be either IPv4 or IPv6.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `tenant` - takes a string which specifies the tenant id. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .externalIP('127.0.0.1')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(...);\r\n```\r\n\r\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\r\n* `externalIP` - states the IP of the machine that contacts the system. It is not mandatory, but it should be either IPv4 or IPv6.\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. The provided value is ignored by older versions of the Audit log service that do not support setting a tenant. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - See [here](#logging-a-message)\r\n\r\n### Logging a message\r\n\r\nUse the `log` method to write a message to the Audit log. It takes one argument - a callback function.\r\nBe aware that the state of the audit logs should be consistent with the state of the system.\r\nMake sure you handle errors from the audit log writer properly.\r\nApplication code **should wait** for the logging to finish before executing any other code.\r\n\r\n```js\r\nvar message = /* any of the above example messages */;\r\nmessage.log(function (err, id) {\r\n    // Do error handling and place all of the remaining logic here\r\n  });\r\n```\r\n\r\n* `message` - Any of the following:\r\n  * [`read`](#data-access-messages)\r\n  * [`update`](#data-modification-messages)\r\n  * [`configurationChange`](#configuration-change-messages)\r\n  * [`updateConfigurationChange`](#update-configuration-change)\r\n  * [`securityMessage`](#general-security-messages)\r\n* `err` - error object in case of error.\r\n* `id` - Id of the message that is saved. Use it when you want to do [`updateConfigurationChange`](#update-configuration-change). `id` is undefined in case of [`updateConfigurationChange`](#update-configuration-change).\r\n\r\n**Note**: When a message is logged, the library checks for missing properties and will throw an error if some are missing.\r\n\r\n## API - v2\r\n\r\n### Importing the library\r\n\r\n`credentials` object with credentials for the Audit log service.\r\nTake a look at *@sap/xsenv* package for more information on how to retrieve service credentials.\r\nThe callback will be called with an error if the Audit log server does not support version 2 of the REST APIs.\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nvar credentials = {\r\n  \"user\": \"user\",\r\n  \"password\": \"password\",\r\n  \"url\": \"https://host:port\"\r\n};\r\n\r\nvar auditLogging = require('@sap/audit-logging');\r\nauditLogging.v2(credentials, function(err, auditLog) {\r\n  if (err) {\r\n    // if the Audit log server does not support version 2 of the REST APIs\r\n    // an error in the callback is returned\r\n    return console.log(err);\r\n  }\r\n});\r\n```\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nvar credentials = {\r\n  \"uaa\": {\r\n    \"clientid\": \"clientid\",\r\n    \"clientsecret\": \"clientsecret\",\r\n    \"url\": \"https://host:port\"\r\n  }\r\n  \"url\": \"https://host:port\"\r\n};\r\n\r\nvar auditLogging = require('@sap/audit-logging');\r\nauditLogging.v2(credentials, securityContext, function(err, auditLog) {\r\n  if (err) {\r\n    // if the Audit log server does not support version 2 of the REST APIs\r\n    // an error in the callback is returned\r\n    return console.log(err);\r\n  }\r\n});\r\n```\r\n\r\n* `credentials` - Retrieved from the environment.\r\n* `securityContext` - *Optional* - created manually or through usage of the req.AuthInfo from **@sap/xssec**.\r\n*Note: This method is backwards compatible if you provide the callback instead of the securityContext it will still work.*\r\n\r\n### Data access messages\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nauditLog.read({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\r\n  .attribute({ name: 'status' })\r\n  .attribute({ name: 'date-of-birth', successful: true })\r\n  .attachment({ id: 'exam-results-9537' })\r\n  .attachment({ id: 'recommendations-4381', name: 'file.doc' })\r\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\r\n  // multiple data subjects can also be provided in array format as following:\r\n  //  .dataSubjects([{ type: 'student', id: { student_id: 'st_913' }, role: 'foreign student' },\r\n  //                 { type: 'student', id: { student_id: 'st_619' }, role: 'foreign student' }])\r\n  .accessChannel('UI')\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(function (err) {\r\n\r\n  });\r\n```\r\n\r\n* `read` - takes a JavaScript object which identifies the object which contains the data being accessed. Should have `type` and `id` properties.\r\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally a `successful` property. It is **mandatory** to provide at least one attribute.\r\n* `attachment(attachment)` - takes an object which describes an attachment (used if attachments or files are downloaded or displayed). Should have an `id` property and optionally a `name` property.\r\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` or `dataSubjects` is **mandatory**.\r\n* `dataSubjects` - takes an array of data subject objects.\r\n* `accessChannel` - takes a string which specifies *channel* of access.\r\n* `tenant` - takes a string which specifies the tenant id.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - logs the message.\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nauditLog.read({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\r\n  .attribute({ name: 'status' })\r\n  .attribute({ name: 'date-of-birth', successful: true })\r\n  .attachment({ id: 'exam-results-9537' })\r\n  .attachment({ id: 'recommendations-4381', name: 'file.doc' })\r\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\r\n  // multiple data subjects can also be provided in array format as following:\r\n  //  .dataSubjects([{ type: 'student', id: { student_id: 'st_913' }, role: 'foreign student' },\r\n  //                 { type: 'student', id: { student_id: 'st_619' }, role: 'foreign student' }])\r\n  .accessChannel('UI')\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(function (err) {\r\n\r\n  });\r\n```\r\n\r\n* `read` - takes a JavaScript object which identifies the object which contains the data being accessed. Should have `type` and `id` properties.\r\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally a `successful` property. It is **mandatory** to provide at least one attribute.\r\n* `attachment(attachment)` - takes an object which describes an attachment (used if attachments or files are downloaded or displayed). Should have an `id` property and optionally a `name` property.\r\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` or `dataSubjects` is **mandatory**.\r\n* `dataSubjects` - takes an array of data subject objects.\r\n* `accessChannel` - takes a string which specifies *channel* of access.\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - logs the message.\r\n\r\n### Data modification messages\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nvar message = auditLog.update({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\r\n  .attribute({ name: 'status' })\r\n  .attribute({ name: 'town', old: 'Birmingham', new: 'London' })\r\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\r\n\r\nmessage.logPrepare(function (err) {\r\n  message.logSuccess(function (err) { });\r\n  // or\r\n  message.logFailure(function(err) { });\r\n});\r\n```\r\n\r\n* `update` - takes a JavaScript object which identifies the object which contains the data being updated. Should have `type` and `id` properties.\r\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally - `old` and `new` properties. It is **mandatory** to provide at least one attribute.\r\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` is **mandatory**.\r\n* `tenant` - takes a string which specifies the tenant id.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `logPrepare` - Used to log that a user has started an operation over the data.\r\n* `logSuccess` - Used to log that the operation over the data has been completed successfully.\r\n* `logFailure` - Used to log that the operation over the data has not been completed successfully.\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nvar message = auditLog.update({ type: 'online system', id: { name: 'Students info system', module: 'Foreign students' } })\r\n  .attribute({ name: 'status' })\r\n  .attribute({ name: 'town', old: 'Birmingham', new: 'London' })\r\n  .dataSubject({ type: 'student', id: { student_id: 'st_123' }, role: 'foreign student' })\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\r\n\r\nmessage.logPrepare(function (err) {\r\n  message.logSuccess(function (err) { });\r\n  // or\r\n  message.logFailure(function(err) { });\r\n});\r\n```\r\n\r\n* `update` - takes a JavaScript object which identifies the object which contains the data being updated. Should have `type` and `id` properties.\r\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name` property and optionally - `old` and `new` properties. It is **mandatory** to provide at least one attribute.\r\n* `dataSubject` - takes an object describing the owner of the personal data. Should have `type` and `id` properties. The `role` property is optional. `dataSubject` is **mandatory**.\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `logPrepare` - Used to log that a user has started an operation over the data.\r\n* `logSuccess` - Used to log that the operation over the data has been completed successfully.\r\n* `logFailure` - Used to log that the operation over the data has not been completed successfully.\r\n\r\n### Configuration change messages\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nvar message = auditLog.configurationChange({ type: 'online system', id: { name: 'Students info system', configuration: 'global-config' } })\r\n  .attribute({ name: 'session timeout', old: '5', new: '25' })\r\n  .tenant('tenantId')\r\n  .by('Application Admin')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\r\n\r\nmessage.logPrepare(function (err) {\r\n  message.logSuccess(function (err) { });\r\n  // or\r\n  message.logFailure(function(err) { });\r\n});\r\n```\r\n\r\n* `configurationChange` - takes a JavaScript object which identifies the object which contains the data being configured. Should have `type` and `id` properties.\r\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name`, `old` and `new` properties. It is **mandatory** to provide at least one attribute.\r\n* `tenant` - takes a string which specifies the tenant id.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `logPrepare` - Used to log that a user has started a configuration change operation.\r\n* `logSuccess` - Used to log that the operation has been completed successfully.\r\n* `logFailure` - Used to log that the operation has not been completed successfully.\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nvar message = auditLog.configurationChange({ type: 'online system', id: { name: 'Students info system', configuration: 'global-config' } })\r\n  .attribute({ name: 'session timeout', old: '5', new: '25' })\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z');\r\n\r\nmessage.logPrepare(function (err) {\r\n  message.logSuccess(function (err) { });\r\n  // or\r\n  message.logFailure(function(err) { });\r\n});\r\n```\r\n\r\n* `configurationChange` - takes a JavaScript object which identifies the object which contains the data being configured. Should have `type` and `id` properties.\r\n* `attribute(attribute)` - takes an object which describes an attribute. Should have a `name`, `old` and `new` properties. It is **mandatory** to provide at least one attribute.\r\n* `by` - takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**.\r\n* `tenant` - takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `logPrepare` - Used to log that a user has started a configuration change operation.\r\n* `logSuccess` - Used to log that the operation has been completed successfully.\r\n* `logFailure` - Used to log that the operation has not been completed successfully.\r\n\r\n### General security messages\r\n\r\n#### Standard Plan (deprecated)\r\n\r\n```js\r\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\r\n  .externalIP('127.0.0.1')\r\n  .tenant('tenantId')\r\n  .by('John Doe')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(function (err) {\r\n\r\n  });\r\n```\r\n\r\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\r\n* `externalIP` - states the IP of the machine that contacts the system. Specifying it is optional, but if provided, should be either IPv4 or IPv6.\r\n* `by` - takes a string which identifies the *user* performing the action. This is **mandatory**.\r\n* `tenant` - takes a string which specifies the tenant id.\r\n* `at(time)` - sets a custom timestamp for event time.\r\n* `log` - logs the message.\r\n\r\n#### OAuth2 Plan\r\n\r\n```js\r\nauditLog.securityMessage('%d unsuccessful login attempts', 3)\r\n  .externalIP('127.0.0.1')\r\n  .tenant('$PROVIDER') // or .tenant('$SUBSCRIBER', subdomain)\r\n  .by('$USER')\r\n  .at(42 || new Date() || '1970-01-01T00:00:00.042Z')\r\n  .log(function (err) {\r\n\r\n  });\r\n```\r\n\r\n* `securityMessage` - takes a formatted string as in [util.format()](https://nodejs.org/api/util.html#util_util_format_format_args).\r\n* `externalIP` - states the IP of the machine that contacts the system. Specifying it is optional, but if provided, should be either IPv4 or IPv6.\r\n* `by` -  takes a fixed string '$USER' that is a placeholder replaced by the service. This is **mandatory**. `subdomain` is an optional value used only with '$SUBSCRIBER'.\r\n* `tenant` -  takes a specific string placeholder ('$PROVIDER' or '$SUBSCRIBER') that is replaced by the service. This is **mandatory**.\r\n* `at(time)` - sets a custom timestamp for event time.f\r\n* `log` - logs the message.\r\n\r\n## OAuth2 User Token Exchange\r\n\r\nIn order to make full use of the OAuth2, you will need to provide a **SecurityContext** to the library to be able to exchange user tokens to create auditlog entries on their behalf. To understand how to create a **SecurityContext**, please review [*@sap/xssec* library](https://www.npmjs.com/package/@sap/xssec).\r\n\r\n### v1\r\n\r\n```js\r\nvar xssec = require('@sap/xssec');\r\nlet auditlog;\r\n\r\n// access_token = user access token.\r\n\r\nxssec.createSecurityContext(access_token, xsuaa, function(error, securityContext, tokenInfo) {\r\n    if (error) {\r\n        console.log('Security Context creation failed');\r\n        return;\r\n    }\r\n    auditlog = require('@sap/audit-logging')(auditLogCreds, securityContext)\r\n});\r\n```\r\n\r\n### v2\r\n\r\n```js\r\nvar xssec = require('@sap/xssec');\r\nvar auditLogging = require('@sap/audit-logging');\r\nlet auditlog;\r\n\r\n// access_token = user access token.\r\n\r\nxssec.createSecurityContext(access_token, xsuaa, function(error, securityContext, tokenInfo) {\r\n    if (error) {\r\n        console.log('Security Context creation failed');\r\n        return;\r\n    }\r\n    auditLogging.v2(auditLogCreds, securityContext, (err, auditlog) => {\r\n      auditLog = auditlog;\r\n    })\r\n});\r\n```\r\n\r\n## Local development\r\n\r\n### Without Audit log service\r\n\r\n```js\r\nvar credentials = {\r\n  logToConsole: true\r\n};\r\nvar auditLog = require('@sap/audit-logging')(credentials);\r\n\r\n// or\r\n\r\nrequire('@sap/audit-logging').v2(credentials, function (err, auditLog) {\r\n\r\n});\r\n```\r\n\r\nWhen `logToConsole` is `true` the library will ignore other credential properties and will not use the Audit log service,\r\nbut will write the messages to the console.\r\n\r\n**Hint:** If you use the *@sap/xsenv* package, you can pass the credentials through the *default-services.json* file\r\nor `VCAP_SERVICES` environment variable.\r\n\r\n### With Audit log service\r\n\r\nIf your application is not deployed in Cloud Foundry or XS Advanced,\r\nbut you have a running Audit log service somewhere, you should set the `VCAP_APPLICATION` environment variable to a string like\r\n`{ \"application_name\" : \"my-app\", \"organization_name\" : \"my-org\", \"space_name\" : \"my-space\" }`\r\n\r\n**Hint:** If you use the *@sap/xsenv* package, you can set environment variables like this:\r\n\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nxsenv.loadEnv();\r\nvar credentials = xsenv.getServices({ auditlog: 'auditlog-instance-name' }).auditlog;\r\nvar auditLog = require('@sap/audit-logging')(credentials);\r\n```\r\n\r\n*default-env.json* file:\r\n\r\n```json\r\n{\r\n  \"VCAP_APPLICATION\": {\r\n    \"application_name\" : \"my-app\",\r\n    \"organization_name\" : \"my-org\",\r\n    \"space_name\" : \"my-space\"\r\n  },\r\n\r\n  \"VCAP_SERVICES\" : {\r\n    \"auditlog\" : [ {\r\n      \"name\" : \"auditlog-instance-name\",\r\n      \"credentials\" : {\r\n        \"password\" : \"password\",\r\n        \"user\" : \"user\",\r\n        \"url\" : \"https://host:port\"\r\n      }\r\n    } ]\r\n  }\r\n}\r\n```\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n\r\n## 5.5.4- 2022-06-10\r\n\r\n### Updated\r\n- Updated devDep async to 3.2.4\r\n\r\n## 5.5.3- 2022-04-06\r\n\r\n### Changed\r\n- changed istanbul test framework with c8\r\n\r\n## 5.5.2 - 2022-03-22\r\n\r\n### Updated\r\n- Remove certificate forwarding to Auditlog service.\r\n\r\n## 5.5.1 - 2022-03-01\r\n\r\n### Fixed\r\n- - Updated xssec to v3.2.13\r\n\r\n## 5.5.0 - 2022-01-28\r\n\r\n### Added\r\n- Node.js 16.x support\r\n\r\n### Fixed\r\n- Updated *@sap/hdbext* to 7.6.0\r\n- Updated *debug* to 4.3.3\r\n\r\n## 5.4.0 - 2022-01-03\r\n\r\n### Updated\r\n- Documentation with new usage for tenant() when providing subdomain.\r\n\r\n### Fixed\r\n- $SUBSCRIBER option can now be properly used by providing a subdomain in tenant().\r\n\r\n## 5.3.0 - 2021-11-22\r\n\r\n### Added\r\n- Added mTLS support.\r\n- Custom Timestamp functionality via .at() method for messages.\r\n\r\n### Updated\r\n- Documentation with mTLS support guidelines.\r\n- Documentation with custom timestamp usage.\r\n- *@sap/xssec* library to v3.2.10.\r\n\r\n## 5.2.0 - 2021-10-08\r\n\r\n### Added\r\n- Added express middleware functionality.\r\n\r\n### Updated\r\n- Documentation with express middleware usage steps.\r\n\r\n## 5.1.0 - 2021-08-12\r\n\r\n### Added\r\n- Added support for OAuth2 plan\r\n- Added support for SecurityContext with OAuth2 (and user token exchange)\r\n\r\n## 5.0.0 - 2021-03-09\r\n\r\n### Fixed\r\n- Replaced *request* with *node-fetch* 2.6.1\r\n- Replaced *requestretry* with *fetch-retry* 4.1.0\r\n\r\n## 4.2.0 - 2021-02-22\r\n\r\n### Added\r\n- Node.js 14.x support\r\n\r\n### Fixed\r\n- Updated *@sap/hdbext* to 7.1.3\r\n- Updated *lodash* to 4.17.21\r\n\r\n## 4.1.0 - 2021-02-12\r\n\r\n### Added\r\n- Added support for passing HTTP(s) request agent options to the Service transport.\r\n  This feature is experimental and is therefore not documented. It may be changed or removed anytime.\r\n\r\n## 4.0.0 - 2021-02-09\r\n\r\n### Fixed\r\n- Update devdeps\r\n- Update debug to 4.2.0\r\n- Update requestretry to 4.1.1\r\n- Allow empty strings in objectWithTypeAndId (utils.js) check\r\n\r\n### Removed\r\n- Node.js 6.x support\r\n\r\n## 3.2.0 - 2020-08-10\r\n\r\n### Added\r\n- Add support for multiple data subjects in Data access messages, v2 API\r\n\r\n## 3.1.1 - 2020-07-27\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 3.1.0 - 2019-12-06\r\n\r\n### Added\r\n- Node.js 12.x support\r\n- Retry logic when accessing the auditlog\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 3.0.2 - 2019-07-16\r\n\r\n### Fixed\r\n- Update dev dependencies\r\n\r\n## 3.0.1 - 2019-05-17\r\n\r\n### Fixed\r\n- Transactional messages: uuid and time fields are now updated for each log operation\r\n\r\n## 3.0.0 - 2019-04-23\r\n\r\n### Removed\r\n- Node.js v0.12 support\r\n- Node.js v4 support\r\n\r\n## 2.3.0 - 2018-12-18\r\n\r\n### Added\r\n- Node.js version 10 support\r\n\r\n### Fixed\r\n- Update `lodash` to 4.17.11\r\n\r\n## 2.2.4 - 2018-08-14\r\n\r\n### Fixed\r\n- Update dependencies.\r\n\r\n## 2.2.3 - 2018-07-17\r\n\r\n### Fixed\r\n- Update request to v2.87.0.\r\n\r\n## 2.2.2 - 2018-05-18\r\n\r\n### Fixed\r\n- Update request to v2.86.0.\r\n\r\n## 2.2.1 - 2018-04-05\r\n\r\n### Fixed\r\n- Update dependencies.\r\n\r\n## 2.2.0 - 2018-01-23\r\n\r\n### Added\r\n- npm-shrinkwrap.json.\r\n- Audit log service v2 support.\r\n\r\n### Fixed\r\n- Documentation for data access messages.\r\n\r\n## 2.1.1 - 2017-10-13\r\n\r\n### Changed\r\n- Dependencies' versions\r\n\r\n## 2.1.0 - 2017-08-08\r\n\r\n### Added\r\n- Support for old and new values in data modification messages.\r\n- Support for setting a tenant.\r\n- Support for Node.js v8.\r\n- Documentation improvements.\r\n\r\n## 2.0.1 - 2017-05-30\r\n\r\n### Fixed\r\n- Improved debug messages.\r\n\r\n## 2.0.0 - 2017-03-13\r\n\r\n### Added\r\n- The library requires the application to be bound to an instance of the **Audit log service**.\r\n- Instantiating the library now requires a configuration object containing the `credentials` from the service binding to be provided (see README.md).\r\n- `configurationChange` method is added to the API (see README.md).\r\n- `updateConfigurationChange` method is added to the API (see README.md).\r\n\r\n### Changed\r\n- `read`, `update` and `securityMessage` methods have some changes to their argument lists (see README.md).\r\n\r\n### Removed\r\n- `delete` method is removed from the API.\r\n- `create` method is removed from the API."},{"name":"bas-sdk","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP Business Application Studio SDK\r\n\r\n## Description\r\n\r\nAn SDK toolkit for SAP Business Application Studio developers.\r\n\r\n## Prerequisites\r\n\r\n- [A Long Term Support version of node.js](https://nodejs.org/en/about/releases/)\r\n\r\n## Installation\r\n\r\nThe bas-sdk repository exposes all the packages located in the \"packages-sdk\" folder.\r\n\r\nTo install the relevant SDK with npm, use the following:\r\n\r\n```\r\n  npm install @sap/bas-sdk --save\r\n```\r\n"},{"name":"cds-compiler","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Getting started\r\n\r\n\r\n<!-- markdownlint-disable MD001 MD022 -->\r\n##### Table of Contents\r\n<!-- markdownlint-enable MD001 MD022 -->\r\n\r\n[Installation and Usage](#installation-and-usage)  \r\n[Documentation](#documentation)\r\n\r\n## Installation and Usage\r\n\r\nInstall with npm:\r\n\r\n```\r\nnpm install \"@sap/cds-compiler\"\r\n```\r\n\r\nOr maintain your package.json dependencies as follows:\r\n\r\n```\r\n  \"dependencies\": {\r\n    \"@sap/cds-compiler\": \"latest\"\r\n  }\r\n```\r\n\r\n## Documentation\r\n\r\nPlease refer to the [official CDS documentation](https://cap.cloud.sap/docs/cds/).\r\n\r\n\r\n## License\r\n\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# ChangeLog for cds compiler and backends\r\n\r\n<!-- markdownlint-disable MD024 -->\r\n<!-- markdownlint-disable MD004 -->\r\n<!-- (no-duplicate-heading)-->\r\n\r\nNote: `beta` fixes, changes and features are usually not listed in this ChangeLog but [here](doc/CHANGELOG_BETA.md).\r\nThe compiler behavior concerning `beta` features can change at any time without notice.\r\n\r\n## Version 3.0.0 - 2022-06-23\r\n\r\n### Added\r\n\r\n- Instead of requiring all files on startup, they are required on an as-needed basis to reduce startup times.\r\n- Allow `*` as argument in SQL functions `count`, `min`, `max`, `sum`, `avg`, `stddev`, `var`.\r\n\r\n### Changed\r\n\r\n- cds-compiler now requires Node 14.\r\n- `compile()` and its derivates now use `fs.realpath.native()` instead of `fs.realpath()`.\r\n- Multi-line doc comments without leading `*` were inconsistently trimmed.\r\n- `@cds.persistence.skip` and `@cds.persistence.exists` are both copied to generated child artifacts\r\n  such as localized convenience views, texts entities and managed compositions.\r\n- As before, a structure value for an annotation assignment in a CDL source is flattened,\r\n  i.e. `@Anno: { foo: 1, @bar: 2 }` becomes `@Anno.foo: 1 @Anno.@bar: 2`.\r\n  Now, the structure property name `$value` is basically ignored:\r\n  `@Anno: { $value: 1, @bar: 2 }` becomes `@Anno: 1 @Anno.@bar: 2`.\r\n  The advantage is that overwriting or appending the annotation value works as expected.\r\n- Update OData vocabularies 'Common', 'UI'.\r\n- Keywords `not null` is only valid after `many String enum {...}` and no longer after `String`.\r\n- (Sub-)Elements of localized convenience views can now be annotated, e.g. `annotate localized.E:elem`.\r\n- `getArtifactCdsPersistenceName` now enforces the `csn` argument and can optionally have the `sqlDialect` passed in.\r\n- `getElementCdsPersistenceName` can optionally have the `sqlDialect` passed in.\r\n\r\n### Removed\r\n\r\n- All v2 deprecated flags.\r\n- Keyword `masked`.\r\n- `*` as generic argument to SQL functions/expressions.\r\n- All non-SNAPI options.\r\n\r\n## Version 2.15.4 - 2022-06-09\r\n\r\n### Fixed\r\n\r\n- for.odata:\r\n  + Fix derived type to scalar type resolution with intermediate `many`.\r\n- to.edm(x):\r\n  + (V4 structured) Fix key paths in combination with `--odata-foreign-keys`.\r\n  + Add `Edm.PrimitiveType` to `@odata.Type`.\r\n  + (V4 JSON) Render constant expressions for `Edm.Stream` and `Edm.Untyped`.\r\n  + Fix a bug in target path calculation for `NavigationPropertyBinding`s to external references.\r\n  + Render inner annotations even if `$value` is missing.\r\n- Update OData vocabularies 'Common', 'UI'.\r\n- to.sql/to.hdbcds/to.hdi: \"type of\"s in `cast()`s could lead to type properties being lost.\r\n\r\n## Version 2.15.2 - 2022-05-12\r\n\r\n### Fixed\r\n\r\n- Option `cdsHome` can be used instead of `global.cds.home` to specify the path to `@sap/cds/`.\r\n- to.edm(x):\r\n  + Set anonymous nested proxy key elements to `Nullable:false` until first named type is reached.\r\n  + Enforce `odata-spec-violation-key-null` on explicit foreign keys of managed primary key associations.\r\n  + Proxies/service cross references are no longer created for associations with arbitrary ON conditions.\r\n    Only managed or `$self` backlink association targets are proxy/service cross reference candidates.\r\n  + Explicit foreign keys of a managed association that are not a primary key in the target are exposed in the the proxy.\r\n  + If an association is primary key, the resulting navigation property is set to `Nullable:false` in structured mode.\r\n\r\n## Version 2.15.0 - 2022-05-06\r\n\r\n### Added\r\n\r\n- A new warning is emitted if `excluding` is used without a wildcard, since this does\r\n  not have any effect.\r\n- All scalar types can now take named arguments, e.g. `MyString(length: 10)`.\r\n  For custom scalar types, one unnamed arguments is interpreted as length, two arguments are interpreted\r\n  as precision and scale, e.g. `MyDecimal(3,3)`.\r\n- If the type `sap.common.Locale` exists, it will be used as type for the `locale` element\r\n  of generated texts entities.  The type must be a `cds.String`.\r\n- to.cdl: Extend statements (from `extensions`) can now be rendered.\r\n- Add OData vocabulary 'Hierarchy'.\r\n- CDL: New associations can be published in queries, e.g. `assoc : Association to Target on assoc.id = id`\r\n\r\n### Changed\r\n\r\n- to.edm(x):\r\n  + perform inbound qualification and spec violation checks as well as most/feasible EDM preprocessing steps\r\n    on requested services only.\r\n  + Open up `@odata { Type, MaxLength, Precision, Scale, SRID }` annotation.  \r\n    The annotations behavior is defined as follows:\r\n    + The element/parameter must have a scalar CDS type. The annotation is not applied on named types\r\n      (With the V2 exception where derived type chains terminating in a scalar type are resolved).\r\n    + The value of `@odata.Type` must be a valid `EDM` type for the rendered protocol version.\r\n    + If `@odata.Type` can be applied, all canonic type facets (`MaxLength`, `Precision`, `Scale`, `SRID`) are\r\n      removed from the Edm Node and the new facets `@odata { MaxLength, Precision, Scale, SRID }` are applied.\r\n      Non Edm type conformant facets are ignored (eg. `@odata { Type: 'Edm.Decimal', MaxLength: 10, SRID: 0 }`).\r\n    + Type facet values are not evaluated.\r\n  + V2: Propagate `@Core.MediaType` annotation from stream element to entity type if not set.\r\n- to.edm: Render constant expressions in short notation.\r\n- Update OData Vocabularies: 'Common', 'Graph', 'Validation'.\r\n\r\n### Fixed\r\n\r\n- to.cdl:\r\n  + Annotations of elements of action `returns` are now rendered as `annotate` statements.\r\n  + Annotations on columns (query sub-elements) were not always rendered.\r\n  + Doc comments on bound actions were rendered twice.\r\n  + Unapplied annotations for action parameters were not rendered.\r\n  + Unions and joins are correctly put into parentheses.\r\n  + Add parentheses around certain expressions in function bodies that require it, such as `fct((1=1))`.\r\n- to.edm(x):\r\n  + Fix a bug in top level and derived type `items` exposure leading to undefined type rendering.\r\n  + Fix a naming bug in type exposure leading to false reuse types, disguising invididual type\r\n    modifications (such as annotations, (auto-)redirections, element extensions).\r\n  + Ignore `@Aggregation.default`.\r\n  + Consolidate message texts and formatting.\r\n  + Fix navigation property binding in cross service rendering mode.\r\n  + Remove partner attribute in proxy/cross service navigations.\r\n- Core engine (function `compile`):\r\n  + Annotations for new columns inside `extend projection` blocks were not used.\r\n  + Extending an unknown select item resulted in a crash.\r\n  + Extending a context/service with columns now correctly emits an error.\r\n  + Unmanaged `redirected to` in queries did not check whether the source is an association.\r\n- parseCdl: `extend <art> with enum {...}` incorrectly threw a compiler error.\r\n- API: `compile()` used a synchronous call `fs.realpathSync()` on the input filename array.  \r\n  Now the asynchronous `fs.realpath()` is used.\r\n- On-conditions in localized convenience views may be incorrectly rewritten if an element\r\n  has the same as a localized entity.\r\n- to.sql/hdi/hdbcds:\r\n  + No referential constraint is generated for an association if its parent\r\n  or target entity are annotated with `@cds.persistence.exists: true`.\r\n  + Fix rendering of virtual elements in subqueries\r\n  + Correctly process subqueries in JOINs\r\n- to.sql/hdi: Queries with `UNION`, `INTERSECT` and similar in expressions are now enclosed in parentheses.\r\n\r\n## Version 2.14.0 - 2022-04-08\r\n\r\n### Added\r\n\r\n- cdsc:\r\n  + `--quiet` can now be used to suppress compiler output, including messages.\r\n  + `--options <file.json>` can be used to load compiler options. A JSON file is expected. Is compatible to CDS `package.json`\r\n    and `.cdsrc.json` by first looking for `cdsc` key in `cds`, then for a `cdsc` key and otherwise uses the full JSON file.\r\n  + `--[error|warn|info|debug] id1,id2` can be used to reclassify specific messages.\r\n- Add OData Vocabularies: 'DataIntegration', 'JSON'.\r\n  \r\n### Changed\r\n\r\n- Update OData Vocabularies: 'UI'.\r\n\r\n### Fixed\r\n\r\n- to.cdl:\r\n  + Delimited identifiers as the last elements of arrays in annotation values are now\r\n    rendered with spaces in between, to avoid accidentally escaping `]`.\r\n  + Identifiers in includes and redirection targets were not quoted if they are reserved keywords.\r\n- to.edm(x): Correctly rewrite `@Capabilities.ReadRestrictions.ReadByKeyRestrictions` into\r\n  `@Capabilities.NavigationPropertyRestriction` in containment mode.\r\n\r\n## Version 2.13.8 - 2022-03-29\r\n\r\n### Fixed\r\n\r\n- to.hdbcds/hdi/sql: Correctly handle `localized` in conjunction with `@cds.persistence.exists` and `@cds.persistence.skip`\r\n\r\n## Version 2.13.6 - 2022-03-25\r\n\r\n### Fixed\r\n\r\n- to.hdbcds/hdi/sql: Correctly handle `localized` in conjunction with `@cds.persistence.exists`\r\n\r\n## Version 2.13.4 - 2022-03-22\r\n\r\nNo changes compared to Version 2.13.0; fixes latest NPM tag\r\n\r\n## Version 2.13.2 - 2022-03-22\r\n\r\nNo changes compared to Version 2.13.0; fixes latest NPM tag\r\n\r\n## Version 2.13.0 - 2022-03-22\r\n\r\n### Added\r\n\r\n- CDL syntax:\r\n  + Allow to `extend E:elem` and `annotate E:elem` instead of having to write deeply nested statements.\r\n  + Enable `default` values as part of scalar type definitions.\r\n  + The following `extend` syntax variants are now possible:\r\n    ```cds\r\n    extend … with elements { … }\r\n    extend … with definitions { … }\r\n    extend … with columns { … }\r\n    extend … with enum { … }\r\n    extend … with actions { … }\r\n    ```\r\n    This syntax expresses _how_ an artifact is extended instead of _what_ is extended.\r\n  + Using `ORDER BY` in generic functions such as SAP HANA's `first_value` is now possible.\r\n- Make API function `compileSources` accept CSN objects as file content\r\n- to.edm(x): Annotate view parameters with `@sap.parameter: mandatory` (V2) and `@Common.FieldControl: #Mandatory` (V4).\r\n- to.sql/hdi/hdbcds: Introduce the annotations `@sql.prepend` and `@sql.append` that allow inserting user-written SQL\r\n  snippets into the compiler generated content. Changes in annotations `@sql.prepend` and `@sql.append` are now reflected\r\n  in the output of `to.hdi.migration`. This enables CDS Build to produce `.hdbmigrationtable` files translating such model\r\n  changes into schema changes.\r\n- API: Lists of keywords for various backends are available as `to.<backend>[.<config>].keywords`, e.g. `to.sql.sqlite.keywords`.\r\n- for.odata/to.edm(x): The draft composition hull is now also taking into account compositions in subelements.\r\n\r\n### Changed\r\n\r\n- In query entities inside services, only auto-redirect associations and compositions\r\n  in the main query of the entity.\r\n- An element now inherits the property `notNull` from its query source (as\r\n  before) or its type (like it does for most other properties);\r\n  `notNull` is then not further propagated to its sub elements anymore.\r\n- A structure element inherits the property `virtual` from its query source (as\r\n  before), but does not further propagate `virtual` to its sub elements\r\n  (semantically of course, but the CSN is not cluttered with it);\r\n  there is a new warning if a previously `virtual` query entity\r\n  element is now considered to be non-virtual.\r\n- Do not propagate annotation value `null`.\r\n  The value `null` of an annotation (and `doc`) is used to stop the inheritance\r\n  of an annotation value.  This means than other than that, a value `null` should\r\n  not be handled differently to not having set that annotation.\r\n- In the effective CSN, the structure type is only expanded if something has changed\r\n  for associations: the `target` (`keys` does not change if the `target` does not change)\r\n  unmanaged associations as sub elements are not supported anyway.\r\n- In the effective CSN, “simple” type properties like `length`, `precision`,\r\n  `scale` and `srid` are propagated even for a propagation via type.\r\n- Update OData Vocabularies: 'Capabilities', 'Common', 'Core', 'UI'.\r\n- to.sql:\r\n  + For SQL dialect `hana` referential constraints are now appended\r\n    as `ALTER TABLE ADD CONSTRAINT` clause to the end of `schema.sql`.\r\n    With option `constraintsInCreateTable` constraints are rendered into the\r\n    `CREATE TABLE` statement.\r\n  + Referential constraint names are now prefixed with `c__`.\r\n\r\n### Fixed\r\n\r\n- Properly resolve references inside anonymous aspects:\r\n  + references starting with `$self.` made the compiler dump.\r\n  + a simple `$self` did  not always work as expected (it represents the entity created via the anonymous aspect).\r\n  + other references inside deeply nested anonymous aspects induced a compilation error.\r\n- compiler: `()` inside `ORDER BY` clause was not correctly set.\r\n- parse.cdl: References in `ORDER BY` and filters are now correctly resolved.\r\n- Issue error when trying to introduce managed compositions of aspects in `mixin`s\r\n- Issue error in all cases for type references to unmanaged associations.\r\n- Avoid dump when extending an illegal definition with a name starting with `cds.`.\r\n- to.sql/to.cdl/to.hdbcds/to.hdi: Render `cast()` inside `ORDER BY`, `GROUP BY` and `HAVING` properly.\r\n- to.sql/hdi/hdbcds:\r\n  + `$self` was incorrectly treated as a structured path step.\r\n  + Correctly handle table alias in on-condition of mixin in `exists` expansion.\r\n  + Correctly handle table `$self` references to aliased fields in on-condition of mixin association\r\n    during `exists` expansion.\r\n- to.edm: Don't escape `&` as `&amp;`.\r\n- to.edmx: Escaping compliant to XML specification:\r\n  + `&` and `<` are always escaped.\r\n  + `>` is not escaped, unless it appears in text values as `]]>`.\r\n  + `\"` is escaped in attribute values only.\r\n  + Control characters are always escaped.\r\n- Ellipsis (`...`) in annotations in different layers but without base annotation now produces an error.\r\n  The old but incorrect behavior can be re-enabled with option `anno-unexpected-ellipsis-layers`.\r\n\r\n## Version 2.12.0 - 2022-01-25\r\n\r\n### Added\r\n\r\n- CDL parser: You can now use multiline string literals and text blocks.  \r\n  Use backticks (\\`) for string literals that can span multiple lines and can use JavaScript-like escape\r\n  sequences such as `\\u{0020}`.  You can also use three backticks (\\`\\`\\`) for strings (a.k.a. text blocks)\r\n  which are automatically indentation-stripped and can have an optional language identifier that is used\r\n  for syntax highlighting, similar to markdown.  In difference to the former, text blocks require the\r\n  opening and closing backticks to be on separate lines.\r\n  Example:\r\n  ````\r\n  @annotation: `Multi\r\n   line\\u{0020}strings`\r\n\r\n  @textblock: ```xml\r\n              <summary>\r\n                <detail>The root tag has no indentation in this example</detail>\r\n              </summary>\r\n              ```\r\n  ````\r\n\r\n- Enhance the ellipsis operator `...` for array annotations by an `up to ‹val›`:\r\n  only values in the array of the base annotation up to (including) the first match\r\n  of the specified `‹val›` are included at the specified place in the final array value.\r\n  An array annotation can have more than on `... up to ‹val›` items and must also\r\n  have a pure `...` item after them.  \r\n  A structured `‹val›` matches if the array item is also a structure and all property\r\n  values in `‹val›` are equal to the corresponding property value in the array value;\r\n  it is not necessary to specify all properties of the array value items in `‹val›`.\r\n  Example\r\n  ```\r\n  @Anno: [{name: one, val: 1}, {name: two, val: 2}, {name: four, val: 4}]\r\n  type T: Integer;\r\n  @Anno: [{name: zero, val: 0}, ... up to {name: two}, {name: three, val: 3}, ...]\r\n  annotate T;\r\n  ```\r\n- for.odata: Support `@cds.on {update|insert}` as replacement for deprecated `@odata.on { update|insert }` to\r\n  set `@Core.Computed`.\r\n\r\n### Changed\r\n\r\n- Update OData Vocabularies 'Aggregation', 'Capabilities', 'Common', 'Core', PersonalData, 'Session', 'UI'\r\n\r\n### Fixed\r\n\r\n- to.sql/hdi/hdbcds: With `exists`, ensure that the precedence of the existing association-on-conditions and where-conditions is kept by adding braces.\r\n- to.sql/hdi: Window function suffixes are now properly rendered.\r\n- to.sql: `$self` comparisons inside aspects are not checked and won't result in an error anymore.\r\n- to.hdbcds:\r\n  + Correctly apply the \".\"-to-\"_\"-translation algorithm to artifacts that are marked with `@cds.persistence.exists`.\r\n  + Message with ID `anno-hidden-exists` (former `anno-unstable-hdbcds`) is now\r\n    only issued if the compiler generates a SAP HANA CDS artifact which would hide\r\n    a native database object from being resolved in a SAP HANA CDS `using … as …`.\r\n- to.cdl: Annotation paths containing special characters such as spaces or `@` are now quoted, e.g. `@![some@annotation]`.\r\n- compiler: A warning is emitted for elements of views with localized keys as the localized property is ignored for them.\r\n\r\n\r\n\r\n## Older Versions\r\n\r\nThe change log for older entries can be found at\r\n[`doc/CHANGELOG_ARCHIVE.md`](doc/CHANGELOG_ARCHIVE.md).\r\n"},{"name":"cds-dk-foss","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-dk-foss\r\n\r\nThis package is no longer maintained.\r\nIts dependencies are included in [`@sap/cds-dk`](https://www.npmjs.com/package/@sap/cds-dk) module instead.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.0.2 - 2021-02-19\r\n\r\n### Changed\r\n\r\n- Package is no longer in use\r\n\r\n### Fixed\r\n\r\n- Proper license link in `package.json`\r\n\r\n### Added\r\n\r\n- Initial version of package\r\n\r\n## Version 1.0.1 - 2020-09-23\r\n\r\n### Added\r\n- Initial version of package\r\n"},{"name":"cds-dk","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-dk\r\n\r\nThe command line client and development toolkit for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap/).\r\n\r\nSee the [documentation](https://cap.cloud.sap/docs/get-started/) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 4.9.7 - 2022-06-08\r\n\r\n### Changed\r\n\r\n- Update `@sap/xsenv` to 3.3.1\r\n\r\n## Version 4.9.6 - 2022-06-08\r\n\r\n### Changed\r\n\r\n- Include `@sap/cds` 5.9.6\r\n\r\n### Fixed\r\n\r\n- `cds login` (and `cds extend`, `cds activate` if previously logged in) now properly renew token URL\r\n- Improved logging during those commands\r\n\r\n## Version 4.9.5 - 2022-05-17\r\n\r\n### Changed\r\n\r\n- Include `@sap/cds` 5.9.5\r\n- Include `@sap/cds-compiler` 2.15.2\r\n\r\n### Fixed\r\n\r\n- `cds init` uses latest Maven Java archetype version 1.24.0 for creating Java projects.\r\n\r\n## Version 4.9.4 - 2022-05-09\r\n\r\n### Changed\r\n\r\n- Include `@sap/cds` 5.9.4\r\n- Bump `axios` to latest (CVE-2022-1214)\r\n\r\n## Version 4.9.3 - 2022-04-27\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest Maven Java archetype version 1.23.1 for creating Java projects.\r\n- Include `@sap/cds` 5.9.3\r\n\r\n### Fixed\r\n\r\n- `cds add cf-manifest` now uses the correct `application` plan for the `xsuaa` service\r\n- `cds login`, `cds activate`: correctly include response in auth errors\r\n- The SAP HANA and MTA options in the project wizard in BAS now work again\r\n\r\n## Version 4.9.2 - 2022-04-11\r\n\r\n### Changed\r\n\r\n- Include `moment` 2.29.2, fixing CVE-2022-24785\r\n- Include `@sap/cds` 5.9.2\r\n- Include `@sap/eslint-plugin` 2.3.5\r\n\r\n## Version 4.9.1 - 2022-04-01\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest Maven Java archetype version 1.23.0 for creating Java projects.\r\n- Include `@sap/cds` 5.9.1\r\n- Include `@sap/cds-compiler` 2.13.8\r\n- Include `@sap/eslint-plugin` 2.3.4\r\n\r\n## Version 4.9.0 - 2022-03-28\r\n\r\n### Added\r\n\r\n- `cds parse` as convenient shortcut to `cds compile --flavor parsed`.\r\n- `cds compile --to openapi` uses value of annotation `@Common.Label` on entities, actions, and functions for operation tags, diagram includes non-primitive action and function import parameters.\r\n- `cds add` now accepts `--for <profile>` argument to create Node,js project configuration for a given profile\r\n- `cds add approuter` allows for serving your application’s UI using SAP approuter.\r\n- `cds add kibana-logging` adds Kibana-friendly logging in a more convenient way than having to manually alter the package.json.\r\n\r\n### Changed\r\n\r\n- `cds init` does not create `VS Code` file exclusions anymore, so that `.vscode/` and `.gitignore` are visible by default, allowing easier editing of these files.\r\n- `cds init` reports Maven archetype version in console if called with `--add java`.\r\n- `cds init` uses latest Maven Java archetype version 1.22.2 for creating Java projects.\r\n- `cds import` modified documentation for namespace option.\r\n- `cds import` does not create bound function imports key parameters in CSN for OData V2.\r\n- `cds import` now when `--keep-namespace` option is not given validates the file name and then converts it to complier supported format as service name .\r\n- add new methods from `FsUtil` to typescript interface.\r\n\r\n### Fixed\r\n- `cds compile --to openapi` now correctly treats `null` and the empty string as function parameters.\r\n- `cds bind --exec` no command output (STDOUT) displayed on Windows.\r\n- `cds watch` now gracefully shuts down the live reload server before exiting\r\n- `cds import` now generates correct csn for both OData V2 and V4 EDMX files where the EntityType has a BaseType entry.\r\n- `cds import` now throws an error in case of missing Association Sets.\r\n- `cds import` bug fixed for `--force` flag. Now overwrites the correct file content.\r\n- `cds import` fix will no longer capture unwanted annotations in the CSN for OData V4.\r\n- `cds import` now support annotations for properties of type `Type Definition`\r\n- `cds import` fix for supporting valid datatypes in unbounded function imports for OData V4.\r\n- `cds import` bug fixed for missing data imports for parameters with entity type not mapped to an entity set.\r\n- `cds import` now supports properties with complex type for OData V4.\r\n- `cds import` fix will now throw error if the key property of an entity is of type `Collection` for both OData V2 and V4 edmx.\r\n- `cds bind --to hana` provides more comprehensive error message in case Cloud Foundry `org` or `space` are not set.\r\n\r\n## Version 4.8.2 - 2022-03-07\r\n\r\n### Fixed\r\n\r\n- `cds import` can now capture the data for any given `EntityContainer Name` for OData V4. Earlier it only worked when the name was `EntityContainer`.\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest Maven Java archetype version 1.22.1 for creating Java projects.\r\n\r\n## Version 4.8.1 - 2022-02-15\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest Maven Java archetype version `1.22.0` for creating Java projects.\r\n\r\n### Fixed\r\n\r\n- Bump `follow-redirects` package to 1.14.8 (CVE-2022-0536)\r\n- `cds bind --exec` no command output (STDOUT) displayed on Windows.\r\n\r\n## Version 4.8.0 - 2022-01-28\r\n\r\n### Added\r\n\r\n- `cds import` now reflects the entity set and entity container level annotations in the csn.\r\n- `cds activate --sync` allows to use the synchronous server API for extension upload.\r\n\r\n### Changed\r\n\r\n- The forked package `@mendix/sqlite3` is now used instead of `sqlite3` to overcome CVE-2021-32804.  No code changes in applications are needed, as the new package installed by `npm` with the same name `sqlite3`.\r\n- [beta] The templating for `cds init` and `cds add` has been rewritten from scratch. This will allow for some new, more complex commands, such as `cds add mtx` or `cds add xsuaa`.\r\n- Use `cds bind` during `cds deploy` to store connection information in file `.cdsrc-private.json`.\r\n\r\n### Fixed\r\n\r\n- `cds import` now omits function imports with `put/delete` kind.\r\n- `cds import` has fixed the entity type to entity set mapping in OData V2.\r\n- `cds import` now supports collection type.\r\n- `cds watch` now picks a free livereload port if the standard port 35729 is already bound\r\n- `cds extend`, `cds activate`, `cds login`, and `cds logout` now prioritize command-line options over saved settings\r\n- MTX client now logs fewer characters of secrets in debug output\r\n- MTX client now handles incomplete error responses better\r\n\r\n## Version 4.7.3 - 2022-01-14\r\n\r\n### Changed\r\n\r\n- Bump `follow-redirects` package to 1.14.7 (CVE-2022-0155)\r\n\r\n## Version 4.7.2 - 2021-12-15\r\n\r\n### Fixed\r\n\r\n- `cds add lint` uses JSONC parser to read ESLint config files of type `.eslintrc[.js,.cjs,.json]`.\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest Maven Java archetype version `1.21.0` for creating Java projects.\r\n\r\n## Version 4.7.1 - 2021-12-06\r\n\r\n### Fixed\r\n\r\n- `cds activate` authentication no longer fails\r\n- `cds.compile.to.openapi` does no longer crash if `cds.compile` was already initialized\r\n\r\n## Version 4.7.0 - 2021-12-06\r\n\r\n### Added\r\n\r\n- `cds add data --for` can be passed a regular expression, allowing more flexible name filters.  For example `--for '^Supplier$'` would only match entity `Supplier`, but not `SupplierAddress`.  Note that as before, `--for Supplier` is interpreted as `--for '^Supplier.*'`, i.e. matches both entities.\r\n- `cds init --add hana` and `cds add hana` now add a `undeploy.json` file containing wildcards. This ensures that SAP HANA artefacts are automatically cleaned-up in case views, unique keys or constraint definitions of associations have been changed in CDS model.\r\n\r\n### Changed\r\n\r\n- `cds import` now adds annotations for missing ON conditions in associations instead of appending it in `doc`.\r\n- `cds import` has updated mapping for OData V2 and V4\r\n- `cds add lint` now configures `csv` files in `.vscode/settings.json`\r\n- `cds add hana` for Java projects now adds an `engines.node` version of `^16` to the generated `db/package.json`, to pin the Node.js version.  This will help in the future when runtime environments change their default to some version higher than the one supported by `@sap/hdi-deploy`.\r\n- `cds add mta` for Node.js projects now adds `npm ci` commands instead of `npm install`.  This makes use of `package-lock.json` to enforce reproducible builds.\r\n- `cds watch` now ignores folders named `target`, to avoid restarts when Maven's build output changes\r\n\r\n### Fixed\r\n\r\n- `cds import` throws warning messages for unsupported data types.\r\n- `cds watch` allows the explicit `--with-mocks` option, although this is anyways included by default\r\n- `cds watch` no longer runs into multiple restarts if many files are changed at once, like in git branch changes\r\n\r\n## Version 4.6.4 - 2021-11-24\r\n\r\n### Fixed\r\n\r\n- `cds import` fix for TypeError issue during OData V2 EDMX conversion to CSN.\r\n- `cds import <file_name>` fix now updates the service name in the `package.json` with only the file name. Earlier, the service name sometimes used to be of the form `A.B`, with `A` being file name and `B` being a part of the schema namespace value in the EDMX file\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest Maven Java archetype version `1.20.3` for creating Java projects.\r\n\r\n## Version 4.6.3 - 2021-11-16\r\n\r\n### Fixed\r\n\r\n- `cds watch` recovers again from compilation errors and properly prints these\r\n- `cds import` fix for omitting empty `doc` components.\r\n- `cds add lint` no longer duplicates initial contents in `package.json`\r\n- `cds add data` no longer ignores imported services for which credentials are stored in the project\r\n\r\n## Version 4.6.2 - 2021-11-09\r\n\r\n### Fixed\r\n\r\n- `cds add lint` now correctly detects missing local `eslint`\r\n- `cds add lint` no longer removes parts of `package.json`\r\n- `cds add lint` no longer creates duplicate configuration entries\r\n\r\n## Version 4.6.1 - 2021-11-08\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.20.0` for creating Java projects.\r\n- `cds watch` now resolves local node modules like `hdb` even though `@sap/cds` is not installed locally.  This is useful during development where `@sap/cds` shall only be installed in a 'central' location, while extra modules shall still be found in the app's dir.\r\n\r\n### Fixed\r\n\r\n- `cds repl` now finds modules like `hdb` that are installed locally in the app folder\r\n- `cds repl` now enables the `await` statement also on Windows\r\n- `cds lint` now limits all file extensions to those allowed by the @sap/eslint-plugin-cds ESLint configuration\r\n\r\n## Version 4.6.0 - 2021-11-02\r\n### Added\r\n\r\n- `cds bind` binds the given service to a hana instance by storing the credentials in `.cdsrc.json` in your user home directory [beta].\r\n- `cds import` introduced option `--include-namespaces` which imports the custom defined namespaces.\r\n- `cds import` preserve documentation in CSN file for actions and functions from OData V4 EDMX file.\r\n- `cds import` now supports reading values of the `as` option from cds.env\r\n\r\n### Fixed\r\n\r\n- `cds import` fix for reflecting only supported datatypes in csn for actions and functions for OData V4.\r\n- `cds import` fix for TypeError issue (#9868) during OData V4 EDMX conversion to CSN.\r\n- `cds watch` no longer omits starting some services every other time it is restarting the process\r\n- `cds-ts watch` now honors a local `tsconfig.json` file\r\n- `cds import` fix for TypeError issue (#9950) during OData V2 EDMX conversion to CSN.\r\n- `cds import` fix to generate the csn (#9950) during OData V2 EDMX conversion to CSN.\r\n- `cds import` fix to replace the aliases with original schema namespace value.\r\n- `cds import` adds `@cds.persistence.skip` back to imported models.  Its accidental removal in 4.5.0 caused wrong DB deployments of imported entities.\r\n\r\n## Version 4.5.4 - 2021-10-07\r\n\r\n### Fixed\r\n\r\n- `cds watch` no longer fails if started with `--ext`, `--livereload`, or `--open` arguments\r\n\r\n## Version 4.5.3 - 2021-10-05\r\n\r\n### Fixed\r\n\r\n- `cds import` fix for `--dry` shortcut `-`\r\n- `cds import` fix for missing type properties in csn for unbounded action and function in OData V4.\r\n- A  bug with `cds init` when called in BAS project wizard\r\n\r\n## Version 4.5.2 - 2021-09-30\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.19.0` for creating Java projects.\r\n\r\n### Fixed\r\n\r\n- `cds deploy --to sqlite` now writes `credentials.database` again to `package.json`\r\n\r\n## Version 4.5.1 - 2021-09-29\r\n\r\n### Added\r\n\r\n- `cds import` introduced option `--as` which converts EDMX file to different file formats such as cds, csn and json.\r\n- `cds import` introduced flag `--f` which forcefully overwrite the content of existing cds file when specified with `--as` option.\r\n\r\n### Changed\r\n\r\n- Marked `cds lint` as beta again to further investigate issues from 'extends' via prettier plugin.\r\n\r\n## Version 4.5.0 - 2021-09-23\r\n\r\n### Added\r\n\r\n- `cds import` supports import of functions, action, functionimport and actionimport from both OData V2 and V4 EDMX files.\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.18.1` for creating Java projects.\r\n\r\n### Fixed\r\n\r\n- `cds watch` additional CLI args were not passed to launched process, for example, `--odata x4`.\r\n- `cds import` fix for TypeError issue during OData V4 EDMX conversion to CSN.\r\n- `cds import` fix for multi-line documentation text in OData V2 EDMX file.\r\n- `cds import` fix for V4 CSN generation when non standard OData vocabularies are referred.\r\n- `cds add data`\r\n    + no longer fails for entities without keys\r\n    + no longer creates csv files for synthetic draft entities\r\n    + no longer creates entries for virtual fields\r\n    + no longer skips over entities marked with `@cds.persistence.skip`, which is true for 'external' entities created by `cds import`.\r\n- `cds init --add` handles comma list correctly.\r\n- `cds import` fix for multi-line documentation text in OData V4 EDMX file.\r\n- `cds import` fix preserves the missing entities in csn for OData V2 EDMX file.\r\n\r\n\r\n## Version 4.4.2 - 2021-09-03\r\n\r\n### Fixed\r\n\r\n- Use latest `cds-sidecar-client` to fix file upload in `cds activate`\r\n\r\n## Version 3.5.3 - 2021-08-31\r\n\r\n### Fixed\r\n\r\n- Use latest `cds-sidecar-client` to fix file upload in `cds activate`\r\n\r\n## Version 4.4.1 - 2021-08-03\r\n\r\n### Fixed\r\n\r\n- Use `@sap/eslint-plugin-cds@2.0.4`\r\n\r\n## Version 4.4.0 - 2021-08-02\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.17.0` for creating Java projects.\r\n\r\n### Fixed\r\n\r\n- Fixed bug when logging in Business Application Studio during `New Project from Template` wizard.\r\n- `cds import` fix for <documentation> tag in Odata V2 for EntityType and ComplexType.\r\n- `cds help` does not crash with `this.load is not a function` in exotic installations\r\n\r\n## Version 4.3.3 - 2021-07-26\r\n\r\n### Fixed\r\n\r\n- Removed internal links in `npm-shrinkwrap.json`\r\n\r\n## Version 4.3.2 - 2021-07-26\r\n\r\n### Changed\r\n\r\n- Bumped version of `@sap/cds` to 5.3.2\r\n\r\n## Version 3.5.2 - 2021-07-21\r\n\r\n### Changed\r\n\r\n- Bump to latest versions\r\n- Use latest `cds-sidecar-client` to fix CVE-2021-33502\r\n\r\n## Version 4.3.1 - 2021-07-12\r\n\r\n### Changed\r\n\r\n- New version of `@sap/eslint-plugin-cds`\r\n\r\n## Version 4.3.0 - 2021-07-08\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.16.3` for creating Java projects.\r\n- `cds init` generates dependency entry for `hdb` instead of `@sap/hana-client`.\r\n- Reworked templates for cds linter.\r\n\r\n### Added\r\n\r\n- `cds import` now supports OData V4 edmx files.\r\n- `cds-ts` executable starts `cds` CLI with [`ts-node`](https://www.npmjs.com/package/ts-node) to allow JIT compilation of Typescript\r\n- `cds` CLI will give you a best guess if a command cannot be found, e.g. in case of a typing mistake.\r\n- `cds.import` as API alternative to `cds import` command to convert edmx files to csn [beta]\r\n- `cds.compile.to.openapi` as API alternative to `cds compile --to openapi` to convert CDS models to OpenAPI definitions\r\n\r\n### Fixed\r\n\r\n- `cds import` fix for <documentation> tag in Odata V2 and <Annotation> tag in Odata v4\r\n- `cds import` now sets the `kind` attribute in package.json to the correct `odata-v2` value for OData v2 services.\r\n- `cds import` now maps edm.DateTime to cds.DateTime for Odata V2.\r\n- `cds compile --to edmx-v2/edmx-v4` now uses correct file naming when compiling a single CDS service.\r\n\r\n## Version 4.2.1 - 2021-06-09\r\n\r\n### Fixed\r\n\r\n- `cds deploy` w/o any file arguments now works again and no longer fails with `No cds models found at/in ''`.\r\n\r\n\r\n## Version 4.2.0 - 2021-06-07\r\n\r\n### Added\r\n\r\n- `cds add data` creates csv files with basic header lines for the entities in the project.  `--for` option allows for selecting individual entities or namespaces.\r\n\r\n### Fixed\r\n\r\n- `cds deploy` called with multiple sources ignored all but the first one\r\n- `cdd add mta` now sets a buildpack for the server modules (Node.js or Java).  This improves deploy performance and avoids issues with buildpack priorities, leading to potentially wrong buildpacks selected.\r\n- On drag and drop of an edmx file, `cds watch` now imports it in the proper working dir\r\n- `cds import` now moves the edmx file again to `srv/external` instead of copying it.\r\n\r\n## Version 4.1.5 - 2021-05-21\r\n\r\n### Fixed\r\n\r\n- An issue with opening URLs on Windows\r\n- `cds` CLI no longer adds `cds.compile.to.openapi` generically into all commands.  This turned out to load cds configuration from wrong folders, introducing subtle side effects.  Now, only the `cds compile` command adds `cds.compile.to.openapi`.  If you use `cds.compile.to.openapi` in other flows, like at runtime, please use `cds compile --to openapi` instead.\r\n- Include `@sap/cds` 5.1.5\r\n- Include `@sap/cds-runtime` 3.1.1\r\n- Include `@sap/cds-compiler` 2.2.8\r\n- Include `@sap/eslint-plugin-cds` 1.1.4\r\n\r\n## Version 4.1.4 - 2021-05-12\r\n\r\n### Fixed\r\n\r\n- Include `@sap/cds` 5.1.4\r\n- Include `@sap/cds-compiler` 2.2.6\r\n- Include `@sap/eslint-plugin-cds` 1.1.3\r\n\r\n## Version 4.1.3 - 2021-05-12\r\n\r\n### Fixed\r\n\r\n- Include `@sap/cds` 5.1.3\r\n\r\n## Version 4.1.2 - 2021-05-12\r\n\r\n### Fixed\r\n\r\n- Include `@sap/cds` 5.1.2\r\n\r\n## Version 4.1.1 - 2021-05-07\r\n\r\n### Fixed\r\n\r\n- Include `@sap/cds` 5.1.1\r\n\r\n## Version 4.1.0 - 2021-05-06\r\n\r\n### Added\r\n\r\n- `cds watch --open` opens the app in the browser with a given URL (part)\r\n\r\n### Changed\r\n\r\n- If `cds watch` encounters a port that is already in use, it now just runs on an arbitrary port instead of a trying to search the next port available.\r\n- `cds init` uses latest `Maven Java archetype` version `1.15.3` for creating Java projects.\r\n\r\n### Fixed\r\n\r\n- `cds compile --to hdbtable, hdbcds` no longer creates duplicate file extensions.\r\n\r\n## Version 4.0.7 - 2021-04-16\r\n\r\n### Changed\r\n\r\n- Bumped versions of `@sap/cds`, `@sap/cds-compiler`\r\n\r\n### Fixed\r\n\r\n- Lookup for `eslint` during `cds add lint`\r\n\r\n## Version 4.0.6 - 2021-04-15\r\n\r\n### Changed\r\n\r\n- Bumped versions of `@sap/cds`, `@sap/cds-runtime`, `@sap/cds-compiler`\r\n\r\n\r\n## Version 4.0.5 - 2021-04-12\r\n\r\n### Changed\r\n\r\n- Bumped version of `@sap/eslint-plugin-cds`\r\n\r\n## Version 4.0.4 - 2021-04-12\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.15.0` for creating Java projects.\r\n\r\n\r\n## Version 4.0.3 - 2021-04-07\r\n\r\n### Changed\r\n\r\n- `cds compile --to xsuaa`, `edmx-v2`, and `edmx-v4` have moved from `@sap/cds` to `@sap/cds-dk`.\r\n\r\n### Fixed\r\n\r\n- `cds init` now works if started in file paths with spaces\r\n\r\n## Version 4.0.2 - 2021-04-01\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.14.3` for creating Java projects.\r\n- `npm-shrinkwrap.json` format version 2 is now used, produced by `npm` 7\r\n- `npm-shrinkwrap.json` now contains integrity hashes\r\n\r\n### Fixed\r\n\r\n- Allow blanks in cds-dk installation path when running `cds init`.\r\n\r\n## Version 4.0.1 - 2021-03-24\r\n\r\n### Fixed\r\n\r\n- Many things in linter\r\n\r\n## Version 4.0.0 - 2021-03-19\r\n\r\n### Added\r\n\r\n- `cds watch` is now a [live reload](https://www.npmjs.com/package/livereload-js) server, allowing for automatic page refreshes in browsers whenever a file has changed.\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.14.0` for creating Java projects.\r\n- `cds watch` has dropped its fallback support for `nodemon` through the `CDS_USE_NODEMON` configuration.\r\n- `cds add hana` now sets `hdbtable` as deployment format for SAP HANA\r\n\r\n### Fixed\r\n\r\n- `cds watch` no longer runs in an endless restart loop if started in the user's home dir.\r\n\r\n## Version 3.5.1 - 2021-03-12\r\n\r\n### Changed\r\n\r\n- Bump version of `@sap/cds` to 4.6.5\r\n\r\n## Version 3.5.0 - 2021-03-01\r\n\r\n### Changed\r\n- `cds init` creates projects with latest version of `sqlite3` again.\r\n- `cds add mta` now creates a mta.yaml file that correctly handles spring boot .jar and .war archives.\r\n\r\n### Fixed\r\n\r\n- `cds env` does not longer fail with an exception for unknown commands\r\n\r\n## Version 3.4.2 - 2021-02-19\r\n\r\n### Fixes\r\n\r\n- `cds init` now refers to the latest HDI deployer which supports Node.js 14\r\n\r\n### Changed\r\n\r\n- `cds init` uses latest `Maven Java archetype` version `1.13.1` for creating Java projects.\r\n- Bump version of `@sap/cds` to 4.5.3\r\n\r\n## Version 3.4.1 - 2021-02-17\r\n\r\n### Changed\r\n\r\n- Bump version of `@sap/cds` to 4.5.2\r\n- Bump version of `@sap/cds-runtime` to 2.8.6\r\n- Bump version of `@sap/cds-compiler` to 1.49.2\r\n\r\n### Fixed\r\n\r\n- `cds watch` now shuts down its child process properly, so that `EADDRINUSE` errors in Business Application Studio are gone\r\n\r\n## Version 3.4.0 - 2021-02-02\r\n### Changed\r\n- `cds init` uses latest `Maven Java archetype` version `1.12.1` for creating Java projects.\r\n- `cds init` allows `_` in project name and leaves conversion to `Maven Java archetype`.\r\n- `cds init --add notebook` and `cds add notebook` now use a Python venv and offer a default Jupyter Notebook viewer.\r\n- [beta] Multi-target Node.js applications can now be initialized with multitenancy support by running `cds init --add mta,mtx`.\r\n\r\n## Version 3.3.5 - 2021-01-20\r\n\r\n### Changed\r\n\r\n- Bump versions of `@sap/cds`\r\n\r\n## Version 3.3.4 - 2021-01-12\r\n\r\n### Changed\r\n\r\n- Bump versions of `@sap/cds` and `axios`\r\n\r\n## Version 3.3.3 - 2020-12-18\r\n\r\n### Changed\r\n\r\n- Bump versions of `@sap/cds`, `@sap/cds-runtime`, and `@sap/cds-sidecar-client`\r\n\r\n## Version 3.3.2 - 2020-12-07\r\n\r\n### Changed\r\n\r\n- Bump version of `@sap/cds` to 4.4.5\r\n\r\n## Version 3.3.1 - 2020-12-04\r\n\r\n### Changed\r\n\r\n- Bump version of `@sap/cds` to 4.4.4 and `@sap/cds-runtime` to `2.7.5`\r\n\r\n## Version 3.3.0 - 2020-12-02\r\n\r\n### Added\r\n\r\n- `cds init` and `cds add` now support the feature `notebook` to create a Jupyter Notebook in a project.\r\n- `cds compile --to openapi` adds support for OpenAPI 3 to `cds compile`.\r\n- If the server port is in use, `cds watch` offers to restart the server with a new port.\r\n- `cds init` uses latest `Maven Java archetype` version `1.11.0` for creating Java projects.\r\n- `cds init --add pipeline` and `cds add pipeline` will now use the general purpose pipeline of project \"Piper\".\r\n- `cds login`, `cds extend` and `cds activate` now also support clientid/clientsecret as parameters. This is needed when extending multitenant\r\napplications provided as as reusable services\r\n(see [CP documentation](https://controlcenter.ondemand.com/index.html#/knowledge_center/articles/2316430f7d804820934910db736cefbf)).\r\n- `cds init --add mta` and `cds add mta` now always set the `cloud` Spring profile for Java apps. Before, it was only set if a binding to an SAP HANA service was present.\r\n\r\n### Changed\r\n\r\n- `cds add cf-manifest` now adds a dependency to the `java_buildpack`.\r\n- `sqlite3` is now an optional dependency to `cds-dk`.  This means that an installation failure of `sqlite3`, e.g. in environments w/o Internet connectivity, no longer leads to an overall installation error.  This behavior suits Java applications, as these usually don't need an SQLite database.  Node.js applications still require a proper installation of `sqlite3` if they use this database.\r\n\r\n### Fixed\r\n\r\n- `cds add cf-manifest` now only adds db-deployer module if HANA service binding exists.\r\n- `cds init --add hana` now adds `requires.db.kind: \"sql\"` to cds configuration for Node.js and Java\r\n- `cds watch` no longer fails in SAP Business Application Studio when trying to find `sqlite3`.  `cds deploy --to sqlite` still has that issue, which is to be solved in a future version.\r\n- `cds deploy --to hana` now prefers to use an app-local install of `@sap/cds`, much like other `cds` commands\r\n\r\n## Version 3.2.1 - 2020-11-20\r\n\r\n### Fixed\r\n\r\n- `cds import` no longer creates `.csn` files with invalid `kind:ComplexType` fields\r\n\r\n## Version 3.2.0 - 2020-11-03\r\n\r\n### Added\r\n\r\n- `cds watch` now allows to set the `--in-memory` flag that is passed to `serve`.\r\n\r\n### Changed\r\n\r\n- `@sap/cds-dk` is again shrinkwrapped, so that builds get reproducible again\r\n- All `cds` commands now prefer a local installation of `@sap/cds`.  This enables applications better control over the version of `@sap/cds`.\r\n- `cds add cf-manifest` generates the service application with the `random-route: true` flag, which avoids route clashes on CF during development.\r\n\r\n### Fixed\r\n\r\n- `cds run` finds its `express` module again in the case where no `express` is installed in the application.\r\n- `cds env` now also displays properties that have a value `false` or `''`.\r\n- Leading flags in `cds` CLI work again, like `cds --to sql my.cds`\r\n- `cds compile --to` w/o an argument now fails with a better message\r\n\r\n### Removed\r\n\r\n\r\n## Version 3.1.4 - 2020-10-27\r\n\r\n### Fixed\r\n\r\n- `cds run` finds the `sqlite3` module again if `cds` is used from a globally installed `@sap/cds-dk`.\r\n\r\n\r\n## Version 3.1.3 - 2020-10-26\r\n\r\n### Fixed\r\n\r\n- `cds run` finds the `express` package again in the case where no `express` is installed in the application's `node_modules`.\r\n\r\n\r\n## Version 3.1.2 - 2020-10-16\r\n\r\n### Changed\r\n- `cds init` uses latest `Maven Java archetype` version `1.10.0` for creating Java projects.\r\n\r\n### Fixed\r\n- `cds deploy --to sqlite` finds the `sqlite3` module again if `cds` is used from a globally installed `@sap/cds-dk`.\r\n\r\n\r\n## Version 3.1.1 - 2020-10-07\r\n\r\n### Added\r\n- `cds compile --locations` preserves `$location` properties in CSN outputs.\r\n\r\n### Changed\r\n- `cds compile` prints a better legible JSON output to terminals\r\n- `cds compile -p` is no longer a shortcut for `--parse`, to allow `--parse ...more-args` to work.\r\n- `cds compile -f` is no longer a shortcut for `--from` (which is not implemented), but for `--flavor`.\r\n\r\n### Fixed\r\n- `cds deploy --to sqlite` now writes `requires.db.model` in `package.json` such that `cds.connect.to.('db')` works w/o further `model` options.\r\n- `cds deploy --to sqlite` with `@sap/cds` 4.2 no longer crashes due to a wrong import\r\n\r\n## Version 3.1.0 - 2020-09-30\r\n\r\n### Added\r\n- `cds compile` now supports option `flavor` with values: `files` | `sources` | `parsed` | `xtended` | `inferred`.\r\n  + `cds compile --files` maps to `--flavor files`.\r\n  + `cds compile --sources` maps to `--flavor sources`.\r\n  + `cds compile --parse` maps to `--flavor parsed`.\r\n  + `cds compile` maps to `--flavor inferred`.\r\n- `cds add cf-manifest` creates manifest.yml and services-manifest.yml allowing for Cloud Foundry native deployment.\r\n- `cds init` now supports type `nodejs` to create a Node.js based project. This is the default and can be omitted.\r\n- `cds watch`: enter `debug` or `debug-brk` to restart process in debug mode.  Other commands are `ps` and `rs`.\r\n\r\n### Changed\r\n- `@sap/cds-dk` is no longer shrinkwrapped, so that new versions from underlying `@sap` packages (like `@sap/cds`) are available w/o a new cds-dk version\r\n- `cds init` uses latest `Maven Java archetype` version `1.9.0` for creating Java projects.\r\n\r\n### Fixed\r\n- `cds watch` now passes all environment variables to the spawned sub processes, enabling for example, `cds watch --production`\r\n- `cds init` modifies artifact id and Java package name for Java projects to be standard conform.\r\n- `cds` fails with a better error message for misspelled commands\r\n\r\n\r\n## Version 3.0.0 - 2020-08-31\r\n\r\n### Changed\r\n- `cds watch` now uses version 5 of `sqlite3`\r\n- `cds watch` does not use `nodemon` anymore.\r\n  > You can continue using `cds watch` with `nodemon` by installing `nodemon` globally and setting env variable `CDS_USE_NODEMON` to true.\r\n- `cds add mta` for Java applications now determines app details like name, version etc. based on `pom.xml` and no longer from `package.json`.\r\n\r\n### Fixed\r\n- `cds add mta` now configures the Service Manager for SaaS applications. The Instance Manager is no longer used.\r\n- `cds import` no longer writes an empty file if the source and the target edmx files are the same\r\n- `cds import` yields better error messages if the input file does not exists or is invalid\r\n- `cds import` no longer writes a Windows-specific path to `package.json`\r\n- `cds init --add java` shows better error message if Maven is not installed.\r\n\r\n## Version 2.0.8 - 2020-08-07\r\n\r\n### Changed\r\n- `cds init` uses latest `Maven Java archetype` version `1.8.1` for creating Java projects.\r\n\r\n### Fixed\r\n\r\n- Fixed `cds add mta` for java projects. The Spring Cloud Profile is set by default for Java apps in order to enable the SAP HANA service binding, otherwise the sqlite db would still be used at runtime.\r\n  The environment variable JBP_CONFIG_RESOURCE_CONFIGURATION required by the classic Java runtime has been removed.\r\n\r\n## Version 2.0.7 - 2020-08-04\r\n\r\n### Added\r\n- `cds init` supports adding `samples` via `--add samples`. See `cds help init` for more details.\r\n- **Most CLI commands have moved to `@sap/cds-dk`** from `@sap/cds`.  Make sure to install the latest version with `npm i -g @sap/cds-dk`.\r\n- `cds` commands now log a hint to update to the latest `@sap/cds` if this one is still of version 3.\r\n- New command `cds login` added to simplify usage of `cds extend` and `cds activate` by providing them with automatic authentication and saving project settings.\r\n  Refreshes expired authentication tokens automatically. Optionally uses CF command-line client to determine login URLs and subdomains.\r\n  Saves authentication data in plain-text file or desktop keyring on Linux, macOS or Windows.\r\n  The latter requires an optional Node.js module `keytar` to be installed.\r\n- New command `cds logout` removes authentication data and optionally project settings.\r\n\r\n### Changed\r\n- `@sap/cdk` no longer warns about `@sap/cds` being globally installed next to it.  This was a temporary hint for the transition period to `@sap/cds-dk`.\r\n- `cds init` generates dependency to `@sap/cds` version `4` for Nodejs projects.\r\n- Use square brackets to pass array values for options to `cds init --java:mvn`.\r\n- `cds init --add pipeline` and `cds add pipeline` now create file `config.yml` in `.pipeline` folder.\r\n- Improved `launch.json` file which is created during `cds init`.\r\n- `cds add mta` now creates a mta.yaml file that sets the production flag for cds build and npm install.\r\n  This ensures that the HANA artefacts are created if `\"kind\": \"sql\"` or some `production` profile has been configured in package.json or .cdsrc.json.\r\n  Requires `@sap/cds` version >=4.x.\r\n- `cds init` uses latest `Maven Java archetype` version `1.7.0` for creating Java projects.\r\n- `cds init` no longer adds `package-lock.json` to `.gitignore` file when creating a new project.\r\n- `cds init --add hana` and `cds add hana` now use `Maven Java archetype` to create HANA related pom.xml entries.\r\n- Consistent default naming scheme for applications and services deployed to CF across the following `cds` commands `build`, `deploy`, `init` and `add`. For an application named `myapp` the SAP HANA deployer app name is `myapp-db-deployer`, the SAP HANA DB service name is `myapp-db`.\r\n\r\n### Fixed\r\n\r\n- Fixed `cds import` to support imports from symlinked sources\r\n- Fixing bug in `cds init` and `cds add` when using multiple features separated by comma.\r\n- Fixing missing log output bug in `cds init` and `cds add` when using feature `samples`.\r\n- `cds add mta` does no longer crash if no package.json file exists.\r\n\r\n## Version 1.8.6 - 2020-07-10\r\n### Changed\r\n- Service binding names have been adapted in mta.yaml created by `cds add mta` command.\r\n\r\n### Fixes\r\n- Simplified `cds env` calculation during `cds init` and `cds add`.\r\n\r\n## Version 1.8.5 - 2020-06-05\r\n\r\n### Changed\r\n- `cds init` uses latest `Maven Java archetype` version `1.6.0` for creating Java projects.\r\n\r\n## Version 1.8.4 - 2020-05-30\r\n\r\n### Changed\r\n- `cds init` uses latest `Maven Java archetype` version `1.5.2` for creating Java projects.\r\n\r\n### Fixes\r\n- An issue in `@sap/edm-converters` with missing entity sets\r\n\r\n\r\n## Version 1.8.2 - 2020-05-08\r\n### Fixes\r\n- An issue in `@sap/edm-converters` with missing entity sets\r\n\r\n\r\n## Version 1.8.1 - 2020-05-08\r\n### Fixed\r\n- An issue in `@sap/edm-converters` with missing entity sets\r\n\r\n## Version 1.8.0 - 2020-04-27\r\n\r\n### Added\r\n\r\n- `cds watch` now also accepts package names as arguments, e.g. `cds w @capire/bookshop`.\r\n- `cds add mta` now supports cds configuration `requires.db.kind:\"sql\"` which allows seamless production deployments using HANA db while keeping sqlite for local development scenario.\r\n\r\n### Changed\r\n- Parameter `verbose` in `cds init` and `cds add` is now deprecated. Use environment variable `DEBUG=true` to obtain detailed output.\r\n- `cds init` uses latest `Java archetype` version `1.4.0` for creating Java projects.\r\n- Consume new `@sap/cds-sidecar-client` due to API change.\r\n\r\n### Fixed\r\n- Fixing terminology in `cds init` and `cds add` console output.\r\n- `cds init` is logging `cds env` output only in debug mode.\r\n- Using `cds build` command in generated `mta.yaml` file.\r\n- Fixing Hana dependency during `cds init --add hana` for project type `java`.\r\n- Fixing bug in `cds init` when `cds-dk` is not installed globally.\r\n\r\n## Version 1.7.0 - 2020-03-24\r\n\r\n### Added\r\n- `cds init --add java` supports `--java:mvn` to add additional parameter.\r\n- Improvements when logging console output during `cds init`.\r\n- Link to Maven archetype documentation shown in `cds help init`.\r\n\r\n### Changed\r\n- `cds add mta` now activates the `production` profile when creating the `mta.yaml`, which is consistent with what the MTA build does.  This way, configuration like `\"[production]: {\"kind\": \"hana\"}` gets activated automatically.\r\n\r\n\r\n## Version 1.6.3 - 2020-03-05\r\n\r\n### Changed\r\n\r\n### Fixed\r\n- Proper `npm-shrinkwrap.json`\r\n- `cds init` is a bit more relaxed when checking for existing project content\r\n\r\n\r\n## Version 1.6.0 - 2020-02-25\r\n### Added\r\n- `cds init --add java` now also works with `--hana`\r\n\r\n### Changed\r\n- `cds add mta` now creates resources for SAP HANA with an explicit service type `hana`.  If deploying to trial landscapes, this needs to be changed manually to `hanatrial`.\r\n\r\n### Fixed\r\n- `cds add mta` now creates valid configuration for `uaa` and `auditlog` resources.\r\n\r\n\r\n## Version 1.5.0 - 2020-02-10\r\n\r\n### Changed\r\n- `cds init` only supports new syntax. See `cds init help` for more info.\r\n- `cds init` now supports adding template `hana` to Java projects.\r\n\r\n### Fixed\r\n- `cds add mta` fixes an issue in created mta.yaml for nodejs projects if used in xmake environment.\r\n- `cds add mta` fixes an build order issue in created mta.yaml for java projects. Now service module is built before db module.\r\n- `cds init` does not create `package.json` in db folder.\r\n\r\n### Added\r\n- `cds init` adds `private: true` and `license: \"UNLICENSED\"` to newly generated projects.\r\n- `cds init` adds a default `.hdiconfig` file when using template `hana`.\r\n- `cds init` supports Java package name via `--java:package` parameter.\r\n- `cds init` generates dependency entry for `@sap/hana-client` when using template `hana`.\r\n- `cds init` uses latest `Java archetype` version `1.3.0` for creating Java projects.\r\n- `cds init` now creates a `.cdsrc.json` file.\r\n\r\n## Version 1.4.0 - 2019-12-12\r\n\r\n### Added\r\n- Abort installation with a hint if `@sap/cds` is installed globally.\r\n- New project generation using `cds init`. See `cds help init` for details.\r\n- `cds init --add java` now creates Java projects with Spring Boot support.\r\n- `cds watch` now also watches `.properties` files\r\n\r\n### Fixed\r\n- Find locally installed modules like `passport`, so that `cds watch` and `cds run` behave symmetrically.\r\n\r\n## Version 1.3.0 - 2019-11-19\r\n\r\n### Fixed\r\n- `cds import` no longer fails due to Windows paths.\r\n\r\n### Also see\r\n- Changes of `@sap/cds` 3.20.0\r\n- Changes of `@sap/cds-sidecar-client` 1.1.2\r\n\r\n## Version 1.2.0 - 2019-10-31\r\n\r\n### Added\r\n- Experimental support for cds init\r\n\r\n\r\n## Version 1.1.3 - 2019-10-28\r\n\r\n### Fixed\r\n- `cds watch` now uses the same lookup paths for models as `cds run`\r\n\r\n### Also see\r\n- Changes of `@sap/cds` 3.18.3\r\n\r\n\r\n## Version 1.1.0 - 2019-10-08\r\n\r\n### Added\r\n- Added dependencies to `express` and `sqlite3` to ease development\r\n\r\n### Changed\r\n- Improved `cds watch`\r\n\r\n### Also see\r\n- Changes of `@sap/cds` 3.18.0\r\n- Changes of `@sap/edm-converters` 1.0.19\r\n- Changes of `@sap/generator-cds` 2.8.3\r\n- Changes of `@sap/cds-sidecar-client` 1.1.1\r\n\r\n\r\n## Version 1.0.6 - 2019-09-25\r\n\r\n### Changed\r\n\r\n- Updated version of `@sap/cds` to `3.17.8`\r\n\r\n\r\n## Version 1.0.5 - 2019-09-24\r\n\r\n### Changed\r\n\r\n- Updated version of `@sap/cds` to `3.17.7`\r\n\r\n\r\n## Version 1.0.4 - 2019-09-23\r\n\r\n### Changed\r\n\r\n- Updated version of `@sap/cds` to `3.17.6`\r\n\r\n\r\n## Version 1.0.3 - 2019-09-21\r\n\r\n### Changed\r\n\r\n- Updated version of `@sap/cds` to `3.17.5`\r\n\r\n\r\n## Version 1.0.2 - 2019-09-19\r\n\r\n### Changed\r\n\r\n- Updated version of `@sap/cds` to `3.17.4`\r\n\r\n\r\n## Version 1.0.1 - 2019-09-18\r\n\r\n### Changed\r\n\r\n- Updated version of `@sap/cds` to `3.17.2`\r\n\r\n\r\n## Version 1.0.0 - 2019-09-10\r\n\r\n### Added\r\n\r\n- Initial implementation\r\n- cds watch\r\n- cds import\r\n"},{"name":"cds-foss","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-foss\r\n\r\nThis package lists the open-source modules for CDS modules.\r\nIt's only to be used as a dependency by SAP, not by consumer apps.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 4.0.0 - 2022-06-14\r\n\r\n### Changed\r\n\r\n- Dependencies are no longer pinned and have open ranges, allowing more flexibility in reuse scenarios\r\n- `fs-extra` got removed\r\n- `yaml` got bumped to version 2\r\n\r\n## Version 3.1.1 - 2022-03-24\r\n\r\n### Changed\r\n\r\n- Bump `fs-extra` to 10.0.1\r\n\r\n## Version 3.1.0 - 2021-12-13\r\n\r\n### Changed\r\n\r\n- Bump `generic-pool` to 3.8.2\r\n\r\n## Version 3.0.0 - 2021-07-13\r\n\r\n### Changed\r\n\r\n- Bumped dependencies to current versions\r\n- Bump `fs-extra` to new major version 10\r\n\r\n## Version 2.3.1 - 2021-04-27\r\n\r\n### Added\r\n\r\n- Type definitions\r\n\r\n## Version 2.3.0 - 2021-04-01\r\n\r\n### Changed\r\n\r\n- Bumped dependencies to current versions\r\n\r\n## Version 2.2.2 - 2021-03-17\r\n\r\n### Fixed\r\n\r\n- Added missing entry for `index.js` in the package's `files` list\r\n\r\n## Version 2.2.1 - 2021-02-19\r\n\r\n### Fixed\r\n\r\n- Proper license link in package.json\r\n\r\n## Version 2.2.0 - 2020-10-26\r\n\r\n### Added\r\n- `big.js`\r\n- `xmlbuilder`\r\n\r\n## Version 2.1.0 - 2020-09-24\r\n\r\n### Changed\r\n- Bumped dependency versions\r\n\r\n## Version 2.0.0 - 2020-07-23\r\n\r\n### Changed\r\n- Bumped dependency versions\r\n\r\n## Version 1.2.0 - 2020-03-27\r\n\r\n### Changed\r\n- Bumped dependency versions\r\n\r\n## Version 1.1.0 - 2019-10-29\r\n\r\n### Added\r\n- Changelog\r\n\r\n## Version 1.0.0 - 2019-10-29\r\n\r\n### Added\r\n- Initial version of cds-foss package"},{"name":"cds-hana","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-hana\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-hana`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.25.2 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.25.1 - 2020-03-20\r\n\r\n### Removed\r\n\r\n- Timeout for update and delete statements (if needed: increase libuv's threadpool size via environment variable `UV_THREADPOOL_SIZE`)\r\n\r\n## Version 1.25.0 - 2020-03-19\r\n\r\n### Added\r\n\r\n - Single timestamp per transaction\r\n - default timeout 20s for acquiring client from pool\r\n\r\n## Version 1.24.0 - 2020-02-26\r\n\r\n### Added\r\n\r\n- Streaming from draft\r\n- Timeout for update and delete statements to handle locked records (@sap/hana-client only, default: 1s)\r\n\r\n## Version 1.23.0 - 2020-02-19\r\n\r\n### Changed\r\n\r\n- Use `like` instead of `contains` fuzzy search for `$search` queries\r\n\r\n## Version 1.22.0 - 2020-02-05\r\n\r\n### Added\r\n\r\n- Implement statement drop\r\n\r\n### Changed\r\n\r\n- SESSION_CONTEXT('APPLICATIONUSER') instead of SESSION_CONTEXT('XS_APPLICATIONUSER')\r\n- @sap/hana-client is preferred over hdb\r\n\r\n## Version 1.21.0 - 2019-12-10\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.21.0\r\n\r\n## Version 1.20.1 - 2019-11-29\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.20.1\r\n\r\n## Version 1.20.0 - 2019-11-19\r\n\r\n### Added\r\n\r\n- Method to set session context\r\n\r\n## Version 1.19.1 - 2019-10-30\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.19.1\r\n\r\n## Version 1.19.0 - 2019-10-29\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.18.1 - 2019-10-16\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.18.1\r\n \r\n## Version 1.18.0 - 2019-10-02\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.18.0\r\n\r\n## Version 1.17.1 - 2019-09-18\r\n\r\n### Fixed\r\n\r\n- Issue in streaming while using hana-client\r\n\r\n## Version 1.17.0 - 2019-09-09\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.17.0\r\n\r\n## Version 1.16.0 - 2019-08-21\r\n\r\n### Changed\r\n\r\n- Signature of the Client's constructor\r\n\r\n## Version 1.15.0 - 2019-07-23\r\n\r\n### Fixed\r\n\r\n- `@sap/hana-client` streaming extension is used only if necessary\r\n- Streaming supports `null` values\r\n\r\n## Version 1.14.0 - 2019-07-09\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.13.0\r\n\r\n## Version 1.13.0 - 2019-06-24\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.13.0\r\n\r\n## Version 1.12.0 - 2019-05-24\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.12.0\r\n\r\n## Version 1.11.1 - 2019-05-16\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.11.1\r\n\r\n## Version 1.11.0 - 2019-05-15\r\n\r\n### Changed\r\n\r\n- Improved performance by reducing calls to process.nextTick()\r\n\r\n## Version 1.10.0 - 2019-05-03\r\n\r\n### Added\r\n\r\n- Service related functions\r\n\r\n## Version 1.9.0 - 2019-04-16\r\n\r\n### Added\r\n\r\n- `client.stream()` for streaming large binaries\r\n\r\n### Changed\r\n\r\n- Make hdb default driver\r\n\r\n## Version 1.8.0 - 2019-03-29\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.8.0\r\n\r\n## Version 1.7.1 - 2019-03-19\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.7.0\r\n\r\n## Version 1.7.0 - 2019-03-19\r\n\r\n### Removed\r\n\r\n- Hana specific SQL generation for SELECT statements in case of 'contains'\r\n\r\n## Version 1.6.0 - 2019-02-25\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.6.0\r\n\r\n## Version 1.5.1 - 2019-02-12\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.5.1\r\n\r\n## Version 1.5.0 - 2019-02-06\r\n\r\n### Changed\r\n\r\n- Minimum node version 8.9.0\r\n- Improve expand performance\r\n\r\n## Version 1.4.0 - 2019-01-22\r\n\r\n### Added\r\n\r\n- `validate_certificate` and `hostname_in_certificate` to override certificate validation in local development mode\r\n- `.execute` supports placeholders in CQN\r\n\r\n## Version 1.3.0 - 2019-01-11\r\n\r\n### Changed\r\n\r\n- Use latest version of @sap/cds-sql\r\n\r\n## Version 1.2.0 - 2018-12-21\r\n\r\n### Added\r\n\r\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\r\n\r\n## Version 1.1.0 - 2018-12-12\r\n\r\n### Added\r\n\r\n- Support Deep Document CQNs\r\n\r\n## Version 1.0.3 - 2018-11-27\r\n\r\n### Changed\r\n\r\n- Throw db error instead of wrapping it in Sql Error\r\n- Use options.credentials instead of options directly\r\n\r\n### Fixed\r\n\r\n- Post processing of Binary, Boolean and Integer64\r\n\r\n## Version 0.10.0 - 2018-10-17\r\n\r\n- Refactoring and changes due to updated dependencies \r\n\r\n## Version 0.9.0 - 2018-10-04\r\n\r\n### Fixed\r\n\r\n - limit and order when expanding a to many association\r\n\r\n## Version 0.8.0 - 2018-09-17\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 0.10.0\r\n\r\n## Version 0.7.1 - 2018-09-05\r\n   \r\n### Changed\r\n\r\n- Improved npm-shrinkwrap\r\n\r\n## Version 0.7.0 - 2018-08-28\r\n\r\n### Added\r\n\r\n- Fallback in case certificate is used instead of ca at connect options\r\n\r\n### Changed\r\n\r\n- API documentation updated\r\n\r\n## Version 0.6.1 - 2018-08-09\r\n\r\n### Changed\r\n\r\n- Require submodules on demand\r\n\r\n## Version 0.6.0 - 2018-08-07\r\n\r\n### Added\r\n\r\n- Full SQL including eventual parameters to stack trace error message\r\n- Support for abstract placeholders #now and #user\r\n- Support for unary and binary expressions in contains\r\n\r\n### Changed\r\n\r\n- Increased default option of max. db connection clients to 100\r\n\r\n### Fixed\r\n\r\n- SQL error hides internal error messages and provides details in log\r\n\r\n## Version 0.5.1 - 2018-07-02\r\n\r\n### Fixed\r\n\r\n - Escaping of special characters in case of 'contains'\r\n\r\n## Version 0.5.0 - 2018-06-25\r\n\r\n### Added\r\n\r\n - Hana specific SQL generation for DROP statements\r\n - Hana specific SQL generation for SELECT statements in case of 'contains'\r\n - Added SQL Error to hide the internal information from other errors\r\n - support execution of blocks of statements\r\n - support plain mode of SQL name mapping\r\n\r\n### Fixed\r\n\r\n - CDS injection\r\n\r\n## Version 0.4.0 - 2018-05-02\r\n\r\n### Changed\r\n\r\n- connect options aligned to spec\r\n- support for latest CQN spec changes\r\n\r\n## Version 0.3.0 - 2018-04-16\r\n\r\n### Added\r\n\r\n- support CREATE statements\r\n\r\n## Version 0.2.0 - 2018-03-16 \r\n### Added\r\n\r\n- usage of npm-shrinkwrap\r\n\r\n### Changed\r\n\r\n- improved performance for expand in case of one-to-many relations\r\n"},{"name":"cds-lsp","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# CDS Language Server\r\n\r\nThe CDS language server implements the Language Server Protocol ([LSP](https://github.com/Microsoft/language-server-protocol))\r\nfor SAP's Core Data Services ([CDS](https://cap.cloud.sap/docs/cds/cdl)).\r\nIt can be used in many popular IDEs like, for example, [Visual Studio Code](https://cap.cloud.sap/docs/get-started/tools#vscode)\r\nor [Eclipse](https://cap.cloud.sap/docs/get-started/tools#eclipse).\r\nIt provides many useful features for working with and enjoying CDS sources.\r\n\r\n## Features\r\n\r\n- Syntax highlighting via Textmate grammar\r\n\r\n- Additional semantic highlighting\r\n\r\n- Source code validation providing diagnostics (error messages, warnings, ...)\r\n\r\n- Where-used navigation to\r\n    - definition\r\n    - references\r\n    - highlight occurrences\r\n\r\n- Code completion for\r\n    - keywords\r\n    - identifiers incl. not yet imported identifiers with corresponding `using` statement\r\n    - using paths and artifacts incl. showing README.md documentation as details\r\n    - i18n translation IDs\r\n    - turn on/off formatting regions\r\n\r\n- Snippets for typical CDS language construct<br/> (with documentation extracts of [capire](https://cap.cloud.sap/docs/cds/cdl) explaining language concepts)<br/> like\r\n    - namespace and context\r\n    - using\r\n    - service\r\n    - type\r\n    - entity and projections, ...\r\n    - element, associations, and compositions\r\n    - extend and annotate\r\n    - annotations for documentation\r\n\r\n- Quick fixes to\r\n    - create using statement for unknown artifacts\r\n    - maintain missing translation\r\n    - convert `@cds.doc` and `@description` annotations to doc comments\r\n\r\n- Inventory (symbols) for\r\n    - current file\r\n    - workspace incl. query capabilities to select, for example, artifact types, names, also include reuse models\r\n\r\n- Hover information based on\r\n    - doc comments\r\n    - `@title`, `@description` and ~~`@cds.doc`~~ (deprecated) annotations\r\n    - translations\r\n\r\n- Code formatting\r\n    - whole document\r\n    - selected range\r\n    - on-the-fly when completing statements using ```;``` or ```}```\r\n    - on save (depending on the IDE)\r\n    - on paste (depending on the IDE)\r\n    - with many options, configurable using\r\n        - settings file\r\n        - command line switches\r\n        - Config UI with simulation of options for Visual Studio Code and Eclipse\r\n        - JSON schema for textual support\r\n    - also for markdown in doc comments\r\n\r\n- Code formatting via CLI\r\n\r\n- Translation support\r\n    - properties, JSON, and CSV files\r\n    - navigate to translation definitions from translation IDs like ```'{i18n>customerName}'```\r\n    - show translations on hover\r\n    - quickfix to maintain missing translations\r\n\r\n- Plugin framework for external handlers of annotation domains\r\n\r\n## Usage\r\n\r\nThe CDS language server can only be used as part of an IDE extension or plugin. See [Installation](#installation) for more details.\r\n\r\nA code formatter for CDS source files is included.\r\n\r\n## Installation\r\n\r\nRefer to the [installation details](./INSTALLATION.md).\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n\r\n\r\n                                                                 \r\n## 6.0.0 - 2022-07-01\r\n\r\n### Added\r\n- support for new major cds-compiler 3.0.0\r\n- new user setting `cds.workspaceSymbols.caseInsensitive` (default off) to search case insensitive\r\n- new user setting `cds.outline.semantical` (default off) to show outline in a rather semantical structure as opposed to a flat list\r\n- analyze dependencies now supports coloring of layers for monorepos\r\n- env.cdsc is now also considered for code completion\r\n- custom requests to format given content with given options (e.g. for a _formatting options config UI_) and to get path of options file\r\n\r\n### Changed\r\n- minimum required NodeJS version is now 16.11.1\r\n- updated to Language Server Protocol v3.17.0\r\n  + definition request now returns both, name range and scope range\r\n\r\n## Fixed\r\n- fixed glitches in cds schema support for `package.json`, `.cdsrc.json` and `.cdsrc-private.json`\r\n- fixed highlighting for empty block comments `/**/`\r\n\r\n### Also see\r\n- `@sap/cds-compiler` 3.0.0\r\n\r\n\r\n## 5.5.9 - 2022-05-09\r\n\r\n### Added\r\n\r\n- support syntax highlighting for escape sequences in template strings\r\n- option to disable 'footprint' traces resulting in **no** overhead\r\n- code lens statistics\r\n\r\n### Fixed\r\n\r\n- completion proposals inside comments to turn on/off formatting\r\n- find references could have shown wrong entries from localized context\r\n\r\n### Changed\r\n\r\n- updated included capire docs\r\n\r\n## 5.5.7 - 2022-04-05\r\n\r\n### Fixed\r\n\r\n- syntax highlighting in BAS\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.13.8\r\n\r\n\r\n## 5.5.6 - 2022-03-31\r\n\r\n### Added\r\n\r\n- unit test for textmate grammar\r\n\r\n### Changed\r\n\r\n- ignore filtering is now lazy\r\n- formatting options docs are now generated\r\n- consume cds-compiler 2.13.6\r\n\r\n### Fixed\r\n\r\n- no longer set NODE_ENV to production\r\n- highlighting of single quoted strings\r\n\r\n\r\n## 5.5.5 - 2022-03-03\r\n\r\n### Added\r\n\r\n- schema file for `cds` section in `package.json`, `.cdsrc.json` and `.cdsrc-private.json`\r\n\r\n### Fixed\r\n\r\n- code completion for annotations no longer propose `@` if inside an annotation\r\n\r\n## 5.5.4 - 2022-02-28\r\n\r\n### Added\r\n\r\n- new code-formatting options for `action`s and `function`s:\r\n  + `alignActionNames` (aligns names)\r\n  + `alignActionReturns` (aligns `returns` keywords)\r\n\r\n### Changed\r\n\r\n- removed obsolete code-formatting option `alignAsInElements` (calculated fields use `=` now)\r\n- textmate grammar additionally compatible with Ruby regex engine\r\n\r\n### Fixed\r\n\r\n- code formatting:\r\n  + separate post-annotation with blank\r\n  + remove erroneous newlines around cardinality and filter in `select`\r\n  + separate projection items with newlines\r\n- code completion for annotations now correctly handle e.g: @aaa.| entity\r\n- references for annotations: plugins now get all file indexes\r\n\r\n## 5.5.3 - 2022-02-04\r\n\r\n### Added\r\n\r\n- test support for contribution providers\r\n\r\n### Changed\r\n\r\n- CDS language server back to Node 12 (5.5.0 required Node 14 which led to problems in BAS)\r\n- typings for contribution implementors are now bundled and accessible directly via `@sap/cds-lsp`\r\n\r\n### Fixed\r\n\r\n- format-cds CLI was not working under certain circumstances\r\n- syntax highlighting glitches\r\n- code formatting of nested projections\r\n\r\n## 5.5.0 - 2022-01-28\r\n\r\n### Added\r\n\r\n- Command-line interface for code formatter\r\n- CDS language server is now bundled and minified to speed up initialization\r\n- workspace symbols query now supports filters for kinds\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.12.0\r\n- code completion for `index.cds` files will now render just the folder\r\n- performance: revalidate file on focus got only if stale index\r\n- memory consumption: indexes are now cached per file, no longer per compilation\r\n\r\n### Fixed\r\n\r\n- `enum` was not indexed \r\n- `composition` of aspect was not indexed\r\n- symbols contained localized entries with recent compiler versions\r\n- workspaces with _many_ workspace folders could lead to stop lsp\r\n- syntax highlighting is now better aligned with CDS grammar:\r\n  + multi-lined strings disabled\r\n  + backslash escaping disabled\r\n  + doubled quotes inside strings to reproduce single quotes\r\n  + element types now include scopes and length/size arguments\r\n\r\n\r\n## 5.4.0 - 2021-12-03\r\n\r\n### Added\r\n\r\n- progress indication for initialization, configuration changed, references and workspace symbols\r\n- support for protocol:selectionRange (though, VSCode has a bug and does not considers it currently)\r\n\r\n### Fixed\r\n\r\n- goto definition of certain references was wrong\r\n- symlinks were not followed when scanning workspace\r\n- (speedup) indexes might got stale even model file hasn't changed\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.11.0\r\n- import artifact quickfix now shortens the using path\r\n- @sap/cds/common.cds now included by default\r\n- speedup initialization: no scan/read workspace, reusing source files first read by compiler, unless reference or workspaceSymbols require a scan\r\n- speedup: cache missed paths when compiler resolves using paths\r\n- speedup: only consider models from app/srv/db folders (according cds env) for references and workspace symbols\r\n- speedup when config changes: revalidation of files only if relevant settings changed\r\n- speedup resolution of using paths\r\n- speedup: cds env is now loaded synchronously in-process\r\n- speedup: calculate annotation diagnostics only for active file\r\n- speedup: dynamic registration of configurable requests now done asynchronously at startup\r\n- speedup: files to index for references now ordered by rank\r\n\r\n## 5.3.0 - 2021-09-23\r\n\r\n### Added\r\n\r\n- doc comments are automatically aligned\r\n\r\n### Fixed\r\n\r\n- certain localized elements were still indexed\r\n- new i18n entry in properties file has corrupted existing last entry\r\n- inconsistency in dependency calculation could have led to incorrect revalidations after a change\r\n\r\n### Changed\r\n\r\n- translation support is now lazy\r\n- performance improvements when translation files changed\r\n- last workspace/symbols are cached now to speed up CAP explorer\r\n- user setting cds.workspace.scanCsn has now three modes: Off, ByFileExtension (new default) and InspectJson \r\n\r\n\r\n## 5.2.0 - 2021-07-30\r\n\r\n### Added\r\n\r\n- new validation mode _ActiveEditorOnly_ (new default) for clients indicating support\r\n  via capability _workspace.didChangeActiveEditor_. \r\n  Other clients remain using _OpenEditorsOnly_ as default.\r\n  The new mode reduces number of compilations during editing and thus improves responsiveness.\r\n- new command to analyze using dependencies of CDS model files.\r\n  It will create a graphviz dot file that can be viewed with an appropriate viewer. \r\n  Getting an overview of file dependencies can help to keep your project architecture clean.\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.5.0\r\n\r\n\r\n## 5.1.1 - 2021-07-05\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.4.4\r\n- new performance relevant user settings\r\n    + `cds.workspace.debounceFastChanges`:  skip intermediate compilations when typing - enabled by default\r\n    + `cds.workspace.scanDependentModules`: skip scanning of node_modules - enabled by default, speeds up start-up time\r\n      Note: \r\n      - when using code completion for global identifiers (see `cds.completion.workspaceSymbols.minPrefixLength`) this option needs to be enabled\r\n      - for code completion of import paths in `using` statements this option needs to be enabled\r\n\r\n\r\n## 5.1.0 - 2021-06-22\r\n\r\n### Note\r\n\r\nThis is a quality release focusing on performance for large models.\r\nThere are new user settings and some have changed their defaults.\r\nBest performance is achieved with default settings, \r\nexcept `cds.contributions.enablement.odata` which should be switched `off` to speed up compilation, unless feature is needed.\r\n\r\nAdditonal hints to increase performance:\r\n- Within _SAP Business Application Studio_: close `CAP Data Models and Services` view. Otherwise it will ask for all workspace symbols at every change.\r\n- Settings: `Cds � Contributions � Enablement: Odata`: switch off as already mentioned above\r\n- Settings: `Editor � Goto Location: Alternative Definition Command`: do not select `goToReferences`. Otherwise being already on a definition will trigger find references which requires all dirty models to be recompiled.\r\n- Settings: `Workbench � Editor � Limit: Enabled`: switch on\r\n- Settings: `Workbench � Editor � Limit: Value`: lower the number. If open editors have `using` dependencies, a change in one editor will lead to a recompile of releated editors.\r\n- Commands `Go to References` / `Find All References` will recompile all models that might have changed due to a change in a depending model. If there are index models it often means the complete workspace is being recompiled. \r\nUntil a further change, reference calculation is resonably fast.\r\n- Command `Go to Symbol in Workspace` will recompile the complete workspace once, then it is reasonable fast\r\n- Changing settings in `CDS` section will currently perform a complete workspace invalidation i.e. required indexes will lead to recompilations on-demand as described above\r\n- Changing certain `cds.env` settings e.g. folder configurations will invalidate the workspace as well\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.3.2\r\n- user settings\r\n    + cds.workspaceValidationMode new default: OpenEditorsOnly\r\n    + cds.workspace.scanCsn new settings with default switch off (before implicitly on)\r\n    + cds.quickfix.importArtifact new setting with default off (before implicitly on)\r\n\r\n\r\n## 5.0.5 - 2021-05-11\r\n\r\n### Fixed\r\n\r\n- asynchronous scanning of workspace blocked and led to high cpu usage (mostly on Linux/macOS) \r\n\r\n\r\n## 5.0.3 - 2021-05-06\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.2.4\r\n- bug fixes\r\n\r\n## 5.0.1 - 2021-04-22\r\n\r\n### Changed/Fixed\r\n\r\n- where-used for namespaces also for compiler v2\r\n- new query flag for workspace symbols: /n to include implicit namespaces\r\n\r\n## 5.0.0 - 2021-04-02\r\n\r\n### Note\r\n\r\nThis is a major release which comes with @sap/cds-compiler v2.\r\nIt still supports cds-compiler v1 if used in your project\r\nor via global @sap/cds-dk.\r\n\r\n### Added\r\n\r\n- semantic highlighting - to be enabled via user setting `cds.semanticHighlighting.enabled`\r\n- new API for annotation handler to support semantic highlighting\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.1.4\r\n\r\n## 4.4.1 - 2021-03-17\r\n\r\n### Added\r\n\r\n- preliminary support for cds-compiler 2.x\r\n\r\n## 4.4.0 - 2021-03-01\r\n\r\n### Changed\r\n\r\n- optimizations for decreased memory consumption\r\n- consume cds-compiler 1.50.0\r\n\r\n## 4.3.0 - 2021-02-01\r\n\r\n### Added\r\n\r\n- asynchronous initialization for annotation plugins (#923)\r\n- find references for annotation plugins (#929)\r\n- revalidate workspace after an initial annotation plugin installation (#930)\r\n\r\n### Changed\r\n\r\n- new user options for where-used request (#877)<br/>\r\nuntil now this functionality was enabled by default and now needs to be enabled via user options\r\n  + generic annotations - where a certain annotation 'class' or 'namespace' is used\r\n  + strings literals - where same string literals are used\r\n\r\n- consume cds-compiler 1.49.0\r\n- compatibility with early versions of cds-compiler 2.x\r\n- simplified consumption of CDS textmate grammar for Jetbrain IDEs\r\n\r\n### Fixed\r\n\r\n- dependency analysis for compilation:\r\nif a changed file has dependencies to the roots, but the\r\nroot models do not cover it, no longer it will compile multiple\r\ntimes\r\n\r\n- translation code action was not shown in the context of annotations\r\n- code completion for annotations had a trailing @ (#883)\r\n- annotation assignment spanned beyond semantical end (#838)\r\n- code formatting of brackets enclosing multiple elements in annotations had wrong indentation\r\n- indexing of `on` condition for elements was broken\r\n- update regex to highlight `one` and `many` keyword properly\r\n\r\n## 4.2.0 - 2020-11-27\r\n\r\n### Added\r\n\r\n- quickfix for deprecated identifiers\r\n- support for quickfixes in annotation handler\r\n- internal support for incremental text updates \r\n- improved supportability with extended statistic logs\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.46.4\r\n\r\n### Fixes\r\n\r\n- for annotation handler and others\r\n\r\n## 4.1.2 - 2020-11-12\r\n\r\n### Changed\r\n\r\n- cds-lsp itself no longer dynamically registers file system watching for VSCode, BAS and Eclipse, as those configure it client-side\r\n\r\n### Fixes\r\n\r\n- bug fixes\r\n\r\n## 4.1.1 - 2020-11-06\r\n\r\n### Fixed\r\n\r\n- support for mono repo file system layouts did not work in certain cases\r\n- completion proposals for annotations were not shown at top of the list if inside an annotation\r\n\r\n## 4.1.0 - 2020-10-30\r\n\r\n### Added\r\n\r\n- support mono repo file system layouts\r\n- user option to format snippets after completion \r\n- user option to disable odata plugin\r\n- detection of slow running odata plugin (when validating) incl. user options to disable and fine tune\r\n- user option for omitRedundantTypesInSnippets for annotations\r\n\r\n### Changed\r\n\r\n- install/update contributions completely async\r\n- completion no longer suggests types when values are meant\r\n- project cds-lsp settings overrule all\r\n- consume cds-compiler 1.45.0\r\n\r\n### Fixed\r\n\r\n- validation of annotation plugins led to 100% cpu load\r\n- globally installed cds was not reliably found\r\n- code completion for annotation plugins did not work inside annotations at @ characters\r\n- bug fixes\r\n\r\n### Note\r\n\r\nFrom version 4.1.0 on, @sap/cds-lsp requires NodeJS 12.14+\r\n\r\n## 4.0.0 - 2020-09-30\r\n\r\n### Added\r\n\r\n- Plugin support for domain specific annotation handlers, featuring\r\n  - diagnostics\r\n  - code completion\r\n  - hover information\r\n  - goto definition\r\n  - quickfix to maintain translation\r\n  - auto-installation/update with user setting for npm registry\r\n\r\n- code completion inside string literals and `![...]` identifiers is automatically triggered by `/` character (additionally to `.` and `@`)\r\n  \r\n- snippets applied via code completion are now formatted\r\n\r\n- `action`s and their parameters are now indexed and support code navigation, hover etc.\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.42.0\r\n\r\n### Fixed\r\n\r\n- bug fixes\r\n\r\n### Note\r\nFrom version 4.0.0 on, @sap/cds-lsp requires NodeJS 12.8+ (was 10.16+)\r\n\r\n## 3.5.0 - 2020-09-01\r\n\r\n### Added\r\n\r\n- Code completion proposes identifiers not yet imported in current file and generates corresponding `using` statement\r\n  - user setting: minimum number of characters required to propose those identifiers (`cds.completion.workspaceSymbols.minPrefixLength`). Default is -1 (=off)\r\n  - user setting: limit number of global identifiers (`cds.completion.workspaceSymbols.maxProposals`). Default is -1 (=unlimited)\r\n- Code formatting: options `whitespaceBeforeColon` and `whitespaceAfterColon` are now supported inside anonymous structure types\r\n- Code formatting: support configuration of alignment of COMPOSITION structs (option `alignCompositionStructToRight`)\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.39.0\r\n\r\n## 3.4.3 - 2020-08-05\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.35.0\r\n\r\n## 3.4.2 - 2020-07-28\r\n\r\n### Added\r\n\r\n- new user setting `cds.completion.workspaceSymbols` (default `off`) to add workspace symbols to code completion proposals\r\n- query for workspace symbols allows new option `/f` to consider fully qualified name\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.34.0\r\n\r\n### Fixed\r\n\r\n- bug fixes\r\n\r\n## 3.4.0 - 2020-07-10\r\n\r\n### Added\r\n\r\n- support for docComments (/** ... */)\r\n  + hover over artifact will consider docComment\r\n  + snippet to create\r\n  + formatting will beautify docComments, incl. new option maxDocCommentLine\r\n  + quickFix to convert @cds.doc annotation to docComment incl. beautify\r\n  + distinct syntax highlighting for docComments\r\n- quickFix to generate using statement for not yet imported artifacts\r\n  + sorted by module and artifact name, beautified\r\n- semantic code completion for elements, enums, actions and parameters in annotate and extend (via cds-compiler 1.32.0)\r\n- syntax highlighting identifiers, including variants delimited with \\![...]\r\n- identifier completion proposals are prioritized by message severity\r\n- messages may now contain related information\r\n- added INSTALLATION.md for 3rd party IDE integrations\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.32.0\r\n- updated README.md with feature list\r\n\r\n### Fixed\r\n\r\n- enum keyword was wrongly syntax highlighted\r\n- when an ignored source file is closed, potential messages are wiped\r\n- annotations of extensions were not indexed\r\n- bug fixes\r\n\r\n## 3.3.2 - 2020-04-26\r\n\r\n### Changed\r\n\r\n- remove optional odata annotation handler due to build issues\r\n\r\n## 3.3.1 - 2020-04-24\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.26.2\r\n\r\n## 3.3.0 - 2020-04-24\r\n\r\n### Added\r\n\r\n- use global @sap/cds/common if locally not available\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.26.0\r\n- (alpha): diagnostics and hover support for external annotation providers\r\n\r\n### Fixed\r\n\r\n- Minor fixes and improvements\r\n\r\n## 3.2.1 - 2020-03-30\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.24.4\r\n\r\n## 3.2.0 - 2020-03-16\r\n\r\n### Changed\r\n\r\n* remove option for compiler location - LSP will always search Project->Global(via DK&CDS)->BuiltIn now\r\n- remove irrelevent formatting option (trimTrailingWhitespace)\r\n- consume cds-compiler 1.24.3\r\n\r\n### Fixed\r\n\r\n- formatting failed (seen in Eclipse, VSCode works) due to off-by-one error\r\n- global npm root for Business App Studio was not found with compiler.location option ProjectThenGlobalThenBuiltIn\r\n\r\n## 3.1.4 - 2020-03-04\r\n\r\n### Added\r\n\r\n- _extend_ definitions are now shown in outline and workspace symbols\r\n- api (alpha) for external annotation providers\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.24.0\r\n\r\n## 3.1.3 - 2020-02-24\r\n\r\n### Added\r\n\r\n- pick up compiler and env via global cds-dk if cds not (yet) in project\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 1.23.2\r\n\r\n## 3.1.2 - 2020-02-11\r\n\r\n### Added\r\n* code formatting\r\n    * options can now be overridden in source comments e.g. // @formatter tabSize:3\r\n    * new option to add/remove final line break\r\n    * new option to trim trailing whitespace\r\n\r\n### Changed\r\n* consume cds-compiler 1.23.1\r\n\r\n### Fixed\r\n* in some cases csn files with .json extension where not detected and thus workspace symbols were incomplete\r\n\r\n## 3.1.1 - 2020-01-30\r\n\r\n### Added\r\n* code formatting\r\n    * option to keep original empty lines\r\n* language server protocol 3.15: implement serverInfo in onInitialize\r\n\r\n### Fixed\r\n* formatting options were taken from homedir instead of preferring from project\r\n\r\n## 3.1.0- 2020-01-24\r\n\r\n### Added\r\n* translation support\r\n    * now with all formats supported by runtime (.properties, .json, .csv) incl. quick fixes to create missing entries\r\n    * now with customizations supported by runtime (filename, folder name, fallback_bundle, default_language)\r\n        * if entries of fallback language are missing but are defined for default language the latter ones are used\r\n        * if property files or json nodes or csv header only has default language defined (and not raw), quick fix will use default language\r\n        * quick fix for json and csv formats now try to keep entries sorted\r\n        * navigation from translation reference in cds source files to value supported for all formats\r\n* allow .cdsprettier.json to be located in user home dir\r\n\r\n### Changed\r\n* code formatting\r\n    * improve alignment of types, values, and preceding `:` or `=` operators\r\n* consume cds-compiler 1.22.0\r\n\r\n### Fixed\r\n* code formatting\r\n    * fix, improve, and allow to better adjust alignments and whitespace\r\n    * fix alignment of annotations in `annotate` statement\r\n    * fix casing of and indentation after `Association` and `Composition`\r\n    * fix formatting of parts of `select` statement in case of nesting and after `in`\r\n    * fix positioning of brace `{` after annotation if requested to be kept in previous line\r\n    * fix bug where token starting with `$` was merged\r\n* in the past file changes via watcher were automatically sent for all files in VSCode.\r\n  In recent versions of VSCode this has changed to only sent files supported by language server type (cds).\r\n  A fix was made to dynamically register for relevant side-files like\r\n  package.json, .cdsrc.json, all supported translation file formats, ignore files\r\n  to keep track of changed environment\r\n\r\n## 3.0.0 - 2019-12-16\r\nOfficial support for code formatting\r\n\r\n### Changed\r\n* code completion\r\n    * more snippet variants for extend\r\n    * no longer differ entity suggestions between within service or outside\r\n    * base types with parameters now suggested as simply keyword w/o params and additional suggestion as snippet (param names now enclosed in < >)\r\n    * changed label indicator for snippets from <> to ellipsis\r\n* consume cds-compiler 1.21.1\r\n* code formatting\r\n    * rework formatting options: add/remove options according to relevance, rename/group options for clarity, change default behavior in some cases\r\n    * various improvements, including in case statements and bracketed conditions\r\n\r\n### Fixed\r\n* code formatting\r\n    * fix alignment of annotations in views\r\n    * safely identify unreserved keywords\r\n\r\n## [2.1.21]\r\n### Fixes\r\n* Fix indentation after element definitions using Association or Composition\r\n\r\n## [2.1.20]\r\n### Added\r\n* support LSP configuration via settings file in workspace incl. logs in workspace\r\n\r\n### Changed\r\n* consume cds-compiler 1.20.3\r\n\r\n### Fixed\r\n* fix: extraction of root models did no longer work since @sap/cds#3.19\r\n* code formatting\r\n    * Fix indentation of keywords `union`, `except`, and `minus`\r\n    * Make alignments more consistent generally\r\n    * Improve readability by padding operators with blanks\r\n    * Improve alignment of bracketed conditions\r\n\r\n## [2.1.19]\r\n* consume cds-compiler 1.20.0\r\n* fixes and enhancements in code formatting\r\n\r\n## [2.1.18]\r\n* syntax highlighting: now supports 'default' keyword, plus minor fixes\r\n* removed dependencies to ts-md5 and vscode-uri\r\n* **for all IDE providers**: _out_ folder was renamed to _lib_\r\n* new internal URI handling: especially on Windows no longer encode drive letter colon\r\n\r\n## [2.1.17]\r\n* minor text polishing for config UI\r\n\r\n## [2.1.16]\r\n* fixes and enhancements for code formatting\r\n    * renamed settings file to .cdsprettier.json\r\n    * schema with parentOption and basic markdown support for label (new) and description\r\n* renamed tmLanguage for syntax highlighting\r\n* consume cds-compiler 1.19.2\r\n\r\n## [2.1.15]\r\n* fixes and enhancements for code formatting\r\n* clean-ups in LSP project setup\r\n* consume cds-compiler 1.19.1\r\n\r\n## [2.1.13]\r\n* fix regression: schema file was not included\r\n\r\n## [2.1.12]\r\n* fix minor issues\r\n\r\n## [2.1.11]\r\n* schema for formatting options with category, description, code sample, suboptions, enum values\r\n* now sits on node 10+\r\n* consume cds-compiler 1.18.1\r\n\r\n## [2.1.10]\r\n* Fixes and enhancement for syntax highlighting and code formatting\r\n\r\n## [2.1.9]\r\n* Syntax highlighting now uses different classifications (=colors) for annotations and comments\r\n* Support user settings in $LSP/.cds-lsp/.settings.json for IDEs which do not support user settings (Eclipse, Intellij, ...)\r\n* No longer report compiler messages for csn files\r\n* Preparation for config editor for formatting options\r\n* Deadlock detection and prevention for code formatting incl. option to cancel or try best in case\r\n* Use json parsing from compiler for csn files (which allows comments etc.)\r\n* Fixes and enhancements in source formatting\r\n* consume cds-compiler 1.17.3\r\n\r\n## [2.1.8]\r\n* code formatting - many fixes and enhancements\r\n    * now on by default but still experimental\r\n* syntax highlighting reworked for CDL and CQL keywords\r\n* where-used index now with using path segments\r\n* updated cds documentation (in code completion)\r\n* outline now shows contexts and services with fully qualified name\r\n* other fixes and improvements\r\n* consume cds-compiler 1.17.0\r\n\r\n## [2.1.7]\r\n* consume cds-compiler 1.16.2\r\n* fixes and improvements\r\n\r\n## [2.1.6]\r\n* beautify: improve alignment of comments and robustness\r\n* bug fix: outline showed entries not contained in file\r\n\r\n## [2.1.5]\r\n* consume cds-compiler 1.16.1\r\n* beautification for annotations and CQL\r\n\r\n## [2.1.4]\r\n* consume cds-compiler 1.15.0\r\n* user option to enable beautify: cds.experimental.beautify.enable (default false)\r\n\r\n## [2.1.3]\r\n* consume cds-compiler 1.14.0\r\n\r\n## [2.1.2]\r\n* consume cds-compiler 1.13.4\r\n* using compiler from project workspace now default\r\n\r\n## [2.1.1]\r\n* consume cds-compiler 1.13.1\r\n* performance improvements (less compilations and reduced memory footprint)\r\n* Links to folders in using statement are now resolved\r\n\r\n## [2.1.0]\r\n* consume cds-compiler 1.12.1\r\n* new where-used index with less memory consumption and support for references of custom annotations, built-in types, string constants and better tracking of identifiers in CQL\r\n* targets of using statement now rendered as links (via documentLink request)\r\n\r\n## [2.0.8]\r\n* performance optimizations for translation support\r\n* consume cds-compiler 1.10.0\r\n\r\n## [2.0.7]\r\n* new switch: cds.compiler.markMissingI18nDefault (default: off) to show problem markers for unresolved i18n references\r\n* bug fixes\r\n\r\n## [2.0.6]\r\n* consume cds-compiler 1.9.0\r\n* bug fixes\r\n\r\n## [2.0.5]\r\n* fix dependency installation in public cloud\r\n* consume cds-compiler 1.8.1\r\n\r\n## [2.0.4]\r\n* suggest @sap/cds/common as default path in using snippet if dependency to @sap/cds is present\r\n\r\n## [2.0.3]\r\n* fixes\r\n\r\n## [2.0.2]\r\n* consume cds-compiler 1.8.0\r\n\r\n## [2.0.1]\r\n* doc support (snippet for localization, hover on translation id)\r\n* consume cds-compiler 1.7.1\r\n* new unofficial switch cds.compiler.showInternalErrors\r\n* cds-compiler 1.7.1\r\n\r\n## [2.0.0]\r\n* Snippets for title and description\r\n* Code completion for translation references\r\n* Create translation properties file in quickfix if none existing\r\n* fixes\r\n\r\n## [1.4.25]\r\n* support for cds.doc\r\n* cds-compiler 1.6.0\r\n\r\n## [1.4.24]\r\n* Goto-definition for paths in using statement\r\n* New user preference to configure minimum severity of compilation problems\r\n* Compiler 1.5.0\r\n* Fix support of git and git+https dependencies\r\n\r\n## [1.4.23]\r\n* code completions for using statement paths\r\n* reworked snippets\r\n* minor fixes\r\n\r\n## [1.4.22]\r\n* CSN files are now detected and including in where-used index e.g. for workspace symbols\r\n* Introduce per-file compilation mode which speeds up where-used features expecially for large workspaces. User setting cds.compilation.mode (default PerFile)\r\n* Installation of dependencies in package.json files\r\n    * now configurable via user setting cds.autoInstallDependencies (default off)\r\n    * if turned on it only reinstalls if dependency definitions exist and have changed since last install. Other changes in package.json files are ignored\r\n    * package.json files are no longer reformatted when installing dependencies\r\n    * .cdsignore can be used to exclude paths from installation e.g. test folders with package.json files\r\n* In internal landscape within WebIDE it is now possible to use git-git-URLs to internal github in addition to https-git-URLs\r\n* Compiler 1.3.0\r\n* Trace now measures durations with high precision, includes compilation footprint (number of files and size of compiled sources) and shows memory changes\r\n"},{"name":"cds-messaging","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-messaging\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-messaging`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.8.3 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.8.2 - 2020-03-19\r\n\r\n### Added\r\n\r\n- It is now possible to set the queue configuration with the `queueConfig` property in the credentials section\r\n  https://help.sap.com/doc/75c9efd00fc14183abc4c613490c53f4/Cloud/en-US/rest-management-messaging.html#_queuep\r\n\r\n### Removed\r\n\r\n- Bound events are not supported anymore\r\n\r\n## Version 1.7.0 - 2020-02-19\r\n\r\n### Changed\r\n\r\n- Updated version number for public release\r\n\r\n## Version 1.6.0 - 2020-02-05\r\n\r\n### Added\r\n\r\n- Support for `prefix` credentials options to prefix topics\r\n\r\n### Changed\r\n\r\n- You can no longer set the namespace outside of the `credentials` block\r\n\r\n### Fixed\r\n\r\n- Fixed bug where non-trimmed data causes problems in file-based messaging\r\n\r\n## Version 1.5.0 - 2019-12-10\r\n\r\n### Fixed\r\n\r\n- Receiving chunks can be an array with more than one item\r\n\r\n## Version 1.4.0 - 2019-11-19\r\n\r\n### Removed\r\n\r\n- The `namespace` property of a services does not need to be set anymore\r\n\r\n## Version 1.3.0 - 2019-10-29\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.2.1 - 2019-10-16\r\n\r\n### Added\r\n\r\n- `headers` parameter for `.emit`\r\n \r\n## Version 1.2.0 - 2019-10-02\r\n\r\n### Changed\r\n\r\n- Minor improvements\r\n\r\n## Version 1.1.1 - 2019-09-18\r\n\r\n### Added\r\n\r\n- File-based-messaging: If you set the file to true or \"default\", the default file name is chosen\r\n\r\n### Changed\r\n\r\n- File-based-messaging: Default file location ist set to <tmp_dir>/cds-message-box\r\n- File-based-messaging: File configuration is moved to credentials block\r\n- For external (cloud-event-based) services, the data property is now in message.data (before it was message.data.data)\r\n\r\n## Version 1.1.0 - 2019-09-09\r\n\r\n### Added\r\n\r\n- Queue name can be specified by setting the `queue` property\r\n- You can now use `srv.on('my/custom/topic', ()={...})` to register on topics\r\n  and `srv.emit('my/custom/topic, {...})` to emit messages with topics (If your\r\n  topic contains only one segment, you must write `topic:myCustomTopic`)\r\n\r\n### Changed\r\n\r\n- The hashes in generated topic or queue names now only consist of 4 characters\r\n- Default file name of 'file-based-messaging' is <temporary_directory>/message_box\r\n\r\n### Fixed\r\n\r\n- Special characters in topic and queue names are now omitted\r\n- Non-JSON payloads are now ignored\r\n- OAuthToken request occacionally fails\r\n\r\n### Removed\r\n\r\n- `srv.on.topic` and `srv.emit.to.topic`\r\n\r\n## Version 1.0.1 - 2019-08-26\r\n\r\n### Changed\r\n\r\n- Package '@sap/xb-msg-amqp-v100' is only dev dependency\r\n\r\n## Version 1.0.0 - 2019-08-21\r\n\r\n### Added\r\n\r\n- Initial implementation\r\n"},{"name":"cds-mtx","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-mtx\r\n\r\nLibrary for multitenancy and extensibility support for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap).\r\n\r\nSee the documentation for [Multitenancy](https://cap.cloud.sap/docs/guides/deployment/as-saas) and [Extensibility](https://cap.cloud.sap/docs/guides/extensibility) for more details.\r\n\r\n## License\r\n\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 2.5.6 - 2022-05-18\r\n\r\n### Added\r\n- Tenant upgrades can now scale beyond a single database.\r\n- The tenant IDs are now exposed in the provisioning service (`/mtx/v1/provisioning/tenantIds`).\r\n- The SaaS Provisioning Service `UPDATE` event type is now also supported.\r\n- By setting cds environment `mtx.provisioning.lazymetadatacontainercreation: true`, the creation of the `__META__` container can be postponed to the first onboarding again. In case the onboarding request contains additional parameters for the container creation, these parameters will also be used for the creation of the `__META__` tenant, except if the parameters are also set via cds environment `mtx.provisioning.metadatacontainer`.\r\n\r\n### Fixed\r\n- When using a custom folder setup for native artifacts for HDI, the `cfg` folder is now correctly included for the HDI deployment\r\n\r\n## Version 2.5.5 - 2022-04-14\r\n\r\n### Changed\r\n- Improved logging in the context of requesting tokens.\r\n\r\n## Version 2.5.4 - 2022-04-04\r\n\r\n### Changed\r\n- If enabled via `cds.env.mtx.security.metadata-scope-checks`, the v2 CSN and EDMX APIs, as well as all metadata APIs are now scope-checked for `mtdeployment`.\r\n- Tokens sent to the command-line client are now reduced in scope for security reasons.\r\n\r\n### Fixed\r\n- `MT_LIB_TENANT-`-prefixed tenants used by the Java runtime are now correctly ignored by the `cds-mtx` sidecar.\r\n\r\n## Version 2.5.3 - 2022-03-14\r\n\r\n### Fixed\r\n- Provisioning parameters for the container creation can now also be set exclusively for the `__META__` container via cds environment `mtx.provisioning.metadatacontainer` or environment variable `CDS_MTX_PROVISIONING_METADATACONTAINER`. Tenant containers are not affected by that cds environment.\r\n- Configuration parameters for the `@sap/instance-manager` module can now be passes using cds environment `mtx.provisioning.instancemanageroptions` or environment variable `CDS_MTX_PROVISIONING_INSTANCEMANAGEROPTIONS`. See also [@sap/instance-manager](https://www.npmjs.com/package/@sap/instance-manager).\r\n- Upgrade calls for non-existing tenants do no longer create orphan HDI containers\r\n- More robust handling of inconsistent HDI container having no tenant id (error \"TypeError: Cannot read property 'toLowerCase' of undefined\")\r\n\r\n## Version 2.5.2 - 2022-01-26\r\n\r\n### Added\r\n- It is now checked if CDS annotations `@sql.append` and `@sql.prepend` are used in extensions. Using these annotations in extensions is currently not allowed.\r\n\r\n\r\n### Fixed\r\n- API `/mtx/v1/provisioning/tenant` does no longer return duplicate tenants in case of concurrent API calls.\r\n- Dependencies to `VCAP_SERVICES` environment have been removed. Service dependencies can now be fully defined via `cds.env`, except for databases shared between tenants.\r\n\r\n## Version 2.5.1 - 2021-12-09\r\n\r\n### Fixed\r\n- The `cds-mtx`-provided `.hdiconfig` now does not overwrite the application-provided one during deployment. This fixes an issue in parallel tenant upgrades for a large number of tenants, where the unlinking of the previously existing `.hdiconfig` failed occasionally.\r\n\r\n## Version 2.5.0 - 2021-12-06\r\n\r\n### Added\r\n- Binding of both service-manager and managed-hana is now supported. To enable it, you have to\r\nset the feature flag `cds.features.hybrid_instance_manager` to true. Please note that you also\r\nneed a compatible version of `@sap/instance-manager`.\r\n\r\n## Version 2.4.2 - 2021-12-02\r\n\r\n### Fixed\r\n- Authentication request for cds extension client is now returning token again\r\n- `hdbmigrationtable` files from an updated model with multiple new migration versions\r\nare now correctly merged with tenant specific `hdbmigrationtable` files\r\n\r\n\r\n## Version 2.4.1 - 2021-11-09\r\n\r\n\r\n### Fixed\r\n- Additional HDI_DEPLOY_OPTIONS do no longer affect the stability\r\nof the meta tenant creation\r\n- Reduction of redundant file system operations to improve stability of\r\ntenant upgrade\r\n\r\n## Version 2.4.0 - 2021-11-02\r\n\r\n### Added\r\n- Added parameter `subscriptionData` to `TenantPersistenceService.deleteTenant` so that\r\ncustom handlers get more information about the tenant that is deleted. Can be `{}`\r\nif there was a failed deletion attempt before that already removed the metadata.\r\n- Database deployment is now internally called via cds service `TenantPersistenceService` that\r\n  applications can add handlers for\r\n  ```\r\n  @protocol:'rest'\r\n  service TenantPersistenceService {\r\n      type JSON {\r\n          // any json\r\n      }\r\n      ...\r\n      action deployToDb(sourceDir: String, instanceData: JSON, deploymentOptions: JSON, additionalServices: JSON);\r\n  }\r\n  ```\r\n  Please note that this API is not meant to be called by applications but has been\r\n  introduced to allow applications to create handlers for custom logic to be executed\r\n  with the database deployment.\r\n- You can now diagnose deployed tables using `mtx/v1/diagnose/tables/<tenantId>`.\r\n\r\n### Changed\r\n- Parallel tenant upgrades have been optimized so that build results for non-extended tenants are shared and the number of database interactions is reduced.\r\n- An `EventTypeMissingError` is now thrown when the `eventType` parameter is missing at tenant creation.\r\n\r\n### Fixed\r\n- APIs `mtx.getEdmx(tenantId, service, language, odataVersion)` and the endpoint\r\n`/mtx/v1/metadata/edmx/<tenant-id>?name=<service>&language=<lang>&odataVersion=<version>`\r\nnow reuse the preuild edmx if `odataVersion` equals configured version (`cds.odata.version`)\r\n- Job list returned by diagnose API now contains correct results\r\n- Offboarding via CDS transactions is now working without an explicit `where` clause, i.e. you can simplify\r\n  ```js\r\n  await transaction.delete('tenant', tenantId).where({ subscribedTenantId: tenantId })\r\n  ```\r\n  into\r\n  ```js\r\n  await transaction.delete('tenant', tenantId)\r\n  ```\r\n\r\n## Version 2.3.4 - 2021-10-18\r\n\r\n### Fixed\r\n- Fixed full build logs not being part of the jobs logs.\r\n\r\n## Version 2.3.3 - 2021-10-14\r\n\r\n### Fixed\r\n- Job status reports for asynchronous tenant base model updates now contain the correct build and deployment logs.\r\n- With HANA build task configurations having subfolders, e. g. `sap/db` instead of `db`,\r\nnative HANA artifacts and csv files are now deployed correctly.\r\n- API `mtx/v1/model/content` now also works with tenant from url as specified\r\n- Update of tenant metadata containers on HANA Cloud no longer fails\r\n\r\n## Version 2.3.2 - 2021-10-06\r\n\r\n### Added\r\n- Additional user-provided services are now accessible for the deployment\r\n\r\n### Fixed\r\n\r\n- The `mtx/v1/diagnose/jobs` API will now correctly deliver job information about jobs in memory.\r\n- Compatibility with cds < @sap/cds@5.5.0 when running onboarding, upgrade or extend on java projects\r\nhas been fixed.\r\n\r\n## Version 2.3.1 - 2021-09-30\r\n\r\n### Fixed\r\n- Configuration `mtx.jobs.parallelUpgradeLimit` is now correctly limiting the number\r\nof parallel tenant upgrades.\r\n\r\n## Version 2.3.0 - 2021-09-27\r\n\r\n\r\n### Fixed\r\n- The maximum filename length of sources files that are stored with the tenant metadata has been\r\nincreased from 200 to 500. The tenant metadata store will be updated accordingly with any tenant\r\noperation (extend, upgrade).\r\n- Exceptions from asynchronous jobs are now visible in the application log again\r\n\r\n### Added\r\n- Tenant upgrade is now internally called via cds service `TenantPersistenceService` that\r\n  applications can add handlers for\r\n  ```\r\n  @protocol:'rest'\r\n  service TenantPersistenceService {\r\n      type JSON {\r\n          // any json\r\n      }\r\n      ...\r\n      action upgradeTenant(tenantId: UUID, instanceData: JSON, deploymentOptions: JSON) returns JSON;\r\n  }\r\n  ```\r\n  Please note that this API is not meant to be called by applications but has been\r\n  introduced to allow applications to create handlers for custom logic to be executed\r\n  with the tenant upgrade.\r\n- (BETA) It is now possible to get the edmx for services with a different odata version than the version configured\r\nfor the build. API `mtx.getEdmx(tenantId, service, language, odataVersion)` and the endpoint\r\n`/mtx/v1/metadata/edmx/<tenant-id>?name=<service>&language=<lang>&odataVersion=<version>` now supports a parameter `odataVersion`.\r\nPlease note that the output is compiled on-the-fly if `odataVersion` is specified which has potential impact on the performance.\r\nYou will also have to run a tenant upgrade for existing tenants (`/mtx/v1/model/upgrade`) to get a correct result.\r\n- Extensions can now be reset via API `/mtx/v1/model/reset` and `/mtx/v1/model/asyncReset`.\r\n- The job removal timeout is now configurable using `cds.mtx.jobs.removalTimeout`.\r\n- `mtx.jobs.maxParallelExecutions` can now be used to parallelize asynchronous jobs. The default is `2`.\r\n\r\n### Changed\r\n\r\n- Tenant updates are now parallelized. You can set the pool size using `mtx.jobs.parallelUpgradeLimit`. The default is `4`.\r\n- `mtx.jobs.intervalTimeout` is now deprecated, as the job queue does not require polling any more.\r\n- The default queue size for asynchronous jobs has been increased to `1000`.\r\n- In case of errors, the full `hdi-deploy` logs are now also printed for the default logging level.\r\n\r\n## Version 2.2.2 - 2021-08-26\r\n\r\n### Fixed\r\n- Fixed a regression where the `ExtendCDSdelete` scope was required for extension activations even without `undeployExtension` set to `false`.\r\n- Fixed an application crash at startup when `MTX_DISABLE_META_TENANT_CREATION` is set and no Instance/Service Manager credentials are available.\r\n\r\n### Added\r\n- There are new APIs for diagnosing memory, asynchronous jobs, and HDI containers. They can be called via\r\n  - `/mtx/v1/diagnose/memory`\r\n  - `/mtx/v1/diagnose/jobs`\r\n  - `/mtx/v1/diagnose/container/<tenantId>`\r\n\r\n  Note that with this change, the `/mtx/v1/model/diagnose` API is not available any more.\r\n  The new API will work out-of-the-box with `@sap/cds >= 5.5.0`, but you have to opt-in with earlier versions by setting\r\n\r\n  ```json\r\n  \"mtx\": {\r\n    \"api\": {\r\n      \"diagnose\": true\r\n    }\r\n  }\r\n  ```\r\n  in your `package.json`.\r\n\r\n## Version 2.2.1 - 2021-08-19\r\n\r\n\r\n### Changed\r\n- To reduce the number of logs, the HDI deployment output is now only logged in debug mode.\r\n- Tenant metdata request via `mtx/v1/provisioning/tenant/` are now cached.\r\n\r\n### Fixed\r\n- Native HANA table data properties files are now supported.\r\n- `MT_LIB_TENANT-*`-prefixed tenants are now ignored when requesting `mtx/v1/provisioning/tenant`. This fixes a compatibility problem when using the `CDS_MULTITENANCY_DATASOURCE_HANADATABASEIDS` environment variable.\r\n\r\n## Version 2.2.0 - 2021-07-30\r\n\r\n\r\n\r\n### Added\r\n- `working_set` and `exclude_filter` can now be used as `HDI_DEPLOY_OPTIONS`\r\n- Job log is now cleaned up with each startup to avoid garbage after application shutdowns or crashes.\r\nMaximum age of entries can be configured via cds configuration `mtx.jobs.cleanup.regular` and `mtx.jobs.cleanup.stale`\r\n(in milliseconds).\r\n\"Regular\" refers to finished or failed jobs (default is 30 min), \"Stale\" refers to queued or running jobs\r\n(default is 7 days).\r\n- (BETA) The tenant specific URL returned to the `saas-registry` can now be specified\r\nvia two environment variables `SUBSCRIPTION_URL` and `SUBSCRIPTION_URL_REPLACEMENT_RULES`.<br>\r\nThe following example uses the MTX application URL and turns it into the UI\r\napplication URL by replacing the application name suffix.\r\n  ```\r\n  SUBSCRIPTION_URL: ${protocol}://\\${tenant_subdomain}-${default-uri}\r\n  SUBSCRIPTION_URL_REPLACEMENT_RULES: [['srv', 'app']]\r\n  ```\r\n  `\\${tenant_subomain}` will be replaced by the domain of the subscribed tenant.\r\n\r\n### Changed\r\n\r\n- `/mtx/v1/metadata/edmx/` will now throw `ServiceMissingError` if no `name` query parameter is passed, instead of defaulting to `CatalogService`.\r\n- A `ModelNotFoundError` is thrown if no service model is found using `/mtx/v1/metadata/<modelType>/<tenantId>`.\r\n\r\n### Fixed\r\n- Access to metadata API (edmx, csn, languages, services) is now restricted\r\nto owner or provider tenant again\r\n- Allowed `HDI_DEPLOY_OPTIONS` are now filtered correctly\r\n- Correlation ids of requests are now forwarded correctly to asynchronous jobs for\r\nbetter supportability of mtx tenant operations.\r\n\r\n## Version 2.1.2 - 2021-07-09\r\n\r\n### Added\r\n\r\n- Tenant creation and deletion is now called via cds service `TenantPersistenceService` that\r\napplications can add handlers for\r\n```\r\n@protocol:'rest'\r\nservice TenantPersistenceService {\r\n    type JSON {\r\n        // any json\r\n    }\r\n\r\n    action createTenant(tenantId: UUID, subscriptionData: JSON) returns String;\r\n    action deleteTenant(tenantId: UUID);\r\n}\r\n```\r\n\r\n## Version 2.0.4 - 2021-06-14\r\n\r\n\r\n### Added\r\n\r\n- The global meta tenant creation in `cds.mtx.in` can now be disabled by setting the `MTX_DISABLE_META_TENANT_CREATION` environment variable\r\n\r\n### Fixed\r\n\r\n- More error types and semantic HTTP status codes have been added\r\n- Setting `MTX_ROLLBACK_CORRUPTED_CONTAINER` to `true` will now also delete and recreate an HDI container if its bindings are missing\r\n\r\n## Version 2.0.3 - 2021-06-08\r\n\r\n\r\n### Fixed\r\n\r\n- MTX Bootstrap has been adapted so that application service handlers can access mtx services\r\nagain\r\n- Logging is now consistently using cds.log\r\n- A caching problem with the metadata persistence factory is fixed\r\n\r\n### Changed\r\n\r\n- File system APIs are now asynchronous\r\n\r\n### Added\r\n\r\n- Allow array as configuration for mandatory scopes for subscription and update\r\n```\r\nmtx: {\r\n    security: {\r\n        \"subscription-scope\": [\"myApp.subscription\",\"myApp.superadmin\"],\r\n        \"deployment-scope\": [\"myApp.deployment\", \"myApp.superadmin\"]\r\n    }\r\n}\r\n```\r\n\r\n## Version 2.0.2 - 2021-05-21\r\n\r\n\r\n### Added\r\n- Internal on- and offboarding API for sidecar usecase: POST `/mtx/v1/internal/provisioning/subscribe`\r\nand POST `/mtx/v1/internal/provisioning/unsubscribe`\r\nwith payload\r\n```\r\n{\r\n  \"subscribedTenantId\": <tenant id>,\r\n  \"async\": <true/false>\r\n}\r\n```\r\n\r\n### Changed\r\n\r\n- A failed offboarding will now throw a `TenantOffboardingError`, instead of just logging the error.\r\n\r\n### Fixed\r\n\r\n- MTX APIs are now served idempotently. This fixes custom provisioning handlers not being invoked correctly.\r\n\r\n## Version 2.0.1 - 2021-05-10\r\n\r\n\r\n### Added\r\n\r\n- It's now possible to provide BTP dependencies in the `mtx` settings in your `.cdsrc.json` instead of implementing a custom handler, by setting `mtx.dependencies` accordingly.\r\n\r\n## Version 2.0.0 - 2021-05-07\r\n\r\n\r\n### Added\r\n- Saas provisioning operations GET, PUT and DELETE on API `/mtx/v1/provisioning/tenant/`\r\nnow require scope `mtcallback`. Upgrade calls on API `/mtx/v1/model/upgrade/` and\r\n`/mtx/v1/model/upgradeAsync/` now require scope `mtdeployment`.\r\nThis is now aligned with the\r\n[mandatory scope check required for the java runtime](../java/multitenancy#xsuaa-mt-configuration).<br>\r\nTo adapt the scope names to the java runtime scope configuration,\r\nthe scope names can be changed using the following cds configuration:\r\n```\r\nmtx: {\r\n    security: {\r\n        \"subscription-scope\": \"myApp.subscription\",\r\n        \"deployment-scope\": \"myApp.deployment\"\r\n    }\r\n}\r\n```\r\n- Support cds build API throwing BuildError instead of CompilationError.\r\n- Undeployment of extensions can now be done using a simplified API:\r\n`/mtx/v1/model/deactivate` with payload containing the extension sources to\r\nbe removed.\r\n```\r\n{\r\n  \"extension_files\": [\r\n    \"db/ext3.cds\"\r\n  ],\r\n  \"tenant\": \"<tenant id>\"\r\n}\r\n```\r\n- Support automatic roll-back for corrupted tenants when `MTX_ROLLBACK_CORRUPTED_CONTAINER` is set to `true`. This should _never_ be used in production, but only for integration tests.\r\n\r\n### Changed\r\n\r\n- The global data meta tenant (`GLOBAL_DATA_META_TENANT`) is now created on the first application startup, instead of the first onboarding\r\n- `@sap/hdi-deploy` and `@sap/instance-manager` are now directly required by `@sap/cds-mtx`. Therefore, they can be left out of your `package.json` `dependencies`\r\n- Job IDs are now generated using the `uuid` package\r\n- The default behavior of the `extension-allowlist` has changed. If `extension-allowlist`\r\nis not configured, it is not allowed to apply any extension.<br>\r\nExtensions can be easily enabled for all entities and services by adding the following\r\nto the configuration.\r\n```\r\nmtx: {\r\n  \"extension-allowlist\" = [\r\n      {\r\n          \"for\": [\"*\"]\r\n      }\r\n  ]\r\n```\r\n\r\n### Fixed\r\n- No more duplicate log entries in model upgrade result.\r\n\r\n## Version 1.2.3 - 2021-05-01\r\n\r\n\r\n### Fixed\r\n- Scope check for extension undeployment (ExtendCDSDelete) is enabled again\r\n\r\n## Version 1.2.2 - 2021-04-23\r\n\r\n\r\n## Version 1.2.1 - 2021-04-14\r\n\r\n\r\n### Fixed\r\n- Undeployment for model upgrade via `advancedOptions` working again\r\n- Undeployment of base model artifacts via 'undeploy.json' is working again\r\n- Unallowed `@cds.persistence.journal` annotations in extensions are now checked\r\n\r\n### Added\r\n- Size of job queue can now be configured via cds env\r\n```\r\nmtx: {\r\n  jobqueue: {\r\n    size: 10\r\n  }\r\n```\r\nor parameter `CDS_MTX_JOBQUEUE_SIZE=10`\r\n\r\n## Version 1.2.0 - 2021-03-30\r\n\r\n\r\n\r\n### Added\r\n- Multitenant applications now support extensions of entities using schema evolution based on `.hdbmigrationtable` files.\r\n- It is now possible to specify limits for the number of extension fields per entity.\r\nIf no limit is specified, the number of extension fields is not limited.\\\r\nIf this list exists, only entities and services contained in this list can be extended.\r\n```\r\n\"mtx\" : {\r\n  \"extension-allowlist\": [\r\n    {\r\n        'for': ['my.bookshop.Authors', 'my.bookshop.Books'],\r\n        'new-fields': 2\r\n    },\r\n    {\r\n        'for': ['CatalogService']\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n## Version 1.1.5 - 2021-03-09\r\n\r\n### Fixed\r\n- The extension API `/mtx/v1/content` now returns a correct json if a collection is requested with any version of\r\n@sap/cds used by the application. The `cds extend` command was returning `(intermediate result) is not iterable` because\r\nof an incorrect server response.\r\n- Connection handling has been improved. Errors of type `TimeoutError: Acquiring client from pool timed out` are reduced.\r\n\r\n## Version 1.1.3 - 2021-03-03\r\n\r\n\r\n### Fixed\r\n- `mtx/v1/model/status` now returns the job status again\r\n\r\n## Version 1.1.2 - 2021-03-01\r\n\r\n\r\n### Added\r\n- Multitenant applications **without tenant specific extensions** now support schema evolution based on `.hdbmigrationtable` files.\r\n- Provisioning parameters for the container creation can now also be set\r\nvia cds environment `mtx.provisioning.container` or environment variable `CDS_MTX_PROVISIONING_CONTAINER`.\\\r\nProvisioning parameters that are set in the subscription request to `mtx/v1/provisioning/tenant`\r\noverride the values from the environment.\r\n- Dedicated hdi deployment options can now be set via environment variable\r\n`HDI_DEPLOY_OPTIONS`, e. g. `HDI_DEPLOY_OPTIONS=\"{\\\"trace\\\": true }\"`. \\\r\nSee also\r\n[HDI deploy options](https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.05/en-US/a4bbc2dd8a20442387dc7b706e8d3070.html).\r\n\r\n### Fixed\r\n- Fix job-status handling.\r\n- Persist job errors, so they can be revealed even after MTX restart.\r\n\r\n## Version 1.0.28 - 2021-02-22\r\n\r\n### Added\r\n\r\n- It is now possible to pass hdi deployment parameters `undeploy` and `path-parameter` with the model upgrade\r\n(`mtx/v1/model/upgrade` and `mtx/v1/model/asyncUpgrade`)\r\n\r\n## Version 1.0.27 - 2021-02-01\r\n\r\n### Fixed\r\n\r\n- Extensions via `extend projection ` are now checked correctly by the linter.\r\n- Cross hdi container access is now supported properly (see also https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.05/en-US/a4bbc2dd8a20442387dc7b706e8d3070.html)\r\n\r\n## Version 1.0.26 - 2021-01-04\r\n\r\n\r\n### Fixed\r\n\r\n- When using`hdb` as driver for the database, the tenant updates are now logged properly\r\n\r\n## Version 1.0.25 - 2020-11-27\r\n\r\n\r\n### Added\r\n\r\n- Added enhanced authentication API needed for the @sap/cds-sidecar-client\r\nto support authentication with clientid/clientsecret from subscriber account.\r\nThis is needed to extend multitentant applications that are provided as services.\r\n\r\n### Fixed\r\n\r\n- Activation via cds-sidecar-client shows linter errors again\r\n- Offboarding of tenants does no longer cause a reconnect of cds\r\n(also requires update of @sap/cds dependency to minimum @sap/cds@4.3)\r\n\r\n## Version 1.0.24 - 2020-11-07\r\n\r\n\r\n### Fixed\r\n\r\n- Broken compatibility with hdb driver is now fixed\r\n\r\n## Version 1.0.23 - 2020-11-05\r\n\r\n\r\n### Fixed\r\n\r\n- MTX is now compatible with latest versions of @sap/hana-client\r\n- Linters can now handle extension projects with subfolders again\r\n- The connection pool used by mtx is now correctly updated on offboarding\r\neven with scaled applications\r\n\r\n## Version 1.0.22 - 2020-10-21\r\n\r\n\r\n### Fixed\r\n\r\n- The application url returned to the saas registry when using asynchronous onboarding\r\ncan now also be set in the header field 'application_url'\r\n- The build task used when onboarding do now use the right defaults. When being used\r\nas sidecar application, build task do no longer have to have the model option.\r\n- New entities with namespaces in extensions are now correctly\r\nchecked by the extensibility linter on extension activation\r\n- Call of onboarding and offboarding via javacript API is now fixed ('Cannot read property 'headers' of undefined')\r\n\r\n## Version 1.0.21 - 2020-09-29\r\n\r\n\r\n### Fixed\r\n\r\n- Connections to application after off- and onboarding now work properly\r\n\r\n## Version 1.0.20 - 2020-09-10\r\n\r\n\r\n### Fixed\r\n- Custom content upload using `/mtx/v1/model/updateCustomTenantContent` now also works\r\nwith cds 4\r\n\r\n## Version 1.0.19 - 2020-09-03\r\n\r\n### Added\r\n- The asynchronous model update API now accepts a callback URL (header field `MTX_STATUS_CALLBACK`) that\r\n  is called when the update is finished\r\n- A new REST API for activating extensions from csn sources was added. Use `POST /mtx/v1/model/activateCsn/`\r\nwith a csn JSON as payload. Example:\r\n\r\n```\r\n{\r\n        \"extensionCsn\": \"{\\\"extensions\\\":[{\\\"extend\\\":\\\"sap.capire.bookshop.Books\\\",\\\"elements\\\":{\\\"Z_ISBN_101\\\":{\\\"type\\\":\\\"cds.String\\\"}}}]}\",\r\n        \"tenant\": \"213a722e-ed91-43e2-adb4-3885b5e9d63e\"\r\n}\r\n```\r\n\r\n### Fixed\r\n- The sequence of extensions added through `cds.mtx.activate()` is now stable, even after\r\na base model update.\r\n\r\n## Version 1.0.18 - 2020-08-28\r\n\r\n## Version 1.0.17 - 2020-08-19\r\n\r\n### Fixed\r\n- Asynchronous basemodel upgrade and job status requests that failed when using @sap/cds@^4 are now fixed\r\n- Extensions that got lost when running onboarding multiple times are now preserved\r\n- The cds env configuration is now also available for service-manager\r\n\r\n## Version 1.0.16 - 2020-08-03\r\n\r\n### Added\r\n\r\n- Support for instances managed by Service Manager\r\n- Support for JWT Refresh Tokens to simplify token renewal in cds-sidecar-client\r\n\r\n### Fixed\r\n\r\n- Idempotent asynchronous offboarding\r\n- CDS 4 compatibility\r\n\r\n\r\n## 1.0.15 - 2020-07-01\r\n\r\n\r\n### Fixed\r\n- cds 4 compatibility\r\n- updated readme.md\r\n\r\n## 1.0.14 - 2020-05-27\r\n\r\n\r\n### Added\r\n\r\n- diagnose endpoint at /mtx/v1/model/diagnose/\r\n    - requires to be authenticated for the paas tenant\r\n    - requires scope \"MtxDiagnose\"\r\n- added memory status to debug logs. Activation with env MTX_LOG_MEMORY=true\r\n\r\n### Fixed\r\n\r\n- stablelized parallel extension activation\r\n- handling of asynchronous job status across multiple mtx application instances\r\n\r\n## 1.0.13 - 2020-04-27\r\n\r\n### Added\r\n\r\n- Logs are now collected by default when running asynchronous APIs\r\n    - can be disabled with environment variable `MTX_COLLECT_LOGS=true`\r\n    - logs can be limited by `MTX_LOG_COLLECTION_LIMIT=<limit>`\r\n\r\n- extensibility API that accepts csn notation `cds.mtx.activate(tenantId, csn)`\r\n\r\n### Fixed\r\n\r\n- handling of errornous undeploy.json files: error message now points to the root problem\r\n- handling of build errors: API now returns build and compile errors properly\r\n\r\n## 1.0.12\r\n\r\n### Added\r\n- reenabled the support of different domains (BETA)\r\n\r\n- Support for asynchronous extension activation to handle long-running jobs\r\n\r\n## 1.0.11\r\n\r\n### Added\r\n\r\n- Support of asynchronous onboarding as specified by the [saas-registry](https://wiki.wdf.sap.corp/wiki/display/CPC15N/SaaS+Application+Registration+in+CF#SaaSApplicationRegistrationinCF-Asynchronouscallbacksimplementation)\r\n\r\n## 1.0.10\r\n\r\n### Fixed\r\n- Compatibility with snapi compiler mode (env variable CDS_FEATURES_SNAPI=y)\r\n    - WARNING: in this mode, it is currently not checked if annotations of the basemodel are overwritten in the extension\r\n- Tenant upgrade with undeploy=true is now working properly\r\n\r\n## 1.0.9\r\n\r\n### Fixed\r\n- Compatibility with older versions of @sap/cds\r\n\r\n## 1.0.8\r\n\r\n### Added\r\n- possibility to store build / deployment logs in job log for asynchronous tenant update\r\n    - must currently be activated by environment variables (`MTX_COLLECT_LOGS=true` and `MTX_LOG_COLLECTION_LIMIT=<limit>`)\r\n- whitelist for entities and services that are allowed to be extended\r\n```\r\n\"mtx\": {\r\n           \"element-prefix\": \"Z_\",\r\n            \"namespace-blacklist\": [\"com.sap.\", \"sap.\"],\r\n            \"entity-whitelist\": [\"my.bookshop.Books\"],\r\n            \"service-whitelist\": [\"CatalogService\"]\r\n       }\r\n```\r\n\r\n### Fixed\r\n- Enable compatibility with SAP HANA cloud edition (no hdbcds support)\r\n- Deployment error with very old tenants (conflict with custom_tenant_objects.hdbtable)\r\n\r\n## 1.0.7\r\n\r\n### Added\r\n- allows to enable auto-undeploy in base model update request\r\n\r\n### Fixed\r\n- datatype error in synchronous base model update api\r\n\r\n## 1.0.6\r\n\r\n## 1.0.5\r\n\r\n### Added\r\n- accept database_id in onboarding request\r\n\r\n## 1.0.4\r\n\r\n### Added\r\n- enhanced namespace check for extensions\r\n- metadata API now supports ETags\r\n### Changed\r\n\r\n### Fixed\r\n- Datatype of custom content tables now LargeString\r\n- Bad request when sending non-json content\r\n\r\n### Removed\r\n\r\n## 1.0.3\r\n- Bug fixes\r\n\r\n## 1.0.2\r\n- Bug fixes\r\n\r\n## 1.0.1\r\n- Ignore namespace rules for customer extension entities\r\n- Enable hdbtabledata generation\r\n\r\n## 1.0.0 - 26.07.2019\r\nInitial release version.\r\n"},{"name":"cds-odata-v2-adapter-proxy","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-odata-v2-adapter-proxy (cov2ap)\r\n\r\n[CDS OData V2 Adapter Proxy](https://www.npmjs.com/package/@sap/cds-odata-v2-adapter-proxy) for [CDS OData V4 Services](https://cap.cloud.sap/docs/).\r\n\r\nExposes a full-fledged OData V2 service, converting OData V2 requests to CDS OData V4 service calls and responses back to OData V2.\r\n\r\nRuns in context of the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap/docs/)\r\nusing CDS Node.js module [@sap/cds](https://www.npmjs.com/package/@sap/cds) or CDS Java modules\r\n[com.sap.cds](https://mvnrepository.com/artifact/com.sap.cds).\r\n\r\n## Getting Started\r\n\r\n- Clone repository\r\n- Unit Tests: `npm test`\r\n- Test Server: `npm start`\r\n  - Service: `http://localhost:4004/v2/main`\r\n  - Metadata: `http://localhost:4004/v2/main/$metadata`\r\n  - Data: `http://localhost:4004/v2/main/Header?$expand=Items`\r\n\r\n> Code repository is only available SAP internal.\r\n\r\n## Usage\r\n\r\n### CDS Combined Backend (CAP Node.js) - Integrated (preferred)\r\n\r\nIn your existing `@sap/cds` project:\r\n\r\n- Run `npm install @sap/cds-odata-v2-adapter-proxy -s`\r\n- Create new file `server.js` in the service folder `srv` of your project: `./srv/server.js`\r\n\r\n```\r\nconst cds = require(\"@sap/cds\");\r\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\r\ncds.on(\"bootstrap\", app => app.use(proxy()));\r\nmodule.exports = cds.server;\r\n```\r\n\r\n- Run `cds run` from the project root to start the server:\r\n  - OData V2 service will be available at http://localhost:4004/v2/<service-path>\r\n  - OData V4 service will be available at http://localhost:4004/<service-path>\r\n\r\nNote that `@sap/cds` is a peer dependency and needs to be available as module as well.\r\n\r\n### CDS Combined Backend (CAP Node.js) - Custom\r\n\r\nIn your existing `@sap/cds` project:\r\n\r\n- Run `npm install @sap/cds-odata-v2-adapter-proxy -s`\r\n- Create new file `index.js` in the service folder `srv` of your project: `./srv/index.js`\r\n\r\n```\r\nconst express = require(\"express\");\r\nconst cds = require(\"@sap/cds\");\r\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\r\n\r\nconst host = \"0.0.0.0\";\r\nconst port = process.env.PORT || 4004;\r\n\r\n(async () => {\r\n  const app = express();\r\n\r\n  // OData V2\r\n  app.use(proxy());\r\n\r\n  // OData V4\r\n  await cds.connect.to(\"db\");\r\n  await cds.serve(\"all\").in(app);\r\n\r\n  const server = app.listen(port, host, () => console.info(`app is listing at ${host}:${port}`));\r\n  server.on(\"error\", error => console.error(error.stack));\r\n})();\r\n```\r\n\r\n- Run `node srv/index` from the project root to start the server:\r\n  - OData V2 service will be available at http://localhost:4004/v2/<service-path>\r\n  - OData V4 service will be available at http://localhost:4004/<service-path>\r\n\r\nNote that `@sap/cds` is a peer dependency and needs to be available as module as well.\r\n\r\n### CDS Standalone Backend (CAP Node.js or CAP Java)\r\n\r\n> For CAP Java projects prefer the Native OData V2 Adapter ([com.sap.cds/cds-adapter-odata-v2](https://mvnrepository.com/artifact/com.sap.cds/cds-adapter-odata-v2)).\r\n\r\nIn a new Node.js express project:\r\n\r\n- Run `npm install @sap/cds -s`\r\n- Run `npm install @sap/cds-odata-v2-adapter-proxy -s`\r\n- Place CDS models in `db` and `srv` model folders or provide a generated CSN\r\n- Create a new file `index.js` in the service folder `srv` of the project: `./srv/index.js`\r\n\r\n```\r\nconst express = require(\"express\");\r\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\r\n\r\nconst host = \"0.0.0.0\";\r\nconst port = process.env.PORT || 4004;\r\n\r\n(async () => {\r\n  const app = express();\r\n\r\n  // OData V2\r\n  app.use(proxy({\r\n    target: \"<odata-v4-backend-url>\", // locally e.g. http://localhost:8080\r\n    services: {\r\n      \"<odata-v4-service-path>\": \"<qualified.ServiceName>\"\r\n    }\r\n  }));\r\n\r\n  const server = app.listen(port, host, () => console.info(`app is listing at ${host}:${port}`));\r\n  server.on(\"error\", error => console.error(error.stack));\r\n})();\r\n```\r\n\r\n- A deployed version of CDS OData V2 Adapter Proxy shall have option `target` set to the deployed OData V4 backend URL.\r\n  This can be retrieved from the Cloud Foundry environment using `process.env`, for example,\r\n  from the `destinations` environment variable. Locally e.g. http://localhost:8080 can be used.\r\n- In proxy option `services`, every OData V4 service URL path needs to mapped to\r\n  the corresponding fully qualified CDS service name, e.g. `\"/odata/v4/MainService/\": \"test.MainService\"`,\r\n  to establish the back-link connection between OData URL and its CDS service.\r\n- Make sure, that your CDS models are also available in the project.\r\n  Those reside either in `db` and `srv` folders, or a compiled (untransformed) `srv.json` is provided.\r\n  This can be generated by using the following command:\r\n\r\n  ```\r\n  cds srv -s all -o .\r\n  ```\r\n\r\n- Alternatively, a `cds build` can be triggered as described in section \"Cloud Foundry Deployment\".\r\n- If not detected automatically, the model path can be set with option `model` (especially if `csn.json`/`srv.json` option is used).\r\n- Make sure, that all i18n property files reside next to the `csn.json` in a `i18n` or `_i18n` folder, to be detected by localization.\r\n- In a multitenant scenario in combination with a standalone proxy, the CDS model can be retrieved remotely via MTX endpoint (`mtxEndpoint`) by setting proxy option `mtxRemote: true`.\r\n- Proxy option `mtxEndpoint` can be specified as absolute url (starting with `http://` or `https://`), to be able to address MTX Sidecar\r\n  possibly available under a target different from OData v4 backend URL. If not specified absolutely, proxy `target` is prepended to `mtxEndpoint`.\r\n\r\n- Run `node srv/index` from the project root to start the server:\r\n  - OData V2 service will be available at http://localhost:4004/v2/<odata-v4-service-path>\r\n  - OData V4 service shall be available at http://localhost:8080/<odata-v4-service-path>\r\n\r\nNote that `@sap/cds` is a peer dependency and needs to be available as module as well.\r\n\r\n## Cloud Foundry Deployment\r\n\r\nWhen deploying the CDS OData V2 Adapter Proxy to Cloud Foundry, make sure that it has access to the whole CDS model.\r\nEspecially, it’s the case, that normally the Node.js server is only based on folder `srv` and folder `db` is then missing on Cloud Foundry.\r\n\r\nTo come around this situation, trigger a `cds build` during development time, that generates a `csn.json` at location `gen/srv/srv/csn.json`.\r\nPoint your Cloud Foundry deployment of the CDS OData V2 Adapter Proxy to the folder `gen/srv` (using manifest.json or MTA), so that\r\nthe CDS models can be found via file `srv/csn.json`, during runtime execution on Cloud Foundry.\r\n\r\nMake sure, that all i18n property files reside next to the `csn.json` in a `i18n` or `_i18n` folder, to be detected by localization.\r\n\r\n## SAP Fiori Elements V2\r\n\r\nThe OData V2 service provided by the CDS OData V2 Adapter Proxy can be used to serve an SAP Fiori Elements V2 UI.\r\n\r\nFiori Elements examples:\r\n\r\n- **Basic Edit**: Basic editing app\r\n- **Draft Edit**: Draft supported editing app\r\n- **Hierarchy**: Hierarchical display of data in tree table\r\n\r\nRunning examples can be tested as follows:\r\n\r\n- Clone repository\r\n- Start server: `npm start`\r\n- Open Fiori Launchpad: http://localhost:4004/fiori.html\r\n\r\n> Code repository is only available SAP internal.\r\n\r\n## Compression\r\n\r\nResponse compressions can be enabled, by registering the `compression` Node.js\r\nmodule in Express app at bootstrap time, e.g. in `srv/server.js`:\r\n\r\n```\r\nconst cds = require(\"@sap/cds\");\r\nconst proxy = require(\"@sap/cds-odata-v2-adapter-proxy\");\r\nconst compression = require(\"compression\");\r\n\r\ncds.on(\"bootstrap\", (app) => {\r\n  app.use(compression({ filter: shouldCompress }));\r\n  app.use(proxy());\r\n});\r\n\r\nfunction shouldCompress(req, res) {\r\n  const type = res.getHeader(\"Content-Type\");\r\n  if (type && typeof type === \"string\" && type.startsWith(\"multipart/mixed\")) {\r\n    return true;\r\n  }\r\n  // fallback to standard filter function\r\n  return compression.filter(req, res);\r\n}\r\n```\r\n\r\nThe shown compression filter function enables compression including\r\nOData Batch (`$batch`) calls with content type `multipart/mixed`.\r\n\r\n### Approuter Compression\r\n\r\n`@sap/approuter` now support out-of-the-box compression for OData $batch calls with `multipart/mixed`.\r\nIt's disabled by default, but can be enabled using option [compressResponseMixedTypeContent](https://www.npmjs.com/package/@sap/approuter#compression-property).\r\n\r\n## Documentation\r\n\r\nInstantiates a CDS OData V2 Adapter Proxy Express Router for a CDS-based OData V4 Server:\r\n\r\n- **options:** CDS OData V2 Adapter Proxy options object.\r\n  - **base:** Base path under which the service is reachable. Default is `''`.\r\n  - **path:** Path under which the proxy is reachable. Default is `'v2'`.\r\n  - **model:** CDS service model (path(s) or CSN). Default is `'all'`.\r\n  - **port:** Target port which points to OData V4 backend port. Default is process.env.PORT or `4004`.\r\n  - **target:** Target which points to OData V4 backend host:port. Use `'auto'` to infer the target from server url after listening. Default is e.g. `'http://localhost:4004'`.\r\n  - **targetPath:** Target path to which is redirected. Default is `''`.\r\n  - **services:** Service mapping object from url path name to service name. Default is `{}`.\r\n  - **mtxRemote:** CDS model is retrieved remotely via MTX endpoint for multitenant scenario. Default is `false`.\r\n  - **mtxEndpoint:** Endpoint to retrieve MTX metadata when option 'mtxRemote' is active. Default is `'/mtx/v1'`.\r\n  - **ieee754Compatible:** Edm.Decimal and Edm.Int64 are serialized IEEE754 compatible. Default is `true`.\r\n  - **disableNetworkLog:** Disable networking logging. Default is `true`.\r\n  - **fileUploadSizeLimit:** File upload file size limit (in bytes). Default is `10485760` (10 MB).\r\n  - **continueOnError:** Indicates to OData V4 backend to continue on error. Default is `false`.\r\n  - **isoTime:** Use ISO 8601 format for type cds.Time (Edm.Time). Default is `false`.\r\n  - **isoDate:** Use ISO 8601 format for type cds.Date (Edm.DateTime). Default is `false`.\r\n  - **isoDateTime:** Use ISO 8601 format for type cds.DateTime (Edm.DateTimeOffset). Default is `false`.\r\n  - **isoTimestamp:** Use ISO 8601 format for type cds.Timestamp (Edm.DateTimeOffset). Default is `false`.\r\n  - **isoDateTimeOffset:** Use ISO 8601 format for type Edm.DateTimeOffset (cds.DateTime, cds.Timestamp). Default is `false`.\r\n  - **bodyParserLimit:** Request and response body parser size limit. Default is `'100mb'`.\r\n  - **returnCollectionNested**: Collection of entity type is returned nested into a results section. Default is `true`.\r\n  - **returnComplexNested**: Function import return structure of complex type (non collection) is nested using function import name. Default is `true`.\r\n  - **returnPrimitiveNested**: Function import return structure of primitive type (non collection) is nested using function import name. Default is `true`.\r\n  - **returnPrimitivePlain**: Function import return value of primitive type is rendered as plain JSON value. Default is `true`.\r\n  - **messageTargetDefault**: Specifies the message target default, if target is undefined. Default is `'/#TRANSIENT#'`.\r\n  - **caseInsensitive**: Transforms search functions i.e. substringof, startswith, endswith to case-insensitive variant. Default is `false`.\r\n  - **propagateMessageToDetails**: Propagates root error or message always to details section. Default is `false`.\r\n  - **contentDisposition**: Default content disposition for media streams (inline, attachment), if not available or calculated. Default is `'attachment'`.\r\n  - **calcContentDisposition**: Calculate content disposition for media streams even if already available. Default is `false`.\r\n  - **quoteSearch**: Specifies if search expression is quoted automatically. Default is `true`.\r\n  - **fixDraftRequests**: Specifies if unsupported draft requests are converted to a working version. Default is `false`.\r\n\r\nAll CDS OData V2 Adapter Proxy options can also be specified as part of CDS project-specific configuration\r\nunder section `cds.cov2ap` and accessed via `cds.env.cov2ap`.\r\n\r\nOption `cds.env.odata.v2proxy.urlpath` is available to specify an OData V2 proxy url path\r\ndifferent from default `/v2` for CDS core.\r\n\r\n### CDS Annotations\r\n\r\nThe following CDS OData V2 Adapter Proxy specific annotations are supported:\r\n\r\n**Entity Level**:\r\n\r\n- `@cov2ap.analytics: false`: Suppress analytics conversion for the annotated entity, if set to `false`.\r\n- `@cov2ap.deltaResponse: 'timestamp'`: Delta response '\\_\\_delta' is added to response data of annotated entity with current timestamp information.\r\n- `@cov2ap.isoTime`: Values of type cds.Time (Edm.Time) are represented in ISO 8601 format for annotated entity.\r\n- `@cov2ap.isoDate`: Values of type cds.Date (Edm.DateTime) are represented in ISO 8601 format for annotated entity.\r\n- `@cov2ap.isoDateTime`: Values of type cds.DateTime (Edm.DateTimeOffset) are represented in ISO 8601 format for annotated entity.\r\n- `@cov2ap.isoTimestamp`: Values of type cds.Timestamp (Edm.DateTimeOffset) are represented in ISO 8601 format for annotated entity.\r\n- `@cov2ap.isoDateTimeOffset`: Values of type Edm.DateTimeOffset (cds.DateTime, cds.Timestamp) are represented in ISO 8601 format for annotated entity.\r\n\r\n**Entity Element Level**:\r\n\r\n- `@Core.ContentDisposition.Filename: <element>`: Specifies entity element, representing the filename during file upload/download.\r\n- `@Core.ContentDisposition.Type: <value>`: Controls the content disposition behavior in client/browser (`inline` or `attachment`).\r\n- `@cov2ap.headerDecode`: Array of sequential decoding procedures ('uri', 'uriComponent', 'base64') used for media entity upload header.\r\n\r\n### CDS Modelling\r\n\r\nCDS project configuration `cds.odata.version` shall be set to `v4`, as OData proxy maps to OData V4.\r\nCDS supports modelling features that are not compatible with OData V2 standard:\r\n\r\n- **Singletons:** Usage of annotation `@odata.singleton` is not supported in combination with OData V2\r\n- **Structured Types:** Usage of `cds.odata.format: 'structured'` is not supported in combination with OData V2\r\n- **Arrayed Types:** Usages of `array of` or `many` in entity element definitions lead to CDS compilation error: `Element must not be an \"array of\" for OData V2`\r\n\r\nTo provide an OData V2 service based on the CDS OData V2 Adapter Proxy, those CDS modelling features must not be used.\r\nIn general any CDS OData API flavor must not be used in combination with CDS OData V2 Adapter Proxy.\r\n\r\n## Logging\r\n\r\nLogging is controlled with environment variable `XS_APP_LOG_LEVEL`. Especially, proxy requests and proxy responses\r\nincluding url and body adaptations can be traced using `XS_APP_LOG_LEVEL=debug`.\r\nDetails can be found at [@sap/logging](https://www.npmjs.com/package/@sap/logging).\r\n\r\n### Logging Layers\r\n\r\nLogging layers of CDS OData V2 Adapter Proxy start with `cov2ap`.\r\n\r\n#### XS_APP_LOG_LEVEL = error\r\n\r\n- `cov2ap/Authorization` : Error during authorization header parsing\r\n- `cov2ap/MetadataRequest` : Error during metadata request processing\r\n- `cov2ap/Request` : Error during request processing\r\n- `cov2ap/Response` : Error during response processing\r\n- `cov2ap/Batch` : Error during batch processing\r\n- `cov2ap/AggregationKey` : Error during aggregation key determination\r\n- `cov2ap/MediaStream` : Error during media stream processing\r\n- `cov2ap/ContentDisposition` : Error during content disposition determination\r\n- `cov2ap/FileUpload` : Error during file upload processing\r\n\r\n#### XS_APP_LOG_LEVEL = warning\r\n\r\n- `cov2ap/Service` : Service definition not found for request path\r\n- `cov2ap/Context` : Definition not found in CDS meta model\r\n- `cov2ap/Batch` : Response changeset order does not match request changeset order\r\n\r\n#### XS_APP_LOG_LEVEL = debug\r\n\r\n- `cov2ap/Request`: Log of OData V2 client request (url, body, headers)\r\n- `cov2ap/ProxyRequest`: Log of OData V4 proxy request (url, body, headers)\r\n- `cov2ap/ProxyResponse`: Log of OData V4 proxy response (status code/message, body, headers)\r\n- `cov2ap/Response`: Log of OData V2 client response (status code/message, body, headers)\r\n\r\n## Features\r\n\r\n- GET, POST, PUT / MERGE / PATCH, DELETE\r\n- Batch support\r\n- Actions, Functions\r\n- Analytical Annotations\r\n- Deep Expands/Selects\r\n- JSON format\r\n- Deep Structures\r\n- Data Type Mapping\r\n- IEEE754Compatible\r\n- Messages / Error Handling\r\n- Location Header\r\n- $inlinecount / $count / \\$value\r\n- Entity with Parameters\r\n- File Upload (binary, multipart/form-data)\r\n- Stream Support (Octet and Url)\r\n- Content Disposition\r\n- Content-ID\r\n- Multi-Tenancy\r\n- Extensibility\r\n- Draft Support\r\n- Search Support\r\n- Localization\r\n- Temporal Data\r\n- Tracing Support\r\n- Logging Correlation\r\n- ETag Support (Concurrency Control)\r\n- Next Links (skiptoken)\r\n- Delta Responses (deltatoken)\r\n- Continue-On-Error\r\n- X-HTTP-Method\r\n\r\n## OData V2/V4 Delta\r\n\r\n[What’s New in OData Version 4.0](http://docs.oasis-open.org/odata/new-in-odata/v4.0/cn01/new-in-odata-v4.0-cn01.html)\r\n\r\n## License\r\n\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n<!-- New version information is automatically added after line 8 -->\r\n\r\n## Version 1.9.0 - 2022-07-04\r\n\r\n- CDS 6 compatible version\r\n- Enhance proxy option `target` with mode `auto` to handle dynamic target/port assignment (e.g. for unit-tests)\r\n- Represent time component of `cds.Date/Edm.DateTime` with second precision (i.e. `00:00:00`)\r\n\r\n## Version 1.8.21 - 2022-06-22\r\n\r\n### Fixed\r\n\r\n- Add `Type` suffix to fix `__metadata.type` for parameterized entities (datajs did skip date type conversion)\r\n- Fix parameterized entities navigation links\r\n- Enhance Fiori Elements example apps\r\n\r\n## Version 1.8.20 - 2022-06-13\r\n\r\n### Fixed\r\n\r\n- Change README on Approuter compression flag `compressResponseMixedTypeContent`\r\n- Fill and process surrogate key `ID__` correctly in case of analytical queries\r\n- Add an example Fiori Elements applications showcasing hierarchical `TreeTable` usage\r\n- Rework UI application examples (basic, draft and hierarchy apps)\r\n\r\n## Version 1.8.19 - 2022-05-18\r\n\r\n### Fixed\r\n\r\n- Don't propagate `host` header to forwarded calls.\r\n\r\n## Version 1.8.18 - 2022-05-13\r\n\r\n### Fixed\r\n\r\n- Propagate all headers to forwarded calls.\r\n\r\n## Version 1.8.17 - 2022-05-12\r\n\r\n### Fixed\r\n\r\n- Filter out annotation elements in response data starting with `odata.` or including `@odata.`.\r\n- Elements starting with `@` are excluded as before.\r\n- Propagate special headers to forwarded calls (i.e. starting with `dwc`).\r\n\r\n## Version 1.8.16 - 2022-04-28\r\n\r\n### Fixed\r\n\r\n- Fix if elements are annotated with `@cds.api.ignore`\r\n- Abort file upload when limit is reached\r\n\r\n## Version 1.8.15 - 2022-04-25\r\n\r\n### Fixed\r\n\r\n- Remove internal repository reference\r\n- Document that Singletons are not available in OData V2\r\n- Ignore omitted elements annotated with `@cds.api.ignore`\r\n- Support validated for absolute context urls via `cds.odata.contextAbsoluteUrl`.\r\n- Skip aggregation for measures with aggregation `#NONE` and `#NOP`\r\n- Support `$count` aggregations for measures with aggregation `#$COUNT`\r\n- Changed OData type mapping for `Edm.Byte` to `cds.Integer`\r\n\r\n## Version 1.8.14 - 2022-04-08\r\n\r\n### Fixed\r\n\r\n- Upgrade `@sap/logging` to fix vulnerability\r\n\r\n## Version 1.8.13 - 2022-04-07\r\n\r\n### Fixed\r\n\r\n- Remove peer dependency to prevent workspace failures\r\n\r\n## Version 1.8.12 - 2022-04-01\r\n\r\n### Fixed\r\n\r\n- Refactorings to support universal CSN\r\n- Refactorings to support metadata prototype layering\r\n- Include `search` in `$apply` aggregations\r\n\r\n## Version 1.8.11 - 2022-03-11\r\n\r\n### Fixed\r\n\r\n- Fix for `falsy` values during data type conversion for functions and actions\r\n- Add OData V2 links via link providers to HTML index page\r\n\r\n## Version 1.8.10 - 2022-03-01\r\n\r\n### Fixed\r\n\r\n- Refactor locale determination from CDS\r\n- Serialize body to string in case of type `object` before calculating content length\r\n- Support `AnalyticalContext` annotations in addition to deprecated `Analytics` annotations\r\n\r\n## Version 1.8.9 - 2022-02-09\r\n\r\n### Fixed\r\n\r\n- Stabilization fixes\r\n\r\n## Version 1.8.8 - 2022-02-08\r\n\r\n### Fixed\r\n\r\n- Proxy option `calcContentDisposition` to calculate `content-disposition` header even if already available\r\n\r\n## Version 1.8.7 - 2022-02-03\r\n\r\n### Fixed\r\n\r\n- Proxy option `fixDraftRequests` to convert unsupported draft request to a working version (default: false)\r\n\r\n## Version 1.8.6 - 2022-02-01\r\n\r\n### Fixed\r\n\r\n- Fix README for combined custom backend bootstrap\r\n- Allow annotation `@odata.type` in lower case format\r\n- Allow type prefix `datetime` in addition to `datetimeoffset`\r\n- Add peer dependency @types/express\r\n\r\n## Version 1.8.5 - 2022-01-17\r\n\r\n### Fixed\r\n\r\n- Prevent additional call to fill `content-disposition`, in case header is already provided with stream\r\n- Support OData V2 `binary` media upload via POST for entities with element of type `Binary` and without `@Core.MediaType` annotations\r\n- Return server error as response, if OData V4 server does not support media upload without `@Core.MediaType` annotation\r\n  - e.g. `No payload deserializer available for resource kind 'PRIMITIVE' and mime type 'image/png'`\r\n\r\n## Version 1.8.4 - 2021-12-06\r\n\r\n### Fixed\r\n\r\n- Unquote action/function parameter of types `cds.UUID`, `cds.Binary`, `cds.LargeBinary`, `cds.Date`, `cds.Time`, `cds.DateTime`, `cds.Timestamp`\r\n\r\n## Version 1.8.3 - 2021-12-06\r\n\r\n### Fixed\r\n\r\n- Prevent parsing body for HEAD requests against $batch\r\n- Fix single quotes of URL parameters for request body conversion respecting line breaks\r\n- Introduce proxy option `quoteSearch` to control search expression quoting. Default is `true`\r\n- Fix bound action call to entity key having association type\r\n- Fix action/function parameter of types date, time, datetime\r\n\r\n## Version 1.8.2 - 2021-12-01\r\n\r\n### Fixed\r\n\r\n- Catch and handle unexpected errors during proxy request processing\r\n- Validate request body and content-type in request\r\n- Switch of internal NPM repository (Nexus -> Artifactory)\r\n\r\n## Version 1.8.1 - 2021-11-19\r\n\r\n### Fixed\r\n\r\n- Change action/function return type value representation for primitive types to include nesting to conform to OData standard\r\n- Introduce proxy options `returnPrimitiveNested: false` to keep previous action/function return value representation for primitive types\r\n- Introduce proxy option `returnCollectionNested` to control collection of entity type nesting into a `results` section. Default is `true`\r\n- Fill standardized `x-correlation-id` request header in addition to `x-correlationid` for proxy requests\r\n\r\n## Version 1.8.0 - 2021-11-17\r\n\r\n### Fixed\r\n\r\n- Add README documentation for annotation `@Core.ContentDisposition.Type`\r\n- Change `content-disposition` header default from `inline` to `attachment`\r\n- Proxy option `contentDisposition` to specify default content disposition for media streams (inline, attachment)\r\n- Unescape single quotes of action URL parameters for request body conversion\r\n- Fix action/function return type representation for `cds.LargeString`\r\n- Improve formatting of README and CHANGELOG\r\n- Adjust repository url\r\n\r\n## Version 1.7.16 - 2021-11-10\r\n\r\n### Fixed\r\n\r\n- `Content-Disposition` header filename is now url encoded\r\n- Annotation `@Core.ContentDisposition.Type` to specify content disposition type (e.g. inline, attachment (default), etc.)\r\n\r\n## Version 1.7.15 - 2021-11-08\r\n\r\n### Fixed\r\n\r\n- Quote key parts of type `cds.LargeString` for uri generation\r\n\r\n## Version 1.7.14 - 2021-11-03\r\n\r\n### Fixed\r\n\r\n- Decode url key values before conversion\r\n\r\n## Version 1.7.13 - 2021-10-18\r\n\r\n### Fixed\r\n\r\n- Escape quotes in search string before quoting\r\n\r\n## Version 1.7.12 - 2021-10-07\r\n\r\n### Fixed\r\n\r\n- Proxy option `propagateMessageToDetails` to always propagate root error or message to details section\r\n- Support for fetching Edmx metadata locally via `cds.mtx.getEdmx`\r\n- Support for fetching Edmx metadata remotely via MTX service url\r\n\r\n## Version 1.7.11 - 2021-09-09\r\n\r\n### Fixed\r\n\r\n- Convert ContentID for warning messages and error body and propagate to details\r\n- Fix batch boundary parsing from content type with charset definition\r\n- Functions `startswith` and `endswith` respect proxy option `caseInsensitive`\r\n\r\n## Version 1.7.10 - 2021-08-31\r\n\r\n### Fixed\r\n\r\n- Fix query options not part of action parameters\r\n- Proxy option `caseInsensitive` to transform search function e.g. `substringof` to case-insensitive variant\r\n\r\n## Version 1.7.9 - 2021-08-06\r\n\r\n### Fixed\r\n\r\n- Add metadata type of inline return type for actions and functions\r\n- Proxy option `messageTargetDefault` to specify default message target, if undefined\r\n- Empty proxy option `messageTargetDefault` leaves message target untouched\r\n\r\n## Version 1.7.8 - 2021-07-28\r\n\r\n### Fixed\r\n\r\n- Support for verb tunneling, i.e., `POST` with `X-HTTP-Method` header\r\n\r\n## Version 1.7.7 - 2021-07-27\r\n\r\n### Fixed\r\n\r\n- Support inline return type for actions and functions\r\n- Default undefined message target to `/#TRANSIENT#`\r\n- Return 404 for unknown service name during model compilation\r\n- Enhance logging to contain service name for service lookup from request\r\n\r\n## Version 1.7.6 - 2021-07-01\r\n\r\n### Fixed\r\n\r\n- Prevent exception on handling entities without keys\r\n\r\n## Version 1.7.5 - 2021-06-21\r\n\r\n### Fixed\r\n\r\n- Prevent unnecessary expensive `isExtended` call per request using metadata cache\r\n\r\n## Version 1.7.4 - 2021-06-18\r\n\r\n### Fixed\r\n\r\n- Support annotation `@odata.Type` for non-UUID CDS types\r\n- Set header `x-cds-odata-version: v2` to indicate target OData version to CDS runtime\r\n- Explain usage of response compression in README\r\n\r\n## Version 1.7.3 - 2021-06-11\r\n\r\n### Fixed\r\n\r\n- Change OData V4 `continue-on-error` default to `false`\r\n- Proxy option `continueOnError: true` available to activate `continue-on-error`\r\n\r\n## Version 1.7.2 - 2021-06-10\r\n\r\n### Fixed\r\n\r\n- Fix content type normalization to preserve charset\r\n\r\n## Version 1.7.1 - 2021-05-28\r\n\r\n### Fixed\r\n\r\n- Fix return type determination for external services definitions\r\n\r\n## Version 1.7.0 - 2021-05-27\r\n\r\n### Fixed\r\n\r\n- Change action/function return type value representation for complex and primitive types\r\n- Introduce proxy options `returnComplexNested` and `returnPrimitivePlain` to keep previous action/function return value representation\r\n\r\n## Version 1.6.3 - 2021-05-26\r\n\r\n### Fixed\r\n\r\n- Convert additional targets of response messages\r\n- Transform leading part of locale to lower-case\r\n- Fix local entity name determination for scoped entities, e.g. `.texts`\r\n\r\n## Version 1.6.2 - 2021-04-29\r\n\r\n### Fixed\r\n\r\n- Merge headers and body of POST and PUT media entity upload calls\r\n- Handle error case in PUT media entity upload call\r\n\r\n## Version 1.6.1 - 2021-04-12\r\n\r\n### Fixed\r\n\r\n- Handle authorization header correctly in media upload\r\n\r\n## Version 1.6.0 - 2021-04-06\r\n\r\n### Fixed\r\n\r\n- Final CDS 5 compatibility version\r\n\r\n## Version 1.5.11 - 2021-03-26\r\n\r\n### Fixed\r\n\r\n- CDS 5 compatibility (>= 1.6.0 needed for CDS 5)\r\n- Support `content-disposition` header in media entity upload\r\n- Introduction of element annotation `@cov2ap.headerDecode` to decode header values\r\n\r\n## Version 1.5.10 - 2021-03-18\r\n\r\n### Fixed\r\n\r\n- Fix crash for bound action without return type\r\n- Consider bound action binding parameter for messages targets\r\n\r\n## Version 1.5.9 - 2021-03-02\r\n\r\n### Fixed\r\n\r\n- Improve TypeScript typings\r\n\r\n## Version 1.5.8 - 2021-02-25\r\n\r\n### Fixed\r\n\r\n- Update `@sap/logging` dependency\r\n\r\n## Version 1.5.7 - 2021-02-19\r\n\r\n### Fixed\r\n\r\n- Restore backwards compatibility with CDS 3\r\n\r\n## Version 1.5.6 - 2021-02-12\r\n\r\n### Fixed\r\n\r\n- Convert response message targets\r\n\r\n## Version 1.5.5 - 2021-01-27\r\n\r\n### Fixed\r\n\r\n- Align determination of locale including sub tags (e.g. `zh-TW`)\r\n\r\n## Version 1.5.4 - 2021-01-26\r\n\r\n### Fixed\r\n\r\n- Support action/function array parameter types\r\n- Introduce proxy option `bodyParserLimit` for body parser size limit\r\n\r\n## Version 1.5.3 - 2021-01-12\r\n\r\n### Fixed\r\n\r\n- Improve TypeScript typings\r\n\r\n## Version 1.5.2 - 2021-01-11\r\n\r\n### Fixed\r\n\r\n- Add TypeScript typings for proxy constructor\r\n\r\n## Version 1.5.1 - 2020-12-21\r\n\r\n### Fixed\r\n\r\n- Normalize service root path in service root xml to include trailing slash\r\n\r\n## Version 1.5.0 - 2020-12-16\r\n\r\n### Fixed\r\n\r\n- Update minor version\r\n\r\n## Version 1.4.63 - 2020-12-15\r\n\r\n### Fixed\r\n\r\n- Fix that file upload error message does not return with `500` status code\r\n\r\n## Version 1.4.61 - 2020-12-11\r\n\r\n### Fixed\r\n\r\n- Fix accept header for binary data retrieval to include `application/json`\r\n\r\n## Version 1.4.60 - 2020-12-07\r\n\r\n### Fixed\r\n\r\n- Respect offset for `Edm.DateTimeOffset`, and default to UTC offset (+0000)\r\n- Fix ticks and offset calculation for type `DateTimeOffset` to handle offset as minutes\r\n- Update README for custom bootstrap to give `proxy()` priority over `cds.serve` (as with `cds run`)\r\n- Make authorization header parsing more robust\r\n- Provide `__metadata` type information for function/action result\r\n- Data format of type `cds.Time (Edm.Time)` is switchable to ISO 8601 with proxy option `isoTime` or entity annotation `@cov2ap.isoTime`\r\n- Data format of type `cds.Date (Edm.DateTime)` is switchable to ISO 8601 with proxy option `isoDate` or entity annotation `@cov2ap.isoDate`\r\n- Data format of type `cds.DateTime / Edm.DateTimeOffset` is switchable to ISO 8601 with proxy option `isoDateTime` or entity annotation `@cov2ap.isoDateTime`\r\n- Data format of type `cds.Timestamp / Edm.DateTimeOffset` is switchable to ISO 8601 with proxy option `isoTimestamp` or entity annotation `@cov2ap.isoTimestamp`\r\n- Process DateTimeOffset always as UTC information (with `Z`)\r\n\r\n## Version 1.4.59 - 2020-12-02\r\n\r\n### Fixed\r\n\r\n- Change accept header to `application/json`, if accept `xml` is requested\r\n- Fix single service support bound to root url\r\n- Data format of type `Edm.DateTimeOffset` (`cds.DateTime`, `cds.Timestamp`) is switchable to ISO 8601 with proxy option `isoDateTimeOffset` or entity annotation `@cov2ap.isoDateTimeOffset`\r\n\r\n## Version 1.4.58 - 2020-11-26\r\n\r\n### Fixed\r\n\r\n- Support boolean header value in media entity\r\n- Prevent escaping of quotes in url for batch requests\r\n- Add `media_src` and `content-type` in `__metadata` for media entities\r\n\r\n## Version 1.4.57 - 2020-11-24\r\n\r\n### Fixed\r\n\r\n- Match headers case-insensitive for custom body in media entity\r\n- Parse header string values for non-string types in media entity\r\n\r\n## Version 1.4.56 - 2020-11-12\r\n\r\n### Fixed\r\n\r\n- Enable OData V4 `continue-on-error` per default\r\n- Add proxy option to deactivate `continue-on-error`\r\n\r\n## Version 1.4.55 - 2020-11-10\r\n\r\n### Fixed\r\n\r\n- Fix host port in response links\r\n- Handle duplication of link tokens\r\n\r\n## Version 1.4.54 - 2020-11-05\r\n\r\n### Fixed\r\n\r\n- Support mapping of `__next` annotation\r\n- Forward file upload headers to media entity POST call\r\n- Explain annotation `@Core.ContentDisposition.Filename` in README\r\n- Update README on OData API flavors\r\n- Fix links for navigation collections and query options\r\n\r\n## Version 1.4.53 - 2020-10-30\r\n\r\n### Fixed\r\n\r\n- Support custom body for binary media upload via POST\r\n- Set `Accept` header for `$batch` proxy request to `multipart/mixed`\r\n- Set missing response header `Content-Transfer-Encoding: binary`\r\n\r\n## Version 1.4.52 - 2020-10-27\r\n\r\n### Fixed\r\n\r\n- Log warning for change set order violation, instead returning an error response\r\n\r\n## Version 1.4.51 - 2020-10-27\r\n\r\n### Fixed\r\n\r\n- Support OData V2 `binary` media upload via POST\r\n- Support OData V2 `multipart/form-data media` upload via POST\r\n- Update README on logging layers\r\n\r\n## Version 1.4.50 - 2020-10-22\r\n\r\n### Fixed\r\n\r\n- Rewrite batch success status code from `200` to `202`\r\n- Remove OData V4 header `odata-entityid`\r\n- Propagate `Content-ID` in response to HTTP request headers\r\n- Remove artificially added `Content-ID` header from batch response\r\n- Fix `Content-ID` order check for deviations between request and response\r\n\r\n## Version 1.4.49 - 2020-10-19\r\n\r\n### Fixed\r\n\r\n- Fix entity uris with `x-forwarded-path` headers for OData batch calls\r\n- Support of `odata-entityid` header rewrite\r\n\r\n## Version 1.4.48 - 2020-10-16\r\n\r\n### Fixed\r\n\r\n- Fix entity uris with `x-forwarded-path` headers\r\n- Forward `x-request-id`, `x-correlationid` for metadata request\r\n\r\n## Version 1.4.47 - 2020-10-08\r\n\r\n### Fixed\r\n\r\n- Respect `Content-ID` in HTTP request headers\r\n- Update on peer dependencies\r\n- Update README on OData V2 Adapter for CAP Java\r\n- Update README on mission statement\r\n\r\n## Version 1.4.46 - 2020-09-29\r\n\r\n### Fixed\r\n\r\n- Update README on option `cds.env.odata.v2proxy.urlpath`\r\n- Delta response annotation `@cov2ap.deltaResponse: 'timestamp'`\r\n\r\n## Version 1.4.45 - 2020-09-17\r\n\r\n### Fixed\r\n\r\n- Prepare `Delta Responses` support in proxy (not yet supported by CDS)\r\n- Remove metadata information in request payload deeply\r\n- Update README on CDS modelling restrictions\r\n\r\n## Version 1.4.44 - 2020-09-03\r\n\r\n### Fixed\r\n\r\n- Rename proxy option `standalone` to `mtxRemote`\r\n- Allow proxy option `mtxEndpoint` to be absolute http url\r\n- Support for `cds.env` for proxy options under section `cds.cov2ap`\r\n- Update README and JSDoc documentation\r\n\r\n## Version 1.4.43 - 2020-09-01\r\n\r\n### Fixed\r\n\r\n- Fix `$filter` function conversion\r\n- Fix remote CSN fetch for standalone proxy\r\n- Fix `@sap.aggregation.role` annotation detection\r\n- Annotation `@cov2ap.analytics: false` to suppress analytical conversion\r\n- Update README documentation\r\n\r\n## Version 1.4.42 - 2020-08-05\r\n\r\n### Fixed\r\n\r\n- Add missing `Content-ID` header for batch changeset\r\n\r\n## Version 1.4.41 - 2020-08-03\r\n\r\n### Fixed\r\n\r\n- CDS 4 compatibility\r\n- Improve logging layers\r\n- Update README documentation\r\n- Improve JWT tenant processing\r\n\r\n## Version 1.4.40 - 2020-07-20\r\n\r\n### Fixed\r\n\r\n- Fix aggregation grouping on filtered elements\r\n- Support `sap:` analytical annotations\r\n\r\n## Version 1.4.39 - 2020-07-10\r\n\r\n### Fixed\r\n\r\n- Move annotation `ContentDisposition.Filename` to data element\r\n- Improve stability of content disposition\r\n\r\n## Version 1.4.38 - 2020-07-06\r\n\r\n### Fixed\r\n\r\n- Fix `base` proxy option (follow-up)\r\n\r\n## Version 1.4.37 - 2020-06-26\r\n\r\n### Fixed\r\n\r\n- Replace `pathRewrite` option by `targetPath` option\r\n- Fix `base` proxy option\r\n- Respect OData annotation `@odata.Type`\r\n- Alternative annotation `@Common.ContentDisposition.Filename`\r\n\r\n## Version 1.4.36 - 2020-06-24\r\n\r\n### Fixed\r\n\r\n- Fix escaping of quote for function parameters\r\n- SAP Fiori Elements v2 sample app\r\n\r\n## Version 1.4.35 - 2020-06-23\r\n\r\n### Fixed\r\n\r\n- Fix reserved uri characters (follow-up)\r\n\r\n## Version 1.4.34 - 2020-06-17\r\n\r\n### Fixed\r\n\r\n- Fix entity key with (encoded) reserved uri characters\r\n\r\n## Version 1.4.33 - 2020-05-29\r\n\r\n### Fixed\r\n\r\n- Service Document in XML format (default)\r\n- Update dependencies\r\n- Disable network log per default\r\n\r\n## Version 1.4.32 - 2020-05-27\r\n\r\n### Fixed\r\n\r\n- Update dependencies\r\n- Update README on localization\r\n- Toggle switch for network logging\r\n- Allow HANA `SYSUUID` as UUID\r\n\r\n## Version 1.4.31 - 2020-05-25\r\n\r\n### Fixed\r\n\r\n- Align model resolving\r\n- Fix data types conversion for numbers\r\n- Fix data types recognition in functions\r\n- Support response compression\r\n- Prevent unnecessary data serialization for tracing\r\n- Performance optimization for entity key/uri calculation\r\n- General performance optimizations\r\n- Update dependencies\r\n\r\n## Version 1.4.30 - 2020-05-01\r\n\r\n### Fixed\r\n\r\n- Make function call with request body more robust\r\n- Fallback severity for detail messages to error\r\n- Keep request body for action call\r\n- Update README on CF deployment\r\n\r\n## Version 1.4.29 - 2020-04-28\r\n\r\n### Fixed\r\n\r\n- Fix analytics default value for all OData types\r\n- Fix long running data type conversion for filter elements\r\n\r\n## Version 1.4.28 - 2020-04-27\r\n\r\n### Fixed\r\n\r\n- Fix `$filter` in analytics query\r\n- Fix count for empty analytics result\r\n- Fix result projection for analytics query\r\n- Fix analytics `null` result values\r\n- Only add root error, if no details messages\r\n\r\n## Version 1.4.27 - 2020-04-21\r\n\r\n### Fixed\r\n\r\n- Add root error as first detail message\r\n- Error code including `transition` marks transition message\r\n\r\n## Version 1.4.26 - 2020-04-20\r\n\r\n### Fixed\r\n\r\n- Fix `$filter` for navigation elements\r\n- Fix OData annotations conversion for Java backends\r\n- Add request authorization parsing for logging\r\n\r\n## Version 1.4.25 - 2020-04-08\r\n\r\n### Fixed\r\n\r\n- Add additional messages as details\r\n\r\n## Version 1.4.24 - 2020-04-07\r\n\r\n### Fixed\r\n\r\n- Fix for metadata transfer-encoding chunked\r\n- Filter `@` attributes\r\n\r\n## Version 1.4.23 - 2020-04-01\r\n\r\n### Fixed\r\n\r\n- Fix type conversion for `le` operator\r\n\r\n## Version 1.4.22 - 2020-03-27\r\n\r\n### Fixed\r\n\r\n- Fix entity uri path behind app router\r\n- Update dependencies\r\n\r\n## Version 1.4.21 - 2020-03-02\r\n\r\n### Fixed\r\n\r\n- Improve `$metadata` logging\r\n- Fix `$metadata` call headers\r\n\r\n## Version 1.4.20 - 2020-02-27\r\n\r\n### Fixed\r\n\r\n- Fix CDS backwards compatibility\r\n\r\n## Version 1.4.19 - 2020-02-25\r\n\r\n### Fixed\r\n\r\n- Fix ETag Support (Concurrency Control)\r\n- Support streaming from URL media\r\n- Adding custom path rewrite\r\n- Custom `server.js` support\r\n- Fix for rendering aggregation of integers\r\n- Fix time duration parsing\r\n- Misc fixes and improvements\r\n- General housekeeping\r\n- Moving from `axios` to `node-fetch`\r\n\r\n## Version 1.4.18 - 2020-02-03\r\n\r\n### Fixed\r\n\r\n- Improve `$value` handling for streaming\r\n- Fix stream filename retrieval\r\n- Optimize edmx localization\r\n- Improve logging and tracing handling\r\n- Fix for external services (e.g. Java backend) support\r\n- Re-add `services` configuration for external service mapping\r\n- Fix for search phrase\r\n\r\n## Version 1.4.17 - 2020-01-20\r\n\r\n### Fixed\r\n\r\n- Support for virtual hosts (e.g. Cloud Connector)\r\n- Fix decode URI for path name\r\n- Fix IEEE754 compatibility for single requests\r\n- Add IEEE754 compatibility option switch\r\n\r\n## Version 1.4.16 - 2020-01-14\r\n\r\n### Fixed\r\n\r\n- Enforce IEEE754 compatibility\r\n- Pin `axios` library\r\n\r\n## Version 1.4.15 - 2019-12-20\r\n\r\n### Fixed\r\n\r\n- Fix authentication prompt for `$metadata`\r\n- Improve trace handling\r\n\r\n## Version 1.4.14 - 2019-12-19\r\n\r\n### Fixed\r\n\r\n- Protect `$metadata` call\r\n- Fix `$filter` parentheses nesting\r\n- Fix `all` model loading from app, srv\r\n- Improve `$filter` handling, incl. data type and negative tests\r\n\r\n## Version 1.4.13 - 2019-12-12\r\n\r\n### Fixed\r\n\r\n- Remove `services` configuration, as it is obsolete\r\n- Fix nested functions in `$filter`\r\n\r\n## Version 1.4.12 - 2019-12-06\r\n\r\n### Fixed\r\n\r\n- Fix service and CSN model detection\r\n\r\n## Version 1.4.9 - 2019-12-05\r\n\r\n### Fixed\r\n\r\n- Allow CSN JSON object as model option\r\n- Raise error, if service not found based on path\r\n- Fix service paths with hyphen\r\n- Fix `cds.Date`, `cds.Time` data type mappings\r\n\r\n## Version 1.4.8 - 2019-11-14\r\n\r\n### Fixed\r\n\r\n- Increased body size limit\r\n- Fix engine config, to allow Node >= 8\r\n- Map `cds.DateTime` and `cds.Timestamp` to `Edm.DateTimeOffset`\r\n\r\n## Version 1.4.6 - 2019-11-07\r\n\r\n### Fixed\r\n\r\n- Update on README documentation\r\n- Minor fixes\r\n\r\n## Version 1.4.5 - 2019-10-25\r\n\r\n### Fixed\r\n\r\n- `__count` is now of type String\r\n- Aggregation values are converted according to dynamic type\r\n- Search support\r\n- Fix for converting warning messages\r\n\r\n## Version 1.4.4 - 2019-10-07\r\n\r\n### Fixed\r\n\r\n- Filter data type conversions\r\n\r\n## Version 1.4.3 - 2019-10-01\r\n\r\n### Fixed\r\n\r\n- Check CDS multitenancy/extensibility (mtx)\r\n- Allow options that are falsy for Javascript\r\n\r\n## Version 1.4.2 - 2019-09-24\r\n\r\n### Fixed\r\n\r\n- Looser declaration or peer dependency to be compatible with snapshots\r\n\r\n## Version 1.4.1 - 2019-09-11\r\n\r\n### Fixed\r\n\r\n- Fixed compatibility to CDS 3.17.0\r\n- Propagate `x-request-id`, `x-correlationid`\r\n\r\n## Version 1.4.0 - 2019-09-09\r\n\r\n### Fixed\r\n\r\n- Raise error message for not supported aggregation function (e.g. `#FORMULA`)\r\n- Fixed entity key calculation for key associations\r\n- Fixed DateTime representation in entity key structure\r\n\r\n## Version 1.3.0 - 2019-08-30\r\n\r\n### Fixed\r\n\r\n- Passing through responses in XML (just for errors)\r\n- Data-type mapping on aggregation values works for non-strings\r\n\r\n## Version 1.2.0 - 2019-08-08\r\n\r\n### Added\r\n\r\n- External Release\r\n\r\n## Version 1.0.0 - 2019-05-21\r\n\r\n### Added\r\n\r\n- Internal Release\r\n"},{"name":"cds-ql","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-ql\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-ql`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.21.2 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.21.1 - 2019-11-29\r\n\r\n### Added\r\n\r\n- `SELECT.forUpdate` to lock columns on a table\r\n\r\n## Version 1.21.0 - 2019-11-19\r\n\r\n### Added\r\n\r\n- Acquire now sets session contexts `valid-from` and `valid-to`\r\n\r\n### Fixed\r\n\r\n- Single ticked entry in function now resolves to `val` instead of `ref`\r\n\r\n## Version 1.20.1 - 2019-10-30\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.19.1\r\n- Updated version of @sap/cds-sqlite to 1.19.1\r\n- Updated version of @sap/cds-hana to 1.19.1\r\n\r\n## Version 1.20.0 - 2019-10-29\r\n\r\n### Changed\r\n\r\n- Improved UPDATE error messages\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.19.2 - 2019-10-16\r\n\r\n### Changed\r\n\r\n- `.run` handles arrays in a `Promise.all` fashion\r\n\r\n## Version 1.19.1 - 2019-10-08\r\n\r\n### Fixed\r\n\r\n- Default mainkind in case of compound service (messaging and rest)\r\n\r\n## Version 1.19.0 - 2019-10-02\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.18.0\r\n- Updated version of @sap/cds-sqlite to 1.18.0\r\n- Updated version of @sap/cds-hana to 1.18.0\r\n\r\n## Version 1.18.2 - 2019-09-18\r\n\r\n### Changed\r\n\r\n- Improved error messages\r\n\r\n### Fixed\r\n\r\n- Disconnect in multi tenancy scenario\r\n\r\n## Version 1.18.1 - 2019-09-10\r\n\r\n### Fixed\r\n\r\n- Model loading\r\n\r\n## Version 1.18.0 - 2019-09-09\r\n\r\n### Changed\r\n\r\n- Improved error messages for statements\r\n- No more model loading, model needs to be passed now\r\n\r\n### Fixed\r\n\r\n- Nested functions as strings in statements\r\n- Options in connect combined with env variables \r\n\r\n### Removed\r\n\r\n- Workaround for `onCond` that used custom object notation\r\n\r\n## Version 1.17.0 - 2019-08-21\r\n\r\n### Added\r\n\r\n- `options.kind` can also be an object\r\n- Service related functions `create`, `insert`, `read`, `update` and `delete` to transaction\r\n- Http related functions `get`, `post`, `put`, `patch` and `delete` to transaction\r\n\r\n### Changed\r\n\r\n- `.transaction(...).run` can be used with an array of queries\r\n\r\n### Fixed\r\n\r\n- Update with binary property\r\n\r\n## Version 1.16.0 - 2019-07-23\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.15.0\r\n- Updated version of @sap/cds-sqlite to 1.15.0\r\n- Updated version of @sap/cds-hana to 1.15.0\r\n\r\n## Version 1.15.0 - 2019-07-09\r\n\r\n### Added\r\n\r\n- Enhanced statements to be compatible to specification\r\n- Support for views with parameters\r\n\r\n### Removed\r\n\r\n- `generateUUID` function and `uuid`dependency\r\n- usage of xsenv for authorization (is provided by cds.env)\r\n\r\n## Version 1.14.0 - 2019-06-24\r\n\r\n### Fixed\r\n\r\n- Bug with nested types in update\r\n- Improved logging of SQLs when DEBUG=true is provided\r\n\r\n## Version 1.13.0 - 2019-06-07\r\n\r\n### Changed\r\n\r\n - updated generic-pool to 3.7.1\r\n\r\n## Version 1.12.0 - 2019-05-24\r\n\r\n### Removed\r\n\r\n- Removed superficial cache for services\r\n\r\n## Version 1.11.1 - 2019-05-16\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.11.1\r\n- Updated version of @sap/cds-sqlite to 1.11.1\r\n- Updated version of @sap/cds-hana to 1.11.1\r\n\r\n## Version 1.11.0 - 2015-05-15\r\n\r\n### Changed\r\n\r\n- Improved performance by reducing calls to process.nextTick()\r\n\r\n## Version 1.10.2 - 2019-05-08\r\n\r\n### Fixed\r\n\r\n- `service.deploy`\r\n\r\n## Version 1.10.1 - 2019-05-07\r\n\r\n### Changed\r\n\r\n- More resilience towards setting the model manually in service\r\n\r\n## Version 1.10.0 - 2019-05-03\r\n\r\n### Added\r\n\r\n- Functions `create`, `insert`, `read`, `update` and `delete` added to service\r\n- Streaming support via `service.stream()`\r\n\r\n### Changed\r\n\r\n- instanceof replaced with typeof in some cases\r\n\r\n## Version 1.9.0 - 2019-04-16\r\n\r\n### Changed\r\n\r\n- Select.one now adds property ```one``` instead of ```limit``` to CQN\r\n- Transactions can be created (i.e. are not promisified) although initial model loading is not yet finished\r\n\r\n## Version 1.8.0 - 2019-03-29\r\n\r\n### Added\r\n\r\n- Support for transactions on multiple data sources\r\n\r\n- Service.stream() provided for cds.stream()\r\n\r\n### Changed\r\n\r\n- Entities can be accessed via short name (if only one service in model)\r\n\r\n## Version 1.7.1 - 2019-03-19\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-hana to 1.7.1\r\n\r\n## Version 1.7.0 - 2019-03-19\r\n\r\n### Added\r\n\r\n- Added more transaction functions (`tx.foreach`, `tx.commit`, `tx.rollback`)\r\n\r\n### Changed\r\n\r\n- Prevent app crash if tenant cannot connect\r\n- Service hands over model to clients\r\n\r\n## Version 1.6.0 - 2019-02-25\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.6.0\r\n- Updated version of @sap/cds-sqlite to 1.6.0\r\n- Updated version of @sap/cds-hana to 1.6.0\r\n\r\n## Version 1.5.1 - 2019-02-12\r\n\r\n### Added\r\n\r\n- Support for sql functions lower, upper, trim, length in $filter and $orderby\r\n- Support `.and` for where conditions\r\n\r\n### Fixed\r\n\r\n - Use `.entities` from reflected models\r\n\r\n## Version 1.5.0 - 2019-02-06\r\n\r\n### Changed\r\n\r\n- Minimum node version 8.9.0\r\n\r\n## Version 1.4.0 - 2019-01-22\r\n\r\n### Changed\r\n\r\n- Use latest version of @sap/cds-sql\r\n\r\n## Version 1.3.0 - 2019-01-11\r\n\r\n### Changed\r\n\r\n- Use latest version of uuid and @sap/cds-sql\r\n\r\n## Version 1.2.0 - 2018-12-21\r\n\r\n### Added\r\n\r\n- Allow Arrays in `UPDATE.set()`\r\n\r\n## Version 1.1.0 - 2018-12-12\r\n\r\n### Added\r\n\r\n- Support for `full join` in SELECT\r\n- Support for inline\r\n\r\n## Version 1.0.0 - 2018-11-27\r\n\r\n### Added\r\n\r\n- tenantId can be specified at disconnect\r\n- model property can specified at connect\r\n- entities and model of connection can be accessed\r\n\r\n### Changed\r\n\r\n- Connect option `driver` is renamed to `kind`\r\n- Connect options regarding connecting moved to 'credentials' property instead of one flat object\r\n\r\n### Fixed\r\n\r\n- Read drafts with $filter/$search\r\n\r\n## Version 0.12.0 - 2018-10-17\r\n\r\n### Added\r\n\r\n- .where supports object notation with arrays of and/or\r\n\r\n### Changed\r\n\r\n- Refactoring and changes due to updated dependencies\r\n\r\n## Version 0.11.0 - 2018-10-04\r\n\r\n### Added\r\n\r\n- Support of string values bei fluid usage in .where\r\n\r\n### Fixed\r\n\r\n- Promise rejection in Service.run\r\n\r\n## Version 0.10.0 - 2018-09-17\r\n\r\n### Added\r\n\r\n- Auto lookup of db service if no configuration given at connect but is available at environmental VCAP_SERVICES\r\n- Support of an array as argument in .where\r\n\r\n## Version 0.9.1 - 2018-09-05\r\n   \r\n### Changed\r\n\r\n- Improved npm-shrinkwrap\r\n\r\n## Version 0.9.0 - 2018-08-28\r\n\r\n### Added\r\n\r\n- Added support for .columns() in SELECT\r\n- where/or/having support fluid API based on the first argument\r\n- init.js at reuse model can be used by deploy and may export an async function\r\n   \r\n### Changed\r\n\r\n- any object filter combination of @sap/xsenv can be used to search the db service\r\n\r\n## Version 0.8.1 - 2018-08-09\r\n\r\n### Changed\r\n\r\n- Require submodules on demand\r\n\r\n## Version 0.8.0 - 2018-08-07\r\n\r\n### Added\r\n\r\n- Pool and Pool resources are evicted by default\r\n- .from, .where and .having support partial CQN\r\n- Inline support at CQN of where and columns in Select\r\n- Functions .values and .entries at INSERT \r\n- Support of .run().then.run() shortcut\r\n- Debug is printed in case environmental variable DEBUG=true is set\r\n- SELECT(<column>, <column>).from(<table>)\r\n- SELECT.from(<table>).where({<column>: CQN})\r\n- Support for unary and binary expressions in contains\r\n- Support for expand with string/array notation in SELECT.columns (e. g. SELECT.from('Books', ['author', ['name']]))\r\n- Support for excluding in service projection\r\n  \r\n### Changed\r\n\r\n- .where and .having can be used multiple times instead of .where.and or .having.and\r\n- .or can be used directly: Instead of calling where.or you can call or.or\r\n\r\n### Fixed\r\n\r\n- Issue with service renaming attributes\r\n- Issue with 'exists' in object mode\r\n\r\n### Removed\r\n\r\n- .and for .where/.having\r\n\r\n## Version 0.7.0 - 2018-07-11\r\n\r\n### Fixed\r\n\r\n- Race condition at running block statements in transactional mode\r\n- Brackets are only added to where or having if needed\r\n\r\n### Removed\r\n\r\n- Statement blocks cannot be run with \"sequential\" pragma anymore (use \"serialized\" instead)\r\n\r\n## Version 0.6.0 - 2018-07-02\r\n\r\n### Added\r\n\r\n- Multi tenancy support\r\n\r\n## Version 0.5.0 - 2018-06-25\r\n\r\n### Added\r\n\r\n- support .deploy to automatically set up database artifacts\r\n- support of SQL functions lower and contains in .where\r\n- support for navigation over entities with multiple keys\r\n- SELECT allows partial CQNs as columns\r\n- .run can execute blocks of statements\r\n\r\n### Changed\r\n\r\n- support for latest CQN spec changes\r\n- renamed .hasPool to .hasSession\r\n\r\n### Fixed\r\n\r\n- CQL navigation on entity\r\n- CDS injection\r\n- .where with nested ORs and ANDs if provided as object input parameter \r\n\r\n## Version 0.4.1 - 2018-05-03\r\n\r\n### Fixed\r\n\r\n- Issue with postinstall script in package.json\r\n\r\n## Version 0.4.0 - 2018-05-02\r\n\r\n### Added\r\n\r\n- support DROP statements\r\n- connection pool validates resources before provisioning\r\n- support .foreach\r\n- cds used via injection\r\n- support fluid usage of .where and .having in DML statements\r\n\r\n### Changed\r\n\r\n- connect options aligned to spec\r\n- support for latest CQN spec changes\r\n- refactored .connect to return undefined instead of Promise\r\n- refactored .acquire to wait for .connect before providing a client\r\n\r\n## Version 0.3.0 - 2018-04-16\r\n\r\n### Added\r\n\r\n- allow CQN as parameter in SELECT.from\r\n- support CREATE statements\r\n\r\n## Version 0.2.0 - 2018-03-16\r\n### Added\r\n\r\n- support for SELECT.one\r\n- usage of npm-shrinkwrap\r\n\r\n### Changed\r\n\r\n- made generateUUID synchronous\r\n"},{"name":"cds-reflect","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"## @sap/cds-reflect\r\n\r\nThis package is no longer maintained.  Use the reflection API of [`@sap/cds`](https://www.npmjs.com/package/@sap/cds) instead.\r\n\r\n## Documentation\r\n\r\nSee the [API documentation](https://cap.cloud.sap/docs/cds/js-api#cds-reflect) for more details.\r\n\r\n## License\r\n\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project are documented in this file.\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/) and\r\nthis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\n## Version 2.13.5 - 2021-02-01\r\n\r\n### Changed\r\n\r\n- Sunset.  Code is now in `@sap/cds` package.\r\n\r\n## Version 2.13.4 - 2020-11-27\r\n\r\n## Fixed\r\n\r\n- More improved typings\r\n\r\n## Version 2.13.3 - 2020-10-27\r\n\r\n## Fixed\r\n\r\n- Improved typings no longer cause errors in typescript checks\r\n\r\n\r\n## Version 2.13.2 - 2020-10-27\r\n\r\n## Fixed\r\n\r\n- Improved typescript typings\r\n\r\n\r\n## Version 2.13.1 - 2020-09-24\r\n\r\n## Fixed\r\n\r\n- Support for `hana.*` types\r\n\r\n\r\n\r\n## Version 2.13.0 - 2020-09-02\r\n\r\n## Added\r\n- `aspect` to core type system\r\n- `Association` class now knows `isAssociation`, `isComposition`, and `isManagedComposition`\r\n- `any` has now a `path` getter\r\n\r\n\r\n## Version 2.12.2 - 2020-07-31\r\n\r\n## Added\r\n\r\n- getters `.associations` and `.compositions` on linked entities\r\n\r\n\r\n## Version 2.11.0 - 2020-04-27\r\n\r\n## Added\r\n\r\n- QL parser\r\n\r\n## Version 2.10.2 - 2020-03-19\r\n\r\n### Removed\r\n\r\n`npm-shrinkwrap.json`\r\n\r\n## Version 2.10.1 - 2020-02-20\r\n\r\n### Changed\r\n\r\n- Updated version number for public release\r\n\r\n\r\n## Version 2.9.3 - 2020-02-19\r\n\r\n### Changed\r\n\r\n- Updated version number for public release\r\n\r\n## Version 2.9.2 - 2020-01-17\r\n\r\n### Fixed\r\n\r\n- Linked view entities erroneously inherited their base entities' `.keys` e.g.:\r\n```js\r\nconst m = cds.linked(cds.parse(`\r\n  entity Foo { key ID : UUID }\r\n  entity Bar as select from Foo { ID as Kennung };\r\n`))\r\nconst { Foo, Bar } = m.entities\r\nFoo.keys //> { ID: string { key: true, type: 'cds.UUID' } }\r\nBar.keys //> { Kennung: string { key: true, type: 'cds.UUID' } }\r\n// The latter before was erronously:\r\nBar.keys //> { ID: string { key: true, type: 'cds.UUID' } } -> WRONG\r\n```\r\n## Version 2.9.1 - 2019-12-11\r\n\r\n### Added\r\n- Preparations for streamlined compiler APIs\r\n\r\n\r\n## Version 2.8.0 - 2019-10-08\r\n\r\n### Added\r\n- Entity definitions know their service\r\n\r\n## Version 2.7.1 - 2019-09-09\r\n\r\n### Added\r\n\r\n- Support for `cds.extend(Foo)`\r\n\r\n## Version 2.7.0 - 2019-09-09\r\n\r\n### Added\r\n\r\n- Support for linking typeof refs\r\n\r\n## Version 2.6.0 - 2019-08-21\r\n\r\n### Added\r\n\r\n- `.valueOf` to easily construct qualified names\r\n\r\n### Changed\r\n\r\n- Improved stack traces\r\n\r\n## Version 2.5.0 - 2019-05-03\r\n\r\n### Added\r\n\r\n- `cds` now is an `EventEmitter` -- This allows server modules to inform interested listeners about notable events in a loose-coupling fashion.\r\n\r\n### Fixed\r\n- `model.services` now really filters\r\n- `cds.infer` supports paths with filters\r\n\r\n\r\n## Version 2.3.0\r\n\r\n### Changed\r\n- The minimum required Node.js version is now set more specifically to _8.9_ LTS.  Previously, just Node.js 8 was mentioned.\r\n\r\n\r\n## Version 2.2.1 - 2019-01-24\r\n\r\n### Fixed\r\n\r\n- Getter for `linked_entity.source`\r\n\r\n## Version 2.2.0\r\n\r\n### Added\r\n- Getter for `linked_entity.source` (better use: `linked_entity.query._target`)\r\n\r\n## Version 2.0.5\r\n### Features\r\n- Seperated iteration and recursion `.foreach` is now iteration only, use `.forall` to visit all definitions recursively.\r\n\r\n## Version 1.8.0\r\n### Features\r\n- Entities and services can be retrieved with namespace scope\r\n\r\n## Version 1.7.0\r\n### Changes\r\n- Clean up of TypeScript APIs\r\n\r\n## Version 1.6.0\r\n### Features\r\n- Getters for entities and services\r\n- Infer keys for managed associations\r\n- Support for getting entities and services with namespace, e.g. `cds.reflect(m).entities ('my.bookshop')`\r\n\r\n## Version 1.5.0\r\n### Fixes\r\n- Fixes for linking associations and foreign keys\r\n"},{"name":"cds-rest","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-rest\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-rest`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.6.3 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.6.2 - 2020-03-19\r\n\r\n### Changed\r\n\r\n- In case there is no credentials.destination provided the `destinations` environment variable is not created anymore.\r\n  The connection to the remote service is handled internally.\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.5.0 - 2020-02-19\r\n\r\n### Changed\r\n\r\n- Updated version number for public release\r\n\r\n## Version 1.4.0 - 2020-02-05\r\n\r\n### Added\r\n\r\n- Where x in (a,b,...) predicates are translated to series of (x eq a) or (x eq b) in OData `$filter` options\r\n\r\n### Changed\r\n\r\n- Version of `@sap/cloud-sdk-core` pinned to `1.15.1`\r\n- Version of `@sap/cloud-sdk-util` pinned to `1.15.1`\r\n\r\n## Version 1.3.0 - 2019-10-29\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.2.0 - 2019-10-02\r\n\r\n### Added\r\n\r\n- If JWT token provided in context, it is forwarded to Cloud SDK\r\n\r\n### Changed\r\n\r\n- Version of `@sap/cloud-sdk-core` to `1.10.0`\r\n- Version of `@sap/cloud-sdk-util` to `1.10.0`\r\n\r\n## Version 1.1.3 - 2019-09-21\r\n\r\n### Added\r\n\r\n- Dependency to `@sap/cloud-sdk-util`\r\n\r\n## Version 1.1.2 - 2019-09-19\r\n\r\n### Fixed\r\n\r\n- `npm-shrinkwrap.json` containing wrong versions\r\n\r\n## Version 1.1.1 - 2019-09-18\r\n\r\n### Added\r\n\r\n- Support `where`, `columns` and `one` properties in SELECT\r\n\r\n### Changed\r\n\r\n- Enforce JSON format in OData\r\n- Clean up OData V2 responses\r\n\r\n## Version 1.1.0 - 2019-09-09\r\n\r\n### Added\r\n\r\n- Auto-generate `destinations` env variable if `NODE_ENV !== 'production`'\r\n\r\n## Version 1.0.2 - 2019-08-27\r\n\r\n### Fixed\r\n\r\n- `npm-shrinkwrap.json` containing wrong versions\r\n\r\n## Version 1.0.1 - 2019-08-26\r\n\r\n ### Changed\r\n\r\n- Version of `@sap/cloud-sdk-core` pinned to `1.8.0`\r\n\r\n## Version 1.0.0 - 2019-08-21\r\n\r\n### Added\r\n\r\n- Initial implementation\r\n"},{"name":"cds-runtime","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-runtime\r\nThis package is no longer maintained. Use the [@sap/cds](https://www.npmjs.com/package/@sap/cds) instead.\r\n\r\nThe `@sap/cds-runtime` module was the successor of `@sap/cds-services`, `@sap/cds-ql`, `@sap/cds-messaging`, `@sap/cds-rest`, `@sap/cds-hana`, `@sap/cds-sqlite`, and `@sap/cds-sql`. Please note that future development and bug fixes will be provided in the `@sap/cds` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n\r\n## Stakeholder Tests\r\n\r\n### MTX\r\n\r\n![](https://travis-ci.cloud.sap.corp/cdx/cds-stakeholder-tests.svg?token=FS8mMMvcpEdBWNZAxHuF&branch=mtx)\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 3.3.0 - tbd\r\n\r\n### Added\r\n\r\n- Support for logical events in `composite-messaging`\r\n- Initial support for generating OData V2 queries\r\n- Support of lambda expressions via navigation like `GET /Books?$filter=author/books/all(d:d/stock gt 10)` on SAP HANA when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- Preserve `DraftAdministrativeData_DraftUUID` if OData v2 client (indicated by `@sap/cds-odata-v2-adapter-proxy`)\r\n\r\n### Changed\r\n\r\n- Incoming messages now contain a privileged user\r\n- Computed values are preserved during draft activate\r\n- `SELECT.where(...)` generates CQN with list of values for `in` operator\r\n- Always use flag `u` during input validation via `@assert.format`\r\n- Intermediate cqn format for lambda expressions with preceeding navigation path when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n\r\n### Fixed\r\n\r\n- Deploy endpoint for messaging artifacts includes the needed roles\r\n- Detection of mocked services and forced resolving of views\r\n- `POST/PATCH/PUT` requests on `Composition of many` with association as key and custom `on` conditions\r\n- `$expand` on entities with `.` in name\r\n- Filter on external service when using `ne null` \r\n- Primitive property access of Singletons defined without keys via URL like `/Singleton/name`\r\n- Expand of draft with composition of aspects\r\n- `@Core.ContentDisposition.Filename` instead of `@Core.ContentDisposition`\r\n\r\n### Removed\r\n\r\n## Version 3.2.2 - 2021-06-17\r\n\r\n### Fixed\r\n\r\n- Binary keys handling in $filter\r\n- `odata.metadata` accept header fragment ignored during deserializer lookup in odata-server\r\n- Don't overwrite manual error code in case of data-server error\r\n- MTX enabled check\r\n- Invoke custom error handler (`srv.on('error')`) for each error and preserve modifications in case of changesets\r\n- Evaluation of restrictions for custom requests to the same `ApplicationService`\r\n- Misinterpreted SQL keyword as argument in QL's fluid usage\r\n\r\n## Version 3.2.1 - 2021-06-04\r\n\r\n### Added\r\n\r\n- Support for AMQP options in AQMP-based message brokers\r\n\r\n### Fixed\r\n\r\n- Requests using lambda operators in `$filter` in combination with instance based authorization\r\n\r\n## Version 3.2.0 - 2021-05-31\r\n\r\n### Added\r\n\r\n- Automatic topic manipulation for non-declared events\r\n- Support for events which are declared outside of service\r\n- Prefer headers `return=minimal` and `return=representation`\r\n  + Default value is configurable at `cds.env.odata.prefer.return`\r\n  + If not configured, the default is `representation`\r\n- Support for annotation `@Core.ContentDisposition`\r\n- Include `x-correlation-id` in headers of outbound message\r\n- Service consumption supports `search` property  and arbitrary functions in CQN\r\n- Support for temporal requests with different data types\r\n- Support for reading single draft-enabled entities via service API (`srv.read(<entity>, { ..., IsActiveEntity: true/false })`)\r\n- Support for feature toggles via `@cds/mtx`'s `ModelProviderService` based on DwC's product configuration header (alpha)\r\n  + Activate via `cds.env.features.alpha_toggles`\r\n- Support for structured keys used in composition of aspects (beta)\r\n\r\n### Changed\r\n\r\n- Emit logs promoted to `info`\r\n- Simpler topic names for `local`, `file-based-messaging` and `message-queuing`\r\n- `messaging.emit(...)` also uses outbox\r\n- Messaging will start listening to events once the `listening` event was fired on the `cds` object\r\n- Cascade delete order reversed from leaves to root\r\n- Intermediate cqn format for lambda expressions in odata\r\n- OData function names and structure are kept unchanged after parsing a URL to CQN in the adapter layer, corresponding \"CQN-to-SQL\" logic is moved to the DB layer. The changes affect the following functions: `contains`, `startswith`, `endswith`, `toupper`, `tolower`, `indexof`, `day`, `date` and `time`.\r\n- Template cache at prototype of `RootTransaction`\r\n- Both strings and numbers are accepted as decimals\r\n  + Strict numbers handling can be reenabled via `cds.env.features.strict_numbers`\r\n\r\n### Fixed\r\n\r\n- Star columns can be written as `'*'` or `{ref: ['*']}`\r\n- Arrayed and structured elements in draft mode\r\n- Cascade delete where child entity has more than one parent\r\n- Ignore `@restrict` conditions when reading `DraftAdministrativeData` of drafts\r\n- Navigation to one composition via association in `containment` mode (`cds.odata.containment = true`)\r\n- Create, update and delete requests to entity projections annotated with the annotation `@cds.persistence.table` are not resolved correctly\r\n- Using inline `$filter` query option in deeply nested expands on SAP HANA\r\n- Runtime exception when PATCH or PUT request methods are used for non-existing IDs. For example, → `PUT /api/v1/CustomerOrder('non-existing Id')/items(id='')/product`\r\n- Drafts: read active children of active or draft entities using deeply nested navigation or `$expand` query option\r\n- Select media type and content disposition information from base entity\r\n- Attempt to calculate time delta with unresolved target crashes server\r\n- OData string functions `contains`, `startswith` and `endswith` find records with `null` attributes when used with `not` operator\r\n- Deep deletion of sensitive data (annotated with `@PersonalData.IsPotentiallyPersonal` or `@PersonalData.IsPotentiallySensitive`) during update is properly considered in audit logging\r\n- Pseudo-variables as default value in draft-enabled entities\r\n- Escape CDL keywords when used in URL path\r\n\r\n## Version 3.1.2 - 2021-05-28\r\n\r\n### Fixed\r\n\r\n- Downport of \"Escape CDL keywords when used in URL path\"\r\n\r\n## Version 3.1.1 - 2021-05-20\r\n\r\n### Added\r\n\r\n- Downport of \"Support for reading single draft-enabled entities via service API (`srv.read(<entity>, { ..., IsActiveEntity: true/false })`)\"\r\n- Computed values are preserved during draft activate with `cds.env.features.preserve_computed = true`\r\n  + Preserving computed values will be the default behavior in ^3.3\r\n\r\n### Fixed\r\n\r\n- Downport of \"Attempt to calculate time delta with unresolved target crashes server\"\r\n\r\n## Version 3.1.0 - 2021-05-05\r\n\r\n### Added\r\n\r\n- Support for declared events with annotations `@topic`, `@source` and `@type`\r\n- Support for declared events in composite messaging\r\n- Extended managed data (`@cds.on.insert`, `@cds.on.update`):\r\n  + Pseudo variable `$uuid`\r\n  + Pseudo variable `$user.<attr>`\r\n  + Static values, for example `@cds.on.insert: 'foo'`\r\n- READ support for associations with custom on condition with form `<association>.<backlink> = $self and <association>.<property> = '<value>'`\r\n- Support for default values in views with more than one parameter\r\n- Support of input validation for arrayed elements\r\n- QL fluent API `orderBy()` convenience options `orderBy('<column> <order?>')`, `orderBy('...', ...)`, `orderBy('..., ...')`, and `orderBy([...])`\r\n- Use new, beta URL to CQN parser during read requests when serving to OData via `cds.env.features.odata_new_parser`\r\n- Beta version of new CQN to URL parser\r\n  + Use during service consumption via `cds.env.features.remote_new_parser`\r\n- Draft-specific columns are considered in `$select` if OData validation is skipped\r\n- Support for `cardinality` in `ref`\r\n- Support for nested expressions in where conditions\r\n- Invoke custom error handler (beta) in OData and REST adapters if necessary\r\n\r\n### Changed\r\n\r\n- Model-based processing instruction cache attached to service for SaaS extensibility\r\n- Removed compatibility feature flag `cds.env.features.skip_expand_assoc`\r\n- Input-related details of assertion error added to error message, for example `Value 4 is not in specified range [1,3]`\r\n- `$search` query option is parsed into `.search` instead of like expressions in `.where`\r\n- Integrity checks are skipped if `@sap/cds-compiler`'s foreign key generation (beta!) is active\r\n- Private `<entity>._dependents` made non-enumerable to avoid circular references\r\n- `null` values for virtual properties added during post processing (previously done during serialization in odata-server)\r\n\r\n### Fixed\r\n\r\n- Ambiguous columns in having clause\r\n- The generic read handler for drafts now correctly returns an object if the key of the entity is provided, before it was an array\r\n- Improved handling of unique constraint violation error during create and update\r\n- Better error logs for integrity checks\r\n- Leading and trailing whitespaces are allowed in OData expressions\r\n- Release database client if begin fails\r\n- `auto-expand` of generated foreign keys in OData x4 flavor (`cds.env.odata.flavor = x4`) when actions return entities\r\n- Consider `not null` annotations on inline structured types in OData x4 flavor (`cds.env.odata.flavor = x4`)\r\n- Temporal data in OData batch requests\r\n- Deep update/delete with static on conditions by composition to many\r\n- Draft: Alias of entity projection is incorrectly considered as key.\r\n- Support of arbitrary requests in service consumption if no external service model is provided\r\n- Use unfolded model if transaction was initiated in messaging\r\n- Infinite loop in restriction processing when user attribute is `null`\r\n\r\n## Version 3.0.9 - 2021-04-29\r\n\r\n### Changed\r\n\r\n- Downport of \"Private `<entity>._dependents` made non-enumerable to avoid circular references\"\r\n\r\n### Fixed\r\n\r\n- Downport of \"Use unfolded model if transaction was initiated in messaging\"\r\n\r\n## Version 3.0.8 - 2021-04-20\r\n\r\n### Fixed\r\n\r\n- Timeout issues in `enterprise-messaging-shared` in reconnect\r\n- Queries with a simultaneous use of `$expand` and `$orderby`, when the latter is using functions\r\n- Preserve non-error messages to client during failing draft activation\r\n\r\n## Version 3.0.7 - 2021-04-15\r\n\r\n### Added\r\n\r\n- CSRF-token handling in service consumption via `@sap-cloud-sdk/core` with `cds.env.features.fetch_csrf = true`\r\n\r\n### Fixed\r\n\r\n- Timeout issues in `enterprise-messaging-shared`\r\n\r\n## Version 3.0.6 - 2021-04-14\r\n\r\n### Fixed\r\n\r\n- Allow to return primitive properties instead of entities in REST adapter\r\n- Normalize time data on SQLite to support data type `TIMESTAMP_TEXT`\r\n\r\n## Version 3.0.5 - 2021-04-07\r\n\r\n### Fixed\r\n\r\n- Side effects on `@sap/hana-client`'s streaming extension\r\n\r\n## Version 3.0.4 - 2021-04-07\r\n\r\n### Fixed\r\n\r\n- Empty inserts for nested composition of one\r\n- Preserve children if multiple compositions to same target\r\n\r\n## Version 3.0.3 - 2021-04-01\r\n\r\n### Added\r\n\r\n- Support for `application/*+json` when parsing events through webhooks\r\n\r\n### Fixed\r\n\r\n- Navigation properties in `$select` inside of `$expand` query option\r\n\r\n## Version 3.0.2 - 2021-03-30\r\n\r\n### Added\r\n\r\n- Support for `{xpr:...}` as argument of a function in SQL Builder\r\n- Aliased parameters of a function call using an OData inline parameter syntax are provided as a request payload in `req.data`\r\n- Skip conversion to UTC on SAP HANA during insert via `.rows()`, `.values()`, or `.as()` with `cds.env.features.preserve_timestamps = true`\r\n- Beta version of new URL to CQN parser\r\n  + Use during read requests when serving to REST via `cds.env.features.rest_new_parser`\r\n  + Known limitations:\r\n    + Falsy key path segments in navigations, for example, `GET /Books/0/author`\r\n    + `ne` operator in `$filter` does not match `NULL`\r\n    + Nested functions, for example, `contains(toupper(...))`\r\n    + `$select` not filtered for duplicates, for example, `$select=ID,*` -> `columns: ['ID', 'ID', ...]`\r\n  + Not supported when serving to REST:\r\n    + Deep navigations, for example, `GET /Books/1/author/books`\r\n    + `/$count`\r\n    + `$apply`\r\n\r\n### Changed\r\n\r\n- Minimum required Node.js version is now 12. Support for Node.js v10 is dropped.\r\n- Draft handlers registered via `cds.ApplicationService.registerFioriHandlers()` which gets called in `cds.ApplicationService.init()`\r\n- OData validation is skipped by default. It can be explicitly turned on by setting `cds.odata.skipValidation` config to `false`.\r\n\r\n### Fixed\r\n\r\n- Accept header matching during media stream\r\n- Time delta for Date type in temporals\r\n- Function calls using an OData inline parameter syntax with aliased parameters of primitive types\r\n- Path navigation in `$orderby` expressions when using SAP HANA functions\r\n\r\n### Removed\r\n\r\n- Blind path-level logs by odata-server\r\n\r\n## Version 3.0.1 - 2021-03-25\r\n\r\n### Added\r\n\r\n- `PUT` primitive properties via OData\r\n- Optimistic concurrency control for primitive properties\r\n- Data for virtual properties filtered out on write to draft tables\r\n- Annotation `@odata.draft.enclosed`\r\n\r\n### Changed\r\n\r\n- Grants of `@restrict` in draft are derived from the CRUD vocabulary\r\n- Unnecessary `@restrict` checks for actions on drafts are skipped (\"in process by user\" check remains)\r\n- Drafts are deleted after the active version was created/ updated\r\n- Skip \"with parameters\" clause if no order by clause or all columns in the order by clause are not strings\r\n  + Deactivate during two-month grace period via compatible feature flag `cds.env.features.skip_with_parameters = false`\r\n\r\n### Fixed\r\n\r\n- Reading `SiblingEntity` via navigation of a draft enabled entity\r\n- Inline defined return types of custom actions/functions in REST\r\n- Multiple integrity errors in one changeset\r\n- `@Capabilities.NavigationRestrictions` considers \"deep\" navigation paths\r\n- Add ETags to result based on `@odata.etag` in CSN alone\r\n- Reading media stream with accept header\r\n\r\n### Removed\r\n\r\n## Version 3.0.0 - 2021-03-19\r\n\r\n### Added\r\n\r\n- SAP Event Mesh: Webhook support\r\n- SAP Event Mesh: Webhook support in multitenancy\r\n- Messaging: Remove obsolete topics on queue creation\r\n- Additional convenience look-ups of `messages.properties` files next to models\r\n- Support for the `@cds.search` annotation to allow a different set of searchable elements in the `$search` OData query option and to extend the search to associated entities (currently not supported)\r\n- Additional credentials look-up with label `service-manager` in SAP HANA pool\r\n- Support for new \"Locked by Another User\" request of draft choreography\r\n\r\n### Changed\r\n\r\n- By default, only elements typed as `string` are searchable via the `$search` OData query option to improve performance\r\n- Deprecate `@Search.defaultSearchElement` annotation in favor of the `@cds.search` annotation\r\n- Ignore `not null` annotation on nested structured types in OData x4 flavor (`cds.env.odata.flavor = x4`) if its parent structure is optional\r\n- Smart quoting based on database-specific keywords exported by `@sap/cds-compiler`\r\n  + Deactivate during two-month grace period via compatible feature flag `cds.env.features.compiler_keywords = false`\r\n\r\n### Fixed\r\n\r\n- Using path navigations in `$filter` for SAP HANA-based services configured with `cds.odata.flavor = x4`\r\n- Only `messaging` will deal with domain-level events\r\n- Read access using nondraft enabled projections on draft children\r\n- Debug message when metadata size exceeds cache limit\r\n- Order by using functions in combination with group by\r\n- Streaming by navigation\r\n- Alignment of temporal data with compiler v2 format\r\n- Calculate `DraftIsCreatedByMe` and `DraftIsProcessedByMe` properties of `DraftAdministrativeData` by reading drafts\r\n\r\n### Removed\r\n\r\n- Support for version 2 of the `@sap/xssec` package, as it is deprecated. Now, only version 3 of the package is supported.\r\n\r\n## Version 2.9.11 - 2021-04-09\r\n\r\n### Fixed\r\n\r\n- Double quoted SQL keywords\r\n\r\n## Version 2.9.10 - 2021-04-07\r\n\r\n### Fixed\r\n\r\n- Downport of fix \"Side effects on `@sap/hana-client`'s streaming extension\"\r\n\r\n## Version 2.9.9 - 2021-04-01\r\n\r\n### Fixed\r\n\r\n- Managed properties of non-leaf nodes without additional delta shall not be updated during draft activation\r\n\r\n## Version 2.9.8 - 2021-03-30\r\n\r\n### Added\r\n\r\n- Database pool teardown in case of failed db connection attempt\r\n\r\n## Version 2.9.7 - 2021-03-18\r\n\r\n### Fixed\r\n\r\n- Reserved keywords for smart quoting\r\n- Datetime conversion for SAP HANA in case of `INSERT...as(SELECT...)`\r\n\r\n## Version 2.9.6 - 2021-03-12\r\n\r\n### Added\r\n\r\n- Pass `tcpKeepAliveIdle` to `hdb` (available with `hdb^18`) via environment variable `HDB_TCP_KEEP_ALIVE_IDLE`\r\n- Database pool teardown in case of credentials become invalid scenario extended by unreachable database\r\n\r\n## Version 2.9.5 - 2021-03-08\r\n\r\n### Fixed\r\n\r\n- Relative error target on draft activation for Fiori Elements with OData v2\r\n\r\n## Version 2.9.4 - 2021-03-08\r\n\r\n### Fixed\r\n\r\n- Determine bound action parameter name in case of changesets\r\n\r\n## Version 2.9.3 - 2021-03-04\r\n\r\n### Fixed\r\n\r\n- Check whether current request is a bound action\r\n\r\n## Version 2.9.2 - 2021-03-02\r\n\r\n### Fixed\r\n\r\n- Result payload by expand of grandchild entity, when the child data that is null\r\n- Delete composition of one via navigation\r\n- Use extended model in structured processing\r\n\r\n## Version 2.9.1 - 2021-02-26\r\n\r\n### Fixed\r\n\r\n- Namespace lookup in EDM for OData configuration\r\n- Find previous entity for inherited authorization restrictions\r\n- Use extended model in generic CRUD post-processing\r\n- Clone headers before sanitizing for logs\r\n\r\n## Version 2.9.0 - 2021-02-24\r\n\r\n### Added\r\n\r\n- Support for `cds.LargeString` in queries for remote services\r\n- Support for tenant-aware emit in AMQP messaging\r\n- Metadata (for example, `__count` or `@odata.count` for OData V2 and OData V4, correspondingly) of an external service result are uniformly normalized (for example, to `$count`) and propagated with the result by the rest-client\r\n- Improved support for managed composition of one\r\n- Support for cascade DELETE for composition of one\r\n- Smart quoting in SQL statements\r\n- Improved memory consumption of integrity checks\r\n- Result payload includes ETag values of composition targets\r\n- Custom metadata in OData result (alpha)\r\n- Support for canonical URL to `$metadata` in `@odata.context` of a response: use `cds.env.odata.contextAbsoluteUrl = true` to get a service URL (default) or `cds.env.odata.contextAbsoluteUrl = 'http://example.com/yourService/'` to set your own URL\r\n\r\n### Changed\r\n\r\n- The default implementation of enterprise messaging (`enterprise-messaging`) is now multitenant aware.\r\n  Currently only emit is implemented. The old, shared variant is available through `enterprise-messaging-shared`.\r\n- Skip localization on pure count queries\r\n- Managed properties of base entity are updated if any composition target is updated\r\n  - Deactivate during two-month grace period via compatible feature flag `cds.env.features.update_header_item = false`\r\n- Default text templates for element assertions don't contain an element name as a parameter anymore\r\n- Custom authorization header can now be set in service consumption\r\n- Managed associations-to-one aren't expanded in the result of a POST request in case of `cds.odata.flavor = v4`\r\n  - Deactivate during two-month grace period via compatible feature flag `cds.env.features.skip_expand_assoc = false`\r\n- Implicit auto exposed entities inherit authorization restrictions from parent\r\n- Modifying an entity without authorization results in HTTP code `403` instead of `404`\r\n- Instance-based `@restrict.where` clauses are ignored during `CREATE` (instead of rejecting the request)\r\n  - Deactivate during two-month grace period via compatible feature flag `cds.env.features.skip_restrict_where = false`\r\n\r\n### Fixed\r\n\r\n- `req.diff` for deep hierarchies\r\n- DateTime conversion for `INSERT` statements using `.columns` and `.values/.rows` on SAP HANA\r\n- OData V4 error response target for bound actions\r\n- Requests using `$search` query option on draft enabled active entities\r\n- Path navigations in `$filter` aren't considered as aggregated away when used in combination with `$apply`\r\n- Draft: Entities with expired draft can now be deleted\r\n- `Edm.Time`, `Edm.DateTime` and `Edm.DateTimeOffset` serialization issues when using external OData V2 service\r\n- Primitive property access of Singletons via URL like `/Singleton/name`\r\n- Path navigation in `$orderby` expressions for draft-enabled services on SAP HANA\r\n\r\n### Removed\r\n\r\n- Redundant key generation\r\n\r\n## Version 2.8.7 - 2021-04-07\r\n\r\n### Fixed\r\n\r\n- Downport of fix \"Side effects on `@sap/hana-client`'s streaming extension\"\r\n\r\n## Version 2.8.6 - 2021-02-17\r\n\r\n### Fixed\r\n\r\n- Handling of OData query option `$skiptoken` when URL encoded (that is, `%24skiptoken`)\r\n\r\n## Version 2.8.5 - 2021-02-16\r\n\r\n### Fixed\r\n\r\n- Handling of OData query option `$skiptoken`\r\n\r\n## Version 2.8.4 - 2021-02-15\r\n\r\n### Added\r\n\r\n- Database pool teardown in case credentials become invalid\r\n- Idle timeout added to default database pool configuration\r\n\r\n### Fixed\r\n\r\n- Crash on bad remote service credentials\r\n- Wrong case order during query generation in service consumption\r\n\r\n## Version 2.8.3 - 2021-02-05\r\n\r\n### Fixed\r\n\r\n- No pagination while reading single entity\r\n- `SELECT.limit.offset.val` should be a number\r\n\r\n## Version 2.8.2 - 2021-02-03\r\n\r\n### Fixed\r\n\r\n- `@mandatory` annotation of typed parameters of actions/functions\r\n\r\n## Version 2.8.1 - 2021-02-02\r\n\r\n### Fixed\r\n\r\n- Skip input validation for arrayed types as parameter of actions/functions\r\n- Log error stack when serving to REST\r\n- `@assert.range` doesn't imply `@mandatory`\r\n\r\n### Removed\r\n\r\n- Reconnect for `hdb`\r\n\r\n## Version 2.8.0 - 2021-02-01\r\n\r\n### Added\r\n\r\n- Support for OData proxies (beta)\r\n- Support for OData cross-service references (beta)\r\n- Support upsert for to-one containment with foreign key in parent\r\n- Support for case-insensitive `bearer` prefix when forwarding token in service consumption\r\n- Support for filter on `null` values in service consumption\r\n- Server-side pagination for REST services\r\n- Input validation for typed parameters of actions/functions\r\n- Format assertion exception for UUIDs in MTX's `ProvisioningService.tenant` (old SAP Cloud Platform subaccount IDs aren't UUIDs)\r\n- Draft scenario all active is extended\r\n- Skip integrity checks via:\r\n  - `@assert.integrity: false` on entity and service level (was only on association level)\r\n  - `cds.env.features.assert_integrity = false` as global config (private `cds.runtime.skipIntegrity` will be removed)\r\n- Skip SAP HANA's localization feature (`WITH PARAMETERS ('LOCALE' = '<locale>')`) via `cds.env.features.with_parameters = false`\r\n- Deprecation warning for `req.run`\r\n\r\n### Changed\r\n\r\n- ETag added for expanded entities\r\n- Use `cds.log()` throughout (incl. odata-server)\r\n- Replace text keys with default text (i.e., w/o locale) before logging error\r\n- Read after write on draft activate doesn't read deep\r\n- On HTTP error (status >= 400) during remote service consumption: log details and throw gateway error\r\n- `accept=application/json,text/plain` is used as default `accept` header for remote service calls\r\n- Improved custom error message in case acquiring a client from the pool timed out\r\n- Metadata endpoints are protected by default if the respective service is protected. Deactivate metadata endpoint protection via `cds.env.odata.protectMetadata = false`.\r\n- Streamlined module names used in logging\r\n\r\n### Fixed\r\n\r\n- Aggregated-away properties in `$select`, `$expand`, and `$filter` now behave correctly\r\n- Exception when accessing texts for a renamed localized draft entity\r\n- Deep Update wrongly tried to create entries if there are nested `to-one` compositions\r\n- Navigation on singleton\r\n- Localized error messages if no authentication used\r\n- Fix draft with expand when ordering by draft-specific columns\r\n- Incorrect content type in batch response if no `Accept` header is provided\r\n- Input validation for enums using `falsy` values\r\n- Insert via navigation throws an error if the root of navigation doesn't exist\r\n- Filter virtual fields from columns and expand by READ\r\n- `auto-expand` of generated foreign keys when functions/actions return entities\r\n- Custom headers are normalized to lower case\r\n- Post-processing of arrayed elements in Database Service\r\n- Duplicated key condition in DELETE CQN\r\n- To be checked data for DELETE integrity checks in actions was wrong\r\n- Fixed missing `!=` comparator for query generation of remote services\r\n- CSN modification during resolve view\r\n- Clash of language-code-like namespaces (for example, `de.` or `fr.`) with localized entities\r\n- `hdb`'s error event invalidates client\r\n\r\n### Removed\r\n\r\n- Usage of deprecated `req.run`\r\n- Support for deprecated config `cds.auth.passport`. Use `cds.requires.auth` instead.\r\n- Default `$format` query option in case of `GET` requests to remote OData services\r\n\r\n## Version 2.7.10 - 2021-01-20\r\n\r\n### Fixed\r\n\r\n- Downport of fix \"CSN modification during resolve view\"\r\n\r\n## Version 2.7.9 - 2021-01-19\r\n\r\n### Fixed\r\n\r\n- Don't crash if release called without client\r\n\r\n## Version 2.7.8 - 2020-12-10\r\n\r\n### Fixed\r\n\r\n- Null pointer exception when using `$expand`, `$filter`, and `contains` in the same HTTP request\r\n\r\n## Version 2.7.7 - 2020-12-08\r\n\r\n### Fixed\r\n\r\n- In `hdb` driver, stored procedures without OUT parameters can now return values\r\n- Service consumption when using `.get('/')`\r\n\r\n## Version 2.7.6 - 2020-12-07\r\n\r\n### Fixed\r\n\r\n- Validate pool clients before use\r\n- Improved default pool configuration\r\n- Remove `req.run` deprecation warning\r\n\r\n## Version 2.7.5 - 2020-12-04\r\n\r\n### Fixed\r\n\r\n- Messaging incompatibility in combination with `@sap/cds@4.4.3`\r\n\r\n## Version 2.7.4 - 2020-12-02\r\n\r\n### Fixed\r\n\r\n- `filter-node-package` has to be a dev dependency\r\n\r\n## Version 2.7.3 - 2020-12-01\r\n\r\n### Added\r\n\r\n- Deprecation warning for private function `req.run`, which will be removed\r\n- Custom aggregates in `$apply` (beta)\r\n- Support for string keys with dots in value (e. g. `a.b.c`) when using keys as segments\r\n- `$filter`, `$groupby`, and `$orderby` works with path navigation to key for managed association to-one on SQLite\r\n\r\n### Changed\r\n\r\n- Logging is now done using `cds.log`\r\n- CREATE and UPDATE requests that aren't allowed due to `@restrict.where` are rejected with `403` instead of `404`\r\n- No usage of private `req._model` in generic handlers\r\n- Service consumption: Print Cloud SDK logs only in debug mode\r\n- Generated API for actions and functions on `ApplicationService` as now done on `Service`\r\n\r\n### Fixed\r\n\r\n- No integrity check for events\r\n- Race condition in data listener of messaging\r\n- External entities are now always automatically resolved\r\n- Skip integrity checks for virtual entities\r\n- Auto-expand of to-one association of `CREATE` or `UPDATE` requests\r\n- `tx.model` in REST requests\r\n- Expand to association with projection `as select from where`\r\n\r\n### Removed\r\n\r\n- `req.statements` isn't available anymore\r\n\r\n## Version 2.7.2 - 2020-11-20\r\n\r\n### Added\r\n\r\n- Support for tracing database statements with Dynatrace when using `@sap/hana-client` driver\r\n\r\n### Fixed\r\n\r\n- Problem with navigations that have `null` as value in payload\r\n\r\n## Version 2.7.1 - 2020-11-18\r\n\r\n### Changed\r\n\r\n- Transaction state handling moved to core\r\n\r\n### Fixed\r\n\r\n- Response in case of failed changesets in `$batch` requests\r\n- UPDATE/INSERT via navigation with foreign key in child\r\n\r\n### Removed\r\n\r\n- Private function `_ensureOpen` of `cds.DatabaseService`\r\n\r\n## Version 2.7.0 - 2020-11-18\r\n\r\n### Added\r\n\r\n- `@assert.range enum { ... }` for decimals\r\n- Draft: Lock active entity on edit action to prevent duplicate drafts\r\n- Set batch response header Content-Transfer-Encoding\r\n\r\n### Changed\r\n\r\n- Correlation ID at `req.headers['x-correlation-id']` in subrequests\r\n\r\n### Fixed\r\n\r\n- Resolving custom DELETE CQNs\r\n- Non-nullable values can't be set to `null` in UPDATE requests\r\n- Delete active entity with DELETE restriction\r\n- Calculation of HasDraftEntity doesn't involve secure annotations\r\n- POST/PATCH on composition of aspect didn't insert keys correctly\r\n- Check for different navigation properties with `$expand`\r\n- Streaming from nondraft entity in draft context\r\n- REST Adapter: `PUT` requests on collections are forbidden\r\n- affected rows in CREATE caused error with hdb\r\n- Navigating to composition of aspect with association as key caused error\r\n- Wrongly returned value for key calculation in expand caused for loop to break\r\n- TypeError by not connected database\r\n- Multiple messages in batch changeset\r\n\r\n### Removed\r\n\r\n- Support for `defaultLocale` on service level\r\n\r\n## Version 2.6.11 - 2021-01-20\r\n\r\n### Fixed\r\n\r\n- Downport of fix \"CSN modification during resolve view\"\r\n\r\n## Version 2.6.9 - 2020-11-26\r\n\r\n### Added\r\n\r\n- Internal (for mtx) parameter `poolOnly` to `HanaDatabase.disconnect()` for clearing generic pool entry in case of credentials update\r\n\r\n## Version 2.6.8 - 2020-11-16\r\n\r\n### Added\r\n\r\n- Support for tracing database statements with Dynatrace when using `hdb` driver\r\n\r\n### Changed\r\n\r\n- No separate logging of error message and stack in OData server\r\n- Not extended tenants reuse default OData service instance\r\n\r\n### Fixed\r\n\r\n- Fix for metadata document exceeding cache limit\r\n\r\n## Version 2.6.7 - 2020-11-11\r\n\r\n### Fixed\r\n\r\n- Previous fix broke service consumption of other systems\r\n\r\n## Version 2.6.6 - 2020-11-10\r\n\r\n### Fixed\r\n\r\n- Check `req.path` during DoS prevention\r\n- Headers handling in service consumption for SAP S/4HANA On-Premise systems\r\n\r\n## Version 2.6.5 - 2020-11-09\r\n\r\n### Fixed\r\n\r\n- Default sorting in combination with `$apply`\r\n\r\n## Version 2.6.4 - 2020-11-06\r\n\r\n### Fixed\r\n\r\n- i18n tests executed in cds-test\r\n\r\n## Version 2.6.3 - 2020-11-05\r\n\r\n### Fixed\r\n\r\n- Url and headers handling in service consumption\r\n\r\n## Version 2.6.2 - 2020-11-04\r\n\r\n### Fixed\r\n\r\n- Augment read after write data with returned values of virtual properties on draft activate\r\n\r\n## Version 2.6.1 - 2020-11-04\r\n\r\n### Fixed\r\n\r\n- Skip forbidden view check if association to view with foreign key in target\r\n\r\n## Version 2.6.0 - 2020-11-03\r\n\r\n### Added\r\n\r\n- Support for `$expand` on managed Composition and Association to-one in structured types\r\n- Support for CQN partials in `SELECT.orderBy()`\r\n- `messages_<locale>.properties` files looked for in all i18n folders (not just the first)\r\n- Structured types as key\r\n- Support for localization in custom handlers\r\n- `InsertResult` (beta):\r\n  - iterator that returns the keys of the created entries, for example:\r\n    - Example: `[...result]` -> `[{ ID: 1 }, { ID: 2 }, ...]`\r\n    - in case of `INSERT...as(SELECT...)`, the iterator returns `{}` for each row\r\n  - `affectedRows`: the number inserted (root) entries or the number of affectedRows in case of INSERT into SELECT\r\n  - `valueOf()`: returns `affectedRows` such that comparisons like `result > 0` can be used\r\n    - Note: `===` can't be used as it also compares the type\r\n- Authentication strategy `xsuaa` (only with `@sap/xssec^3`) that additionally provides access to saml attributes via `req.user.attr` (for example, `req.user.attr.familyName`)\r\n\r\n### Changed\r\n\r\n- SQL queries don't use placeholders for rows of LIMIT clause\r\n- Replaced `@sap/odata-server` dependency by own copy\r\n- On `PATCH` and `PUT`, an `UPDATE` event is followed by a `CREATE` event if there was no matching entity\r\n- On `PUT`, not provided properties are defaulted/ nulled\r\n- On HTTP requests, `req.data` is a copy to preserve the original payload\r\n- Additional properties in payload are preserved for entities with `@cds.persistence.skip` when served to `rest`\r\n- RemoteService: Ignore where clause of view definition during INSERT|UPDATE|DELETE instead of throwing error\r\n- Don't use SQL placeholders for numbers\r\n- Service-level `@requires` are checked in protocol adapter instead of ApplicationService (excluding metadata requests)\r\n- Additional translatable messages\r\n\r\n### Fixed\r\n\r\n- Streamlined debugging output for SQL statements\r\n- Integrity check for Associations in structured types\r\n- DateTime conversion for SAP HANA\r\n- Ensure `req.method` and `req.headers`\r\n- DatabaseService: Ignore where clause of view definition during INSERT|UPDATE|DELETE\r\n- Activate draft with UPDATE restriction\r\n- Add the correct backlink to composition tree in case of additional association from child to parent\r\n- `falsy` default values weren't inserted into the database\r\n- Always prepare for temporal data\r\n- Internal server error on views with parameters and join\r\n- Secure annotation in draft union scenario\r\n- Augment read after write data with returned values of virtual properties\r\n- `@restrict` with association paths and `$user.<attr>` in where\r\n- Result of deep insert\r\n- `UPDATE` statements in custom handlers on Application Service setting only falsy values or using only expressions like `{stock: {'-=': 1}}`\r\n\r\n## Version 2.5.6 - 2020-10-22\r\n\r\n### Fixed\r\n\r\n- Messaging: add data listener only once queue was put\r\n\r\n## Version 2.5.5 - 2020-10-19\r\n\r\n### Fixed\r\n\r\n- `$user.id` in `restrict.where` always treated as string\r\n\r\n## Version 2.5.4 - 2020-10-19\r\n\r\n### Fixed\r\n\r\n- Certificate issue when consuming remote services\r\n\r\n## Version 2.5.3 - 2020-10-16\r\n\r\n### Fixed\r\n\r\n- Don't fail in `cds deploy --to sqlite` if `sqlite3` isn't installed\r\n\r\n## Version 2.5.2 - 2020-10-09\r\n\r\n### Fixed\r\n\r\n- Don't fail in `cds deploy --dry` if `sqlite3` isn't installed\r\n\r\n## Version 2.5.1 - 2020-10-07\r\n\r\n### Fixed\r\n\r\n- Set temporal session contexts on SAP HANA\r\n- Multiple invocations of `req.on('failed', () => { ... })`\r\n\r\n## Version 2.5.0 - 2020-10-02\r\n\r\n### Added\r\n\r\n- Messaging: Transaction-coupled events will only be sent for successful requests\r\n  (can be disabled by setting outbox=false)\r\n- Support for @assert.notNull: false\r\n- Messaging: Support for non-normalized input in handler registration\r\n- Messaging: automatically generate headers.id\r\n- Support for navigating to association to-one in structured\r\n- Initial support for `cds.odata.flavors = { v2, v4, w4, x4 }`\r\n- Support custom timezone offset\r\n- Support for assertions in structured data\r\n- Support for annotation `@Capabilities.Readable`\r\n- Input validation for actions and functions\r\n- Support language-dependent sorting order for SAP HANA\r\n\r\n### Changed\r\n\r\n- Input processing: Performance improvements through templating mechanism used in single handler per layer\r\n- Input processing: Key propagation only on DB layer\r\n- Format of file-based messaging\r\n\r\n### Fixed\r\n\r\n- Outbound REST/OData errors in CQN translation\r\n- View resolution for views with static values\r\n- Skip transition by view annotated with @cds.persistence.table:true\r\n- Reading structured types via navigation\r\n- Filter on elements having the same name as in DraftAdministrativeData\r\n- Draft union scenario with filter on elements from DraftAdministrativeData\r\n- Resolving views for deep deletes\r\n- Key generation in some UPDATE queries\r\n- SAP HANA: cds.DateTime convert to UTC in draft case\r\n- Combining `$filter` query option and `$apply` using only filter transformation\r\n- Join with draft tables\r\n- Determine name of primary key of draft enabled entity in subselect\r\n- Improved error message for direct use of auto exposed entity\r\n- Empty structured types are now null\r\n- Structured properties with the same name as CQN properties failed to execute\r\n- Association as key caused wrongly generated SQL statement\r\n- Deep update with structured type caused wrongly generated SQL statement\r\n\r\n## Version 2.4.0 - 2020-09-11\r\n\r\n### Added\r\n\r\n- Structured types in `$orderby`, `$filter`, `$select`\r\n- Limited support for Association to-one in structured types\r\n\r\n### Changed\r\n\r\n- Messaging: The `queue` and `queueConfig` options are now a single object: `{ name, ...queueConfig }`\r\n- Messaging: The `file` option is now moved to top level\r\n- Messaging: The `prefix` option is removed\r\n\r\n### Fixed\r\n\r\n- Diff calculates the difference on database level\r\n- `sap-messages` header now uses unicode characters for special characters\r\n- `req.target` for bound operations\r\n- `INSERT.into(...).as(SELECT.from(...)` inside custom handlers\r\n- Integrity check for DELETE requests\r\n- `Serialization Error` for entities with composition of aspects in `containment` mode\r\n- Expand on entity with a backlink as a key\r\n\r\n## Version 2.3.1 - 2020-09-17\r\n\r\n### Fixed\r\n\r\n- Expand on entity with a backlink as a key\r\n\r\n## Version 2.3.0 - 2020-08-31\r\n\r\n### Added\r\n\r\n- Support for Continuation Local Storage (CLS)\r\n- Support for access of structured property values in Odata\r\n- Support for expand for external OData service in REST\r\n\r\n### Fixed\r\n\r\n- HTTP Status Code for `GET` requests on `navigation-to-many` in combination with `$filter`\r\n\r\n## Version 2.2.0 - 2020-08-26\r\n\r\n### Added\r\n\r\n- Path navigations with keys for managed to-one association in `orderby` work on SQLite e.g. `$orderby=author/id`\r\n- Support for `cds.PrivilegedUser`\r\n- Implicit sorting for OData singletons\r\n\r\n### Fixed\r\n\r\n- Deep update could potentially insert wrong data\r\n- Deep insert was also done on empty composition-to-many\r\n- POST via multiple navigations with OData containment activated\r\n- localized view with parameters\r\n- implicit sorting order\r\n- Custom SELECT CQN with join/union in draft enabled service failed for nondraft entities\r\n- `req.user.attr` access during @restrict processing with @sap/xssec^3\r\n\r\n## Version 2.1.9 - 2020-08-26\r\n\r\n### Fixed\r\n\r\n- hdb reconnect on idle timeout\r\n\r\n## Version 2.1.7 - 2020-08-17\r\n\r\n### Added\r\n\r\n- Composite-Messaging\r\n- Support for Message Queuing\r\n- Support for `@sap/xssec^3`\r\n- `@Common.numericSeverity` in error response\r\n- Support expand with `*` in QL API\r\n- Headers can be set with tx.emit on remote HTTP services\r\n- Propagate @cds.localized:false during deep reads\r\n- SAP HANA: support for service manager credentials\r\n\r\n### Changed\r\n\r\n- Messaging: The configuration is moved to top level (before it was in credentials)\r\n- Messaging: The payload type is now 'application/json'\r\n\r\n### Fixed\r\n\r\n- Messaging: Messages are only acknowledged if successful\r\n- Race conditions with messaging management\r\n- `orderBy` as an empty array\r\n- Join transaction during local API call\r\n- Support duplicate names of bound and unbound actions and functions in local API\r\n- Test read for UPSERT wasn't tenant aware\r\n- Prefer `cds.env.requires.uaa.credentials`\r\n- Error while activate with missing mandatory fields\r\n- Restore `req._.req.authInfo` for compatibility\r\n- OData V4 single property access in combination with mode `odata=structured`\r\n- empty string in functions like `tolower`, `toupper`\r\n\r\n## Version 2.1.6 - 2020-08-06\r\n\r\n### Fixed\r\n\r\n- Removal of key properties of contained entity\r\n- Flattening of to-one association if key is also a to-one association\r\n- No localization with `SELECT.forUpdate()`\r\n- Multilevel expand with composition backlink as key\r\n- Ignore association keys in select for deletion integrity check\r\n- POST via multiple navigations\r\n- `req.user.id = <clientId>` with JWT strategy and `client_credentials` flow\r\n- Transaction handling with integrity check and changesets in JSON batch\r\n\r\n## Version 2.1.5 - 2020-08-03\r\n\r\n### Added\r\n\r\n- Support for `@Capabilities.NavigationRestrictions`\r\n- Support queries to a model with nested projections to an external service\r\n\r\n### Fixed\r\n\r\n- `req._.req` in `SAVE` handler\r\n- Insert duplicate data during deep update\r\n- SAP HANA: prefer `this.options.credentials`\r\n- `$orderBy` in case of `DRAFT` with `Union`\r\n\r\n## Version 2.1.4 - 2020-07-31\r\n\r\n### Added\r\n\r\n- Support for structured OData\r\n- Support for arrayed elements\r\n\r\n### Fixed\r\n\r\n- Large numbers of expands (>26)\r\n- Reference integrity check for `DELETE`\r\n- Localized in combination with draft\r\n- Propagate @cds.localized:false during deep reads (currently limited to one expand)\r\n- Fetch specific credentials from multiple xsuaa bindings via `requires.uaa.vcap`\r\n- Static values in custom backlinks of compositions\r\n\r\n## Version 2.1.3 - 2020-07-28\r\n\r\n### Added\r\n\r\n- Synchronous API for streaming\r\n- Support calling SAP HANA stored procedures\r\n\r\n### Fixed\r\n\r\n- Streaming of null values and not found entities\r\n- Temporal session contexts on SAP HANA\r\n\r\n## Version 2.1.2 - 2020-07-24\r\n\r\n### Fixed\r\n\r\n- SAP HANA credentials handling\r\n\r\n## Version 2.1.1 - 2020-07-24\r\n\r\n### Fixed\r\n\r\n- SAP HANA pooling with instance manager\r\n\r\n### Removed\r\n\r\n- `req.isDraftChange`, `req.draft`, and `req.draftMetadata` in draft-related handlers\r\n\r\n## Version 2.1.0 - 2020-07-22\r\n\r\n### Added\r\n\r\n- `req.warn(code, msg, target, args)`\r\n- `req.data` returns an array in case of bulk operations\r\n- All services as subclasses of new `cds.Service`\r\n- Differentiation between \"Application Service\" (e.g., providing OData) and \"Persistence Service\" (e.g., database, remote)\r\n\r\n### Fixed\r\n\r\n- Retrieve performance information via `sap-statistics` header in case of batch requests\r\n- Direct user authentication challenges in case of `/$batch`\r\n- HTTP error codes from custom handlers aren't filtered anymore if in 300...500 range\r\n- following projection with undefined name in target entity\r\n- Lists and null values in `where` with fluent expressions\r\n\r\n### Changed\r\n\r\n- Streamlined `req.reject/error/info(code, msg, target, args)`: takes four individual params (number, string, string, array) or one object\r\n- Changed behavior by handler registration:\r\n  -- Handlers registered with entity = `*` aren't called by unbound events anymore.\r\n  -- Handlers registered without entity aren't called by bound events anymore.\r\n  -- Special case: Handlers registered in form .before/on/after(\\'\\*\\', handler) are called by bound and unbound events.\r\n- Expanding association from draft-enabled entity to draft enabled entities always provides active version of the expanded entity.\r\n- If you export a function in an `init.js` file, it will be called with the primary database, and its result is awaited.\r\n- REST: Since the service is now based on the `cds.Service` base class, all convenience functions (`create`, `post`, etc.) are streamlined.\r\n- Messaging: Only one queue per app is created, as opposed to one queue per app and external service.\r\n- Messaging: You can now directly connect to the (technical) messaging service through `await cds.connect.to('messaging')`, no topic names are generated here.\r\n- Messaging: If you want to link your own or external services to messaging, you need to model your events in CDS.\r\n- Messaging: If you want to provide custom topics for modeled events, you need to add the `@topic` annotation to the event.\r\n- Messaging: The `prefix` option in the service's credentials is prepended to events with a `@topic` annotation.\r\n- Messaging: The syntax to emit events with headers changed:\r\n  ```js\r\n  srv.emit({ event: 'yourEvent', data: { some: 'data' }, headers: { some: 'headers' } })\r\n  ```\r\n- Messaging: The default file for `file-based-messaging` is `~/.cds-msg-box`.\r\n- Streamlined handler registration: `srv.before/on/after(<event>, <entity>?, <handler>)`\r\n  - Event and handler are mandatory; entity must be omitted if unbound action/function (CREATE, READ, UPDATE, DELETE are considered to be bound)\r\n  - Event and entity may be arrayed\r\n  - `srv.before/on/after(*, <handler>)` matches all as shorthand\r\n- `INSERT` statements return an object or array of objects (in case of bulk) with the number of affected rows as result of `valueOf()`, as well as the keys of the inserted entities:\r\n  ```js\r\n  const res = await srv.run(\r\n    INSERT.into('Books').entries([\r\n      { ID: 1, title: 'one' },\r\n      { ID: 2, title: 'two' }\r\n    ])\r\n  )\r\n  res > 1 // > true\r\n  res.keys // > [{ ID: 1 }, { ID: 2 }]\r\n  ```\r\n\r\n### Removed\r\n\r\n- Support for run block (`tx.run(() => {})`)\r\n\r\n## Version 2.0.3 - 2020-06-19\r\n\r\n### Added\r\n\r\n- Custom translatable error messages\r\n- Support for containment in CRUD\r\n- Support for static values in custom on conditions for associations\r\n\r\n### Changed\r\n\r\n- on() function for joins doesn't support the simple conditions like on(x, =, y) anymore. Only fluent expressions and object predicates are supported.\r\n\r\n### Fixed\r\n\r\n- Enterprise Messaging: Received messages are correctly decoded\r\n- Reading single properties of draft enabled entities via navigations e. g. `/E0(ID=<uuid>,IsActiveEntity=false)/e1(ID=<uuid>,IsActiveEntity=false)/property`\r\n- Not supported transformation in `groupby` throws cryptic error\r\n- etag check only if OData request\r\n- Statements if path expression contains keys of type `cds.Timestamp`, `cds.DateTime` or `cds.Time`\r\n- `$filter` lambda `any` operator if no argument is provided\r\n- User attributes in `req.user.attr` merge `info.userInfo` and `info.userAttributes` (authentication strategy `JWT`)\r\n- User authentication challenges\r\n\r\n### Removed\r\n\r\n- Support for nested user attributes in `@restrict.where`, e.g., `$user.name.familyName`\r\n\r\n## Version 2.0.2 - 2020-06-10\r\n\r\n### Added\r\n\r\n- Support for XSUAA's user attribute value `$UNRESTRICTED`\r\n- Default to combination `[...];IEEE754Compatible=true;ExponentialDecimals=true` if IEEE754Compatible or ExponentialDecimals is omitted\r\n- Use custom authenticate middleware via `cds.env.requires.auth.impl`\r\n- Authentication strategy `dummy` (`cds.env.requires.auth.strategy = 'dummy'`) that creates super users (i.e., pass all authorization checks)\r\n- Support relative destination path in rest-client\r\n\r\n### Changed\r\n\r\n- CQN returned for `req.query` changed — for requests with path expressions, the returned CQN of `req.query` is changed to a simplified format. For `GET /Authors(150)/books` the CQN contains the path in `.from` instead of an `exists` clause in `.where`.\r\n\r\n```\r\n{ SELECT:  {  from: { \"ref\": [\r\n        {\r\n          \"id\": \"AdminService.Authors\",\r\n          \"where\": [ { \"val\": 150 } ]\r\n        },\r\n      \"books\"\r\n      ] } } }\r\n```\r\n\r\n- Authorizations as whitelist: if any restrictions exist for the target, all not explicitly allowed operations are forbidden (e.g., `@restrict: [{ grant: 'READ', ... }]` -> everything but `READ` is forbidden for all, including bound actions and functions)\r\n- Applicable `@requires` and `@restrict` definitions concatenated by AND\r\n- Reference to undefined XSUAA user attribute in `@restrict.where` results in forbidden\r\n- `req.event` for unbound actions and functions is provided without service prefix\r\n- Increased logging in production (temporarily until revised logging concept is implemented)\r\n- `cds.serve(..., { passport: [...] }` -> `cds.serve(..., { auth: [...] }`\r\n\r\n### Fixed\r\n\r\n- `INSERT.into.as(SELECT.from...)` with `SELECT` containing placeholders\r\n- Requests on a navigation to many with key provided returns 404 if the resource doesn't exist\r\n- POST/PATCH requests on `Composition of many` with backlink association as key\r\n- Path expressions on SAP HANA are now flat and not structured anymore\r\n- `$expand` on `Composition of many` with backlink association as key\r\n- Roles from scopes including \".\"\r\n- Ignore unknown arrayed column during input validation\r\n- Too early client release\r\n- Pool configurations with default values can be set to `0`\r\n\r\n### Removed\r\n\r\n- Support for annotation `@cds.persistence.name`\r\n- Deprecated SQL dialect `hdbcds`\r\n\r\n## Version 2.0.1 - 2020-05-20\r\n\r\n### Changed\r\n\r\n- Passport strategies whitelist: `mock` and `JWT`\r\n- Authentication not needed for calls to a service's root or metadata endpoints\r\n- Support for \"public\" entities and actions (i.e., no restrictions) in services without `@requires` but other entities and/or actions with `@restrict`\r\n\r\n### Fixed\r\n\r\n- `target` added to assert errors\r\n\r\n## Version 2.0.0 - 2020-05-20\r\n\r\n### Changed\r\n\r\n- Update major version number\r\n\r\n## Version 1.2.0 - 2020-05-19\r\n\r\n### Added\r\n\r\n- The timeout of the exclusive lock of drafts can now be configured using `cds.drafts.cancellationTimeout`\r\n- `req.params`: iterable with key-value pairs for the key predicates of the addressed resource\r\n\r\n### Changed\r\n\r\n- Slightly improved performance for `$expand`\r\n- Return key values (single key only) of created entries instead of number of affected rows\r\n- Annotations `@cds.onInsert` and `@cds.onUpdate` ignore values from the request\r\n- Processing of read-only values moved to initial before handler\r\n- Aligned handling of virtual, computed, read-only, immutable with java runtime\r\n- Allow deep insert on to one association with nonkey property, the nonkey property is silently ignored\r\n\r\n### Fixed\r\n\r\n- Resolved some performance issues with `@sap/hana-client`\r\n- `$filter=false or ...` is now possible\r\n- Custom handler registration in multi-tenant scenario\r\n- Alias in associations wasn't processed correctly in post-processing\r\n- `$search` is now applied on the query result of `$apply` as specified in OData V4 spec\r\n- `evictionRunIntervalMillisForPools` is now treated properly\r\n- Searching for `_` or `%` in `$filter` queries with `contains`/`startswith`/`endswith`\r\n- Insert of to-one associations with structured elements\r\n\r\n## Version 1.1.1 - 2020-04-28\r\n\r\n### Added\r\n\r\n- Support for `orderBy` in rest-client\r\n\r\n### Changed\r\n\r\n- `limit` in CQN is translated to placeholders in SQL\r\n- QL API: .where() is changed:\r\n  -- Where with two parameters like .where('x', 1) isn't allowed and should be replaced with .where('x', '=', 1).\r\n  -- Combinations with partial CQNs like .where({ref: ['x']}, '=', 1) aren't allowed. Use arrays of partial CQNs like .where([ {ref: ['x']}, '=', {val: 1} ]) instead.\r\n  -- Fluent expressions work as strictly alternating string/value lists (as documented). Partial CQN can be used here as value.\r\n- Per default, results are now ordered by keys of the entity\r\n\r\n### Fixed\r\n\r\n- `$filter=false or ...` is now possible\r\n- CREATE now returns `context.data` if not all non-UUID keys are provided\r\n  and no error is thrown in the database client\r\n- CANCEL and PATCH drafts now support multiple fields in where clauses\r\n- Handler registration for draft events in multitenancy scenario\r\n- Localize expanded entities\r\n- Composition and Association to one with expand in draft case\r\n- Disable local default pagination via `@cds.query.limit.default: 0`\r\n- Brackets in object predicates in where\r\n\r\n## Version 1.1.0 - 2020-04-23\r\n\r\n### Added\r\n\r\n- Support for CREATE operations with delegated key generation\r\n- `@cds.persistence.skip` annotated entities return HTTP code 501 in generic handlers\r\n- Introduced `@cds.localized:false` on entity-level for switching off automatic redirection to localized views\r\n- Server-side pagination on global, service, and entity-level via `@cds.query.limit`\r\n- Omitted key predicates of nested composition items are augmented, if possible\r\n- The exclusive lock of a draft automatically times out after 15 minutes\r\n- Static where annotations for RUD\r\n- Associations to one annotated with `@assert.integrity: false` are ignored on integrity checks\r\n- Support input validation annotations in ODATA\r\n\r\n### Changed\r\n\r\n- Object notation in `.where` of statements doesn't allow functions anymore\r\n- `context.diff()` ignores `@cds.persistence.skip` annotated entities\r\n- Always try to read from localized views (also by draft enabled entities)\r\n- In multitenant scenario, the CSN model is now always loaded from `@sap/cds-mtx`. Previously, it was only loaded if it was extended.\r\n- Use open source version of `@sap-cloud-sdk/core`\r\n- If a column or column alias is used multiple times in a SELECT query, the query is from now on rejected. Example: `SELECT.from(Foo).columns(['c1', 'c1'])`\r\n\r\n### Fixed\r\n\r\n- Reference integrity checks for foreign entities without stored keys\r\n- Calculation of `HasActiveEntity`\r\n- Update and Delete with where annotations\r\n- Aliases by navigation with complex where annotation\r\n- `req._.res` is express' ServerResponse\r\n- SQL Error in case of `$filter` using `ne` operator in combination with `$search`\r\n- Deep update with immutable fields in child entities\r\n- Draft union scenario in case of DraftAdministrativeData navigation\r\n- Transaction handling inside `$batch` requests\r\n- Multiple aliases in `SELECT.columns`\r\n- Use `hdb` if in direct dependencies of app (and `@sap/hana-client` isn't)\r\n- Mapping over a result propagates `$count`\r\n- Don't ignore rows with `null` column values in negated `$search` queries\r\n\r\n# Changelog History\r\n\r\nThe CDS Runtime module is the successor of `@sap/cds-services`, `@sap/cds-messaging`, `@sap/cds-rest`, `@sap/cds-hana`, `@sap/cds-sqlite`, and `@sap/cds-sql`. The changelogs of these components can be found contained within each corresponding npm package:\r\n\r\n- [cds-services](https://www.npmjs.com/package/@sap/cds-services)\r\n- [cds-messaging](https://www.npmjs.com/package/@sap/cds-messaging)\r\n- [cds-rest](https://www.npmjs.com/package/@sap/cds-rest)\r\n- [cds-hana](https://www.npmjs.com/package/@sap/cds-hana)\r\n- [cds-sqlite](https://www.npmjs.com/package/@sap/cds-sqlite)\r\n- [cds-sql](https://www.npmjs.com/package/@sap/cds-sql)\r\n"},{"name":"cds-services","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-services\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-services`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n\r\n## Version 1.27.2 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.27.1 - 2020-03-23\r\n\r\n### Fixed\r\n\r\n- Alias was added twice to CQN in case of a request including navigations on a draft enabled entity\r\n\r\n## Version 1.27.0 - 2020-03-19\r\n\r\n### Added\r\n\r\n- Transaction uses one timestamp for all queries\r\n- Pool acquire timeout is set by default and can be configured in pool options\r\n- Ordered OData singletons (`... as select from <entity> order by <property>`)\r\n\r\n### Changed\r\n\r\n- $count=true triggers handlers only once now\r\n- `draftPrepare` action can be called on the entity set of child nodes of the draft enabled entity\r\n- Normalize user.id if an email address\r\n- Allow functions and properties as 2nd param in contains, startswith, endswith\r\n\r\n### Fixed\r\n\r\n- Entity is now correctly resolved if there are conflicting names\r\n- Where conditions from security annotations were appended twice when using $count=true\r\n- `req._.req` always contains the incoming request - also in `$batch` requests\r\n- Error in delete when fields are renamed in views\r\n- Using view by draft & localized\r\n- context.diff() returns changes also for `PATCH` of drafts\r\n- OData requests using `/$count` on navigation-to-many\r\n- Authentication-requirement detected if in multi tenant mode (i.e., `multiTenant: true`)\r\n- Integrity check of atomicity group\r\n- Where annotation in case of draft and navigations\r\n- `/$count` on parameterized views\r\n- Streaming from draft in case localized and where annotations\r\n- @mandatory: empty strings (whitespaces only = empty) are not allowed\r\n\r\n## Version 1.25.1 - 2020-02-26\r\n\r\n### Fixed\r\n\r\n- update of localized text entries replies with 403 if no changes are detected\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.25.0 - 2020-02-25\r\n\r\n### Added\r\n\r\n- Support for OData singletons\r\n- Streaming from draft\r\n- Navigations in aggregate expressions\r\n\r\n### Changed\r\n\r\n- use odata-server 1.5.2\r\n\r\n### Fixed\r\n\r\n- handling of virtual field in column generation\r\n- callstack exceeded in SELECT\r\n\r\n## Version 1.24.1 - 2020-02-21\r\n\r\n### Added\r\n\r\n- Support draft for localized texts (to be enabled by @sap/cds and @sap/cds-compiler)\r\n\r\n## Version 1.24.0 - 2020-02-20\r\n\r\n### Added\r\n\r\n- Support for OData `$apply` with `count distinct`\r\n\r\n### Changed\r\n\r\n- use odata-server 1.5.1\r\n\r\n### Fixed\r\n\r\n- Column generation for `SELECT.from()` queries without specifying `.columns()`\r\n  - `HasDraftEntity` was not properly calculated\r\n  - Virtual properties were not excluded\r\n- Where secure annotations with localized entities\r\n- Handling of `@cds.on.insert/update` annotated properties of draft-enabled entities\r\n- Keys in root element were not correctly calculated for deep operations\r\n- `@Core.MediaType` could not be used in entity annotated with `@cds.persistence.skip` \r\n\r\n### Removed\r\n\r\n- Annotation `@Search.fuzzinessThreshold`\r\n\r\n## Version 1.23.0 - 2020-02-05\r\n\r\n### Added\r\n\r\n- Support non-UUID field as ETags\r\n- Support draft and ETags\r\n- Support for complex where in annotations\r\n- Additional argument `target` for `req.info`\r\n\r\n### Changed\r\n\r\n- Direct access to auto-exposed entities in draft case\r\n- Errors normalized based on OData v4 standard\r\n- Messages (i.e., header `sap-messages`) normalized based on Fiori standard\r\n- Referential integrity checks are now executed before the commit\r\n- Result of create and update queries is read from the data source to include computed values (update: root only, i.e., w/o compositons, etc.)\r\n\r\n### Fixed\r\n\r\n- Race condition when there are erros when saving draft\r\n- Handling of where from @restrict annotation of draft enabled entity\r\n- Saving a draft will not ignore readonly fields anymore\r\n- Not having a connection for unauthorized users will not crash the server anymore\r\n- In mocked authorization, users don't need the `ID` property\r\n- Filtering using the `NE` operator handles null values properly\r\n- For insertable-only entities default values are correctly handled now\r\n- Immutable values are now ignored during PATCH or UPDATE requests\r\n- Batch input via REST\r\n- SELECT * by customer handlers will work also on Hana in case the columns are lowercase\r\n- Support \"userAttributes\" by Mocked Authentication, \"xs.user.attributes\" is deprecated and will\r\nbe removed in the next releases\r\n- Arbitrary users are allowed if fake user '*'= true exist by Mocked Authentication\r\n\r\n## Version 1.22.0 - 2019-12-11\r\n\r\n### Added\r\n\r\n- @sap/cds-ql merged into @sap/cds-services\r\n- Support for subselects and aliasing for remote service definitions\r\n- Support for `@cds.persistence.table`.\r\n- Actions/functions support $select and $expand query params in odata\r\n- Support cds annotation on insert and update with # (e.g @cds.on.update: #user)\r\n\r\n### Changed\r\n\r\n- Improve error messages for return type validation of custom operations\r\n- Draft removal is handled in `onDraftActivateEvent` instead of `onDraftActivate`\r\n\r\n### Fixed\r\n\r\n- Check whether service requires authentication\r\n- Independent passport configs per service\r\n\r\n## Version 1.21.2 - 2019-12-03\r\n\r\n### Fixed\r\n\r\n- Default values for patch\r\n\r\n## Version 1.21.1 - 2019-11-29\r\n\r\n### Added\r\n\r\n- Authentication strategy debug messages and error messages for erroneous authentication configurations\r\n\r\n### Fixed\r\n\r\n- Transform redirect properties in post processing\r\n\r\n## Version 1.21.0 - 2019-11-19\r\n\r\n### Added\r\n\r\n- Support for reading temporal data on HANA\r\n- Support ETag at odata-v4\r\n\r\n### Fixed\r\n\r\n- Key generation in deep update\r\n- Reading `DraftAdministrativeData` of an active entry without existing draft\r\n\r\n## Version 1.20.1 - 2019-10-30\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-ql to 1.20.1\r\n\r\n## Version 1.20.0 - 2019-10-29\r\n\r\n### Added\r\n\r\n- `req.method` property which contains the HTTP method\r\n- Return type validation for custom operations in rest\r\n- Support for redirected media properties using `@Core.IsURL`\r\n\r\n### Fixed\r\n\r\n- Requests to `$metadata`\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n- `req._.isPatch`\r\n\r\n## Version 1.19.1 - 2019-10-16\r\n\r\n### Changed\r\n\r\n- Improved error messages\r\n\r\n### Fixed\r\n\r\n- Empty user attributes in where conditions\r\n- Queries in custom handler executed twice\r\n\r\n## Version 1.19.0 - 2019-10-02\r\n\r\n### Added\r\n\r\n- Check of source for navigation-to-one in not Draft case\r\n- log function in default logger\r\n\r\n### Changed\r\n\r\n- Improved error messages\r\n- Use `@sap/odata-server@1.3.8`\r\n\r\n### Fixed\r\n\r\n- Draft service having column names from draft admin table\r\n- POST and PUT on views with renaming and excluding\r\n- Draft with custom `oncond` in backlink\r\n- Batch with multitenancy\r\n\r\n## Version 1.18.2 - 2019-09-19\r\n\r\n### Changed\r\n\r\n- Use `@sap/odata-server@1.3.7`\r\n\r\n## Version 1.18.1 - 2019-09-18\r\n\r\n### Added\r\n\r\n- Support of authorization restrictions with simple static where clauses (e.g. `$user.level = 3`) for actions/functions\r\n\r\n### Fixed\r\n\r\n- Draft activation by multiple views\r\n- Binary processing in rest adapter\r\n\r\n## Version 1.18.0 - 2019-09-09\r\n\r\n### Added\r\n\r\n- Support for `@assert.enum` annotation\r\n- Support for media content-type provided as property\r\n- Support for binary encoding in rest\r\n\r\n### Changed\r\n\r\n- Use `@sap/odata-server@1.3.5`\r\n\r\n### Fixed\r\n\r\n- READ with `@cds.api.ignore` annotation\r\n- Navigation on Entities with multiple keys did not work correctly\r\n- UPDATE and UPSERT requests with `@cds.on.update` and `@cds.on.insert` annotations\r\n- Logging of missing permissions if no authentication strategy is detected\r\n\r\n## Version 1.17.0 - 2019-08-21\r\n\r\n### Added\r\n\r\n- Error handling for streaming\r\n- Limited support for CREATE requests via navigations\r\n- Method `.transaction` to local client\r\n\r\n### Changed\r\n\r\n- CREATE with WHERE restriction is supported only with static checks, otherwise rejected\r\n- Extended error logs from custom handlers\r\n- `next()` returns the result of the subsequent handler\r\n- Use `@sap/cds-messaging` for sending/receiving events between services\r\n\r\n### Fixed\r\n\r\n- Expand entity with where restriction when clause references a user attribute with multiple values\r\n- Navigations in `get` requests using `cds.String` as key type\r\n- Deletion of active entries during draft activation\r\n- Checking security annotations in service and in entities\r\n- UUID generation for deep inserts/updates\r\n- Combination of `localized data` and `$count=true` in OData requests\r\n- `req.query` in case of bound actions and reached via navigation\r\n\r\n## Version 1.16.0 - 2019-07-23\r\n\r\n### Added\r\n\r\n- Batch Update in REST Adapter using an Array as request body\r\n- Content-Type for streaming using annotation\r\n- `DELETE` requests on an entity property sets the property to `null`\r\n- Integrity check for `DELETE` requests\r\n\r\n### Changed\r\n\r\n- Behaviour of mock authentication according to documentation\r\n- `cds.env` is used by authentication if passport not provided in options\r\n\r\n### Fixed\r\n\r\n- Draft actions for localized entities\r\n- Write localized data via deep update/insert\r\n\r\n## Version 1.15.0 - 2019-07-09\r\n\r\n### Added\r\n\r\n- Support for views with parameters\r\n- Support for `filter` transformation in `$apply`\r\n- Support for `/$value` on primitive properties\r\n\r\n### Changed\r\n\r\n- Rest adapter accepts non-modelled data fields in the request payload and exposes them in `req.data`; the fields are\r\n ignored in the generic handlers\r\n- Replaced `@sap/cds-ql` dependency with `uuid`\r\n\r\n### Fixed\r\n\r\n- Custom handlers by extended tenants\r\n- Generic handler lookup if multiple services in one `.cds` file\r\n- `$expand` with instance-based authorization\r\n- `result` parameter in AfterHandler has correct format (not always an array)\r\n  - `CREATE`: the created entity\r\n  - `UPDATE`: the updated entity\r\n  - `DELETE`: undefined\r\n  - for `actions` and `functions` it is the defined return type\r\n- `@cds.on.insert` and `@cds.on.update` could not be used at the same time\r\n- `@cds.on.insert` and `@cds.on.update` in deep insert / update\r\n\r\n## Version 1.14.0 - 2019-06-24\r\n\r\n### Added\r\n\r\n- Alternative mock strategy config\r\n- Support for value ranges annotations for REST adapter\r\n- Multiple authentication strategies\r\n\r\n### Changed\r\n\r\n- Handling of deep insert / update for associations\r\n- Use `@sap/odata-server@1.3.4`\r\n\r\n### Fixed\r\n\r\n- Bound actions for draft-enabled entities\r\n- Combination of `$apply` with other query parameters\r\n\r\n### Removed\r\n\r\n- Caching of metadata as odata already does it\r\n\r\n## Version 1.13.0 - 2019-06-07\r\n\r\n### Added\r\n\r\n- Method `diff` to calculate the actual changes in a `CUD`request or while saving a draft\r\n- Support authorization annotations for actions and functions\r\n- Support for default sort order using `@cds.default.order` or `@odata.default.order`\r\n- Support for writing binary stream through odata\r\n\r\n## Version 1.12.0 - 2019-05-24\r\n\r\n### Added\r\n\r\n- Support for localized in generic handlers (no compositions / associations)\r\n- Handler registration by path for autoexposed and redirected entities\r\n- Support for Rest parametric functions and actions\r\n\r\n### Changed\r\n\r\n- Renamed `Service.with` to `Service.impl`\r\n\r\n### Fixed\r\n\r\n- `falsy` values as default value\r\n- `req.info` in case of draft actions\r\n- Scopes are checked before custom before handlers\r\n\r\n## Version 1.11.1 - 2019-05-16\r\n\r\n### Changed\r\n\r\n- `service.options` is now a public property (previously private as `service._options`)\r\n\r\n## Version 1.11.0 - 2019-05-15\r\n\r\n### Added\r\n\r\n- read-only field annotations validation\r\n- Deactivate ResourceJsonSerializer in production\r\n- Validation for content type in rest adapter\r\n- Support for OData request path expressions à la `Authors/1`\r\n\r\n### Changed\r\n\r\n- Use `@sap/odata-server@1.3.3`\r\n\r\n## Version 1.10.2 - 2019-05-08\r\n\r\n### Added\r\n\r\n- Support for @Capabilities annotations\r\n\r\n### Changed\r\n\r\n- Improved performance by reducing calls to process.nextTick()\r\n\r\n### Fixed\r\n\r\n- Unbound actions and functions in REST\r\n\r\n## Version 1.10.1 - 2019-05-07\r\n\r\n### Added\r\n\r\n- error handling in case mtx errors\r\n\r\n### Changed\r\n\r\n- Handler registration using `.with` (as done in reuse scenarios)\r\n\r\n### Fixed\r\n\r\n- Using `$select=association` in odata-v4 adapter\r\n\r\n## Version 1.10.0 - 2019-05-03\r\n\r\n### Added\r\n\r\n- Support for reading streams in `odata v4`\r\n- Support for batch create in REST adapter\r\n- Support for combination of scopes and instance based authorization checks\r\n- Fiori Draft event `SAVE` as alias for `CREATE` and `UPDATE`\r\n\r\n### Changed\r\n\r\n- Improved performance\r\n\r\n## Version 1.9.0 - 2019-04-16\r\n\r\n### Added\r\n\r\n- 'mock' strategy accepts any user credentials if none configured\r\n- Support for pseudo role 'system-user'\r\n- Additional cases at security annotations\r\n- `sap-statistics=true` as query or header parameter will yield performance statistics\r\n- $top and $skip at rest adapter\r\n\r\n### Changed\r\n\r\n- Handlers for `failed` events must only have the error object as an argument\r\n- Handlers for `succeeded` and `done` events must have no argument at all\r\n- used new function notation in generated CQN\r\n- Reduction of round trips to data source by not using transactional blocks at reading requests\r\n\r\n### Fixed\r\n\r\n- Deep operations in REST adapter\r\n- Draft edit in case one composition has no entries\r\n\r\n## Version 1.8.1 - 2019-04-03\r\n\r\n### Fixed\r\n\r\n- Events are populated through `req.event`\r\n\r\n## Version 1.8.0 - 2019-03-29\r\n\r\n### Added\r\n\r\n- after handlers using `each` or `row` also work with keyword `async`\r\n\r\n### Changed\r\n\r\n- Generic `onCommit` or `onRollback` handlers end the transaction of potentially multiple db sessions in the request\r\ncontext\r\n- Merged client adapter into service\r\n\r\n### Fixed\r\n\r\n- Errors not of type Error are not recognized\r\n- `req.target` in case of a `READ` request of the `DraftAministrativeData` entity\r\n\r\n## Version 1.7.2 - 2019-03-25\r\n\r\n### Added\r\n\r\n- Element/Field annotated with `@mandatory` or `@FieldControl.Mandatory` is treated as not null\r\n- Added 'mock' strategy for passport\r\n- Complex cases at security annotations\r\n- When registering custom handlers for transactional draft events the target property of the `req` parameter now points to the draft\r\n\r\n## Version 1.7.1 - 2019-03-20\r\n\r\n### Fixed\r\n\r\n- Passport is registered correctly in case of `cds.serve('all')`\r\n- User is now set before it is needed\r\n\r\n## Version 1.7.0 - 2019-03-19\r\n\r\n### Added\r\n\r\n- `req.event` contains the type or name of the incoming request\r\n- Support for specifying a `target` in `req.error` and  `req.reject`\r\n- `req.info` to collect info messages in odata-v4. Eventually, they result in the `sap-messages` header.\r\n- Annotation `@Search.fuzzinessThreshold` to configure Fuzzy Search\r\n- Support for Extensibility\r\n- Event handlers for events `succeeded`, `failed` and `done` can be registered at the service event context\r\n- Support for OData `Arithmetic Functions`, `Date and Time Functions`, `String Functions`\r\n\r\n### Changed\r\n\r\n- before handlers are executed in parallel\r\n- `req.error` returns a generic error with all collected errors in `.details`\r\n- passport method is extracted to the package interface\r\n\r\n### Fixed\r\n\r\n- No SQL error in case key is generated by DB like done with sequences\r\n\r\n## Version 1.6.0 - 2019-02-25\r\n\r\n### Added\r\n\r\n- Support for `Lambda operators`\r\n\r\n### Fixed\r\n\r\n- CUD operation with association as key of entity\r\n\r\n## Version 1.5.2 - 2019-02-13\r\n\r\n### Added\r\n\r\n - Support for sql functions lower, upper, trim, length in $filter and $orderby\r\n\r\n### Changed\r\n\r\n- Sync functions at before and after handler are not wrapped in promise anymore\r\n- req.reject does not throw anymore\r\n- @sap/audit-logging only used in case the service is provided via VCAP_SERVICES\r\n- Unknown query parameters are not longer rejected at REST adapter\r\n\r\n### Fixed\r\n\r\n- OData version for $metadata\r\n- Multiple atomicity groups should not share same transaction block\r\n- Brackets in $filter now work correctly\r\n\r\n## Version 1.5.1 - 2019-02-12\r\n\r\n### Changed\r\n\r\n- @sap/audit-logging only used in case the service is provided via VCAP_SERVICES\r\n\r\n### Fixed\r\n\r\n- No integrity checks when running without db connection\r\n\r\n\r\n## Version 1.5.0 - 2019-02-07\r\n\r\n### Added\r\n\r\n- Set foreign keys for POST via `navigation-to-many` and modeled with `$self`\r\n- Support `content id` placeholders in odata v4 batch requests\r\n- Support complex cases at security annotations\r\n\r\n### Changed\r\n\r\n- Referential integrity checks do not run for associations with specified on conditions\r\n- Rest adapter now ignores query parameters\r\n- Minimum node version 8.9.0\r\n- `.data` and `.query` can be overwritten\r\n\r\n### Fixed\r\n\r\n- Insert with excluded properties having default values\r\n- Delete active documents in a draft-enabled service without a draft\r\n- Path segment `/$count` respects `$filter`\r\n\r\n## Version 1.4.0 - 2019-01-22\r\n\r\n### Added\r\n\r\n- When registering service handlers, entities can be given as a list\r\n- Support requests to /SiblingEntity in draft\r\n- Annotation `@cds.integrity.skip` to disable reference integrity checks (experimental!)\r\n\r\n### Changed\r\n\r\n- Replaced @sap/odata-v4 by @sap/odata-server\r\n\r\n## Version 1.3.0 - 2019-01-11\r\n\r\n### Added\r\n\r\n- Authorization filtering and user attributes as lists\r\n- Referential integrity checks\r\n\r\n### Fixed\r\n\r\n- No fallback for user identifier in case the user object is empty\r\n- Reading draft administrative data\r\n\r\n## Version 1.2.0 - 2018-12-21\r\n\r\n### Added\r\n\r\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\r\n\r\n### Changed\r\n\r\n- `context.draftMetadata` contains draft metadata\r\n- `context.isDraftChange` indicates only changes in drafts\r\n- Error messages to be more consistent\r\n\r\n### Fixed\r\n\r\n- On handler registration for custom handlers in draft\r\n- Draft children can be deleted without navigations\r\n- Reading all draft-enabled documents takes into account only own drafts\r\n\r\n### Removed\r\n\r\n## Version 1.1.0 - 2018-12-12\r\n\r\n### Added\r\n\r\n- Deep Document Calls (deep insert, deep update and cascade delete)\r\n- `context.draft` contains draftUUID in case of Create, Update or Delete\r\n- filter and orderby with navigation\r\n\r\n### Changed\r\n\r\n- improved error messages\r\n\r\n- Activating a draft now triggers the 'UPDATE' or 'CREATE' event\r\n\r\n### Fixed\r\n\r\n- Create Draft uses default values\r\n- draftActivate uses correct keys for update\r\n- $count in draft context now calculates correct result\r\n- db view with select\r\n- Support for navigation over draft with count\r\n- .code property of Errors in Custom handlers will not be overwritten\r\n\r\n## Version 1.0.0 - 2018-11-27\r\n\r\n### Added\r\n\r\n- Support for now function in $filter\r\n- Support for authorization annotations CREATE, UPDATE, DELETE\r\n- Conversion of cds.DateTime/Timestamp using UTC\r\n- Entity definition at service as select view\r\n\r\n### Changed\r\n\r\n- Update entry makes insert if the entry doesn't exist\r\n- Log messages are used directly instead of being wrapped\r\n- Bound functions now have a query value\r\n- Function next is implicitly executed in synchronous on-handlers\r\n- Improved error handling\r\n- Handler registration allows following variations:\r\n    - Array of events: e.g. ['READ', 'UPDATE']\r\n    - '*' wildcard for any entity event\r\n- next() throws error if called twice in same handler\r\n- Custom implementation must be provided via .with\r\n- Renamed service.definition to service.model\r\n- Renamed service.service to service.name\r\n- updated odata-v4 version to 1.8.0\r\n- Location header for draft actions is now relative\r\n\r\n### Fixed\r\n\r\n- POST on existing entity throws 'Bad Request'\r\n- $search and $filter in combination with some read draft cases\r\n- POST with navigation does not create a new key\r\n- Access restriction on service level\r\n- UPDATE sql statement generated wrong for entity with multiple keys\r\n- Access to user's locale\r\n- draftEdit action on entities without children\r\n- CREATE with not nullable elements\r\n\r\n## Version 0.12.0 - 2018-10-17\r\n\r\n### Added\r\n\r\n- Custom handlers can be registered and executed for bound functions and function imports\r\n- Added BeforeCreate and BeforeCreateDraft handlers to generate needed UUIDs\r\n\r\n### Changed\r\n\r\n- Removed translator in the insert based on where by instanced based authorization\r\n- Removed internal event rejections\r\n- Not found error message generalized for reading through navigation\r\n- Refactoring and changes due to updated dependencies\r\n\r\n## Version 0.11.0 - 2018-10-04\r\n\r\n### Added\r\n\r\n- Generic support for Create, Update, Delete on draft-enabled entities\r\n- Generic support for draftEdit, draftPrepare, draftActivate actions\r\n- Logger is available in handlers via context.log\r\n\r\n### Changed\r\n\r\n- Log warning if database connection is missing\r\n\r\n### Fixed\r\n\r\n- Service requests now return promises instead of thenables\r\n\r\n## Version 0.10.1 - 2018-09-18\r\n\r\n### Added\r\n\r\n- Generic support for Read on draft-enabled entities\r\n\r\n### Fixed\r\n\r\n- $user annotation works without authorization\r\n\r\n## Version 0.10.0 - 2018-09-17\r\n\r\n### Added\r\n\r\n- Delete Draft\r\n- Audit Logging of GDPR related events\r\n- Auto lookup of to be used CF/XSA services from environmental VCAP_SERVICES\r\n- OData to context.query for nested $filter, $orderby, $op and $skip at $expand\r\n- Custom types on top of associations\r\n\r\n### Changed\r\n\r\n- Default for maxPageSize increased to 1000 from 100\r\n\r\n### Fixed\r\n\r\n- Values for annotated columns (user/now) are included in the response\r\n\r\n## Version 0.9.2 - 2018-09-05\r\n\r\n### Changed\r\n\r\n- Improved npm-shrinkwrap\r\n\r\n## Version 0.9.1 - 2018-09-03\r\n\r\n### Added\r\n\r\n- Create draft\r\n\r\n### Removed\r\n\r\n- implicit dependency to @sap/cds-sql\r\n\r\n## Version 0.9.0 - 2018-08-28\r\n\r\n### Added\r\n\r\n- API to support the implementation of authorization restrictions\r\n- Local service client\r\n- Support for to-one-navigation in $filter\r\n- Support for annotation @Search.defaultSearchElement to restrict searchable columns in $search\r\n- Support for sap-language query parameter\r\n- Support authorization annotations\r\n- Hooks to add custom logic before and after rollback event\r\n- Audit Logging of security events\r\n\r\n### Fixed\r\n\r\n- Pagination in case of $expand\r\n- $select with managed associations as key\r\n\r\n## Version 0.8.1 - 2018-08-09\r\n\r\n### Added\r\n\r\n- Authentication using passport (including user/attr proxy)\r\n\r\n### Changed\r\n\r\n- Require submodules on demand\r\n\r\n## Version 0.8.0 - 2018-08-07\r\n\r\n### Added\r\n\r\n- OData Service: $search supports Unary and Binary Expressions without brackets\r\n- Registration of global handler using star symbol like \"this.on('*', () => {})\"\r\n- Registration of express middleware using this.use()\r\n- Improved FeautureNotSupported error message\r\n- context.reject supported for before, on and after handlers\r\n<!-- Was never documented publicly: - Support of context.run().then.run() shortcut -->\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/odata-v4 to ^1.6.0\r\n\r\n### Fixed\r\n\r\n- Localization in case language is changed\r\n- Issue with not working $count when filtering active in custom hook\r\n\r\n## Version 0.7.0 - 2018-07-11\r\n\r\n### Added\r\n\r\n- Localization support for $metadata\r\n- Support for Compositions\r\n\r\n### Fixed\r\n\r\n- $search also considers foreign keys of managed associations, structured elements and complex types\r\n\r\n## Version 0.6.0 - 2018-07-02\r\n\r\n### Added\r\n\r\n- Multi tenancy support\r\n\r\n### Fixed\r\n\r\n- Columns are only added once to CQN in case of $expand in combination with $select\r\n\r\n## Version 0.5.0 - 2018-06-25\r\n\r\n### Added\r\n\r\n- Hooks\r\n  - An any handler can be registered and will be executed for any but COMMIT events\r\n  - Custom handlers can be registered for before COMMIT and after COMMIT events\r\n  - \"_\" property added to cds handler argument, which can contain adapter specific data like a request object\r\n\r\n- OData Service\r\n  - $filter supports (not) contains, startsWith, endsWith\r\n  - $filter supports combinations with and/or\r\n  - $select within $expand\r\n  - $apply supported with limited scope\r\n  - $search supported with limited scope\r\n\r\n### Changed\r\n\r\n- Hooks\r\n  - Undocumented OData specific properties removed from \"cds\" handler argument\r\n  - cds.target contains the unreflected entity instead of the reflected entity\r\n  - cds.error will collect errors and throw at the end of each block of .before, .on or .after handlers\r\n  - Second call to next() at a on handler will be ignored and not break the sequence\r\n\r\n### Fixed\r\n\r\n- Support navigation over entities with multiple keys\r\n\r\n### Removed\r\n\r\n- In case of a SerializationError the details are only logged and not provided in the response anymore\r\n\r\n## Version 0.4.1 - 2018-05-03\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-ql to 0.4.1\r\n\r\n## Version 0.4.0 - 2018-05-02\r\n\r\n### Added\r\n\r\n- service factory\r\n- cds used via injection\r\n\r\n- Hooks\r\n  - Support annotations @insertonly and @readonly\r\n  - Support reject registration for CSN entities\r\n  - Support reject registration with multiple entity parameters\r\n\r\n### Changed\r\n\r\n- default logger uses matching methods from console object instead of console.log\r\n- packages are loaded on demand at Services.js and OData.js instead of required in any case\r\n- adapted error message in case of 501\r\n\r\n## Version 0.3.0 - 2018-04-16\r\n### Added\r\n\r\n- service factory\r\n  - service.entities is set\r\n\r\n- OData Service\r\n  - Support for $expand=*\r\n  - Support for $select=*\r\n\r\n- Hooks\r\n  - CSN entities can be used instead of strings to register a handler\r\n  - .on can be registered with CQN instead of function as handler\r\n  - .on supports registering N handlers\r\n  - .on handlers can use a second argument next()\r\n  - .on can be finished by returning a value\r\n  - .after with convenience wrappers for each|row argument\r\n  - .after can now work asynchronously\r\n\r\n\r\n### Changed\r\n\r\n- server side paging is enabled by default and set to 100, to disable it set maxPageSize to false.\r\n\r\n- refactored service factory\r\n  - removed option to compile CSN on the fly, only CSN accepted as input format\r\n  - option to set the URL path is removed\r\n  - Multi service CSN can be used\r\n\r\n- refactored Service class\r\n  - OData service instantiation is now split in constructor, createODataService and getMiddleWare\r\n\r\n- OData Service\r\n  - Renamed parameters in handler context object (target replaces entity and getEntity)\r\n  - More expressive error messages\r\n  - Crash Node.js instance on unhandled error\r\n\r\n### Fixed\r\n\r\n- limit property is only added to CQN if necessary\r\n- .reply() is able to handle null values\r\n\r\n## Version 0.2.0 - 2018-03-16\r\n### Added\r\n\r\n- option to enable debug mode for odata-v4\r\n- default logger with option to register custom logger\r\n- support for server side paging\r\n- support for cds.serve, which is a Fluent API-style method to read service definitions from the given model(s) and construct services\r\n- usage of npm-shrinkwrap\r\n\r\n### Fixed\r\n\r\n- $filter in combination with to many association\r\n"},{"name":"cds-sidecar-client","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-sidecar-client\r\nCLI for extensibilty support for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap).\r\nIntended to be used as part of [@sap/cds-dk](https://www.npmjs.com/package/@sap/cds-dk) only.\r\n\r\nSee the [extensibility documentation](https://cap.cloud.sap/docs/advanced/extensibility#extend-saas-applications) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\n## Version 1.1.23 - 2021-08-25\r\n\r\n### Fixed\r\n\r\n- Re-enabled compatibility with compiler v1\r\n\r\n## Version 1.1.21 - 2021-06-28\r\n\r\n### Fixed\r\n\r\n- Fix subdomain determination with CF-CLI v7\r\n- Fix sending username and password for basic auth\r\n- Fix various requests\r\n\r\n## Version 1.1.20 - 2021-06-22\r\n\r\n### Fixed\r\n\r\n- Interpret various HTTP responses properly.\r\n- Token is now correctly obtained.\r\n\r\n## Version 1.1.19 - 2021-06-16\r\n\r\n### Fixed\r\n\r\n- Include compiled sources in published cds-sidecar-client package.\r\n\r\n## Version 1.1.18 - 2021-06-07\r\n\r\n### Changed\r\n\r\n- Replace vulnerable 'Got' dependency with 'Axios'.\r\n- To facilitate debugging, display a few start and end characters of certain secrets in DEBUG output\r\n  (applies to params that are not user-generated, i.e. short-lived and/or comprising many characters).\r\n\r\n## Version 1.1.17 - 2021-05-27\r\n\r\n### Fixed\r\n\r\n- Compatibility with CF-CLI v7: automatic determination of running apps and relevant CF space for `login`\r\n- Error on login with username and password (basic auth)\r\n- Error due to NPM binary not being found on Windows\r\n\r\n### Changed\r\n\r\n- On SAP Business Application Studio, disable keyring storage as it is unsupported (switch to plain-text automatically)\r\n- Hide secret data in token-request URL from log output\r\n\r\n## Version 1.1.16 - 2021-05-04\r\n\r\n### Fixed\r\n\r\n- Bug where 'keytar' module path was not correctly determined\r\n\r\n## Version 1.1.15 - 2021-04-28\r\n\r\n### Fixed\r\n\r\n- Compatibility with CF-CLI v7\r\n\r\n## Version 1.1.14 - 2021-03-29\r\n\r\n### Added\r\n\r\n- Compatibility with CDS Compiler v2.\r\n\r\n## Version 1.1.13 - 2021-02-26\r\n\r\n### Added\r\n\r\n- Include original server error message in case of HTTP errors.\r\n\r\n## Version 1.1.11 - 2020-11-27\r\n\r\n### Added\r\n\r\n- `login`, `extend` and `activate` now also support clientid/clientsecret as parameters. This is\r\nneeded when extending multitenant applications provided as as reusable services (see [CP documentation](https://controlcenter.ondemand.com/index.html#/knowledge_center/articles/2316430f7d804820934910db736cefbf)).\r\n\r\n## Version 1.1.8 - 2020-08-26\r\n\r\n### Added\r\n\r\n- Login/logout: Enable entering the passcode interactively if not given\r\n\r\n### Fixed\r\n\r\n- Activate: Output additional information in case of error on job-result retrieval\r\n- Login/logout: Determine running CF apps according to actual number of instances\r\n- Login/logout: Clarify error messages\r\n\r\n## Version 1.1.7 - 2020-08-17\r\n\r\n### Fixed\r\n- The optional `keytar` package is now resolved if it's installed globally.  See the [documentation](https://cap.cloud.sap/docs/guides/extensibility#save-authentication-token-for-simplified-workflow) for more.\r\n\r\n## Version 1.1.6 - 2020-08-03\r\n\r\n### Added\r\n\r\n- Login/logout: Support saving authentication token to desktop keyring (needs additional user-installed Node.js module)\r\n- Login/logout: Automatic token refresh without the need to provide passcode again\r\n- Login/logout: Suggest app URLs from Cloud-Foundry org and space currently logged in to (if applicable) if no app URL is supplied\r\n- Login/logout: Determine missing subdomain from Cloud Foundry if possible\r\n- Login/logout: Option to clear all invalid settings (where project folder does not exist)\r\n\r\n### Changed\r\n\r\n- Login/logout: Improved logging\r\n- Login/logout: Renamed command-line options for clarity\r\n- Login/logout: Changed location of settings files to adhere to platform standards\r\n\r\n### Fixed\r\n\r\n- Activate: Corrected exclusion of files from upload\r\n\r\n\r\n## [1.1.4] - 2020-07-23\r\n\r\n- JWT tokens for user authentication are no longer saved by default.\r\n- Provide `login` and `logout` commands to fetch/refresh, provide, and delete authentication tokens and project settings,\r\n  thus simplifying usage of `extend` and `activate` commands\r\n- Changed API of `extend` and `activate` commands for reasons of unification\r\n\r\n\r\n## [1.1.3]\r\n- Activate command now uses asynchronous API to handle long-running jobs\r\n\r\n## [1.1.2]\r\n- Bug fixes\r\n\r\n## [1.1.1]\r\n- Fix for template download: never download templates by default if extension is active\r\n- Fix for folder determination: use subdomain as folder if no folder was specified\r\n\r\n## [1.1.0] - 23.08.2019\r\n### Added\r\n- Support of I18N files for extensions added\r\n- Support of template files\r\n- Support of custom file up- and download\r\n- Support of passcode authentication\r\n### Changed\r\n### Fixed\r\n### Removed\r\n\r\n## [1.0.0] - 19.07.2019\r\nInitial release version"},{"name":"cds-sql","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-sql\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-sql`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.24.1 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.24.0 - 2020-03-19\r\n\r\n### Added\r\n\r\n- Support for different columns combinations in INSERT.entries\r\n- Support for $count in SELECT CQN\r\n- Support String objects in the annotation expressions\r\n- .setTransactionTimestamp in BaseClient\r\n- check for @cds.persistence.skip for deep operations\r\n\r\n### Changed\r\n\r\n- Use || for concat (works for HANA and sqlite)\r\n\r\n### Fixed\r\n\r\n- Using view by draft & localized \r\n- Quote alias in orderBy to work on HANA\r\n- Expand from not draft enabled entity to draft enabled entity\r\n- `where` and `orderBy`clauses containing navigations in combination with expand are correctly translated to SQL\r\n\r\n## Version 1.23.2 - 2020-02-25\r\n\r\n### Fixed\r\n\r\n- Missing alias for orderBy caused column ambiguously defined error\r\n\r\n## Version 1.23.1 - 2020-02-21\r\n\r\n### Added\r\n\r\n- Support for set and data in UPDATE CQN\r\n- Support draft for localized texts \r\n- Support for with and data in UPDATE CQN\r\n\r\n## Version 1.23.0 - 2020-02-19\r\n\r\n### Changed\r\n\r\n- Convert all search queries using `contains` to `like`\r\n\r\n### Fixed\r\n\r\n- Searching for `_` or `%` in `$search`\r\n\r\n## Version 1.22.0 - 2020-02-05\r\n\r\n### Changed\r\n\r\n- Managed fields are not removed anymore if they dont belong to operation (e.g. modifiedAt in INSERT, createdAt in UPDATE)\r\n- `null` is a valid value for a managed field (e. g. if `null` is provided for `@cds.on.insert`, `null` will be inserted to DB)\r\n\r\n### Fixed\r\n\r\n- Expand with composition to one for draft enabled entity\r\n\r\n## Version 1.21.0 - 2019-12-10\r\n\r\n### Fixed\r\n\r\n- post-processing for columns with function calls\r\n\r\n## Version 1.20.1 - 2019-11-29\r\n\r\n- Error message when ambiguous naming of alias and entity property occurs in SELECT query\r\n\r\n### Changed\r\n\r\n- Minor improvements\r\n\r\n## Version 1.20.0 - 2019-11-19\r\n\r\n### Fixed\r\n\r\n- Managed fields were not generated when values are null\r\n- Read of active entity with navigation and orderBy with draft specific column (e.g `HasActiveEntity`)\r\n\r\n## Version 1.19.1 - 2019-10-30\r\n\r\n### Fixed\r\n\r\n- Expand adding foreign keys twice\r\n\r\n## Version 1.19.0 - 2019-10-29\r\n\r\n### Changed\r\n\r\n- Improved deep update\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.18.1 - 2019-10-16\r\n\r\n### Fixed\r\n\r\n- Problems with deep update of a composition of one\r\n- Unhandled promise rejections by expand\r\n\r\n## Version 1.18.0 - 2019-10-02\r\n\r\n### Fixed\r\n\r\n- Problems with backlinks with custom on condition\r\n\r\n## Version 1.17.1 - 2019-09-18\r\n\r\n### Changed\r\n\r\n- Improved error messages\r\n- Improves SQL Builder for `.where` clauses\r\n\r\n## Version 1.17.0 - 2019-09-09\r\n\r\n### Fixed\r\n\r\n- Expand-to-one in draft context\r\n- Expand with multiple orderby elements using window function\r\n- `UUID` generation for `INSERT` statements\r\n\r\n## Version 1.16.0 - 2019-08-21\r\n\r\n### Fixed\r\n\r\n- Missing sub-select columns in case of UNIONs (e.g. when expanding on the DraftAdminTable)\r\n- UUID generation in custom built deep inserts/updates\r\n\r\n## Version 1.15.0 - 2019-07-23\r\n\r\n### Added\r\n\r\n- `getDraftCompositionTree` to get draft specific composition tree\r\n\r\n### Fixed\r\n\r\n- Deep Operations with custom on-Condition without backlink\r\n\r\n## Version 1.14.0 - 2019-07-09\r\n\r\n### Fixed\r\n\r\n- Combination of `expand` with instance-based authorization\r\n\r\n## Version 1.13.0 - 2019-06-24\r\n\r\n### Added\r\n\r\n- Struct Mapper checks subselect for matching columns\r\n\r\n## Version 1.12.0 - 2019-05-24\r\n\r\n### Changed\r\n\r\n- Deep insert/update for to-many associations is not allowed\r\n\r\n### Fixed\r\n\r\n- Property mapper now works for fully-specified columns in SELECT statements\r\n\r\n## Version 1.11.1 - 2019-05-16\r\n\r\n### Fixed\r\n\r\n- Cases with multiple brackets during `onCond` generation\r\n\r\n## Version 1.11.0 - 2019-05-15\r\n\r\n### Fixed\r\n\r\n- Annotate elements with both `@cds.on.insert` and `@cds.on.update`\r\n\r\n## Version 1.10.0 - 2019-05-03\r\n\r\n### Added\r\n\r\n- Support for composition to-one using `$self`\r\n- Service functions `update`, `read`, `insert`, `delete` and `create`\r\n\r\n### Fixed\r\n\r\n- Expand with compound keys and orderby where order column is not requested\r\n- Deeply nested expands\r\n\r\n## Version 1.9.0 - 2019-04-16\r\n\r\n### Fixed\r\n\r\n- Cascading `Delete CQN` generation in case of transitive model\r\n\r\n## Version 1.8.0 - 2019-03-29\r\n\r\n### Changed\r\n\r\n- Minor improvements\r\n- alphabetical aliases instead of md5 in case of expand\r\n\r\n## Version 1.7.0 - 2019-03-19\r\n\r\n### Added\r\n\r\n- Support for 'list' in function arguments\r\n- Support for ```from: { ref: [] }``` in DeleteBuilder\r\n- Support for Compositions with custom on condition (no and/or)\r\n\r\n### Fixed\r\n\r\n- Expanding of on active draft documents lists without $filter\r\n- Expand of entities with compound key might return duplicate results\r\n\r\n## Version 1.6.0 - 2019-02-25\r\n\r\n### Added\r\n\r\n- Support for 'func' as defined in cqn spec\r\n- Support for 'list' in expressions\r\n- Support for deep insert with recursive entities\r\n\r\n### Changed\r\n\r\n### Fixed\r\n\r\n- Recursion in composition tree\r\n- Added brackets in oncond\r\n- Fixed is null / is not null in oncond\r\n- Falsy values at expanded elements\r\n- Fixed expand with selected column 'IsActiveEntity'\r\n\r\n## Version 1.5.1 - 2019-02-12\r\n\r\n### Added\r\n\r\n- Support for sql functions lower, upper, trim, length in $filter and $orderby\r\n\r\n## Version 1.5.0 - 2019-02-06\r\n\r\n### Added\r\n\r\n- Support for ```INSERT into ... SELECT ...```\r\n\r\n### Changed\r\n\r\n- Minimum node version 8.9.0\r\n- Improve expand performance\r\n\r\n## Version 1.4.0 - 2019-01-22\r\n\r\n### Added\r\n\r\n- Construct SQLs from CQN which includes placeholder\r\n- Support draft scenario 'Locked by another user'\r\n\r\n## Version 1.3.0 - 2019-01-11\r\n\r\n### Added\r\n\r\n- Support for compound keys\r\n\r\n### Changed\r\n\r\n- Improve inline detection\r\n\r\n## Version 1.2.0 - 2018-12-21\r\n\r\n### Added\r\n\r\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\r\n- Reversed cascade delete\r\n\r\n## Version 1.1.0 - 2018-12-12\r\n\r\n### Added\r\n\r\n- Support Deep Document CQNs\r\n- Support for inline\r\n- Post processing with CQN that uses select *\r\n\r\n### Fixed\r\n\r\n- Expand in combination with left outer joins\r\n\r\n## Version 1.0.3 - 2018-11-27\r\n\r\n### Changed\r\n\r\n- Throw root cause instead of CqnParseError\r\n- Throw root cause instead of SqlError\r\n\r\n### Fixed\r\n\r\n- Binary generated wrong SQL\r\n- Complex CQN with draft and expand for Hana\r\n- Expand modifies copy instead of original CQN\r\n- Expand with missing columns\r\n- Expand in combination with limit\r\n- Post processing of DateTime and Boolean\r\n\r\n## Version 0.12.0 - 2018-10-17\r\n\r\n- Refactoring and changes due to updated dependencies\r\n\r\n## Version 0.11.0 - 2018-10-04\r\n\r\n### Added\r\n\r\n- Expanding of drafts entries at list pages\r\n- Expanding of drafts entries at object pages\r\n\r\n## Version 0.10.0 - 2018-09-17\r\n\r\n### Added\r\n\r\n- Support of now/user annotations in structured type\r\n- Support of expand in combination with contains at where\r\n- Support of LIMIT/OFFSET, ORDER BY and WHERE at expanded items\r\n- Custom types on top of associations\r\n- Support columns: ['*'] at CQN\r\n\r\n## Version 0.9.2 - 2018-09-05\r\n\r\n### Added\r\n\r\n- SQL generation for SELECT statements that include UNION\r\n\r\n### Changed\r\n\r\n- Improved npm-shrinkwrap\r\n\r\n### Fixed\r\n\r\n- Postprocessing breaks without CSN\r\n\r\n## Version 0.9.1 - 2018-08-28\r\n\r\n(Preparation for Release)\r\n\r\n## Version 0.9.0 - 2018-08-28\r\n\r\n### Changed\r\n\r\n- .getColumns includes annotations\r\n- .deploy of BaseClient uses CDS-Compiler to do database setup\r\n\r\n### Fixed\r\n\r\n- SQL generation in case of CREATE statements using structured elements containing managed associations\r\n- Postprocessing of expand to many in plain mode\r\n\r\n## Version 0.8.1 - 2018-08-09\r\n\r\n### Changed\r\n\r\n- Require submodules on demand\r\n\r\n## Version 0.8.0 - 2018-08-07\r\n\r\n### Added\r\n\r\n- Support for exists in combination with expand\r\n- Support column annotations '@cds.on.insert', '@cds.on.update', '@odata.on.insert' and '@odata.on.update'\r\n- Post processing of complex and structured types\r\n- Support for unary and binary expressions in contains\r\n- Support for CQN partials at .where\r\n\r\n### Changed\r\n\r\n- Renamed SELECT.elements to SELECT.columns\r\n- SQL Error provides info about the executed query and values in logs\r\n\r\n### Fixed\r\n\r\n- Deep expands with more than 10 levels\r\n- Expand to composition and further to one association\r\n- Structured types at expand could lead to ambiguity\r\n\r\n## Version 0.7.0 - 2018-07-11\r\n\r\n### Added\r\n\r\n- CREATE supports type cds.Composition\r\n- Expand supports type cds.Composition\r\n- Support for structured elements\r\n\r\n## Version 0.6.0 - 2018-07-02\r\n\r\n### Added\r\n\r\n<!-- Was never documented publicly: - Shortcut for running queries with run().then.run() -->\r\n\r\n### Fixed\r\n\r\n- SQL generation in case of combination of navigation and expand in SELECT statements\r\n\r\n## Version 0.5.0 - 2018-06-25\r\n\r\n### Added\r\n\r\n- custom builders can now be provided via options in SQL Builder\r\n- support create with views\r\n- added SQL Error to hide the internal information from other errors\r\n- support structured elements\r\n- support for complex types in Create Builder\r\n- BaseClient has method .deploy to easily create database artifacts from csn model\r\n- support for SQL function contains by converting it using like\r\n- support execution of blocks of statements\r\n\r\n### Changed\r\n\r\n- quotation in SQL generation is now configurable (default is plain)\r\n- support for latest CQN spec changes\r\n\r\n### Fixed\r\n\r\n- column generation for managed associations\r\n- CREATE statement with managed association as key\r\n- resolve $self for expand\r\n- 1:1 associations can be null\r\n\r\n## Version 0.4.0 - 2018-05-02\r\n\r\n### Added\r\n\r\n- BaseClient has methods .run & .foreach & .isValid\r\n\r\n### Changed\r\n\r\n- support for latest CQN spec changes\r\n\r\n## Version 0.3.0 - 2018-04-16\r\n\r\n### Added\r\n\r\n- support CREATE statements\r\n\r\n### Fixed\r\n\r\n- auto-generated columns in expand=* requests\r\n\r\n## Version 0.2.0 - 2018-03-16\r\n### Added\r\n\r\n- usage of npm-shrinkwrap\r\n\r\n### Changed\r\n\r\n- improved performance for expand in case of one-to-many relations\r\n\r\n### Fixed\r\n\r\n- ambiguous column name when having multiple expands on same entity\r\n"},{"name":"cds-sqlite","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds-sqlite\r\n\r\nThe `@sap/cds-runtime` module is the successor of `@sap/cds-sqlite`. Please note that future development and bug fixes will be provided in the `@sap/cds-runtime` module only.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Version 1.24.1 - 2020-08-12\r\n\r\n### Fixed\r\n- README and LICENSE\r\n\r\n## Version 1.24.0 - 2020-03-19\r\n\r\n### Added\r\n\r\n- Single timestamp per transaction\r\n- default timeout 5s for acquiring client from pool\r\n\r\n### Changed\r\n- deleted concat handling (done in cds-sql)\r\n\r\n## Version 1.23.1 - 2020-02-26\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.23.0 - 2020-02-19\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.23.0\r\n\r\n## Version 1.22.0 - 2020-02-05\r\n\r\n### Added\r\n\r\n- Allow setting the [journal mode](https://www.sqlite.org/draft/pragma.html#pragma_journal_mode) via credentials.journalMode\r\n\r\n### Changed\r\n\r\n- Pool options can once again be overwritten\r\n\r\n## Version 1.21.0 - 2019-12-10\r\n\r\n### Changed\r\n\r\n- Pool options always set to default\r\n\r\n## Version 1.20.1 - 2019-11-29\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.20.1\r\n\r\n## Version 1.20.0 - 2019-11-19\r\n\r\n### Added\r\n\r\n- Conversion of hana's `seconds_between` function to `strftime` for sqlite\r\n\r\n## Version 1.19.1 - 2019-10-30\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.19.1\r\n\r\n## Version 1.19.0 - 2019-10-29\r\n\r\n### Removed\r\n\r\n- `npm-shrinkwrap.json`\r\n\r\n## Version 1.18.1 - 2019-10-16\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.18.1\r\n\r\n## Version 1.18.0 - 2019-10-02\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.18.0\r\n\r\n## Version 1.17.1 - 2019-09-18\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.17.1\r\n\r\n## Version 1.17.0 - 2019-09-09\r\n\r\n### Added\r\n\r\n- Streaming into sqlite\r\n\r\n## Version 1.16.0 - 2019-08-21\r\n\r\n### Changed\r\n\r\n- Signature of the Client's constructor\r\n\r\n## Version 1.15.0 - 2019-07-23\r\n\r\n### Added\r\n\r\n- Support multi tenancy for file based database\r\n\r\n### Fixed\r\n\r\n- Streaming supports `null` values\r\n\r\n## Version 1.14.0 - 2019-07-09\r\n\r\n### Added\r\n\r\n- Named binding parameters\r\n- Support files as db in tenant manager\r\n\r\n## Version 1.13.0 - 2019-06-24\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.13.0\r\n\r\n## Version 1.12.0 - 2019-05-24\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.12.0\r\n\r\n## Version 1.11.1 - 2019-05-16\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.11.1\r\n\r\n## Version 1.11.0 - 2019-05-15\r\n\r\n### Changed\r\n\r\n- Bulk inserts are now traced\r\n\r\n## Version 1.10.0 - 2019-05-03\r\n\r\n### Added\r\n\r\n- Mitigation for loosely typed columns and imported data\r\n- service related functions\r\n- Streaming support via `client.stream()`\r\n\r\n## Version 1.9.0 - 2019-04-16\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.9.0\r\n\r\n## Version 1.8.0 - 2019-03-29\r\n\r\n### Added\r\n\r\n- Support for odata method functions\r\n\r\n## Version 1.7.0 - 2019-03-19\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.7.0\r\n\r\n## Version 1.6.0 - 2019-02-25\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.6.0\r\n\r\n## Version 1.5.1 - 2019-02-12\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 1.5.1\r\n\r\n## Version 1.5.0 - 2019-02-06\r\n\r\n### Changed\r\n\r\n- Minimum node version 8.9.0\r\n- Improve expand performance\r\n\r\n## Version 1.4.0 - 2019-01-22\r\n\r\n### Added\r\n\r\n- `.execute` supports placeholders in CQN\r\n\r\n## Version 1.3.0 - 2019-01-11\r\n\r\n### Changed\r\n\r\n- Use latest version of @sap/cds-sql\r\n\r\n## Version 1.2.0 - 2018-12-21\r\n\r\n### Added\r\n\r\n- Set default values in case of CREATE, UPSERT and adding a child in deep documents\r\n\r\n## Version 1.1.0 - 2018-12-12\r\n\r\n### Added\r\n\r\n- Support Deep Document CQNs\r\n\r\n## Version 1.0.3 - 2018-11-27\r\n\r\n### Added\r\n\r\n- credentials.database can be used instead of parameters host and url\r\n\r\n### Changed\r\n\r\n- Throw db error instead of wrapping it in Sql Error\r\n- Throw an error if database is not defined instead of fallback to memory\r\n\r\n### Fixed\r\n\r\n- Bulk Insert with $user / $now\r\n- Post processing of Binary, Boolean, DateTime and Integer64\r\n\r\n## Version 0.10.0 - 2018-10-17\r\n\r\n- Refactoring and changes due to updated dependencies \r\n\r\n## Version 0.9.0 - 2018-10-04\r\n\r\n### Changed\r\n\r\n- Updated version of @sap/cds-sql to 0.11.0\r\n\r\n## Version 0.8.0 - 2018-09-17\r\n\r\n### Fixed\r\n\r\n- CQN queries with contains and expand (limitation: expanded columns cannot be part of contains)\r\n\r\n## Version 0.7.1 - 2018-09-05\r\n   \r\n### Changed\r\n\r\n- Improved npm-shrinkwrap\r\n\r\n## Version 0.7.0 - 2018-08-28\r\n\r\n### Changed\r\n\r\n- API documentation updated\r\n\r\n## Version 0.6.1 - 2018-08-09\r\n\r\n### Changed\r\n\r\n- Require submodules on demand\r\n\r\n## Version 0.6.0 - 2018-08-07\r\n\r\n### Added\r\n\r\n- cds.Timestamp and cds.DateTime converted into ISO time format when reading\r\n- Support for abstract placeholders #now and #user\r\n\r\n### Fixed\r\n\r\n- SQL error hides internal error messages and provides details in log\r\n\r\n## Version 0.5.0 - 2018-06-25\r\n\r\n### Added\r\n\r\n- support execution of blocks of statements\r\n- support plain mode of SQL name mapping\r\n \r\n### Changed\r\n\r\n - Added SQL Error to hide the internal information from other errors\r\n\r\n### Fixed\r\n\r\n- CDS injection\r\n\r\n## Version 0.4.0 - 2018-05-02\r\n\r\n### Changed\r\n\r\n- connect options aligned to spec\r\n- support for latest CQN spec changes\r\n\r\n## Version 0.3.0 - 2018-04-16\r\n\r\n### Added\r\n\r\n- support CREATE statements\r\n\r\n## Version 0.2.0 - 2018-03-16\r\n\r\n### Added\r\n\r\n- usage of npm-shrinkwrap\r\n\r\n### Changed\r\n\r\n- improved performance\r\n"},{"name":"cds","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cds\r\n\r\nThe API package for the [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap).\r\n\r\nSee the [API documentation](https://cap.cloud.sap/docs/node.js/api) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Change Log\r\n\r\n- All notable changes to this project are documented in this file.\r\n- The format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n- This project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\n## Version 5.9.8 - 2022-06-24\r\n\r\n### Fixed\r\n\r\n- Application model is now again properly updated after extension activation\r\n- Avoid crashes during `cds version` when `folders.db` or `folders.srv` are array-valued instead of strings\r\n- `cds build` correctly validates MTX extension allow lists and doesn't log false positive warning messages\r\n\r\n## Version 5.9.7 - 2022-06-13\r\n\r\n### Fixed\r\n\r\n- Deleting a parent will delete all compositions, also texts\r\n- Views with aliased elements in `orderBy`\r\n\r\n## Version 5.9.6 - 2022-05-24\r\n\r\n### Fixed\r\n\r\n- Ignored requests in batch requests\r\n- `pool` module for logger facade is separated from `hana` database logger. Timeout error by acquiring client from pool is now enhanced with `_poolState` providing current pool attibutes.\r\n- Multiple errors did not have correct HTTP response status code\r\n- `POST|PUT|PATCH` requests with `charset` directive in `Content-Type` header (e.g. `Content-Type: application/json; charset=utf-8`) no longer issues an error \"Invalid content type\" in REST adapters\r\n- Call hana procedure:\r\n  + accepted are any symbols in a procedure name if it is delimited with a double quotation (`\"`)\r\n  + fixed results for table output parameters when using `@sap/hana-client`; **limitation**: output parameters in a `CALL` statement must follow the same order used in a stored procedure definition\r\n- `@odata.context` considers `cds.env.odata.contextAbsoluteUrl` when requesting an OData Service\r\n\r\n## Version 5.9.5 - 2022-05-09\r\n\r\n### Fixed\r\n\r\n- `HDB_TCP_KEEP_ALIVE_IDLE` config\r\n- A combination of `!=` operator and `or` in `where` clauses of `@restrict` annotations or when adjusting `req.query` in custom handlers (OData services only)\r\n- Programmatic calls to bound actions/functions do have keys in `req.data` again if compat flag `cds.env.features.keys_in_data_compat` is set\r\n\r\n## Version 5.9.4 - 2022-05-02\r\n\r\n### Fixed\r\n\r\n- Error messages are improved if no `passport` module was found or if no `xsuaa` service binding is available\r\n- Issue fixed for `srv.get()`. It was returning `TypeError` in plain REST usage for external services, e.g. `srv.get('/some/arbitrary/path/111')`\r\n- Allow unrestricted services to run unauthenticated, removing the `Unable to require required package/file \"passport\"` error. Totally not recommended in production.  Note that though this restores pre 5.9.0 behavior, this will come again starting in 6.0.\r\n- Audit logging of sensitive data in a composition child if its parent is annotated with `@PersonalData.EntitySemantics: 'Other'` and has no data privacy annotations other than `@PersonalData.FieldSemantics: 'DataSubjectID'` annotating a corresponding composition, for example:\r\n  ```js\r\n    annotate Customers with @PersonalData : {\r\n      DataSubjectRole : 'Address',\r\n      EntitySemantics : 'Other'\r\n    } {\r\n      addresses @PersonalData.FieldSemantics: 'DataSubjectID';\r\n    }\r\n    annotate CustomerPostalAddress with @PersonalData : {\r\n      DataSubjectRole : 'Address',\r\n      EntitySemantics : 'DataSubject'\r\n    } {\r\n      ID @PersonalData.FieldSemantics : 'DataSubjectID';\r\n      street @PersonalData.IsPotentiallyPersonal;\r\n      town @PersonalData.IsPotentiallySensitive;\r\n    }\r\n  ```\r\n\r\n## Version 5.9.3 - 2022-04-25\r\n\r\n### Fixed\r\n\r\n- Since 5.8.2 `req.target` for requests like `srv.put('/MyService.entity')` is defined, but `req.query` undefined (before `req.target` was also undefined). This was leading to accessing undefined, which has been fixed.\r\n- Custom actions with names conflicting with methods from service base classes, e.g. `run()`, could lead to hard-to-detect errors. This is now detected and avoided with a warning.\r\n- Typed methods for custom actions were erroneously applied to `cds.db` service, which led to server crashes, e.g. when the action was named `deploy()`.\r\n- Invalid batch requests were further processed after error response was already sent to client, leading to an InternalServerError\r\n- Full support of `SELECT` queries with operator expressions (`xpr`)\r\n\r\n\r\n## Version 5.9.2 - 2022-04-07\r\n\r\n### Fixed\r\n\r\n- i18n translation for errors did not work correctly in some cases\r\n- Normalization in custom `getRestrictions`\r\n- Throw exception by `INSERT` into HANA queries if number of provided rows deviates from number of affected rows returned by hdb to prevent data losses\r\n- Handler detection for extended services\r\n- Speed-up in localization handling\r\n- Draft: navigation via an association to many from a non-draft enabled entity to a draft-enabled entity\r\n- Limited support of `SELECT` queries with operator expressions (`xpr`)\r\n\r\n## Version 5.9.1 - 2022-03-31\r\n\r\n### Fixed\r\n\r\n- Function arguments might be escaped too often\r\n- URL encoding for remote services for CQN queries\r\n- `cds serve` during development again redirects URLs with for UI apps in a folder with the same name as a service, so `/foo/webapp` would redirect to `/foo`.  This got broken in 5.8.3.\r\n- Endless loop in localization handling\r\n- Ensure service impl while extending entity from the service\r\n- Post-processing of custom draft queries\r\n- No minifying of CSN artifacts for Java build\r\n\r\n## Version 5.9.0 - 2022-03-25\r\n\r\n### Added\r\n\r\n- Enable custom audit logging implementation by subclassing or prepending `cds.AuditLogService`\r\n- Log authentication/authorization traces, for example, authentication strategy, and access control decisions to facilitate troubleshooting in debug mode.\r\n- Bound functions and actions calls with odata-v2 from remote service\r\n- Beta support for procedure calls with table output data (SAP HANA only)\r\n  + Both hdb and `@sap/hana-client` currently do not support parameter metadata for table output. To provide the functionality anyways, CAP must fetch the metadata itself. As this is not CAP's expertise, the feature is only beta.\r\n  + All parameters must be named or unnamed, that is `CALL EXAMPLE_PROC(PARAM_1 => ?,PARAM_2 => ?)` or `CALL EXAMPLE_PROC(?,?)`\r\n- Alpha `cds.ApplicationService.getRestrictions(definition, event, user)`, which returns the applicable restrictions for the current request as follows:\r\n  + `null`: unrestricted access\r\n  + `[]`: no applicable restrictions -> no access\r\n  + `[{ grant: '...', to: ['...'], where: '...' }, ...]`: applicable restrictions with grant normalized to strings\r\n    + That is, `grant: ['CREATE', 'UPDATE']` in model becomes `[{ grant: 'CREATE' }, { grant: 'UPDATE' }]`\r\n  + Promise resolving to any of the above (needed for CAS override)\r\n- Internal model provider service can be used for obtaining dynamic csn including features and key user extensions\r\n- Support insert of SQL snippets for HANA migration tables using @sql.append and @sql.prepend annotations.\r\n- Support for the `@odata.draft.enclosed` annotation on associations targeted via navigation — previously only supported for `$expand`\r\n- Pseudo role `internal-user` for technical user tokens acquired from own XSUAA instance\r\n- Include globally-installed cds-dk version in output of `cds version`.\r\n- Include version of cds-mtx in output of `cds version`, if available.\r\n- Feature toggle support in `cds build` for cloud deployments. Create language bundles and parsed CSN for all features.\r\n\r\n### Changed\r\n\r\n- Cleaned up `cds.env.requires` towards a consistent usage:\r\n  + Moved all entries of `cds.requires` to `cds.requires.kinds` → `cds.requires` is empty now by default, but has `cds.requires.kinds` as prototype, so e.g. `cds.requires.sql` will still return a match.\r\n  + Added support for db-specific  `cds.requires.db.deploy-format` → deprecating `cds.hana.deploy-format` (which is still supported for compatibility)\r\n  + Introduced `cds.requires.kinds.hana-cloud` as `{kind:hana, deploy-format:hdbtable}` → to be used by default for production\r\n  + Changed `cds.requires.audit-log` to be consistent to all other; also got moved to `cds.requires.kinds.audit-log`, so it is no longer activated by default.\r\n  + Added support for `cds.requires.foo: true` with `foo` being a preset/prototype entry in `cds.requires.kinds` → allows to more easily switch on pre-configured services.\r\n- Update-managed properties (`@cds.on.update`) are always updated\r\n  + Example: `UPDATE('Books').set({}).where({ ID: 1 })` leads to new modifiedAt and modifiedBy\r\n  + Does not apply to nested entities that are only preserved by specifying their primary keys in the data\r\n  + Deactivate during two month grace period via compact feature flag `cds.env.features.update_managed_properties = false`\r\n- Response no longer contains keys neither technical draft properties (e.g. `HasDraftEntity` or `InProcessByUser`) in expanded data if they were not requested explicitly when using `cds.Service` API\r\n  + Example:\r\n    ```js\r\n    > await srv.read('Authors', a => { a.name, a.books(b => { b.title }) }).where({ ID: 1 })\r\n    // -> \"old behaviour\" result\r\n    [{ name: 'Emily Brontë', books: [{ title: 'Wuthering Heights', ID: 201 }] }]\r\n    // -> \"new behaviour\" result\r\n    [{ name: 'Emily Brontë', books: [{ title: 'Wuthering Heights' }] }]\r\n    ```\r\n  + Technical draft properties are not automatically fetched also on a root level\r\n  + Deactivate during two month grace period via compat feature flag `cds.env.features.auto_fetch_expand_keys = true`\r\n- Access control is checked in generic handlers (rather than handlers materialized on app startup)\r\n- Expand restriction check moved to pre-before phase\r\n- The active state of an entity is read instead of the draft state when navigating from a draft entity to a draft-enabled entity via an association.\r\n- Authentication middleware is always mounted (used to be only for restricted services)\r\n- Fiori preview now uses the Horizon theme\r\n- 'Preview' links in generic index.html page no longer get the word _preview_ appended automatically, allowing for more flexible naming.  Link providers should make sure to add the _preview_ word if necessary.\r\n- Don't throw error in GraphQL adapter if update mutation filter does not match any entries (to be consistent with delete mutations)\r\n- Remote call of unbound action/function returns octet-stream instead of string by default\r\n- Default pool's behaviour has been changed from `FIFO` (queue) to `LIFO` (stack). Can be changed in pool configuration.\r\n- `cds run/serve` now gracefully shuts down the HTTP server before exiting.  Custom handlers for signals like `SIGTERM` or `SIGINT` can now be processed.\r\n- `cds build` no longer creates `COMMENT` statements for HANA if doc comments are present in CDS models.  The statements caused superfluous table migrations during HANA deployments.\r\n\r\n### Fixed\r\n\r\n- Logging of failed requests to remote services was incompatible to Elasticsearch\r\n- `cds serve --project <dir>` didn't serve static web resources from `<dir>`\r\n- `cds serve -p <dir>` was meant to be a shortcut for `cds serve --project <dir>`\r\n- Messaging: Use correct kind for logging\r\n- Incorrect return values for update-managed properties (`@cds.on.update`) of child entities that were not changed in request\r\n- `$filter` with navigation to-one eq null\r\n- Calculation of `DraftIsProcessedByMe` when navigating to `DraftAdministrativeData`\r\n- Inbound streaming with media type annotated as `@Core.Computed`\r\n- Pass column expression into `SELECT()` (example: `SELECT('SUBSTRING(locale,0,2) as loc').from(<entity>)`)\r\n- Annotation `@cds.api.ignore` ignores key in new parser\r\n- Inconsistencies in actions and functions API\r\n- Opening root transaction in `srv.run` if none exists\r\n- Glitches in handling of `req.user.tenant` and `req.user.locale`\r\n- Flattened keys in URL are resolved correctly if they are unique in new REST adapter\r\n- Actions and functions in REST adapter\r\n- Empty string as key does not work in new parser\r\n- Requesting property of an entity caused error in new parser\r\n- The SQLite CSV import now imports `\"true\"` and `\"false\"` as strings instead of Booleans\r\n- Fixed loading mechanism for custom build task handlers\r\n- `req.diff()` for `UPDATE` on a view with renamed property in `orderBy`\r\n- `$user.<attr>` for managed properties (`@cds.on.insert`/`@cds.on.update`)\r\n- GraphQL `__typename` meta field if it is the only selected field of an association/composition\r\n- Command shortcuts like `cds c` are now handled properly if executed in an NPM script\r\n- ETag is not included in expanded entities using `$select`, for example: `Books(1)?$expand=author($select=ID)`\r\n- `cds.compile.to...` no longer crashes if called with a CSN that has a dangling ref\r\n- Requests to remote services via navigation path without explicit `$select`, but having `$expand` query option\r\n- `cds.compile` correctly supports reserved namespaces like `cds.foundation`.\r\n- `cds.compile.to.serviceinfo` now uses the correct configuration for the base URL paths for Java services\r\n- `cds deploy --to sqlite` correctly localizes texts in deployed views. Before not all localized texts have been correctly resolved.\r\n- `cds deploy --to hana` reports missing org or space info with better message.\r\n\r\n### Removed\r\n\r\n- Redundant locale implementation\r\n\r\n## Version 5.8.4 - 2022-03-17\r\n\r\n### Fixed\r\n\r\n- `UPDATE` singleton entity does not require to provide singleton keys in a payload\r\n- CQN queries with operator expressions (`xpr`) in ON-conditions of unmanaged associations and compositions\r\n\r\n## Version 5.8.3 - 2022-03-01\r\n\r\n### Fixed\r\n\r\n- `queries` property for application defined destinations of remote services\r\n- `cds serve --watch` no longer fails if `@sap/cds-dk` is installed only globally\r\n- `cds serve` during development longer redirects URLs with similar path segments from different services, like `/service/one` and `/service`\r\n- `cds deploy --to sqlite` now ignores a `_texts.csv` file again if there is a language-specific file like `_texts_en.csv` present\r\n- Using logical blocks (surrounded with `(` and `)`) in ON-conditions of unmanaged associations and compositions\r\n- Skip \"with parameters\" clause if no order by clause or all columns in the order by clause are not strings when using parametrized views on hana\r\n- Limited support for binary data in OData\r\n  + Using of `base64` string values in `WHERE IN` on hana\r\n  + `base64url` values in `@odata.context` annotation\r\n- `cds.context` is set in GraphQL adapter\r\n- Using payloads with `@odata.type` annotating primitive properties no longer crashes the application. `#` in type value may be ommitted. Example:\r\n  ```json\r\n  {\r\n    \"ID\": 201,\r\n    \"title@odata.type\": \"#String\",\r\n    \"title\": \"Wuthering Heights\",\r\n    \"stock@odata.type\": \"Int32\",\r\n    \"stock\": 12\r\n  }\r\n  ```\r\n- Unicode support for i18n bundles\r\n\r\n## Version 5.8.2 - 2022-02-22\r\n\r\n### Fixed\r\n\r\n- Crash if error does not have a stack in kibana logging\r\n- Allow short names for bound operations in odata-server\r\n- Performance issue during deep operations\r\n- Resolving views with parameters\r\n- Expanding association-to-many within draft union scenario\r\n- Erroneous invalidation of deep `INSERT|UPDATE|DELETE` operations if root entity has managed to-one association to non-writable view\r\n- Handling of falsy results when sending requests to remote services\r\n- Resolving foreign key propagations for views with union\r\n\r\n## Version 5.8.1 - 2022-02-11\r\n\r\n### Fixed\r\n\r\n- Use single transaction for update mutations in GraphQL adapter\r\n- ODATA to CQN parser returned not selected keys in `@odata.context`\r\n- Draft: `$expand` with special draft columns in `$orderBy` for active entities\r\n- Reading distinct values of draft enabled entity\r\n- Handling of LOB data on HANA\r\n- Fix streaming draft by navigation\r\n- Empty to-many arrays are not removed from req.data for inserts\r\n- `$filter` query option in structured mode (OData flavors `w4` and `x4`)\r\n  + Using JSON-stringified objects no longer occasionally crashes an application\r\n  + Filtering on a structured element with `ne null` condition also selects data having some `null` properties within\r\n- Rest: `Content-type` header is set to `text/plain` for primitive data types in response (except for `Boolean`)\r\n\r\n## Version 5.8.0 - 2022-01-27\r\n\r\n### Added\r\n\r\n- Custom `server.js` don't have to export `cds.server` anymore -> we use that by default now.\r\n- In `cds.requires`: Support to replace primitive values with objects\r\n- Support filter functions on renamed properties from external service\r\n- Results of database queries use `big.js` for values of type `cds.Decimal` and `cds.Integer64` if enabled via `cds.env.features.bigjs`\r\n- Support lambda in `$filter` in `$expand`\r\n- Support for `GET` requests on service root in REST adapter (old and new)\r\n- Support for `HEAD` requests in REST adapter (old and new)\r\n- New hook `req.before('commit')`\r\n- Draft (Access control for bound actions): Only the user that is the owner of the draft can execute its bound actions.\r\n- Check that all keys are provided in REST adapter\r\n- Restrict access to all services via `cds.env.requires.auth.restrict_all_services = true`\r\n  + That is, all unrestricted services (i.e., w/o own `@requires`) are treated as having `@requires: 'authenticated-user'`\r\n- Threshold for automatically sending GET requests as `$batch` (beta, cf. @sap/cds@5.6.0) can be configured per remote service via `cds.env.requires.<srv>.max_get_url_length` (if not configured on service, the global config applies)\r\n- Limited support for binary data in OData\r\n  + In payloads, the binary data must be a base64 encoded string\r\n  + In URLs, the binary data must have the following format: `binary'<url-safe base64 encoded>'`, e.g., `$filter=ID eq binary'Q0FQIE5vZGUuanM='`\r\n  + The use of binary data in some advanced constructs like `$apply` and `/any()` may be limited\r\n  + On SQLite, the base64 encoded string is stored in the database\r\n  + It’s strongly discouraged to use binary data as keys. See \"Primary Keys — Best Practices\" in the documentation.\r\n- Support for OData annotation `@Core.ContentDisposition.Type` with `attachment` as the default value\r\n- Support for returning custom stream objects in custom handlers (beta):\r\n  + Example:\r\n    ```js\r\n    return {\r\n      value: instanceof Readable || null,\r\n      $mediaContentType = 'image/jpeg',\r\n      $mediaContentDispositionFilename = 'foo.bar', // > optional\r\n      $mediaContentDispositionType = 'inline' // > optional\r\n    }\r\n    ```\r\n\r\n### Changed\r\n\r\n- `cds deploy --to hana` now uses `cf curl` instead of `cf` command natively\r\n- Event Mesh: In multitenancy mode, messaging artifacts are also deployed for provider accounts (unless the service option `deployForProvider` is set to `false`)\r\n- Status code in case of multiple errors (rules apply in order):\r\n  + If all errors have the same status code, that status code is used\r\n  + If there is at least one 5xx status code, the resulting status code is 500\r\n  + If there is at least one 4xx status code, the resulting status code is 400\r\n  + If none of the rules apply, the resulting status code is 500\r\n- Ignore the `If-Match` HTTP request header for `UPDATE`/`DELETE` requests whose target entities are not annotated with the `@odata.etag` annotation.\r\n- I18n template strings now are replaced in EDMX documents such that they can occur multiple times.  For example, the `{i18n>key1} - {i18n>key2}` template results in `value1 - value2`, while previously only the first string was replaced, leading to `value1 - {i18n>key2}`.  This is helpful for the [`Template` strings of `UI.ConnectedFields`](https://github.com/SAP/odata-vocabularies/blob/ac9fe832df9b8c8d35517c637dba7c0ac2753b0f/vocabularies/UI.xml#L168).\r\n\r\n### Fixed\r\n\r\n- At Node.js runtime, the `development` configuration profile is no longer active if `CDS_ENV` is set to `production` and `NODE_ENV` is undefined\r\n- Enterprise Messaging: The user is now privileged for AMQP\r\n- `cds.spawn` also works with synchronous functions\r\n- Foreign keys in parent are set to `null` when deleting composition of one\r\n- `cds version` now always prints the version of `@sap/cds-dk`, especially if `cds version` was called from within an npm script, i.e. not from `cds-dk`'s CLI.\r\n- Better error message in case destination of Remote Service isn’t found\r\n- Differentiate between draft already exists and entity locked\r\n- OData adapter: roll back transaction before rethrowing standard error in case of atomicity group\r\n- Results of actions/functions do not ignore custom data when using `$expand` query option\r\n- `req.data` is available in custom error handler in case of deserialization error thrown by legacy OData server\r\n- Joining entities with renamed foreign keys (limited to single-level projections)\r\n- Requests with draft and `$expand=*` caused problems in some cases\r\n- `cds serve` during development longer redirects URLs with similar path segments like `/browse/123/browse/` to e.g. `/browse/`\r\n- Post-processing for renamed columns in expand\r\n- Deploy to SAP HANA: passing of options to `hdi-deploy` via `HDI_DEPLOY_OPTIONS` now possible\r\n- Keys as path segments in beta OData to CQN parser\r\n- OData V2 Remote Service (`\"kind\": \"odata-v2\"`):\r\n  + Request data properties of types `cds.Date`, `cds.DateTime`, and `cds.Timestamp` are converted accordingly to OData V2 specification\r\n  + Response data properties of types `cds.Decimal`, `cds.DecimalFloat` (deprecated) and `cds.Integer64` are handled properly when using `Accept` header with `IEEE754Compatible=true/false` and `ExponentialDecimals=true/false` format parameters\r\n\r\n## Version 5.7.6 - 2022-02-23\r\n\r\n### Fixed\r\n\r\n- `draftActivate` action does not return children if not requested\r\n\r\n## Version 5.7.5 - 2022-01-14\r\n\r\n### Fixed\r\n\r\n- Instance-based restriction for activation of draft-enabled entities using `or` in restriction\r\n- Messaging: Duplicate handler execution if application service registered events twice\r\n- Post of a deeply nested sub-entity with structured parent keys\r\n- Negating lambda expressions in OData using the `not` operator\r\n- Event Mesh: Redelivery count when using AMQP\r\n- OData requests using lambda expressions on localized data\r\n- `cds.db.exists` wrongly generated a `SELECT * FROM ...` for OData flavor x4\r\n- Return localized texts on draft activate\r\n- Unicode characters in unquoted search terms in beta OData to CQN parser\r\n\r\n## Version 5.7.4 - 2021-12-22\r\n\r\n### Fixed\r\n\r\n- Complex `@restrict.where: 'exists [...] or (... or ...) or ...'` in draft union scenario no longer crashes the application\r\n- Sanitization of null values for `cds.RemoteService`\r\n- Handling of boolean values in draft union scenario with `$expand` query option\r\n- `_4odata` flag in CQN stays non-enumerable when forwarding to another application service\r\n- Handling of type references on properties of associations in `cds.minify`\r\n\r\n## Version 5.7.3 - 2021-12-16\r\n\r\n### Fixed\r\n\r\n- Message Queuing now accepts `amqp` options\r\n- OData requests using lambda expressions with `contains` function\r\n- Result of OData query option `$count=true` when using `$apply`\r\n- `$filter` with navigation to-one equals value crashes\r\n- `$skiptoken` query option allows using arbitrary symbols except of `&` with beta OData URL to CQN parser (`cds.env.features.odata_new_parser`). In this non-integer value case, the value won’t be parsed into CQN.\r\n- Function names in `$filter` can now be case insensitive (as per OData 4.01)\r\n- `$count` in `$expand` caused server to crash\r\n\r\n## Version 5.7.2 - 2021-12-09\r\n\r\n### Fixed\r\n\r\n- Instance-based restriction for activation of draft enabled entities\r\n- `.columns('*')` on projections of remote services using renamed properties\r\n- GraphQL filters on nested fields are now applied correctly\r\n- Performance degradation during the processing of `where exists`\r\n- Read drafts via navigation with complex filter expression\r\n\r\n## Version 5.7.1 - 2021-12-06\r\n\r\n### Fixed\r\n\r\n- Draft (OData flavors `w4`, `x4`, and `v4` with structs): Flags `HasActiveEntity`, `HasDraftEntity`, and `IsActiveEntity` are now included in the HTTP response for GET requests.\r\n- Instance-based restriction on entities using localized fields in draft\r\n- Results of actions/functions do not ignore nested data if query options are present\r\n\r\n## Version 5.7.0 - 2021-12-03\r\n\r\n### Added\r\n\r\n- Deferred emitting via persistent outbox, enabled through service `outbox` of kind `persistent-outbox`\r\n- Support for compiler-generated referential constraints (beta)\r\n  + Activate via `cds.env.features.assert_integrity: '<preset>'`\r\n  + Available presets:\r\n    + `off`: no database constraints and no runtime checks\r\n    + `app`: runtime checks by default\r\n    + `db`: database constraints by default\r\n  + \"by default\": if not excluded, the runtime check or database constraint applies\r\n  + \"opt-in\": if included, the runtime check or database constraint applies\r\n  + Behavior can be overridden via `@assert.integrity: <true/false/'RT'/'DB'>` on property, entity, or service level (lowest applies)\r\n- Allow `--with-mocks` in production via `cds.env.features.with_mocks = true`\r\n- Set media type from content-type header while inbound streaming\r\n- Support for navigations with `$count` in `$filter`, for example `GET Entity?$filter=toMany/$count gt 0`\r\n- Draft: Generate UUIDs for request payloads to which extra data items are added (without the UUID keys) in a custom application handler.\r\n- Generate GraphQL schema via `cds compile -2 gql` (alpha)\r\n- Log requests to remote services if the respective log level is set to `debug`\r\n- Beta OData URL to CQN parser (`cds.env.features.odata_new_parser`):\r\n  + Support for `$skiptoken` query option\r\n  + Limited support for `$apply` query option\r\n    + Supported are the following transformations and their combinations: `aggregate`, `groupby`, `topcount`, `bottomcount`, `filter`, `search`\r\n    + Not supported:\r\n      + Transformations `topsum`, `bottomsum`, `toppercent`, `bottompercent`, `expand`, `concat`, `compute`, `identity`\r\n      + `rollup` and `$all` in `groupby` transformation\r\n      + Filter function `isdefined`\r\n      + Custom aggregation methods, arithmetic operators (`add`, `sub`, `mul`, and so on), and keyword `from` in `aggregate` transformation\r\n      + OData vocabulary for Data Aggregation, `@Aggregation.default` annotation\r\n    + Out of scope:\r\n      + Draft handling\r\n- Out-of-the-box audit logging for draft enabled entities\r\n- Support for `@sap/instance-manager`'s hybrid mode\r\n  + Enable via `cds.env.features.hybrid_instance_manager`\r\n  + Respective version of `@sap/instance-manager` required\r\n- `cds.minify()` (alpha) as static method\r\n- Annotation `@open` for actions in new Rest Adapter\r\n- Audit logging (`cds.env.features.audit_personal_data`) supports annotation `@PersonalData.EntitySemantics: 'Other'` and allows an arbitrary composition of entities with respect to `@PersonalData.EntitySemantics` annotations\r\n\r\n### Changed\r\n\r\n- `if-match` and `if-none-match` headers are  ignored for entities without etags\r\n- Improve response time of `SELECT` queries that check referential integrity by adding an upper bound `LIMIT 1`\r\n- Leaner implementation for `sap-statistics`\r\n- Leading and trailing whitespaces are allowed for `$search` query parameter\r\n- Insert / Update of Composition of one with empty object is not allowed for non UUID keys\r\n- Search behavior of whitespaces changed as follows:\r\n  + Searches for plain whitespace, for example, `\"$search= \"` matches the complete data set.\r\n  + Searches for whitespace surrounded by double-quotes, for example, `$search=\" \"` matches all entries containing whitespaces.\r\n- In single-tenant mode, the default SQLite database is used, regardless of `context.tenant`\r\n- `cds build` for Node.js projects now copies `package-lock.json` files into the staging folder (usually `gen/srv`). This allows the execution of `npm ci` there.\r\n- Relaxed UUIDs in beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- Authentication strategies `dummy` and `mock` no longer require `passport`\r\n- In production, debug logs of `cds.DatabaseService` and `cds.RemoteService` have sanitized values\r\n  + Deactivate via `cds.env.log.sanitize_values = false`\r\n\r\n### Fixed\r\n\r\n- Path resolution for references in sub-selects\r\n- Where exists without infix filter, e.g., `@restrict.where: 'exists author'`\r\n- `@restrict.where: 'exists [...]'` in draft union scenario\r\n- Select query with path exists predicates, for example, `WHERE EXISTS books[year = 2000].pages[wordcount > 1000]`\r\n- Proper registration of audit log event handlers\r\n- Draft: Generate foreign keys for request payloads to which extra data items are added in a custom application handler.\r\n- `cds build` correctly merges `hdbmigrationtable` files that have multiple new migration versions defined.\r\n- `cds.test` converts response data of failed requests to JSON to prevent lost error details\r\n- Instance-based restriction for draft enabled entities\r\n- Delete requests for localized with compositions\r\n- Ignore input for static and calculated fields during draft activate\r\n- Clear extension map entry on error during CSN fetching\r\n- Do not ignore errors during diff calculation\r\n- Requests to mocked remote service when using custom service name with `.service` property\r\n- Rollback on already backrolled or committed transactions are ignored\r\n- Rollback handling in spawned background job\r\n- `cds.spawn()` throws error if passed option is an instance of `cds.EventContext`\r\n- Delete `timestamp` from options passed to `cds.spawn()` (transactions create their own timestamp)\r\n- Type error during programmatic action/function call if no params defined\r\n- Fully qualified bound actions/ functions in beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- Draft handling: `GET` requests with navigation via `SiblingEntity` and expand to-one\r\n- No audit log if sensitive data not selected\r\n- Kibana formatter: do not log authorization header value\r\n- Audit logging (`cds.env.features.audit_personal_data`) no longer crashes the application\r\n  + when using the same entity as a composition child in different parent entities\r\n  + when accessing a not existing entity\r\n\r\n### Removed\r\n\r\n- Deprecated feature flags `cds.env.runtime.skipWithParameters` and `cds.env.features.skip_with_parameters`. Use `cds.env.features.with_parameters` instead.\r\n\r\n## Version 5.6.4 - 2021-11-23\r\n\r\n### Fixed\r\n\r\n- Preserve log level in Kibana formatter\r\n- RFC 3986 compliant segment recognition in beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- Support for `$skiptoken` OData query option when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- OData requests with `$skip` and without `$top` query option to services with defined default limit (`cds.query.limit.default`)\r\n- Creating entities with binary keys. Currently, the binary keys may be provided only as Node.js `Buffer` instances using a custom handler.\r\n- Requests with a payload containing nested arrayed elements no longer crash the application\r\n\r\n## Version 5.6.3 - 2021-11-15\r\n\r\n### Fixed\r\n\r\n- `cds run` does not fail if `cds.requires.multitenancy` is explicitly set to `false`\r\n- Calculation of `DraftIsCreatedByMe` or `DraftIsProcessedByMe` when expanding or navigating to `DraftAdministrativeData`\r\n- Nested `any` in `$filter` query option\r\n- Crash on draft activate after draft edit for not existing composition of one if no explicit DB service is defined\r\n- Typescript definition of `srv.delete` no longer leads to a duplication error\r\n\r\n## Version 5.6.2 - 2021-11-08\r\n\r\n### Fixed\r\n\r\n- Handle arrayed elements using templating mechanism\r\n- OData requests to `$count` endpoint of ETag enabled entity\r\n- `cds.test` does no longer crash if executed in `cds repl` on a remote service call\r\n- Crash on draft activate after draft edit for not existing composition of one\r\n- Ensure request correlation (with default server)\r\n- `<entity>.texts` points to real text entity\r\n- Draft union with expand to to-one and to-many\r\n- No columns in draft lock statement (i.e., use `SELECT 1`)\r\n\r\n## Version 5.6.1 - 2021-11-02\r\n\r\n### Fixed\r\n\r\n- UAA credentials lookup\r\n- Revert return type validation for `cds.String` for compatibility with older `@sap/cds-mtx` versions\r\n- Messaging: Ill-defined incoming AMQP messages will not crash the app\r\n- `cds compile -l` does no longer crash if called without `--to` option\r\n\r\n## Version 5.6.0 - 2021-10-29\r\n\r\n### Added\r\n\r\n- New REST protocol adapter (beta)\r\n  + Makes use of the beta OData URL to CQN parser. Hence, almost all OData requests are supported (see limitations below).\r\n  + Activate via `cds.env.features.rest_new_adapter = true`\r\n  + Out of scope (compared to OData protocol adapter):\r\n    + OData query option `$apply`\r\n    + Batch requests (with or without atomicity groups)\r\n    + Draft handling\r\n- New GraphQL protocol adapter (alpha)\r\n  + Serves single endpoint for all services based on `served` event at `/graphql` (subject to change).\r\n  + Activate via `cds.env.features.graphql = true`\r\n  + Required additional dependencies: `@graphql-tools/schema`, `express-graphql`, and `graphql`\r\n  + Not meant for productive use! For example, authentication and authorization are out of scope.\r\n- Support of the following features when using beta OData URL to CQN parser (`cds.env.features.odata_new_parser`):\r\n  + REST-style URLs (example: `GET /Foo/1`)\r\n  + `$expand=*` query option on different nested expand levels (`$levels` isn’t yet supported)\r\n  + Draft handling\r\n  + Structured keys\r\n  + Streaming\r\n  + Navigation to primitive properties without `$value` query option\r\n- Optimized Search: Support `$filter` query option in combination with optimize `$search` and localized data (when the environment variable `cds.env.features.optimized_search` is set to `true`)\r\n- `GET` requests support static values in ON-conditions of composition parents when using unmanaged backlinks\r\n- `destinationOptions` can be configured for Remote Services\r\n  + Example:\r\n    ```json\r\n      {\"cds\":{\"requires\":{\r\n        \"S4\": {\r\n          \"destinationOptions\": {\r\n            \"selectionStrategy\": \"subscriberFirst\",\r\n            ...\r\n          }\r\n        }\r\n      }}}\r\n    ```\r\n- `forwardAuthToken` can be configured for Remote Services\r\n  + Example:\r\n    ```json\r\n      {\"cds\":{\"requires\":{\r\n        \"credentials\": {\r\n          \"url\": \"...\",\r\n          \"forwardAuthToken\": true\r\n          }\r\n        }\r\n      }}}\r\n    ```\r\n- File to store private project settings `.cdsrc-private.json` (shouldn’t be checked in source code management)\r\n- Read additional configuration from JSON files or directory structures using `CDS_CONFIG` env variable\r\n- Missing typescript definitions for services' `.send` shortcuts `get`, `put`, `post`, `patch`, and `delete`\r\n- Build VCAP_SERVICES env variable dynamically for compatibility (`cds.env.features.emulate_vcap_services`)\r\n- GET requests to Remote OData Service are automatically sent as `$batch` if the generated URL is too long\r\n  + Can be configured via `cds.env.remote.max_get_url_length` (beta, default: 1028).\r\n- Provide ETag in response headers in case of `prefer: return=minimal`\r\n- Kibana formatter: log the user's id via `cds.env.log.user = true` (beta)\r\n  + Consider the data privacy implications!\r\n- Experimental support for uiflex running locally on sqlite by setting `cds.requires.extensibility.kind = uiflex`\r\n- Minified `cds.model` (deactivate via `cds.env.features.skip_unused = false`)\r\n\r\n### Changed\r\n\r\n- Query API: Specified keys are now part of the target path, e.g. `SELECT.from('Books', 1)` will move the key condition into `SELECT.from.ref`.\r\n  + Deactivate during two-month grace period via compat feature flag `cds.env.features.keys_into_where = true`\r\n- Removed duplicate integrity checks\r\n- Optimized search: Optimize queries for non-localized elements\r\n- OData to CQN parsing changed to enable remote service consumption. As a side effect, application code in `srv.on('READ', handler)` custom handlers relaying on CQN might need to be adapted. The following has changed:\r\n  - Previously, columns in `req.query.SELECT.columns` were always defined. Now, in case there is no `$select` and `$expand` query options in the OData query, `req.query.SELECT.columns` is `undefined`.\r\n  - Previously, if the `$expand` query option was specified in the OData query, all elements of the expanded navigation property were listed explicitly in the CQN query. Now, an `*` (asterisk) is listed instead.\r\n- Non-specified columns are resolved at database layer\r\n- `cds deploy` no longer enforces the presence of SAP CommonCryptoLib (checked with env variable `SECUDIR`) on Windows since it uses now the built-in security libraries\r\n- Target keys are not included in the body when sending `PATCH` requests to external services\r\n\r\n### Fixed\r\n\r\n- Audit logging of non-string values\r\n- Query API compilation error when keys start with `{`\r\n- Handling of wrong Edm.DateTimeOffset values\r\n- Using UUIDs in search with beta OData URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- Runtime exception for READ requests with deeply nested navigation and structured keys, for example:\r\n`GET foo/Bar/b708ad6c-2dd4-40d5-91c0-2e3eacf306d2/Info/sales(a='1010',b='10',c='00')/functions(functionName='error')`\r\n- The check for the minimum Node.js version now properly enforces version 12.18, i.e. aborts server startup.\r\n- `cds.test` fails with a clearer error message if the server wasn't started at all\r\n- Audit logging for modification of personal or sensitive data when using same entity as a composition child in different parent entities\r\n- Deleting an entity defined with managed composition of one, whereas a dependent entity is defined as having an independent managed association to its composition parent no longer crashes the application\r\n- Audit logging for entities having arrayed elements\r\n- Filtering for `cds.Date` on Remote OData V2 services\r\n- Crash when `rollup` function was used in groupBy in OData requests\r\n- Or for $filter with IsActiveEntity=true for access to active entities\r\n- Reading draft-enabled entity with `$expand` targeting non-draft associations\r\n- Delete with sub-select\r\n- Runtime exception when streaming property annotated with `@Core.MediaType: 'application/json'`\r\n- Reading streams via navigation when entity containing large data is a part of a draft-enabled composition tree\r\n- Read draft entity with nested exists restriction\r\n- Activate draft of entity having `to-one` and `to-many` compositions\r\n- Caching issue that causes the OData `omit-values` preference in `Prefer` HTTP headers to misbehaves\r\n- Deletion of draft instances if multiple draft enabled entities are used within one service\r\n- Queries with `contains` filter targeting a remote OData v2 service\r\n- Schema evolution support for nested CDS entities in `cds build`\r\n- I18n texts with quotes and other special characters get escaped correctly if they appear in XML and JSON documents\r\n- Execution of plain SQL statements on SQLite\r\n- `Content-Disposition` header is now URL encoded\r\n\r\n### Removed\r\n\r\n- Usage of `@sap/xsenv` is superseded with `cds.env` in node.js cds-runtime\r\n- `@odata.on.insert/update` and `#user/now` are deprecated and will be removed in the next major version. Use `@cds.on.insert/update` and `$user/now` instead.\r\n\r\n## Version 5.5.5 - 2021-10-20\r\n\r\n### Fixed\r\n\r\n- Action parameters set to null\r\n- Restrictions with \"where exists\" clause and filter on ambiguous fields\r\n- Nulled user attribute in restrictions with \"where exists\" clause\r\n- Wait for all queries to settle during deep operation\r\n\r\n## Version 5.5.4 - 2021-10-12\r\n\r\n### Fixed\r\n\r\n- Backwards compatibility for `cds.tx({ user: new User ({ tenant, locale }) })`\r\n- Transaction API fix: `cds.tx ({ tenant }, tx => { ... })` instead of `cds.tx (tx => { ... }, { tenant })`\r\n- Writable and reliable `query._target`\r\n- `req.target` in REST with navigations in URL\r\n\r\n## Version 5.5.3 - 2021-10-06\r\n\r\n### Fixed\r\n\r\n- Resolving of views for view definitions using aliases\r\n- `cds.test` in `cds repl` no longer yields an error with the `beforeEach` function not found\r\n- Aliasing in case of draft union when expanding more than one `to-one` association\r\n- Resolving of views if intermediate views are defined in database namespace\r\n\r\n## Version 5.5.2 - 2021-09-29\r\n\r\n### Fixed\r\n\r\n- `$expand` requests with virtual fields with the same name in root and child\r\n- Requests expanding `DraftAdministrativeData` when compound keys are used\r\n- `SELECT.columns` with an empty array as argument\r\n- Queries with complex lambda filters\r\n\r\n## Version 5.5.1 - 2021-09-24\r\n\r\n### Added\r\n\r\n- Support for casting SQL function input\r\n\r\n### Fixed\r\n\r\n- Typo in `DELETE` method of `cds.test`\r\n- View resolving for intermediate queries\r\n- Result post-processing for renamed expands\r\n- Don't use placeholder values for `null`\r\n\r\n## Version 5.5.0 - 2021-09-23\r\n\r\n### Added\r\n\r\n- Support for minified models\r\n- Messaging: Support for string payloads\r\n- Messaging: Webhooks use 'application/json' as the default content type\r\n- Messaging: If senders don't use `data` as a property of the payload, then the whole payload is interpreted as `data`\r\n- Messaging: Support for `$namespace` placeholer in queue name\r\n- Support for deletable singletons with `@odata.singleton.nullable`\r\n- Remote requests set the `accept-language` header according to the original request or the user's locale\r\n- Support for choosing data source names different from names of respective service definitions.\r\n  + Example:\r\n    ```json\r\n      {\"cds\":{\"requires\":{\r\n        \"S4\": {\r\n          \"model\": \"...\", \"service\": \"API_BUSINESS_PARTNER\"\r\n        }\r\n      }}}\r\n    ```\r\n- When calling `cds.tx()` to create new transactions, this now automatically inherits the current event context from `cds.context`. In case that creates issues set `cds.env.features.cds_tx_inheritance = false` to restore the former behaviour. You can still overwrite individual context settings, for example:\r\n    ```js\r\n    const tx = cds.tx() // inherits tenant and user\r\n    const tx = cds.tx({ // inherits tenant\r\n      user: new cds.User.Privileged\r\n    })\r\n    ```\r\n- Method `cds.tx()` now allows to pass a function which will be executed within a new managed transaction, with `tx.commit/rollback()` handled automatically. For example:\r\n    ```js\r\n    await cds.tx (tx => {\r\n      await tx.insert (...)\r\n      await tx.read (...)\r\n    })\r\n    ```\r\n    is equivalent to:\r\n    ```js\r\n    const tx = cds.tx ()\r\n    try {\r\n      await tx.insert (...)\r\n      await tx.read (...)\r\n      await tx.commit()\r\n    } catch {\r\n      await tx.rollback()\r\n    }\r\n    ```\r\n- Method `cds.tx({user})` now allows specifying a user as a plain string, for example:\r\n    ```js\r\n    cds.tx ({ user:'me' })\r\n    ```\r\n    is equivalent to:\r\n    ```js\r\n    cds.tx ({ user: new cds.User('me') })\r\n    ```\r\n- Newly introduced method `cds.spawn()` allows correctly and conveniently spawning background jobs from within event handlers. Thereby ensuring a detached fully-managed ACID transaction set as `cds.context` for each execution of the background job, inheriting the current event context from the outer `cds.context` by default. Usage options:\r\n    ```js\r\n    cds.spawn (async ()=>{\r\n      await INSERT.into ('Ticker') ...\r\n    })\r\n    ```\r\n    ```js\r\n    cds.spawn (async ()=>{\r\n      await INSERT.into ('Ticker') ...\r\n    },{ after: 111 /* ms */ })\r\n    ```\r\n    ```js\r\n    let n=0, handle = cds.spawn (async ()=>{\r\n      await INSERT.into ('Ticker') ...\r\n      if (++n>9) clearTimeout (handle)\r\n    },{ every: 111 /* ms */ })\r\n    ```\r\n    ```js\r\n    cds.spawn (async ()=>{\r\n      await INSERT.into ('Ticker') ...\r\n    },{ // inherits tenant\r\n      every: 111 /* ms */,\r\n      user: new cds.User.Privileged\r\n    })\r\n    ```\r\n- Default server is CORS-enabled for all origins if not in production\r\n- Default lock acquire timeout for `SELECT FOR UPDATE` via `cds.env.sql.lock_acquire_timeout`\r\n- Optimized search: Support `groupby` for localized data (when the environment variable `cds.env.features.optimized_search` is set to `true` on SAP HANA)\r\n- Out-of-the-box audit logging for deep structures without own association to data subject\r\n  + limited to one data subject per role per composition tree\r\n- Support for reading streams via `GET /<Entity>(<ID>)/$value`\r\n- Draft choreography: support of navigation with `SiblingEntity`\r\n- Support for where exists with infix filters in `@restrict`\r\n- Support annotation `@Capabilities.ExpandRestrictions.NonExpandableProperties`\r\n- `@Core.ContentID` added to OData error responses if `content-id` header is specified\r\n- New OData URL to CQN parser (`cds.env.features.odata_new_parser`):\r\n  + support of navigation to primitive properties using `$value`\r\n  + support of `not` operator with string functions (`contains`, `startswith`, `endswith`)\r\n- Support for default values for virtual fields\r\n- Payload for non-writable navigation targets removed from `req.data`\r\n- `cds build` supports i18n message bundles for Java and Nodejs apps and a default CSN format option for Java\r\n- View resolving considers renaming of foreign keys and `excluding` names when `columns` are explicitly provided in CQN\r\n- Resilient acquire for SAP HANA via `cds.env.requires.db.connection_attempts = <number>` (alpha; hard max of 3 enforced)\r\n\r\n### Changed\r\n\r\n- Messaging: Webhooks will always generate tokens\r\n- Messaging: In multitenancy mode, messaging artifacts are only deployed to subscribers (unless the service option `deployForProvider` is set to `true`)\r\n- Messaging: Incoming messages without corresponding handlers aren’t acknowledged\r\n- If a service executes a query targeting a projection on one of its entities, the query is resolved along with projections to an entity known by the executing service. The result is post-processed to reflect the expected result of the incoming query. The reason is that no handlers of the executing service were executed as they didn’t know the query target.\r\n  + Deactivate during two-month grace period via compat feature flag `cds.env.features.resolve_views = false`\r\n- Use `@sap/cds-compiler`'s `smartId` function to determine whether a reference needs to be quoted.\r\n  + Allows the use of non-word characters in column names, for example `entity Foo { ![bar/bz]: String; }`.\r\n  + Support for columns with spaces with feature flag `cds.env.features.spaced_columns`.\r\n  + Note: Restrictions in other layers (example: OData's simple identifier schema) still apply.\r\n  + Note: Expressions in references (example: `ref: ['foo as bar']`) currently works but were never intended to and will be removed in future versions.\r\n- Clear draft data based on their draft UUID instead of via deep delete\r\n- Support `@sap/cds-compiler`'s changes for DB constraints: managed and unmanaged compositions of one behave like associations. This means that only `$self`-managed composition of one gets `DELETE CASCADE` constraint. Since all other \"2one\" cases require extra `DELETE` handled by the runtime, that constraint is ignored.\r\n- Value with regards to date and time functions aren’t converted to strings in the OData protocol adapter\r\n- No placeholders for `LIMIT` to enable statement caching during pagination\r\n- Arrayed elements stringified in DB layer\r\n- Return values of handlers will have precedence over database reads\r\n- Error of a failed request to a Remote Service contains now the response payload if available\r\n- Configuring ad-hoc destinations via `credentials.url` is now allowed in `NODE_ENV=production`\r\n- New OData URL to CQN parser (`cds.env.features.odata_new_parser`):\r\n  + CQN for `$select` and `$expand` columns\r\n\r\n### Fixed\r\n\r\n- `SELECT.from (Foo, f => f.bar('*').where(...))` resulted in a runtime exception\r\n- Preserved locales are now considered when accessing database tables\r\n- Integrity checks for compositions by draft enabled entities\r\n- Constant columns must not be quoted anymore, i.e. `{ val: \"'myValue'\", as: \"myColumn\"}` must be changed to `{ val: \"myValue\", as: \"myColumn\" }`\r\n- Accidental `tx.run()` after prior `tx.commit/rollback()` lead to acquired connections not returned to pool. This is detected and disallowed now. In case that creates issues set `cds.env.features.cds_tx_protection = false` to restore the former behaviour.\r\n- Structured keys are correctly resolved with pegjs-based parser\r\n- Template processing for columns with spaces in their name\r\n- Deep delete with recursions in composition tree (with limited recursion depth)\r\n- Draft edit with recursions in composition tree (with limited recursion depth)\r\n- `emit` for messaging services now also works in custom express middlewares\r\n- `req.query` is a CQN object (previously array with one entry) in case of batch insert in REST adapter\r\n- HasActiveEntity flag with expand\r\n- `compile.to.serviceinfo` now honors default Java endpoint paths if none are configured in `application.yaml`\r\n- `PATCH` request to a non-existent entity annotated with the `@PersonalData` annotation\r\n- `req.diff()` while deep updating via composition\r\n- Convert data type of elements in sub-entities (to one association) when forwarding responses to external services\r\n- Update children of a composition of many (`INSERT > DELETE`) with `PATCH/PUT` having at the same time another association to one composition child respects foreign key constraints.\r\n- Handling of virtual fields used in the `$filter` query option of navigation requests\r\n- Copy texts in default language from active to draft table on draft edit\r\n- Optimized search: Escape double quotation marks and backslashes (when the environment variable `cds.env.features.optimized_search` is set to `true`)\r\n- Update for multiple rows\r\n- Expand during draft union\r\n- Validate content type for `$batch` requests\r\n- Support for `SELECT` statements in `where` clauses when resolving views\r\n- `INSERT.rows()` doesn’t silently fill in `INSERT.entries` anymore &rarr; use `INSERT.entries()` to do so instead.\r\n- `UPDATE(Foo).with({foo:{'=':'bar'})` erroneously produced:\r\n  ```js\r\n  {UPDATE:{..., with:{foo:{ref:['bar']}}}} //> wrong\r\n  ```\r\n  instead of:\r\n  ```js\r\n  {UPDATE:{..., data:{foo:'bar'}}} // correct\r\n  ```\r\n  &rarr; to produce the ref, use one of:\r\n  ```js\r\n  UPDATE(Foo).with ({foo:{ref:['bar']}})\r\n  UPDATE(Foo).with `foo=bar`\r\n  ```\r\n- `UPDATE.with` property stays undefined until actually filled with data\r\n- Differentiate between require and initialize error of audit logging client\r\n- The built-in model tree-shaking erroneously deleted explicitly modeled `.texts` entities\r\n- Actions and functions with `Integer` response type in REST services\r\n- Occasional drop of conditions in `WHERE` depending on the value when using structured types\r\n- `PATCH` fixed for singletons and when having a keyless, for example, managed to-one navigation path\r\n- Internal server error when forwarding a query to an external service whose target entity doesn’t contain keys\r\n- Nested where exists in `@restrict` via navigation (CRUD-only; beta)\r\n- Expand to one in draft union\r\n- Patch to auto exposed entity through composition of aspect from SAP Fiori Elements\r\n- Diff for delete in draft\r\n- Streaming requests on views with joins no longer crash the application\r\n\r\n### Removed\r\n\r\n- Direct usage of body-parser\r\n- Queries constructed from `cds.ql` do not have the _internal_ property `cqn` anymore\r\n- Inofficial variant `SELECT({'expand(foo)':['a','b']})` is not supported anymore\r\n  &rarr; use one of these official APIs for expands instead:\r\n  ```js\r\n  SELECT(x => { x.a, x.foo (f =>{ f.b, f.c }) })\r\n  SELECT(['a',{ref:['foo'], expand:['b','c']}])\r\n  ```\r\n- Inofficial variant `SELECT.orderBy('foo','desc')` is not supported anymore\r\n  &rarr; use one of these official APIs instead:\r\n  ```js\r\n  SELECT.from(Foo).orderBy({foo:'desc'})\r\n  SELECT.from(Foo).orderBy('foo desc')\r\n  ```\r\n- Inofficial variant `SELECT.orderBy('foo, bar desc')` is not supported anymore\r\n  &rarr; use one of these official APIs instead:\r\n  ```js\r\n  SELECT.from(Foo).orderBy({foo:1,bar:-1})\r\n  SELECT.from(Foo).orderBy('foo','bar desc')\r\n  SELECT.from(Foo).orderBy `foo, bar desc`\r\n  ```\r\n- Inofficial variant `SELECT.where({ or: [{ foo: 'bar' }, { foo: 'baz' }] })` is not supported anymore\r\n  &rarr; use one of these official APIs instead:\r\n  ```js\r\n  SELECT.from(Foo).where({ foo: 'bar', or: { foo: 'baz' } })\r\n  SELECT.from(Foo).where `foo='bar' or foo='baz'`\r\n  ```\r\n- Usage of SQL window functions during expand on SAP HANA\r\n- Hidden symbol for where clause elements originating from `@restrict`\r\n- Error masking gate keeper for `cds.env.log.levels.cli`\r\n\r\n## Version 5.4.6 - 2021-09-18\r\n\r\n### Added\r\n\r\n- Support for nested where exists in `@restrict` (CRUD-only; beta)\r\n\r\n### Fixed\r\n\r\n- Inverse transition mapping calculation\r\n- Skip empty structures during deep update\r\n\r\n## Version 5.4.5 - 2021-09-15\r\n\r\n### Fixed\r\n\r\n- Processing of null elements during deep update\r\n- Performance issue during template processing\r\n\r\n## Version 5.4.4 - 2021-09-09\r\n\r\n### Fixed\r\n\r\n- For drafts, the query parameter `$top=0` in combination with `$count=true` now returns the correct `@odata.count` value\r\n- Deep delete with composition of one with structured key in target\r\n- Implicit delete of child with structured key\r\n- Update of deeply nested entity with structured key\r\n- Order by join column during draft union\r\n- Skip calculated properties while following projections\r\n- The `with parameters` clause is now correctly handled in sub-selects if the locale parameter exceeds three characters\r\n- Statement already finalized error on SQLite\r\n\r\n## Version 5.4.3 - 2021-08-16\r\n\r\n### Fixed\r\n\r\n- Skip calculated properties while following projections\r\n- Unrestricted subclauses in `@restrict.where`\r\n- Safe access to `cds.env.log.levels.cli`\r\n\r\n## Version 5.4.2 - 2021-08-11\r\n\r\n### Fixed\r\n\r\n- Where condition in draft union in case of multiple keys\r\n- Handling of nulled properties in Service Consumption\r\n- Requests to Remote Services returning `text/html` result in an error\r\n- View resolving is more robust for path expressions\r\n- Skip foreign properties (e.g., mixins via associations) while following projections\r\n- UPDATE entity with composition to aspect with structure type property\r\n\r\n## Version 5.4.1 - 2021-08-03\r\n\r\n### Fixed\r\n\r\n- Erroneously added Brazilian Portuguese (`pt_BR`) removed from the list of normalized locales\r\n\r\n## Version 5.4.0 - 2021-08-02\r\n\r\n### Added\r\n\r\n- Messaging: Support for format `cloudevents`\r\n- Messaging: Support for `@topic`\r\n- Messaging: Support for `subscribePrefix` and `publishPrefix`\r\n- Support for `ReadByKeyRestrictions` annotations\r\n- Support for OData `omit-values` preference in `Prefer` HTTP header\r\n- Object variant of service methods\r\n- Brazilian Portuguese (`pt_BR`) is now on the list of [normalized locales](https://cap.cloud.sap/docs/guides/i18n#normalized-locales)\r\n- Support for actions and functions on Remote Service\r\n\r\n### Changed\r\n\r\n- In multitenant `enterprise-messaging`: If a tenant subscribes, the messaging artifact generation is awaited. In your provisioning service configuration, make sure to set `onSubscriptionAsync` to `true` and `callbackTimeoutMillis` to more than 10 minutes.\r\n- In `enterprise-messaging`: Messages are sent via HTTP\r\n- Computed values are preserved during draft activate\r\n- Messaging: No more topic manipulation per default\r\n- For consistency reasons `cds build` now determines the default model path using cds resolve\r\n- Match XSUAA's user attribute value `$UNRESTRICTED` case insensitive\r\n- CDS build now uses new CDS logging facade to allow for consistent logging behaviour across the different CDS modules\r\n\r\n### Fixed\r\n\r\n- Disable persistency check for requests without a target\r\n- Expand at draft edit\r\n- Remove restriction for `$search` queries not accepting brackets\r\n- Select query with infix filter in custom handler\r\n- Order by on same named properties of different associations in draft\r\n- Allow to call bound actions and functions of read-only entities\r\n- Writing draft-enabled entities with composition of aspects (a.k.a. managed compositions)\r\n- Expand to autoexposed association/composition in draft case\r\n- `cds.parse.xpr()` always returns an array\r\n- Allow boolean options in `cds build` CLI\r\n- Integrity check in case of bulk query execution\r\n\r\n### Removed\r\n\r\n- Messaging: The topic prefix `topic:` is deprecated\r\n- Messaging: No default headers for format not equal to `cloudevents`\r\n\r\n## Version 5.3.3 - 2021-07-28\r\n\r\n### Fixed\r\n\r\n- Validation of arrayed parameters of actions and functions\r\n- Skip not-to-be-audited entities in composition tree\r\n- In draft, `<entity>.texts` can be used without explicit exposure\r\n\r\n## Version 5.3.2 - 2021-07-16\r\n\r\n### Added\r\n\r\n- `enterprise-messaging`: Experimental support to send messages via HTTP (`emitPerHTTP: true`)\r\n\r\n### Changed\r\n\r\n- Aligned Node.js and Java auditlog APIs\r\n- `enterprise-messaging`: No topic manipulation for outbound events beginning with a different namespace\r\n\r\n### Fixed\r\n\r\n- Call `init()` and register custom handlers for every new `cds.ApplicationService` created in extensibility scenarios\r\n- Structured keys for deep operations in OData flavor `x4`\r\n- Wrong user in messaging requests coming from webhooks\r\n- Improvements in log formatter for Kibana:\r\n  + Remove redundant metadata information\r\n  + Add information from `req.headers`\r\n  + Treat error-like objects like errors\r\n  + Custom fields (alpha)\r\n- Minor fix for *optimized search* on SAP HANA\r\n\r\n## Version 5.3.1 - 2021-07-12\r\n\r\n### Changed\r\n\r\n- Task `@sap/cds-runtime/lib/messaging/deploy.js` moved to `@sap/cds/tasks/enterprise-messaging-deploy.js` after module merge\r\n- Parse OData lambda expression on collection of scalars with equals operator (i.e., `.../any(d:d = \"<val>\")`) to CQN with `contains` (pegjs-based parser only)\r\n\r\n### Fixed\r\n\r\n- Improved error message in case custom `server.js` doesn't export a function\r\n- Kibana formatter: `stacktrace` as array of strings\r\n- Bootstrapping for feature toggles\r\n- Deep operations for certain composition constellations\r\n- Aliasing on SQL layer for OData `ne` operator\r\n- Fixed scope issues in manual deployment for messaging\r\n- Projections with infix filters and cardinality changes are safely ignored during `CREATE`/`UPDATE`\r\n- Resolving of views if underlying projection has explicit aliases\r\n\r\n## Version 5.3.0 - 2021-07-07\r\n\r\n### Added\r\n\r\n- `cds serve` and `cds deploy` now also load `.ts` Typescript files if started with [`ts-node`](https://www.npmjs.com/package/ts-node)\r\n- Log formatter for Kibana (beta) via `cds.env.features.kibana_formatter`\r\n- First version of the `AuditLogService` (beta)\r\n  + Supported events: `dataAccessLog`, `dataModificationLog`, `configChangeLog`, and `securityLog`\r\n  + Usage: `const AuditLogService = await cds.connect.to('audit-log'); await AuditLogService.emit/send('<event>', <data>)`\r\n  + Out-of-the-box audit logging for modification of personal data and access to sensitive personal data via `cds.env.features.audit_personal_data`\r\n- Support for deep updates with compositions of one in `UPDATE(...).with(...)`\r\n- Support for logical events in `composite-messaging`\r\n- Initial support for generating OData V2 queries\r\n- Preserve `DraftAdministrativeData_DraftUUID` if OData v2 client (indicated by `@sap/cds-odata-v2-adapter-proxy`)\r\n- Use placeholder values for numbers with `cds.env.features.parameterized_numbers` (alpha)\r\n- Support for argument-less SQL functions (e.g., `current_date`)\r\n- Performance optimization: Resolve localized texts for `$search` queries at runtime (alternative to localized views resolution) to avoid the performance overhead of the SQL `coalesce` function in filter operations. To enable this *experimental feature* for SAP HANA, you can set the `cds.env.features.optimized_search` environment variable to `true`\r\n- Performance optimization: Optimize `$search` queries using the `CONTAINS` predicate instead of the `LIKE` predicate in the `WHERE` clause of a `SELECT` statement. To enable this *experimental feature* for SAP HANA, you can set the `cds.env.features.optimized_search` environment variable to `true`\r\n- OData lambda expressions in `$filter`:\r\n  + Basic support of structured types (`cds.env.odata.flavor = x4`) on SAP HANA\r\n  + Support of navigation paths on SAP HANA, for example, `GET /Books?$filter=author/books/all(d:d/stock gt 10)`\r\n\r\n### Changed\r\n\r\n- Custom build tasks are no longer restricted to `@SAP` namespace.\r\n- CDS build tasks of type `fiori` are no longer copying files located in the UI module folder into the deployment staging folder.\r\n- Leaner error messages for unsuccessful remote service calls\r\n- Incoming messages now contain a privileged user\r\n- `SELECT.where(...)` generates CQN with list of values for `in` operator\r\n- Always use flag `u` during input validation via `@assert.format`\r\n- Intermediate CQN format for lambda expressions with preceding navigation path\r\n- Better error messages for draft enabled entities\r\n\r\n### Fixed\r\n\r\n- Projecting data works also for projections where one field maps to multiple entries\r\n- `SELECT` queries without user-specified columns only modify draft columns if the entity is draft-enabled.\r\n- Generated `index.html` erroneously showed entries for `contained` entities from managed compositions.\r\n- Use OData simple identifier format for links to entity sets in generated `index.html`.\r\n- `cds build` logged duplicate compilation errors for the identical `.cds` file, but with different relative path names.\r\n- `cds serve` no longer tries to redirect Fiori URLs starting with `$` to service URLs.\r\n- `cds build` now supports `HANA Table data properties files` in SaaS applications. These files haven’t been copied into the sidecar folder.\r\n- `cds deploy --dry` generates DROP/CREATE DDL statements with an order that also H2 can handle, i.e. with dependant views dropped before basic views.\r\n- `cds build` now correctly handles symbolic links for nodejs projects on Windows.\r\n- `cds build` now correctly filters CDS source files when building SaaS applications.\r\n- Deploy endpoint for messaging artifacts includes the needed roles\r\n- Detection of mocked services and forced resolving of views\r\n- `POST/PATCH/PUT` requests on `Composition of many` with association as key and custom `on` conditions\r\n- `$expand` on entities with `.` in name\r\n- Filter on external service when using `ne null`\r\n- Primitive property access of Singletons defined without keys via URL like `/Singleton/name`\r\n- Expand and navigation in draft-enabled entity with composition of aspects\r\n- `@Core.ContentDisposition.Filename` instead of `@Core.ContentDisposition`\r\n- Select query with `$count` with combination with `$search`\r\n- Parsing of `Timestamp`, `DateTime` and `Date` values in OData request when using beta URL to CQN parser (`cds.env.features.odata_new_parser`)\r\n- Reset temporal session contexts\r\n- Caching of runtime aspects\r\n- Handling of foreign keys as well as an input validation when using nested associations as keys\r\n- Transaction handling in case of multiple changesets\r\n- Hana procedure call with output parameter\r\n- Skip foreign key propagation if target is annotated with `@cds.persistence.skip`\r\n- Values misidentified as operators in `$search`\r\n- Ensure UTC valus are written to DB\r\n- Etag handling in case of action with `$select`\r\n- Fix draft related issues in odata2cqn\r\n- Where clause in `@restrict` gets duplicated if `$search` query option is used\r\n\r\n## Version 5.2.0 - 2021-05-31\r\n\r\n### Fixed\r\n\r\n- Virtual fields are not filtered out before application service handlers\r\n- Clarification: the minimum required Node.js version is 12.18.  Versions < 12.18 might not work.\r\n- `cds build` supports validation of `extension-allowlist` which is replacing `entity-whitelist` or `service-whitelist` with cds-mtx 2.0. Warnings are no longer returned if neither entity-whitelist nor  service-whitelist is defined.\r\n- `cds compile -2 sql/edmx` erroneously wrote excessive compiler output to stderr\r\n- Resolve the correct `enterprise-messaging-shared` credentials from VCAP_SERVICES by default\r\n- `cds compile --to sql` now completes the last SQL statement with a proper semicolon\r\n\r\n## Version 5.1.5 - 2021-05-21\r\n\r\n### Added\r\n\r\n- `cds build` adds `engines.node` version to `package.json` if not present, in order to match the minimum required node version of CDS.\r\n- Generate an invocation context identifier (`cds.context.id`) if none can be derived\r\n\r\n### Changed\r\n\r\n- Better support for UI tools to get metadata for projects with both a Node.js and Java server\r\n\r\n### Fixed\r\n\r\n- Match locales in all upper-case (for example `ZH-CN` instead of `zh-CN`)\r\n- Key elements got lost in `cds.linked` when using type refs referring to other key elements\r\n- Tree shaking erroneously removed types `Foo` when only referred to by type refs like `bar : Foo:bar`\r\n- Fixed an error in transaction handling, that lead to db connections not released in rare cases\r\n- SQL names option gets properly propagated\r\n- No longer erroneously exclude entities explicitly marked with `cds.persistence:{table, skip:false}`, as in [cap/samples/suppliers](https://github.com/SAP-samples/cloud-cap-samples/blob/6b08826af51651f6b31fce8454fbadd23c634b85/suppliers/srv/mashup.cds#L46)\r\n\r\n## Version 5.1.4 - 2021-05-12\r\n\r\n### Fixed\r\n\r\n- Error when using complex type references, as in:\r\n```swift\r\nentity Foo { bar: Tic:tac.toe; }\r\nentity Tic { tac: Composition of { toe:String } }\r\n```\r\n\r\n## Version 5.1.3 - 2021-05-12\r\n\r\n### Fixed\r\n\r\n- `cds` does not check for the min. Node.js on BAS, for now\r\n\r\n## Version 5.1.2 - 2021-05-12\r\n\r\n### Fixed\r\n\r\n- `cds compile --for odata` now honors the OData version again\r\n- `cds compile --for odata` now honors the SQL naming mode (`sql.names`) again\r\n- `cds serve` does not run in an infinite bootstrap loop if `cds.server()` is called in `server.js`\r\n\r\n## Version 5.1.1 - 2021-05-07\r\n\r\n### Fixed\r\n\r\n- `cds build` is now always adding `.hdbview, .hdbtable, .hdbconstraint or .hdbindex` plugin mappings to `.hdiconfig` to avoid that deployment is failing in case such files exist in an already deployed container, but are no longer generated.\r\n- `cds compile --dest <dir>` no longer crashes creating the destination folder\r\n\r\n## Version 5.1.0 - 2021-05-05\r\n\r\n### Added\r\n\r\n- Custom error handler via `srv.on('error', function (err, req) { ... })` (beta)\r\n  + Synchronous modification of passed error only\r\n- `cds.log.format()` for custom log formatting\r\n\r\n### Fixed\r\n\r\n- `cds build` now correctly handles `message.properties` files used for Nodejs runtime messages if these files have been defined in an i18n content folder located at project root.\r\n- Nodejs custom handlers are now correctly resolved if a dedicated destination folder has been configured for the build task.\r\n- Now, the `.csv` file reader correctly closes open file descriptors to avoid memory leaks during `cds build`.\r\n\r\n### Changed\r\n\r\n- Clean up obsolete compiler option `snapi`.\r\n- `cds build` is no longer validating Nodejs custom service handlers that have been registered using service `@impl` annotation.\r\n\r\n## Version 4.6.6 - 2021-05-05\r\n\r\n### Fixed\r\n\r\n- Now, the `.csv` file reader correctly closes open file descriptors to avoid memory leaks during `cds build`.\r\n- Fixed i18n handling causing `cds build` to fail with error message `bundle is not iterable`.\r\n- Nodejs custom handlers are now correctly resolved if a dedicated destination folder has been configured for the build task.\r\n\r\n## Version 5.0.7 - 2021-04-21\r\n\r\n### Fixed\r\n\r\n- Internal test stabilizations\r\n\r\n## Version 5.0.6 - 2021-04-16\r\n\r\n### Fixed\r\n\r\n- `cds build` no longer fails with `TypeError: x.startsWith is not a function` in some situations\r\n\r\n## Version 5.0.5 - 2021-04-15\r\n\r\n### Changed\r\n\r\n- Internal errors are no longer decorated with `Please report this`.  People interpreted the text as to only include the stack trace in error reports and to omit other valuable context information.\r\n\r\n### Fixed\r\n\r\n- `cds build` now correctly creates the deployment layout for multitenant applications (sdc folder contents) that have dedicated folder paths configured for db, srv, and app modules.\r\n- `cds deploy --to sqlite` now ignores a `_texts.csv` file again if there is a language-specific file like `_texts_en.csv` present\r\n- `cds env` no longer fails to parse `.env` files with JSON values containing `=` characters\r\n\r\n## Version 5.0.4 - 2021-04-07\r\n\r\n### Fixed\r\n\r\n- `cds build` no longer fails with a `task.apply is not a function` error when used in an npm script.\r\n\r\n## Version 5.0.3 - 2021-04-06\r\n\r\n### Fixed\r\n\r\n- `cds.compile` got thoroughly cleaned up and enhanced as the single API to compile models\r\n- `cds.compile.to.cdl` was missing in 5.0.2\r\n- `cds build` no longer uses reflected CSN which caused odata and EDMX transformation to fail.\r\n  As a consequence language specific EDMX files were missing.\r\n\r\n### Removed\r\n\r\nThe following undocumented, internal functions have been removed.\r\nIn case you spotted and used them, please replace as given below.\r\n\r\n- `cds.compile.cdl` &rarr; use `cds.compile` instead\r\n- `cds.compile.to.parsed.csn` &rarr; use `cds.parse` instead\r\n- `cds.compile.to.xtended.csn` &rarr; use `cds.compile` instead\r\n- `cds.compile.to.inferred.csn` &rarr; use `cds.compile` instead\r\n- `cds.compile.to.hdi` &rarr; use `cds.compile.to.hdbtable` instead\r\n- `cds.compile.to.hana` &rarr; use `cds.compile.to.hdbcds` instead\r\n- `cds.compile.to.xsuaa` &rarr; still available in CLI thru `cds compile -2 xsuaa`\r\n- `cds.compile.to.serviceinfo` &rarr; still available in CLI thru `cds compile -2 serviceinfo`\r\n- `cds.compile.to['edmx-v2']` &rarr; still available in CLI thru `cds compile -2 edmx-v2`\r\n- `cds.compile.to['edmx-v4']` &rarr; still available in CLI thru `cds compile -2 edmx-v4`\r\n- `cds.compile.to['edmx-w4']` &rarr; still available in CLI thru `cds compile -2 edmx-w4`\r\n- `cds.compile.to['edmx-x4']` &rarr; still available in CLI thru `cds compile -2 edmx-x4`\r\n\r\n\r\n## Version 5.0.2 - 2021-03-30\r\n\r\n### Added\r\n\r\n- Ensure correlation id and set intermediate `cds.context` in default `server.js`\r\n\r\n### Fixed\r\n\r\n- `cds build` no longer aborts for CAP Java SDK based projects with `compiler version 2 not supported` message.\r\n\r\n## Version 5.0.1 - 2021-03-25\r\n\r\n### Added\r\n\r\n- `cds.load.properties` and `cds.parse.properties` to load and parse content in .properties format\r\n- `cds.load.csv` and `cds.parse.csv` to load and parse csv content\r\n- `CDL`, `CQL`, and `CXL` as new global methods for tagged template strings generating [CSN], [CQN], or [CXN] objects\r\n- Fluent API classes provided through `cds.ql` also support tagged template strings now in these methods: `SELECT`, `SELECT.from`, `SELECT.where`, `UPDATE`, `UPDATE.with`, `UPDATE.where`, `INSERT.into`, `DELETE.from`, `DELETE.where`\r\n\r\nExample:\r\n```js\r\nlet Authors = SELECT `ID` .from `Authors` .where `name like ${'%Brontë%'}`\r\nlet Books = SELECT `ID,title` .from `Books` .where `author_ID in ${Authors}`\r\nawait UPDATE`Books`.with`x = x-${amount}`.where`ID=${ID}`\r\n```\r\n\r\n### Changed\r\n\r\n- Minimum required Node.js version is now 12.  Support for Node.js 10 is dropped.\r\n- `req.timestamp` is a Date object now; was a UNIX epoch integer before, i.e., Date.now()\r\n\r\n### Fixed\r\n\r\n- Fixed race conditions in `cds.serve` leading to broken services\r\n- Fixed typos in API type definitions\r\n- Fixed `cds.reflect.forall` for CSN extensions\r\n- Fixed orphaned `_texts` proxies, causing init from csv to fail with \"no such table\" errors\r\n\r\n## Version 5.0.0 - 2021-03-19\r\n\r\n### Added\r\n\r\n- MTX APIs are now automatically served when `cds.requires.multitenancy` exists. This renders an application-level server start script for multitenancy unnecessary.\r\n- Auto-connect to a live reload server started by `cds watch`\r\n- `cds.parse` now offers tagged template strings. E.g. const {CDL,CQL,CXL} = cds.parse; CQL`SELECT from Books where stock > 111`.\r\n- `cds.log` now supports config options for Loggers and log levels via `cds.env.log`\r\n- `cds.entity.draft` as a stable way to read from draft data\r\n- `cds.linked` now correctly links, events, action params and results, which were not linked before\r\n- `cds.env.features.skip_unused = 'all'` removes all definitions from csn which are not reachable by defined services. Especially when using comprehensive reuse models, like ODM, this significantly reduces both, memory consumption as well as excess tables and views in databases\r\n\r\n### Changed\r\n\r\n- Upgraded major version of dependency `@sap/cds-compiler`\r\n- `cds.requires.db.multiTenant` is deprecated. Multitenancy can now be enabled by adding a `cds.requires.multitenancy` configuration.\r\n- `cds deploy --to hana` no longer adds a driver for SAP HANA to `package.json`.  This can be done with `cds add hana`.\r\n- `cds deploy --to hana` no longer adds configuration for SAP HANA to `package.json`.  This can be done with `cds add hana`.\r\n- `cds deploy --to hana` drops support for the classic CAP Java runtime, i.e. longer writes credentials for SAP HANA to `connection.properties`.\r\n- Fiori preview now [loads and shows data initially](https://sapui5.hana.ondemand.com/1.84.0/#/topic/1cf5c7f5b81c4cb3ba98fd14314d4504) in its list page\r\n- I18n template strings now are replaced in EDMX documents such that they retain their surrounding string.  For example, the `\"{i18n>key1} - {i18n>key2}\"` template results in `\"value1 - value2\"`, while previously the first match replaced the entire string, leading to `\"value1\"`.  This is helpful for the [`Template` strings of `UI.ConnectedFields`](https://github.com/SAP/odata-vocabularies/blob/ac9fe832df9b8c8d35517c637dba7c0ac2753b0f/vocabularies/UI.xml#L168).\r\n- CDS drops compiler v2 support for classic CAP Java runtime projects. `cds build` returns an error if compiler version 2 is used. For further details regarding migration to CAP Java SDK runtime see https://cap.cloud.sap/docs/java/migration.\r\n\r\n### Fixed\r\n\r\n- `cds.connect.to` no longer returns `undefined` in concurrent cases where `connect` is called again while a datasource is about to be connected.\r\n- `cds.log` formerly wrote log and debug output to stderr, now writes that to stdout\r\n- `cds.server` now accepts port `0` as a number\r\n- Race conditions in `cds.serve` and `cds.connect` lead to wrong Service instances to lost handler registrations\r\n\r\n### Removed\r\n\r\n- Compiler non-snapi support &rarr; see `cds.env.features.snapi` option\r\n- In recent releases we added methods `cds.compile.to.hdbtabledata` and `cds.compile.to.hdbmigration`, intentionally undocumented, as they were meant to be private. Nobody should ever have used these methods, hence nobody should be affected by their removal.\r\n\r\n## Version 4.6.5 - 2021-03-12\r\n\r\n### Fixed\r\n\r\n- `cds build` now correctly parses `.hdbtablemigration` files on Windows\r\n- `compile --to serviceinfo` no longer crashes for Spring configuration in multi-root `yaml` files\r\n\r\n## Version 4.6.4 - 2021-03-01\r\n\r\n### Fixed\r\n\r\n- Fix call to `to.hdi.migration` compiler API\r\n- `cds build` for SAP HANA now correctly passes `sql_mapping` options to new hdimigration compiler API.\r\n\r\n## Version 4.6.3 - 2021-02-26\r\n\r\n### Added\r\n\r\n- [beta] `cds build` for SAP HANA now provides schema evolution support for multitenant application extensions.\r\n\r\n### Fixed\r\n\r\n- `cds compile --to serviceinfo` returns better results for Java projects\r\n- `cds.connect.to('srv-missing')` called twice with `srv-missing` not configured, would have failed with an error on the first call, but got stuck in the Promise chain for all subsequent calls.\r\n- `.after` handlers are called with result based on request, e.g., array for collection and object for entity, instead of always array\r\n  - Deactivate during two month grace period via compat feature flag `cds.env.features.arrayed_after = true`\r\n\r\n## Version 4.6.1 - 2021-02-11\r\n\r\n### Added\r\n\r\n- [beta] `cds build` for SAP HANA now supports the generation of `hdbmigrationtable` design-time artifacts for big volume tables allowing for schema evolution capabilities. Model entities annotated with `@cds.persistence.journal` will be deployed as `hdbmigrationtable` artifacts instead of `hdbtable`.\r\n\r\n## Version 4.5.3 - 2021-02-19\r\n\r\n### Fixed\r\n\r\n- `cds deploy` and `build` now refer to the latest HDI deployer which supports Node.js 14\r\n\r\n## Version 4.5.2 - 2021-02-17\r\n\r\n### Fixed\r\n\r\n- `cds serve --with-mocks` now also works in `production` environment if `cds.features.mocked_bindings` is true.  Previously, mocks were always disabled in `production`.\r\n- `cds serve` now only fires the `listening` event once\r\n- `cds build` redacts cds configuration data in log messages\r\n\r\n## Version 4.5.1 - 2021-02-01\r\n\r\n### Fixed\r\n\r\n- Update `@sap/cds-runtime` dependency\r\n\r\n## Version 4.5.0 - 2021-02-01\r\n\r\n### Added\r\n\r\n- `cds.server` provides an option to switch off automatically generated `index.html` served at `/`:\r\n  Do that in a custom `server.js`:\r\n  ```js\r\n  const cds = require('@sap/cds')\r\n  // ...\r\n  module.exports = (o) => cds.server({ ...o, index:false })\r\n  ```\r\n- The default `index.html` now honors the system's setting for dark mode.\r\n- Former package `@sap/cds-reflect` is now embedded in `@sap/cds`\r\n\r\n### Changed\r\n\r\n- Fiori preview is now disabled if `NODE_ENV` is `production`, to avoid any runtime overhead there.  You can enable it with configuration `cds.features.fiori_preview: true`.\r\n\r\n### Fixed\r\n\r\n- `cds build` now correctly supports multitenant applications defining multiple database modules, e.g. one database for tenant related data and one for shared data.\r\n- `cds deploy --to hana` does no longer fail with an invalid service name error if '.' is used in the MTA ID.\r\n\r\n## Version 4.4.10 - 2021-01-18\r\n\r\n### Changed\r\n\r\n- `cds build` for SAP HANA now only filters csv files if it's needed, e.g. if they contain comment lines.\r\n\r\n## Version 4.4.9 - 2021-01-12\r\n\r\n### Fixed\r\n- `cds build` for SAP HANA no longer fails sporadically with `ENOENT` when writing CSV files.\r\n\r\n\r\n## Version 4.4.8 - 2021-01-07\r\n\r\n### Fixed\r\n\r\n- Add missing setter for `user.locale`\r\n\r\n## Version 4.4.7 - 2020-12-18\r\n\r\n### Fixed\r\n\r\n- `cds build` for Java now also creates a default edmx file (the one w/o language suffix) if the `cds.i18n.languages` array is configured with a set of languages.  Runtime systems expect this file.\r\n- `cds build` now skips empty lines in CSV files when preparing SAP HANA deployment.  This doesn’t happens if the build target folder is `.`, because there CSV files are sources that are not touched.\r\n- `cds build` for SAP HANA now writes CSV files more reliably, avoiding sporadic `ENOENT` errors.\r\n\r\n## Version 4.4.6 - 2020-12-08\r\n\r\n### Fixed\r\n\r\n- Compat `.emit()` for synchronous events with object as first parameter\r\n\r\n## Version 4.4.5 - 2020-12-07\r\n\r\n### Fixed\r\n\r\n- Revert of _cds serve --at / now can overwrite the default /index.html route_, which caused problems in some applications\r\n\r\n## Version 4.4.4 - 2020-12-04\r\n\r\n### Added\r\n\r\n- `cds.User.default` allows to override the default user, e.g. to be `cds.User.Privileged` in tests. By default this is `cds.User.Anonymous`.\r\n\r\n### Changed\r\n\r\n- `cds compile` and `build` now do a faster localization of edmx files.  If there are no text keys inside these files, the content is no longer duplicated in memory.\r\n- `cds serve --at /` now can overwrite the default `/index.html` route\r\n\r\n\r\n## Version 4.4.3 - 2020-12-03\r\n\r\n### Fixed\r\n\r\n- `srv.on` can now be used for async events w/o having to call `next` in each handler\r\n- `srv.emit` constructs instances of `cds.Event` from given arguments, as intended\r\n- `srv.send` constructs instances of `cds.Request` from given arguments\r\n- Revert of: `cds build` filters `i18n` files for nodejs staging builds\r\n\r\n## Version 4.4.2 - 2020-12-01\r\n\r\n### Added\r\n\r\n- `cds.context` always allows access to the current request context when running in Node v12.18 and higher. It uses Node.js' `async_hooks` API for so-called continuation-local storage, and supercedes the need for `srv.tx(req)` in custom handlers.\r\n- Custom functions/actions can now be implemented with plain JavaScript methods in subclasses of `cds.Service`\r\n\r\n### Changed\r\n\r\n- `cds.unfold` was long-term deprecated, and removed now &rarr; use `cds.compile`\r\n- `cds.config` was long-term deprecated, and removed now &rarr; use `cds.env`\r\n- `cds.session` was long-term deprecated, and removed now &rarr; use `cds.db`\r\n\r\n## Version 4.4.1 - 2020-11-27\r\n\r\n### Fixed\r\n\r\n- When two services `Foo` and `FooBar` were defined, with one services's name being a substring of the other service's name,\r\n  it may have happened that the same EDMX, i.e. that of `FooBar`, was erroneously returned for both.\r\n- On Windows, the index page now shows normalized links to embedded html pages, i.e. `foo/bar.html` instead of `foo\\bar.html`.\r\n- `cds build` now consistently uses build target folder `'.'` as default for Java projects - also if custom build tasks have been defined.\r\n- Requests that contain `*` as `Accept-Language` header value do no longer fail.\r\n\r\n## Version 4.4.0 - 2020-11-18\r\n\r\n### Changed\r\n\r\n- Propagate correlation id header to subrequests\r\n\r\n### Fixed\r\n\r\n- `cds.debug` now reacts on the `DEBUG` environment variable set in a `.env` file\r\n- `cds build` filters `i18n` files for nodejs staging builds\r\n- Language headers with values `en-US-x-[saptrc, sappsd]` are now mapped to user locale `en-US-[saptrc, sappsd]`.\r\n- Messages are kept in their respective request (i.e., not propagated to the request's context, if exists)\r\n- Log requests in atomicity groups\r\n- `cds build` now creates correct custom handler path for nodejs projects in WebIDE fullstack.\r\n\r\n## Version 4.3.2 - 2020-12-18\r\n\r\n### Fixed\r\n\r\n- use `@sap/cds-runtime~2.6`\r\n\r\n## Version 4.3.1 - 2020-11-20\r\n\r\n### Fixed\r\n\r\n- `cds build` now creates correct custom handler path for nodejs projects in WebIDE fullstack.\r\n\r\n## Version 4.3.0 - 2020-11-03\r\n\r\n### Added\r\n\r\n- Helper function `cds.utils.uuid` to generate a UUID\r\n- Support `SELECT[...].limit(0, ...)`\r\n- `hdbtabledata` generation can be disabled using `cds build` task option `skipHdbtabledataGeneration`.\r\n\r\n### Changed\r\n\r\n- Optimized `cds build` performance when creating OData EDMX output.\r\n\r\n### Fixed\r\n\r\n- `cds build` now classifies the severity of compile messages the same way as the low-level compiler. As a consequence, messages with severity _warning_ might now be classified as _error_.\r\n- Now, cds CLI logs errors based on _log-level_ setting.\r\n- `cds compile --to sql` no longer creates SQLite-specific views if in `hana` SQL dialect\r\n- The `node-cf` build task of `cds build` now also filters `./` file dependencies from package.json in the build output.\r\n\r\n\r\n# Version 4.2.8 - 2020-10-27\r\n\r\n### Fixed\r\n\r\n- `cds compile --to edmx --dest` creates files with `.xml` ending again.\r\n\r\n\r\n# Version 4.2.7 - 2020-10-26\r\n\r\n### Fixed\r\n\r\n- SAP Fiori Elements preview finds the `express` package again in the case where no `express` is installed in the application's `node_modules`.\r\n\r\n\r\n# Version 4.2.6 - 2020-10-26\r\n\r\n### Fixed\r\n\r\n- `cds run` finds the `express` package again in the case where no `express` is installed in the application's `node_modules`.\r\n\r\n\r\n# Version 4.2.5 - 2020-10-23\r\n\r\n### Fixed\r\n\r\n- `cds compile --to edmx-v2` and `edmx-v4` now again write to the folder given with `--dest`.\r\n\r\n\r\n# Version 4.2.4 - 2020-10-16\r\n\r\n### Fixed\r\n\r\n- `cds compile --to edmx-v2/4` no longer crashes\r\n- `cds watch` no longer shows an error in absence of model files\r\n- `cds build` no longer fails with an error about module './old/compile'\r\n- Stack trace of some errors have been improved\r\n- The `.hdiconfig` file created by `cds build` now includes SAP HANA artifact types from undeploy.json\r\n\r\n# Version 4.2.3 - 2020-10-12\r\n\r\n### Fixed\r\n\r\n- Leading `#` comments in CSV files sporadically caused `cds build` to fail on Windows with error `EPERM: operation not permitted`.\r\n- Method `req.user.is()` returns boolean\r\n\r\n# Version 4.2.2 - 2020-10-07\r\n\r\n## Added\r\n\r\n- `cds.env.odata.containment` to use OData v4 Containment NavigationProperties feature\r\n- `cds.env.odata.structs` to preserve struct elements as ComplexTypes in OData EDMX instead of flattening\r\n- `cds.env.odata.refs` which uses NavigationProperties in OData EDMX instead of adding foreign keys\r\n- `cds.env.odata.proxies` to add proxy EntityTypes for external Association targets\r\n- `cds.env.odata.flavors` which contain presets for the afore-mentioned flags\r\n- `cds.env.odata.flavor` to choose from the afore-mentioned presets\r\n- `cds.load` option `plain` replacing former option `clean` (which still is silently supported for compatibility).\r\n- `cds.get` now supports option `flavor` with values: `files` | `sources` | `parsed` | `resolved` | `compiled`.\r\n- `sap.common.Currencies`, `Countries`, and `Languages` now have their `code` element annotated with `@Common.Text` pointing to the `name`.  In SAP Fiori's value list with fixed values, this will show the `name` rather than the code itself.  As before, this only has an effect if `@Common.TextArrangement` is set to `#TextOnly` on the entity the code list is used as `ValueList` for.\r\n\r\n## Changed\r\n\r\n- Replaced `cds.PrivilegedUser` with `cds.User.Privileged`\r\n- `cuid` in `@sap/cds/common` is now defined as an `aspect` to align it with the other definitions.  The previous definition as `abstract entity` is equivalent and was only needed for historic reasons.\r\n- `cds deploy --to sqlite` now skips columns from csv files if the header value is empty.  This allows for ad-hoc 'disabling' of columns.  For SAP HANA, the generated `hdbtabledata` files now also skip empty columns, restoring the behavior from cds 3.\r\n- `cds deploy --to sqlite` has aligned its escaping rules for parsing csv data with SAP HANA's `hdbtabledata`.  A `\"` character can be escaped by another `\"` as before, but only if contained in a quoted string, i.e. `\"A\"\"B\"` leads to `A\"B`, while `A\"\"B` stays `A\"\"B`, and `\"\"` results in an empty string.\r\n\r\n## Fixed\r\n\r\n- A `manifest.yml` file is now also generated for nodejs applications if a sqlite database is used.\r\n- `cds build` did not correctly validate custom service handler implementations, warnings have been logged by mistake.\r\n- The default memory size for nodejs applications has been increased in `manifest.yml` to avoid out-of-memory issues for cloud native deployments.\r\n- `cds build` is now correctly creating external CSN output for Java multi-tenant applications.\r\n\r\n# Version 4.1.10 - 2020-09-11\r\n\r\n## Added\r\n\r\n- Much like SQLite deployment, `cds deploy --to hana` and `cds build` can now cope with leading `#` comments in csv files, i.e. the comments get removed before deployment.\r\n- `cds deploy` now can handle empty strings in CSV values (use `\"\"`)\r\n\r\n## Fixed\r\n- `cds v` and `cds --version` now work again when called from `npm run` or `npx`.\r\n\r\n\r\n# Version 4.1.9 - 2020-09-02\r\n\r\n## Added\r\n\r\n- `cds.PrivilegedUser`, e.g., for transactions with super user\r\n\r\n# Version 4.1.8 - 2020-09-02\r\n\r\n## Changed\r\n\r\n- The `node-cf` build task of `cds build` now removes file dependencies in `package.json` in the build output.  These are anyways not resolvable on CF, but are handy at build time to [refer to other CDS modules](https://github.com/SAP-samples/cloud-cap-samples/blob/6fdd91b8c810d4367aa6dfc0a91e06dc467686ed/bookshop/package.json#L6).\r\n- `cds deploy --to sqlite` can now cope with leading `#` comments in csv files\r\n- `cds version --all` now includes `@sap/cds-sidecar-client`\r\n\r\n## Fixed\r\n\r\n- `cds.entities` w/o namespace parameter now works properly when running out of a compiled model (aka `csn.json` aka 'on Cloud Foundry').\r\n- `cds deploy --to hana` now also handles SAP HANA Cloud services on trial, which are created by the `hana` broker (in contrast to the `hanatrial` broker which still provisions older SAP HANA instances).\r\n- `cds deploy --to hana` no longer uses `cf marketplace`, which has changed its parameters in CF CLI v7.\r\n- SAP Fiori Elements preview's html no longer provokes Javascript errors in the SAP Fiori client.\r\n- For DB services of kind `sql` the service implementation is now set correctly in the cds configuration.  Previously, `sql` services got a `sqlite` implementation even if they were set to `hana` in production.\r\n- Custom event handlers that do not register with a path (only with event and function) no longer crash the runtime\r\n- In Typescript typings, the API declaration for `cds.load` and the `bootstrap` event is now fixed.\r\n\r\n# Version 4.1.7 - 2020-08-17\r\n\r\n## Added\r\n\r\n- Shortcut to class `cds.ApplicationService` in cds facade\r\n- Shortcut to class `cds.DatabaseService` in cds facade\r\n- Shortcut to class `cds.RemoteService` in cds facade\r\n- Shortcut to class `cds.MessagingService` in cds facade\r\n- Shortcut to class `cds.Event` as new base class of `cds.Request`\r\n\r\n## Fixed\r\n\r\n- Race condition on two parallel `cds.connect` to same service\r\n- **`cds deploy --no-save`** extends the list of files it does not modify to `package.json`, `default-env.json` and `connection.properties`\r\n- **Add meaningful error message if hdi-deploy cannot be loaded** &mdash; during `cds deploy --to hana`.\r\n\r\n# Version 4.1.6 - 2020-08-07\r\n\r\n## Added\r\n\r\n- `req.notify()` as a new varient besides `req.info()`, which should display as toaster notifications on Fiori elements or other UIs.\r\n\r\n## Fixed\r\n\r\n- `req.target` for unbound actions/functions is now `undefined` again, as documented\r\n- Handlers registered with `srv.on(<CRUD>, 'Some/path', ...)` were never invoked\r\n- Queries to remote services via `srv.on(..., ()=> other.read('Something'))` weren't sent to remote\r\n\r\n# Version 4.1.5 - 2020-07-31\r\n\r\n## Removed\r\n\r\nThe following changes affect undocumented internal implementations, and hence should not affect CAP-based projects.\r\nNevertheless, they are listed here for your reference.\r\n\r\n- `db.disconnect()` &rarr; no replacement; no need to disconnect before shutdown.\r\n- `db.run(()=>{})` &rarr; use `cds.run([...multiple queries])` instead.\r\n\r\n\r\n## Changed\r\n\r\n- **Most CLI commands have moved** to `@sap/cds-dk`.  Make sure to install the latest version with `npm i -g @sap/cds-dk`.\r\n\r\n- **Default OData version** in `cds configuration` is now `v4`. For `Node.js` projects and `Java` projects using new stack the cds configuration of `odata.version = 'v4'` is no longer required. For `Java` projects using old Java stack, OData v2 will still be used.\r\n\r\n- **Always do `await cds.connect.to()`** &mdash; in former versions `cds.connect.to()` returned some magic thenables, meant to ease the [_Promise Hell_](https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513); now it always returns plain-standard Promises. Likely you never used this undocumented former behaviour, but in case: Just ensure to always call `cds.connect` with `await`.\r\n\r\n- **Deprecated `cds.connect()`** &mdash; please prefer `cds.connect.to('db')` instead, which has the very same effect but is more in line with the notion of potentially working with multiple database services.\r\n\r\n- **Deprecated `cds.hana.syntax` configuration**.  Use `cds.hana.deploy-format`=`hdbtable` instead to switch deployment from `hdbcds` to `hdbtable` for SAP HANA Cloud.\r\n\r\n- **Faster generation of `hdbtabledata` files** from csv data.  It no longer tries to check the existence of element or column names.  Such checks are anyways done during SAP HANA deployment.  This behavior is now symmetrical to SQLite deployment.\r\n\r\n- **Removed legacy cds build system** &mdash; the fallback using `cds.features.build.legacy` is no longer supported.\r\n\r\n- **`cds deploy --to hana` changes kind** to `hana` only if it is not already `sql`.\r\n\r\n- **Consistent default naming scheme for applications and services deployed to CF** across the following `cds` commands `build`, `deploy`, `init` and `add`. For an application named `myapp` the SAP HANA deployer app name is `myapp-db-deployer`, the SAP HANA DB service name is `myapp-db`. `cds build` now generates the application manifest file with a different name `manifest.yml`.\r\n\r\n- **`cds build`** no longer creates service metadata for the UI service binding by default. For SAP Web IDE Full-Stack compatibility a corresponding metadata.xml is still generated.  A `fiori` build task has to be defined otherwise.\r\n\r\n- **`cds build` creates `hana` build results only** if either a corresponding build task has been configured or if kind `hana` or kind `sql` has been defined. A `production` build is required for the latter. A fallback is used for Web IDE Fullstack and legacy build configs.\r\n\r\n## Added\r\n\r\n- **Common `cds.service.factory`** &mdash; `cds.serve` and `cds.connect` now use a common `cds.service.factory` to construct instances of `cds.Service`, as well as adding custom-provided handlers and implementations. This applies the same consistent ways to register new implementations via `cds.env.requires` options, model annotations `@impl` and `@kind`, or the well known `.cds`/`.js` sibling files mechanism.\r\n\r\n- **Common `cds.Service` base class** &mdash; `cds.Service` is the newly introduced common base class for all connected or provided services &mdash; i.e. all service instances contructed thru `cds.service.factory`. It provides uniform consumption APIs, as well as event handling APIs and capabilities for all services.\r\n\r\n- **Custom `cds.Service` subclasses** &mdash; besides providing `cds.service.impl` functions as of before, custom service implementations can now return subclasses of `cds.Service`, thereby plugging into the framework even more.\r\n\r\n- **New `srv.after('each', row => ...)`** &mdash; the former technique to register per-row handlers `srv.after('READ', each => ...)` broke when code was minified. The new method using pseudo event `'each'` is minifier-safe.\r\n\r\n- **New `srv.prepend(srv => ...)`** &mdash; use `srv.prepend(...)` to register event handlers to be executed _before_ the already reistered handlers. For example, extensions of reused implementations sometimes need to use this.\r\n\r\n- **Reflect `srv.events`** &mdash; base class `cds.Service` provides a new getter `srv.events` to reflect on declared events in the service definition, similar to the already existing `srv.entities`, `srv.types` and `srv.operations`.\r\n\r\n- **Experimental `cds.ql(req)`** &mdash; event handlers can now use the like of `const {SELECT} = cds.ql(req)` to ensure transaction-managed and tenant-isolated execution of queries, instead of `srv.tx(req)`. **Note** though, that this is an **experimental** feature, which might change or be removed in future versions.\r\n\r\n- **Using `await` in `cds repl`** &mdash; we now support using `await` directly on `cds repl` prompt inputs. This feature is provided through [Node's _--experimental-repl-await_ option](https://nodejs.org/api/repl.html#repl_await_keyword).\r\n\r\n- **CLI shortcut `--odata <v2|v4|x4>`** &mdash; the newly introduced general CLI option _**--odata** <v2/v4>_ acts as a shortcut to _--odata-version <v2/v4>_. In addition, _--odata **x4**_ acts as shortcut to _--odata-version v4 --odata-format structured  --odata-containement true_.\r\n\r\n- **`cds build --production`** &mdash; builds the project using the `production` profile - same when `NODE_ENV` or `CDS_ENV` environment variable is set to `production`. This will create HANA deployment artifacts if `kind: \"sql\"` has been defined.\r\n\r\n- **`cds build --for <hana|java-cf|node-cf|mtx> --opts <...>`** &mdash; now supports execution of auto-created or configured build tasks. Individual properties can be overwritten by passing corresponding CLI options, defaults are used otherwise. For example, `cds build --for hana --dest target --opts model=[data,srv,app]`. **Note:** The parameter `options-model` has been deprecated use `--opts model=[...]`instead.\r\n\r\n- The set of languages that is honored for the `i18n.json` language pack can now be configured through `i18n.languages`.  Default is still `all`, which means the sum of language files found next to models.\r\n\r\n## Fixed\r\n- SAP Fiori Elements preview is now working again with the latest version of SAP UI5.\r\n\r\n- **Use latest SAP CommonCryptoLib help** &mdash; when SAP CommonCryptoLib is missing during `cds deploy --to hana`.\r\n\r\n- `sql_mapping` is only written to `csn.json` if the classic Java runtime and no default naming is used.\r\n\r\n- SAP Fiori Elements dev support in `cds run` now also honors `/v2` URLs.  These are installed by default by the `@sap/cds-odata-v2-adapter-proxy`.\r\n\r\n- npm scripts that wrap around cds-dk commands like `cds watch` now also work on Windows.  Previously they couldn't find the cds command.\r\n\r\n- When extracting the base model of a multi-tenant application `cds build` now ensures that only files having project scope are copied, a warning is logged otherwise.\r\n\r\n- `cds build` now no longer crashes if exactly one custom language is given in `options.lang` of the `java-cf` build task.\r\n\r\n- `cds compile` now fails with a non-zero exit code in case of compilation errors.\r\n\r\n# Version 3.35.0 - 2020-05-08\r\n\r\n## Changed\r\n- The new compiler implementation, a.k.a SNAPI, is now the default.  Can be disabled with `cds.features.snapi=false`.\r\n\r\n# Version 3.34.3 - 2020-06-19\r\n\r\n## Changed\r\n\r\n- Faster generation of `hdbtabledata` files from csv data.  It no longer tries to check the existence of element or column names.  Such checks are anyways done during SAP HANA deployment.  This behavior is now symmetrical to SQLite deployment.\r\n\r\n# Version 3.34.2 - 2020-05-30\r\n\r\n## Changed\r\n\r\n- Use `cds.hana.deploy-format`=`hdbtable` instead of `cds.hana.syntax` to switch deployment from `hdbcds` to `hdbtable` for SAP HANA Cloud.\r\n- `cds run` now supports relative `dataSource` URLs in SAP UI5 manifests again, so that UI5 apps can be served w/o approuter.  This support is only active in development mode.\r\n- `cds deploy --to hana` changes kind to `hana` only if it is not already `sql`\r\n\r\n## Fixed\r\n\r\n- The `UI.Identification` annotation for `sap.common.CodeList` got a correct value, pointing to its `name` element.\r\n- Configuration `requires.<foo>.credentials.destination` is now preserved again when running with `VCAP_SERVICES`.  In version 3.34.1 it was cleared.\r\n- Entities annotated with `@cds.persistence.skip:if-unused` (like `sap.common.Languages`) now again are skipped when compiling to SAP HANA output.  This got broken in previous versions when using the new compiler APIs.\r\n- `sql_mapping` is again written to `csn.json` as it's required by classic Java runtime.\r\n- `default-env.json` is now read even in production, which is in line with the behavior of other modules that honor this file.  Real prod environments like CF will still overwrite these defaults.\r\n- `cds build` caused error `invalid option` &mdash; when passing command line options like `log-level`, `src` or `for`.\r\n\r\n# Version 3.34.0 - 2020-04-27\r\n\r\n## Added\r\n\r\n- `cds version` option `-ls` prints an `npm ls` subtree.\r\n- `cds serve` / `run` now also accept package names as arguments, e.g. `cds serve --project @capire/bookshop`.\r\n- `cds compile` option `--parse` provides minimal, parsed-only CSN output.\r\n- New Node.js method `cds.compile()` allows compiling CDS sources in-process.\r\n- `cds build` now supports cds configuration `requires.db.kind:\"sql\"` which allows seamless production deployments using HANA db and development deployments using sqlite db.\r\n- Default maximum query size limit of 1000 (overridable via `@cds.query.limit.max`).\r\n- Improved error message during `cds deploy` on Windows when `SAP CommonCryptoLib` is missing.\r\n- `cds build` now checks that `entity-whitelist` and `service-whitelist` have been defined for SaaS applications - a warning is reported otherwise. `cds build` will fail if invalid entries exist.\r\n- Parameter `--vcap-file` lets `cds deploy --to hana` use an existing `default-env.json` file for the deployment credentials, instead of always creating new credentials from Cloud Foundry. Note that this is a beta feature.\r\n- `cds build --log-level` allows to choose which messages to see, default log level is `warn`.\r\n- Labels of `@sap/cds/common` texts are now available in many languages\r\n\r\n## Changed\r\n\r\n- Node.js method `cds.parse()` has been changed to now truely return parsed-only models, with extensions not applied yet.\r\n**Note:** If you'need the former (erroneous) behaviour, please use `cds.compile` for that from now on.\r\n- Node.js method `cds.get()` now returns parsed-only models; same as `cds.parse()`.\r\n- `cds serve` / `run` / `watch` now reduce logging of details for the bound DB on connect, leading to less clutter.\r\n- Precision for `validTo` and `validFrom` defined in the `temporal` aspect in `@sap/cds/common` changed from `DateTime` to `Timestamp`.\r\n- Some administrative fields of SAP Fiori draft documents are now hidden on the UI.  The rest got labels.\r\n- Renamed cds configuration setting `features.messageLevel` to `log-level` to be consistent with command line option, e.g. `cds build --log-level`.\r\n\r\n- `cds extend` and `cds activate` commands have been moved to `@sap/cds-dk`. `cds disconnect` has been moved there under a different name.\r\n\r\n## Fixed\r\n- `cds build` - improvements in the area of error handling and error reporting.\r\n- `cds env` and Node.js runtime now properly complete configuration like `requires.db.kind.sql` with VCAP_SERVICES, so that in `production` an SAP HANA service is bound.\r\n- `cds build` now localizes edmx files properly if `cds.env.features.snapi` is turned on.\r\n- `cds deploy --to hana` no longer crashes if called with `NODE_ENV=production`.\r\n\r\n## Removed\r\n\r\n# Version 3.33.1 - 2020-03-24\r\n\r\n## Fixed\r\n- `cds build` now correctly supports options.model definitions of type string\r\n- Details navigation in Fiori preview works again since it's pinned to SAP UI5 1.73.  Actual cause still needs to be investigated.\r\n- `cds deploy` now adds `@sap/hana-client` to package.json instead of `hdb`.\r\n- `cds deploy` adds kind `sql` to requires section.\r\n\r\n# Version 3.33.0 - 2020-03-19\r\n\r\n## Added\r\n- `cds deploy` uses information from existing `default-env.json`.\r\n\r\n- `cds version` now also lists all dependencies of your local package.json and has an updated CLI commend help, documenting option `--all`.\r\n- `cds compile` option `--docs` preserve contents of `/** ... */` doc comments in CSN output as well as in EDMX outputs (as _Core.Description_ annotations).\r\n- `cds compile` option `--clean` tells the compiler to not add any derived information, but return a CSN which reflects only what was actually found in a `.cds` source.\r\n- `cds serve` option `--watch` starts the specific serve command in nodemon watch mode\r\n- Node.js: `cds.env` now supports camel case env variables as well as dot-notated keys in `.env`\r\n\r\n## Changed\r\n\r\n- Labels for the `createdAt` and `changedAt` in the `@sap/cds/common#managed` entity have been adjusted to reflect the SAP Fiori design guidelines.\r\n- `cds build` now delegates to the modular build system by default (known as `cds build/all`). The modular build system is compatible, but supports additional features, e.g. staging build, SAP HANA Cloud Edition support, populating initial data from .csv by generating .hdbtabledata files, etc. The legacy build is still available as a fallback in case of issues - use setting `cds.features.build.legacy: true` or ENV variable `CDS_FEATURES_BUILD_LEGACY=true`.\r\n\r\n## Fixed\r\n\r\n- `cds build` now correctly logs warnings returned by cds compiler. The message log level can be customized using cds configuration setting `cds.features.messageLevel` - default is `warn`.\r\n- `cds.env.roots` now properly picks up a changed value of `cds.env.folders`\r\n- `hdbtabledata` is no longer generated for entities that are marked with `@cds.persistence.skip`\r\n\r\n## Removed\r\n\r\n\r\n# Version 3.32.0 - 2020-03-06\r\n\r\n## Fixed\r\n- An issue where all Node.js runtime sessions where disconnected when one tenant offboarded.\r\n\r\n\r\n# Version 3.31.2 - 2020-03-05\r\n\r\n## Fixed\r\n- `cds deploy` does not crash if _texts.csv is provided for skipped entities\r\n- `cds serve foo.cds` does no longer load same model twice\r\n- `cds compile --to edmx` no longer creates files with csn instead of edmx content in case no language bundles are found\r\n- Both `cds env` and `cds compile` no longer write terminal escape sequences if only stdout is redirected, but not stderr.\r\n- No longer enforce Node.js version 8 in `db/package.json`.  Cloud Foundry environment does not support it anymore, as this version is out of maintenance.\r\n\r\n\r\n# Version 3.31.1 - 2020-02-26\r\n\r\n\r\n## Fixed\r\n\r\n- Removed `npm-shrinkwrap.json`\r\n\r\n\r\n# Version 3.31.0 - 2020-02-25\r\n\r\n## Added\r\n\r\nGeneration of `hdbtabledata` files now reports if CSV file names don't match entity names, and if header names don't match element names in an entity.  Watch out for such logs in case CSV files are not deployed to SAP HANA.\r\n\r\n## Fixed\r\n\r\n- `cds compile --to hdbtabledata` no longer crashes with `_texts.csv` files referring to a non-`localized` entity\r\n- `cds build/all` adds `app` folder to the list of model folders for HANA database builds. Draft tables are missing if the corresponding annotation model is missing.\r\n\r\n\r\n# Version 3.30.0 - 2020-02-10\r\n\r\n## Added\r\n\r\n  - `cds compile --log-level` allows to choose which messages to see\r\n  - `cds deploy --dry` prints DDL statements to stdout instead of executing them\r\n  - `cds deploy --with-mocks` also adds tables for required services\r\n  - `cds serve --mocked` allows mocking individual required services\r\n  - ( &rarr; learn more about these things using `cds help ...` )\r\n  - `cds.env` now also loads from `.env` files in properties format\r\n  - [`cds.resolve/load('*')`](https://cap.cloud.sap/docs/node.js/api#cds-load) resolves or loads all models in a project including those for required services. It ist controlled and configurable through `cds.env.folders` and `.roots￼``. Try this in `cds repl` launched from your project root to see that in action:\r\n    ```js\r\n    cds.env.folders         // = folders db, srv, app by default\r\n    cds.env.roots           // + schema and services in cwd\r\n    cds.resolve('*',false)  // + models in cds.env.requires\r\n    cds.resolve('*')        // > the resolved existing files\r\n    ```\r\n\r\n  - Added `cds.debug(<id>)` as a convenient helper for debug output controlled by `process.env.DEBUG`. For example, use it as follows:\r\n    ```js\r\n    const DEBUG = cds.debug('my-module')\r\n    DEBUG && DEBUG ('my debug info:', foo, ...)\r\n    ```\r\n    ```sh\r\n    > DEBUG=my-module cds run\r\n    ```\r\n\r\n  - Added `cds.error(<msg>)` as a convenient helper for throwing errors whose stack traces start from the actual point of invocation. For example, use it as follows:\r\n    ```js\r\n    const {error} = cds\r\n    if (...) throw error `Something's wrong with ${whatever}`\r\n    const foo = bar || error `Bar is missing!` // short circuit exits\r\n    ```\r\n\r\n## Changed\r\n\r\n  This version brings a major refactoring and streamlining of service runtime implementations,\r\n  which stays fully compatible regarding all documented APIs but in case you used internal\r\n  not documented (non-)APIs, you should know these:\r\n\r\nRemoved undocumented features\r\n\r\n  - Annotation `@source` from models loaded for runtime\r\n  - Property `cds.serve.app` &rarr; use `cds.app` instead\r\n  - Property `source` from CSN entity/view definition objects\r\n\r\n> It's very unlikely that you ever used these undocumented internal features at all.\r\n> In case you did, this should never have been done and you should fix that asap.\r\n\r\n\r\nDeprecated features (&rarr; might get removed in upcoming versions)\r\n\r\n  - Property `cds.session` &rarr; use `cds.db` instead\r\n  - Property `cds.options` &rarr; use `cds.db.options` instead\r\n  - Property `cds.unfold` &rarr; use `cds.compile` instead\r\n  - Property `cds.config` &rarr; use `cds.env` instead\r\n\r\n> These properties actually where duplicates to the mentioned alternatives.\r\n\r\n\r\n`cds run` and `cds watch` have been re-implemented as convenience shortcuts to `cds serve`, which acts as the central orchestrator for bootstrapping now.   (&rarr; see `cds run ?` or `cds watch ?` to learn more)\r\n\r\n`cds serve` now optionally bootstraps from project-local `./server.js` or  `./srv/server.js`, if exist, thus giving more control while still benefitting from `cds serve`'s intrinsic support for options like `--in-memory` or `--with-mocks`.\r\n\r\n`cds serve` now uses `cds.load('*')` to load a single effective model once, assigned to `cds.model`, and reused for db as well as all provided and required services . As that avoids loading models redundantly, it drastically improves both, bootstrapping performance as well as memory consumption.\r\n\r\n`cds deploy` does not (have to) register the default models to `package.json` anymore. For example, unlike before, `cds deploy -2 sqlite` will merely add an entry: `db:{kind:'sqlite'}`, without an additional `model` property anymore.\r\n\r\n`cds deploy --to hana` does not create `connection.properties` file any longer, but only modify existing one\r\n\r\n`modifiedAt` and `modifiedBy` from `@sap/cds/common`\r\n   - Are now mutable for OData, i.e. no longer carry the `@Core.Immutable: true` annotation.\r\n   - Are set by the Node.js runtime whenever the respective row was modified, i.e. also during `CREATE` operations.\r\n\r\nSupport for `cds init` is now moved to `@sap/cds-dk`.\r\n\r\n## Fixed\r\n\r\n - There was a bug in that caused a service names `FooBarV2` to erroneously be mapped to mount point `/foo-barv2` instead of `/foo-bar-v2` as intended and was the case before. &rarr; in case you started a project in this interims phase and had a service name with that pattern you may encounter this fix as an incompatible change, but it's actually reverting to the former compatible way.\r\n\r\n - `cds.env` erroneously overrode profiled entries depending on properties order\r\n\r\n - Fiori preview now uses latest version of SAP UI5 again\r\n\r\n - `cds deploy` verifies returned service key to ensure target service is not of type `managed`.\r\n\r\n\r\n\r\n\r\n# Version 3.21.3 - 2020-02-05\r\n## Fixed\r\n- Fiori preview no longer catches service URLs with an arbitrary prefix (e.g. `/foo/browse` instead of just `/browse`).\r\n\r\n\r\n# Version 3.21.1 - 2020-01-07\r\n## Fixed\r\n- SAP Fiori Elements preview no longer crashes since it's pinned to SAP UI5 1.72.3.  Actual cause still needs to be investigated.\r\n\r\n## Version 3.21.0 - 2019-12-11\r\n\r\n- `cds add`, `import`, and `watch` now print installation hints if `@sap/cds-dk` is not installed\r\n\r\n- Experimental option `hana.syntax=hdi` to create `hdbtable` files instead of `hdbcds`.  May still change!\r\n\r\n\r\n## Changed\r\n\r\n- In development mode, the `mock` authorization strategy is automatically activated with two fake users `alice` and `bob`, which allows for out-of-the-box testing of `@requires` annotations. This means that, unlike before, the `JWT` authorization strategy needs to be activated explicitly (through `{auth: { passport: { strategy: 'mock' }}}`.  In production, no change is required.\r\n\r\n- You might see a `MODULE_NOT_FOUND` error for `@sap/xsenv` in case you use the `JWT` strategy but have not bound any xsuaa service.  In this case either bind such a service instance, add the `@sap/xsenv` dependency, or use a different strategy like `mock`.  The trigger of this error is `@sap/xssec` 2.2.4 no longer requiring `@sap/xsenv`.\r\n\r\n- Renovated and streamlined `cds init`. It prints a hint now if it's called with old-style parameters, as well as that it wants to be used from `@sap/cds-dk`. Check out `cds help init` for more.\r\n\r\n- Removed the experimental `--args` parameter of `cds compile`.  This turned out to be cumbersome to use in shells. Replacement is the standard configuration mechanism, e.g. use an environment variable `CDS_FOO_BAR` to activate option `cds.foo.bar`.\r\n\r\n## Fixed\r\n- `SELECT.one/distinct(Fool,[...])` failed when passing an array for columns as argument two\r\n\r\n\r\n\r\n# Version 3.20.1 - 2019-11-26\r\n## Fixed\r\n- Fix 'duplicate versions' errors by loading `@sap/cds` again from the current project if possible.\r\n\r\n# Version 3.20.0 - 2019-11-19\r\n\r\n## Added\r\n- Mention xsuaa in help of `cds compile`\r\n\r\n## Fixed\r\n- Typings for `UPDATE` function no longer contain duplicates.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.20.3\r\n- Changes of `@sap/cds-ql` 1.21.0\r\n- Changes of `@sap/cds-services` 1.21.0\r\n- Changes of `@sap/cds-messaging` 1.4.0\r\n- Changes of `@sap/generator-cds` 2.10.2\r\n\r\n\r\n\r\n# Version 3.18.4 - 2019-11-15\r\n\r\n## Fixed\r\n- `.cfignore` files now get created by `cds build/all` to improve the overall deployment turnaround\r\n  of `cf push`.  Also, this avoids failures of CF node.js buildpack trying to rebuild sqlite binaries.\r\n- Generated `manifest.yaml` files for Cloud Foundry now contain a `path` attribute that allows\r\n  pushing from an outside folder.  Also, they specify reduced memory requirements.\r\n- Generated `manifest.yaml` for HDI deployer does not create a route, and specifies a valid `health-check-type`.\r\n- `cds deploy --to hana` now also includes models in the `srv` folder.\r\n- `cds deploy` no longer writes model folders to `package.json` that do not exist.\r\n\r\n\r\n# Version 3.19.0 - 2019-10-31\r\n\r\n## Added\r\n- Deployments for sqlite and SAP HANA now find CSV files in the form `_texts_LOCALE.csv`,\r\n  like `Books_texts_fr.csv`.  This file layout allows splitting translated texts into one file\r\n  per language.\r\n- Deployment for sqlite now also imports initial data from JSON files\r\n- `cds version` has learned about `@sap/cds-dk`\r\n\r\n## Fixed\r\n- `cds watch --help` works again, if used from `@sap/cds-dk`\r\n\r\n\r\n# Version 3.18.3 - 2019-10-28\r\n## Fixed\r\n- Fixed a crash in `cds run --watch` with changing directories.\r\n- `cds watch` is now also found if called from an NPM script.\r\n- `cds watch` now uses the same lookup paths for models as `cds run`\r\n\r\n\r\n# Version 3.18.1 - 2019-10-17\r\n## Fixed\r\n- Fixed a crash during sqlite deployment if there were csv files that did not match an entity name\r\n- `cds deploy --to hana` now does a build for SAP HANA even if no matching build task is available.\r\n- `cds deploy` now tries to add `.gitignore` entries only once\r\n- In `@source` annotations of csn.json files generated for cloud deployments,\r\n  now posix file paths (with `/`) are written, and no Windows paths.\r\n- `cds serve` and `run` now shuts down gracefully in case of `SIGHUP` signals emitted by\r\n  e.g. the VS Code terminal.\r\n- `cds watch` now is found even if `@sap/cds-dk` is not installed locally.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-ql` 1.19.2\r\n- Changes of `@sap/cds-services` 1.19.1\r\n- Changes of `@sap/cds-messaging` 1.2.1\r\n\r\n\r\n# Version 3.18.0 - 2019-10-09\r\n\r\n## Added\r\n- Compiler options for SAP HANA backend can now be set in configuration in the `cdsc.toHana` block\r\n  (e.g. `cds.cdsc.toHana.joins`)\r\n- `service.tx()` as a shortcut for `service.transaction()`\r\n\r\n## Fixed\r\n- `cds deploy --to hana` now adds the tunnel address to the JDBC URL\r\n- Boolean and number values from `default-env.json` now are accepted in configuration (`cds env`)\r\n- For applications deployed to Cloud Foundry, custom handlers are now properly resolved using their names.\r\n- `cds serve`/`run` now properly log `$batch` requests of OData\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.19.1\r\n- Changes of `@sap/cds-messaging` 1.2.0\r\n- Changes of `@sap/cds-ql` 1.19.1\r\n- Changes of `@sap/cds-reflect` 2.8.0\r\n- Changes of `@sap/cds-rest` 1.2.0\r\n- Changes of `@sap/cds-services` 1.19.0\r\n- Changes of `@sap/generator-cds` 2.9.0\r\n\r\n\r\n# Version 3.17.8 - 2019-09-25\r\n\r\n## Fixed\r\n\r\n- `UPDATE(entity, key)` statement\r\n\r\n\r\n# Version 3.17.7 - 2019-09-24\r\n\r\n## Fixed\r\n\r\n- `cds deploy`\r\n\r\n\r\n# Version 3.17.6 - 2019-09-23\r\n\r\n## Changed\r\n\r\n- Improved `cds env`\r\n\r\n\r\n# Version 3.17.5 - 2019-09-20\r\n\r\n## Fixed\r\n\r\n- `cds deploy` did not work properly\r\n\r\n\r\n# Version 3.17.4 - 2019-09-19\r\n\r\n## Also see\r\n- Changes of `@sap/cds-rest` 1.1.2\r\n\r\n\r\n# Version 3.17.3 - 2019-09-19\r\n\r\n## Fixed\r\n\r\n- `cds deploy --to hana`\r\n\r\n\r\n# Version 3.17.2 - 2019-09-19\r\n\r\n## Also see\r\n- Changes of `@sap/cds-services` 1.18.2\r\n- Changes of `@sap/generator-cds` 2.8.2\r\n\r\n\r\n# Version 3.17.1 - 2019-09-18\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.18.2\r\n- Changes of `@sap/cds-ql` 1.18.2\r\n- Changes of `@sap/cds-services` 1.18.1\r\n\r\n\r\n# Version 3.17.0 - 2019-09-10\r\n\r\n## Added\r\n- `cds run` has learned a new `--watch` option, which provides automatic restarts of the server on file changes.  [nodemon](https://www.npmjs.com/package/nodemon) package is required for this to work.\r\n\r\n## Fixed\r\n- `cds deploy` now writes `true` and `false` values in csv files as boolean to sqlite\r\n- Console output of `cds run` now waits until the server is really up and running before it declares success.\r\n- `cds deploy` and `build/all` do not write `hdbtabledata` files if some are already present.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.18.1\r\n- Changes of `@sap/cds-ql` 1.18.1\r\n- Changes of `@sap/cds-reflect` 2.7.1\r\n- Changes of `@sap/cds-services` 1.18.0\r\n- Changes of `@sap/generator-cds` 2.8.1\r\n\r\n\r\n\r\n# Version 3.16.2 - 2019-08-27\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.17.1\r\n\r\n\r\n\r\n# Version 3.16.0 - 2019-08-22\r\n\r\n## Added\r\n- `cds run` has learned a new `--in-memory` option, which connects and deploys to an SQLite in-memory database. There is no need to call `cds deploy` before.\r\n- `cds deploy --to hana` now can also be executed in Java projects\r\n- `cds run`'s index.html got a favicon, to give a visual clue in browsers.\r\n- `cds.requires.<datasource>.model` configuration can now also point to a node.js module, e.g. `@my/module`.\r\n  Previously, only a relative file path was supported.\r\n- Improved logging of query objects\r\n- `cds compile` now understands `--to edmx-v2` and `--to edmx-v4` to produce OData metadata of versions 2 or 4, respectively.\r\n\r\n## Changed\r\n- SAP Fiori Elements preview in `cds run` now is only added if OData services are being served.\r\n  For other protocols like `rest`, no SAP Fiori Elements preview is provided. Same holds true for the `$metadata` link.\r\n- `cds compile` now behaves better in non-TTY scenarios (e.g. when piping to files).  It writes a proper JSON\r\n  string instead of a Javascript object.  Previously, one had to enforce JSON using the `--to json` processor.  Compare e.g. the output of `cds compile model.cds` to `cds compile model.cds > model.json`.\r\n\r\n## Fixed\r\n- Fiori preview in `cds run` now also works for services with namespaces\r\n- In services of CF marketplace, `cds deploy --to hana` now only accepts services with plan `hdi-shared`.\r\n  Previously, it could get confused with services of type `hana` but of other (non-HDI) plans.\r\n- Localized edmx files are now produced also for i18n.json files.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.17.0\r\n- Changes of `@sap/cds-ql` 1.17.0\r\n- Changes of `@sap/cds-services` 1.17.0\r\n- Changes of `@sap/generator-cds` 2.7.0\r\n\r\n\r\n\r\n# Version 3.15.0 - 2019-07-26\r\n\r\n## Added\r\n- `hdbtabledata` files are now generated automatically as part of `cds deploy --to hana` for given set of CSV files.  CSV file names must follow the pattern `<namespace>-entity.csv` (same as for SQLite deployment) and be located in `db/csv` or `db/data`.\r\n- For Node.js, multiple configuration profiles can now be activated at the same time, e.g. by setting both `NODE_ENV` and `CDS_ENV`, or by setting a multi-value list: `CDS_ENV=profile1,profile2`.\r\n- New labels for `sap.common.*.code` and `sap.common.Currencies.symbol` (part of `@sap/cds/common`).\r\n- Better message for `Duplicate definition` errors, where the same `cds` file is referenced from different locations.\r\n  To fix this, check all dependencies to `@sap/cds` in your package.json and those of reused packages and ensure they allow deduped use of `@sap/cds`.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.16.1\r\n- Changes of `@sap/cds-ql` 1.16.0\r\n- Changes of `@sap/cds-services` 1.16.0\r\n- Changes of `@sap/generator-cds` 2.6.1\r\n\r\n\r\n# Version 3.14.0 - 2019-07-11\r\n\r\n## Added\r\n- Support for `SELECT.distinct.from(Foo)` and `SELECT.one.from(Foo)` queries in Node.js\r\n- [Beta] `cds deploy --to hana` deploys to SAP HANA on Cloud Foundry\r\n- For Node.js, `cds env` now activates the `development` profile automatically,\r\n  unless `CDS_ENV` or `NODE_ENV` are set.  This is in line with `NODE_ENV` defaulting to `development`.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-ql` 1.15.0\r\n- Changes of `@sap/cds-services` 1.15.0\r\n- Changes of `@sap/generator-cds` 2.5.0\r\n\r\n\r\n# Version 3.13.0 - 2019-06-26\r\n\r\n## Added\r\n- `cds serve` now provides a preview of the services in a list page of SAP Fiori Elements\r\n\r\n## Changed\r\n- `cds serve` now yields an error if there are no services defined in the model\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.15.0\r\n- Changes of `@sap/cds-ql` 1.14.0\r\n- Changes of `@sap/cds-services` 1.14.0\r\n- Changes of `@sap/generator-cds` 2.4.11\r\n\r\n\r\n\r\n# Version 3.12.0 - 2019-06-17\r\n\r\n## Added\r\n- On request, `cds build/all` now generates OData EDMX files for node.js services\r\n- Performance optimizations for `cds build/all`\r\n\r\n## Fixed\r\n- `cds deploy` no longer fails if `data` dir is not present\r\n- `cds build/all` no longer prints a message if `mta.yaml` does not exist\r\n\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.14.1\r\n- Changes of `@sap/cds-ql` 1.13.0\r\n- Changes of `@sap/cds-services` 1.13.0\r\n\r\n\r\n# Version 3.11.1 - 2019-06-03\r\n\r\n## Fixed\r\n- `cds deploy` honors saved datasource configuration again\r\n- localization works again for sqlite datasources defined in `package.json`\r\n\r\n\r\n# Version 3.11.0 - 2019-06-03\r\n\r\n## Added\r\n\r\n- `cds deploy` now also finds `.csv` files in imported reuse packages\r\n- Better error messages for various `cds` CLI calls\r\n\r\n## Changed\r\n- `cds build/all` for Node.js projects generates proper CSN in `gen/csn.json`.\r\n   A warning is emitted if `cds serve` is run with the previous format.  Rebuild the project if you see this warning.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.14.0\r\n- Changes of `@sap/cds-ql` 1.12.0\r\n- Changes of `@sap/cds-services` 1.12.0\r\n- Changes of `@sap/generator-cds` 2.4.10\r\n\r\n# Version 3.10.0 - 2019-05-21\r\n\r\n## Added\r\n- Tables and view for localized entities are created by default now, both for SAP HANA and SQLite.\r\n- Internal errors are now marked as such in all CLI commands, with a request to report them.\r\n\r\n## Changed\r\n- `cds compile --service all` no longer fails in case no services are found.\r\n  This better matches higher level commands like `cds build` that should not fail in this instance.\r\n  Note that `--service Foo` fails as before in case `Foo` is not found.\r\n- `cds run` and `cds serve` now serve the generic index page at `/`, while previously this was `/$index`.\r\n- `cds build/all` now auto-creates build tasks from `mta.yaml` definition if no build tasks have been\r\n  defined in `.cdsrc.json`. If no `mta.yaml` file exists, cds configuration data respectively defaults\r\n  are used for build task configuration.\r\n\r\n## Fixed\r\n- CLI now shows compilation warnings in all commands, e.g. in `build`, `deploy`, or `compile`.\r\n  Previously warnings were only shown in case of compilation errors.\r\n- `cds help` no longer inserts terminal escape sequences if stdout is redirected to a file.\r\n- Errors in custom handlers are no longer shadowed in `cds serve` or `cds run`.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.13.4\r\n- Changes of `@sap/cds-ql` 1.11.1\r\n- Changes of `@sap/cds-reflect` 2.5.0\r\n- Changes of `@sap/cds-services` 1.11.1\r\n- Changes of `@sap/generator-cds` 2.4.8\r\n\r\n\r\n\r\n# Version 3.9.0 - 2019-05-08\r\n\r\n## Added\r\n- `cds.serve` now reads passport for services from `auth.passport` configuration property\r\n\r\n## Fixed\r\n- `cds.compile` now really skips entities marked with `if-unused`\r\n- Build tasks are now listed with `cds env`\r\n- `cds serve` now supports the `--at`, `--to`, and `--with` arguments as specified.\r\n- `cds deploy --to sqlite` now better handles csv files with empty values\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.12.0\r\n- Changes of `@sap/cds-ql` 1.10.2\r\n- Changes of `@sap/cds-reflect` 2.5.0\r\n- Changes of `@sap/cds-services` 1.10.2\r\n- Changes of `@sap/generator-cds` 2.4.6\r\n\r\n\r\n\r\n# Version 3.8.1 - 2019-04-30\r\n\r\n## Fixed\r\n- Texts in deep annotations, e.g. `@UI.Facet`, are now properly localized in OData metadata\r\n\r\n\r\n# Version 3.8.0 - 2019-04-09\r\n\r\n## Fixed\r\n- Make tests run on Windows again\r\n- Various fixes in `cds build/all`\r\n- Adjustments to latest compiler for localizing models\r\n- `.hdbcds` and `.hdbtabledata` files are now copied over in `cds build/all`\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.11.0\r\n- Changes of `@sap/cds-ql` 1.8.1\r\n- Changes of `@sap/cds-services` 1.8.1\r\n- Changes of `@sap/generator-cds` 2.4.4\r\n\r\n\r\n\r\n# Version 3.7.1 - 2019-03-25\r\n\r\n## Fixed\r\n- `cds serve` now honors `newCsn` configuration when serving from precompiled csn.json files.\r\n- `cds init` creates samples correctly when project already contains files.\r\n- `cds build` for node.js projects will now show up compilation errors.  Formatting has been improved as well.\r\n- Better support for finding `cds` executable in VSCode.\r\n\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.10.0\r\n- Changes of `@sap/cds-ql` 1.7.1\r\n- Changes of `@sap/cds-services` 1.7.2\r\n- Changes of `@sap/generator-cds` 2.4.4\r\n\r\n\r\n\r\n# Version 3.6.0 - 2019-02-27\r\n\r\n## Added\r\n- In `cds init`:\r\n  - Add modules via `cds init --modules` to an existing project.\r\n  - Do not allow project creation via `cds init` outside of current working folder, e.g. init ../../some/where/else is not allowed.\r\n  - No output at all (not even error messages) when using `cds init --quiet`.\r\n  - Create a module folder using `cds init --modules...` even if it is empty based on the supplied options.\r\n  - Parameter `--modules` only supports one folder of each type.\r\n- Alpha support for `@cds.odata.valuelist`: Adding `@cds.odata.valuelist` to `@cds.autoexposed` entities will automatically equip all associations referring to such entities with a corresponding `@Common.ValueList.entity`\r\n\r\n## Changed\r\n- Simplified code lists: removed superfluous types `LanguageCode`, `CountryCode`, and `CurrencyCode` from `@sap/cds/common`\r\n- `cds build/all` now does `--clean` by default and is less verbose in its output\r\n\r\n## Fixed\r\n- `cds.load` no longer fails if reading in a CSN file in version `0.1.0`\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.9.0\r\n- Changes of `@sap/cds-reflect` 2.4.0\r\n- Changes of `@sap/cds-ql` 1.6.0\r\n- Changes of `@sap/cds-services` 1.6.0\r\n- Changes of `@sap/generator-cds` 2.4.0\r\n\r\n\r\n\r\n# Version 3.5.2 - 2019-02-20\r\n\r\n## Fixed\r\n- Node.js projects created with `cds init` now\r\n  - Bind the service module to an HDI service in `mta.yaml`.\r\n  - Invoke CDS build when building the database module.\r\n  - No longer create old-style `service` configuration in `package.json`.\r\n- For datasources with kind `hana` we now also find `hanatrial` services in trial landscapes by matching their tag `hana`.\r\n\r\n\r\n\r\n# Version 3.5.1 - 2019-02-14\r\n\r\n## Fixed\r\n- In `cds serve` service providers where added twice to the express app.  This is fixed.\r\n- In the logs of `cds serve` false warnings on SAP Fiori Elements requests are now gone.\r\n- `cds serve` no longer fails on localization for unbound actions.\r\n- The project template was fixed to properly wire up the connection to SAP HANA.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.8.1\r\n- Changes of `@sap/cds-ql` 1.5.1\r\n- Changes of `@sap/cds-services` 1.5.2\r\n- Changes of `@sap/generator-cds` 2.3.7\r\n\r\n\r\n\r\n# Version 3.5.0 - 2019-02-07\r\n\r\n## Added\r\n- `cds compile -2 xsuaa` now generates default values for `xsappname` and `tenant-mode`\r\n- All commands now can be called with `--help`, where previously only `cds help <command>` was allowed.\r\n\r\n## Changed\r\n- The minimum required Node.js version is now set more specifically to _8.9_ LTS.  Previously, just Node.js 8 was mentioned.\r\n- The `cds build/all` (experimental build command for Node.js) emits a warning for existing projects to add build task configuration.  Watch out for such a warning in the console and follow its instructions.\r\n\r\n## Fixed\r\n- Service handlers are now also found on CF if CDS models are served from a `csn.json` file instead as from `.cds` sources.\r\n- An issue where projects w/o `db` dir could not be built using `cds build`.\r\n- Unclear documentation of `cds deploy` on where it looks up the data source.\r\n- `cds env` to load configuration profiles in lower-prio files (`.cdsrc.json`) with higher precedence than default configuration in higher-prio files (`package.json`).\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.8.0\r\n- Changes of `@sap/cds-reflect` 2.3.0\r\n- Changes of `@sap/cds-ql` 1.5.0\r\n- Changes of `@sap/cds-services` 1.5.0\r\n- Changes of `@sap/generator-cds` 2.3.6\r\n\r\n\r\n# Version 3.4.1 - 2019-01-24\r\n\r\n## Fixed\r\n\r\n- Restore cds-compiler `.version`\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.7.1\r\n- Changes of `@sap/cds-reflect` 2.2.1\r\n- Changes of `@sap/cds-ql` 1.4.0\r\n- Changes of `@sap/cds-services` 1.4.0\r\n- Changes of `@sap/generator-cds` 2.2.0\r\n\r\n\r\n# Version 3.4.0 - 2019-01-22\r\n\r\n## Added\r\n\r\n- `cds.env` supports loading from `default-env.json`\r\n- Support base models for `cds compile -2 xsuaa`\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.7.0\r\n- Changes of `@sap/cds-reflect` 2.2.0\r\n- Changes of `@sap/cds-ql` 1.4.0\r\n- Changes of `@sap/cds-services` 1.4.0\r\n- Changes of `@sap/generator-cds` 2.2.0\r\n\r\n\r\n# Version 3.3.0 - 2019-01-11\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.6.0\r\n- Changes of `@sap/cds-reflect` 2.1.0\r\n- Changes of `@sap/cds-ql` 1.3.0\r\n- Changes of `@sap/cds-services` 1.3.0\r\n- Changes of `@sap/generator-cds` 2.2.0\r\n\r\n\r\n# Version 3.2.0 - 2018-12-21\r\n## Changed\r\n- cdsc 2sql output may also contain .types\r\n- Add labels to CodeLists in common.cds\r\n- Improved cds error messages\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.6.0\r\n- Changes of `@sap/cds-reflect` 2.1.0\r\n- Changes of `@sap/cds-ql` 1.2.0\r\n- Changes of `@sap/cds-services` 1.2.0\r\n- Changes of `@sap/generator-cds` 2.2.0\r\n\r\n\r\n# Version 3.1.1 - 2018-12-13\r\n## Changed\r\n- Better console output from cds compile\r\n\r\n## Fixed\r\n- cds.compile ignored configured odata.version\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.6.0\r\n- Changes of `@sap/cds-reflect` 2.1.0\r\n- Changes of `@sap/cds-ql` 1.1.0\r\n- Changes of `@sap/cds-services` 1.1.0\r\n- Changes of `@sap/generator-cds` 2.2.0\r\n\r\n\r\n# Version 3.0.0\r\n## Changed\r\n- Reworked configuration options to center around required 'data sources'.\r\n  - As an example see the snippted that e.g. `cds deploy --to sqlite:my.db` generates into `package.json`.\r\n  - The former `cds` options from `package.json` are deprectated but still supported.\r\n- Clean up of many Node.js APIs, mainly for `cds.serve` and `cds.connect`.  See the [Javacript APIs documentation](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/a131984aefe94ff884e6b6819ee76bd9.html) for details.\r\n- Node.js 8 is now the minimum required runtime version.\r\n- Simplified `cds init`.  By default it creates a plain project suitable for local CDS development.\r\n\r\n## Added\r\n- `cds env` allows for inspecting the effective configuration\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.5.0\r\n- Changes of `@sap/cds-reflect` 2.0.0\r\n- Changes of `@sap/cds-ql` 1.0.0\r\n- Changes of `@sap/cds-services` 1.0.0\r\n- Changes of `@sap/generator-cds` 2.0.0\r\n\r\n\r\n# Version 2.11.2\r\n## Fixes\r\n- During `cds init/new` only install `@sap/generator-cds` 1.x\r\n\r\n\r\n# Version 2.11.0\r\n## Added\r\n- Reuse aspect `cuid` to `@sap/cds/common`\r\n- Support for smart to-many Associations finding backlinks automatically (&rarr;not for production!)\r\n- Support to fill DBs with initial data from CSV files (fetched from folder `db/csv/`)\r\n- New CLI command `cds run` - today a mere wrapper for `cds serve all` but meant to serve microservice test scenarios\r\n- `cds deploy` can be configured not to modify `package.json` through the `--no-save` option.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.2.0\r\n- Changes of `@sap/cds-reflect` 1.8.0\r\n- Changes of `@sap/cds-ql` 0.12.0\r\n- Changes of `@sap/cds-services` 0.12.0\r\n\r\n\r\n# Version 2.10.3\r\n## Fixes\r\n- During `cds init/new` only install `@sap/generator-cds` 1.x\r\n\r\n\r\n# Version 2.10.0\r\n## Added\r\n- Support for Fiori Draft\r\n\r\n## Fixes\r\n- Enhanced server.js to also include links to entities\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.1.3\r\n- Changes of `@sap/cds-reflect` 1.7.0\r\n- Changes of `@sap/cds-ql` 0.11.0\r\n- Changes of `@sap/cds-services` 0.11.0\r\n\r\n\r\n# Version 2.9.1\r\n## Fixes\r\n- `cds build` no longer blocks if running inside a Maven build.\r\n\r\n\r\n# Version 2.9.0\r\n## Added\r\n- `common.cds` model got annotations for title, description, and value lists.\r\n- `cds` executable now can read from stdin, e.g. `echo 'entity Foo {ID:UUID;}' | cds -2 sql`\r\n- `cds -2 sql` now outputs plain (non-HANA) SQL.  Use `-2 hana` for HANA SQL.\r\n- `cds config` shows the current CDS configuration.  Use `cds help config` to learn more.\r\n\r\n## Fixes\r\n- Entities from `common.cds` like `Languages`, `Countries`, and `Currencies` are now only persisted to the database if they are actually used.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.1.2\r\n- Changes of `@sap/cds-reflect` 1.6.0\r\n- Changes of `@sap/cds-ql` 0.10.0\r\n- Changes of `@sap/cds-services` 0.10.1\r\n\r\n\r\n# Version 2.8.0\r\n## Added\r\n- Support was added to build node.js service modules\r\n- `cds init` has been reimplemented with a better commandline experience, along with updated templates.  Plugin `@sap/generator-cds`, which is required for `cds init`, is now automatically installed when `init` is called for the first time.  `cds new` is still available and is now just a synonym for `init`.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.1.1\r\n- Changes of `@sap/cds-services` 0.9.0\r\n- Changes of `@sap/cds-ql` 0.9.0\r\n\r\n\r\n# Version 2.7.0\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.0.32\r\n- Changes of `@sap/cds-services` 0.8.1\r\n- Changes of `@sap/cds-ql` 0.8.1\r\n\r\n\r\n# Version 2.6.0\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.0.31\r\n- Changes of `@sap/cds-services` 0.7.0\r\n- Changes of `@sap/cds-ql` 0.7.0\r\n\r\n\r\n# Version 2.5.1\r\n## Also see\r\n- Changes of `@sap/cds-services` 0.6.0\r\n- Changes of `@sap/cds-ql` 0.6.0\r\n\r\n\r\n# Version 2.5.0\r\n## Added\r\n- Instead of compiling each `.cds` service file separately, `cds build` now combines all those files from the same folder, creating only one `csn.json` file for them.\r\n\r\n## Fixes\r\n- Shortcuts of `cds init` work again\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.0.30\r\n- Changes of `@sap/cds-services` 0.5.0\r\n- Changes of `@sap/cds-ql` 0.5.0\r\n\r\n\r\n# Version 2.4.2\r\nSame as version 2.3.2, but including the generic service provider for Node.js (`@sap/cds-services` and `@sap/cds-ql`).\r\n\r\n\r\n# Version 2.3.2\r\n## Changed\r\n- The default for SQL name mapping is changed to `plain`.  This means that\r\n  - The name of a table/view in the database catalog is obtained from the name of the corresponding entity in the CDS model in the following way:\r\n    - replace all \".\" by \"_\"\r\n    - convert everything to upper case\r\n  - The name of a table/view column in the database catalog is obtained from the name of the corresponding entity element in the csn in the following way:\r\n    - convert everything to upper case\r\n\r\n  Note that this is a breaking change for appliations that rely on the previous value of `quoted`.  In order to get this value back, add the following to `package.json`: `\"cds\": { \"data\": { \"sql_mapping\" : \"quoted\" } }`\r\n\r\n## Fixes\r\n- Special output formatting in CLI is only done for `cds eval` and `cds repl`, but not for programmatic usage.\r\n- Links to external documentation are now point to correct help documents.\r\n\r\n## Also see\r\n- Changes of `@sap/cds-compiler` 1.0.30\r\n\r\n\r\n\r\n# Version 2.3.0\r\n## Added\r\n- SQL names can now be configured with `{ data: {sql_mapping: \"plain/quoted\"} }`.  Default is `quoted`, but will be changed to `plain` soon.  If you need to stay with `quoted` in the futute, e.g. due to data compatibility reasons, you can configure this mode already now.\r\n\r\n## Fixes\r\n- The `csn.json` file produced by `cds build` now contains the properly unfolded model for OData.  Previously this was the normalized model, which led to runtime errors in the Java service provider.\r\n- Invalid configuration data in `package.json` now leads to a build error again.\r\n- Console output of `cds build` now presents files paths sorted.\r\n\r\n## Also see\r\n- Changes of CDS compiler 1.0.27\r\n\r\n\r\n\r\n# Version 2.2.0\r\n## Added\r\n- CDS configuration in `package.json` can now be omitted if you follow the standard project layout, i.e. if you place your model files in `db/`, `srv/`, and `app/` folders.\r\n\r\n## Changed\r\n- Previously data models needed to include import statements to the service models (e.g. `using from '../srv'`), so that the Java runtime could use these service views on the DB to execute queries.  The views are now included automatically, so that you can remove the explicit `using` clauses.\r\n- Calling just `cds` on the command line now prints its help.  The previously started REPL is now available with `cds repl` (or just `cds r`).\r\n\r\n## Fixes\r\n- Some cds commands failed on Windows.  This is fixed.\r\n\r\n## Also see\r\n- Changes of CDS compiler 1.0.24\r\n\r\n\r\n\r\n# Version 2.1.0\r\n## Added\r\n- Service edmx files are now written to UI app folders if their manifest.json contains a reference to the service.  This allows Web IDE's annotation modeler to work on up to date service files.\r\n- The results of `cds.compile.to...` commands are now automatically formatted if called in `cds -e...` or cds repl.  You don't need to append `console.log` to the call chain.\r\n\r\n## Fixes\r\n- Language properties are now found in all folders, also ones that are outside of the current module\r\n- csn.json is written with line breaks and indentation\r\n\r\n## Also see\r\n- Changes of CDS compiler 1.0.21\r\n\r\n\r\n# Version 2.0.0\r\n## Added\r\n- All-new command-line interface.  See `cds help` for information on the available commands.\r\n- `cds compile` exposes CDS model transformations with various options.\r\n- `cds build` automatically writes localized edmx files.\r\n- `cds build` now writes the version to the build log.\r\n- `cds version` does the usual thing.\r\n- `cds init` scaffolds CDS projects.\r\n- CDS repl (read-eval-print-loop): just type `cds` and play with CDS API.\r\n\r\n## Fixes\r\nToo many to mention :)\r\n\r\n## Also see\r\n- Changes of CDS compiler 1.0.19\r\n"},{"name":"cf-tools","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"![GitHub package.json version](https://img.shields.io/github/package-json/v/SAP/cloud-foundry-tools-api)\r\n[![CircleCI](https://circleci.com/gh/SAP/cloud-foundry-tools-api.svg?style=svg)](https://circleci.com/gh/SAP/cloud-foundry-tools-api)\r\n[![Coverage Status](https://coveralls.io/repos/github/SAP/cloud-foundry-tools-api/badge.svg?branch=master)](https://coveralls.io/github/SAP/cloud-foundry-tools-api?branch=master)\r\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/SAP/cloud-foundry-tools-api.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/SAP/cloud-foundry-tools-api/context:javascript)\r\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\r\n[![REUSE status](https://api.reuse.software/badge/github.com/SAP/cloud-foundry-tools-api)](https://api.reuse.software/info/github.com/SAP/cloud-foundry-tools-api)\r\n[![dependentbot](https://api.dependabot.com/badges/status?host=github&repo=SAP/cloud-foundry-tools-api)](https://dependabot.com/)\r\n\r\n# Overview \r\nThis package provides a set of APIs to help you develop applications in Cloud Foundry. You can use these APIs to manage apps, service instances, orgs, spaces, and users in your environment. Mostly, this is a wrapper of the CF command line client, which runs a particular command and parses the output to the suitable JSON file. If an error or failure occurs,  the runtime exception throws with relevant problem information.\r\n\r\n## API Reference Guide\r\n[API guide](https://sap.github.io/cloud-foundry-tools-api)\r\n\r\n## Prerequisite\r\n\r\n_from version_ `v1.0.0` _and above_:\r\n\r\nMake sure you have installed the CF CLI [v7](https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v7.md#installers-and-compressed-binaries) tool in your environment.\r\n\r\n_below version_ `v1.0.0`:\r\n\r\nMake sure you have installed the CF CLI [v6](https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v6.md#installers-and-compressed-binaries) tool in your environment.\r\n\r\n## Examples of usage\r\n\r\nExample 1\r\n\r\n```\r\ntry {\r\n\tconst result = await cfLogin(\"https://api.cf.....com\", \"user\", \"password\");\r\n\tif (result === \"OK\") {\r\n\t\t// successful\r\n\t}\r\n} catch (e) {\r\n\t// display or/and log error\r\n}\r\n```\r\n\r\nExample 2\r\n\r\n```\r\ntry {\r\n\tconst spaces = await cfGetAvailableSpaces(\"myOrg\");\r\n\tfor (const space of spaces) {\r\n\t\tconsole.log(\"Space label is \" + space.label + \" guid is \" + space.guid);\r\n\t}\r\n} catch (e) {\r\n\t// display or/and log error\r\n}\r\n```\r\n\r\n## Contributing\r\nContributing information can be found in the [CONTRIBUTING.md](CONTRIBUTING.md) file.\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\r\n\r\n## [2.2.0](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.4...v2.2.0) (2022-02-09)\r\n\r\n\r\n### Features\r\n\r\n* support origin for CF login ([#150](https://github.com/sap/cloud-foundry-tools-api/issues/150)) ([064fa99](https://github.com/sap/cloud-foundry-tools-api/commit/064fa9903e403e1e66fd614afb1a57e6f22ba36c))\r\n\r\n\r\n### Bug Fixes\r\n\r\n* incorrect output analyzing ([#146](https://github.com/sap/cloud-foundry-tools-api/issues/146)) ([de2bed0](https://github.com/sap/cloud-foundry-tools-api/commit/de2bed0777c114389c03f83dfe7a277e47116532))\r\n\r\n### [2.1.1](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.4...v2.1.1) (2021-12-06)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* incorrect output analyzing ([#146](https://github.com/sap/cloud-foundry-tools-api/issues/146)) ([de2bed0](https://github.com/sap/cloud-foundry-tools-api/commit/de2bed0777c114389c03f83dfe7a277e47116532))\r\n\r\n## [2.0.4](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.1...v2.0.4) (2021-11-21)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* wrong parsing of cli output ([#142](https://github.com/sap/cloud-foundry-tools-api/issues/142)) ([857fbc8](https://github.com/sap/cloud-foundry-tools-api/commit/857fbc86bc21a49aa993065648cdfd407a5dd2ce))\r\n\r\n\r\n\r\n## [2.0.1](https://github.com/sap/cloud-foundry-tools-api/compare/v2.0.0...v2.0.1) (2021-06-30)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* change access to fs/promises lib ([#113](https://github.com/sap/cloud-foundry-tools-api/issues/113)) ([2dd4a36](https://github.com/sap/cloud-foundry-tools-api/commit/2dd4a361c7414738abef74f274898d9fcddeef0a))\r\n\r\n\r\n\r\n# [2.0.0](https://github.com/sap/cloud-foundry-tools-api/compare/v1.2.0...v2.0.0) (2021-06-22)\r\n\r\n\r\n### Features\r\n\r\n* cfApi is announced ([#108](https://github.com/sap/cloud-foundry-tools-api/issues/108)) ([7217f97](https://github.com/sap/cloud-foundry-tools-api/commit/7217f97710436d6ddffcfba0de6890e47c982295))\r\n\r\n\r\n\r\n# [1.2.0](https://github.com/sap/cloud-foundry-tools-api/compare/v1.1.1...v1.2.0) (2021-06-09)\r\n\r\n\r\n### Features\r\n\r\n* add guid to service instance info ([#100](https://github.com/sap/cloud-foundry-tools-api/issues/100)) ([82959b9](https://github.com/sap/cloud-foundry-tools-api/commit/82959b9d83b2bdba4fef1e80d796668ff32ec4a5))\r\n\r\n\r\n\r\n## [1.1.1](https://github.com/sap/cloud-foundry-tools-api/compare/v1.1.0...v1.1.1) (2021-05-24)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* 'getServicesInstancesFilteredByType' re-implemented ([#93](https://github.com/sap/cloud-foundry-tools-api/issues/93)) ([883de7d](https://github.com/sap/cloud-foundry-tools-api/commit/883de7da0c233fabc366c86b62c72a2720139295))\r\n\r\n\r\n\r\n# [1.1.0](https://github.com/sap/cloud-foundry-tools-api/compare/v1.0.2...v1.1.0) (2021-04-04)\r\n\r\n\r\n### Features\r\n\r\n* function 'cfGetApps' announced ([#79](https://github.com/sap/cloud-foundry-tools-api/issues/79)) ([c9b333f](https://github.com/sap/cloud-foundry-tools-api/commit/c9b333f00324d8b0f17e7e516cf6179e1145311c))\r\n\r\n\r\n\r\n## [1.0.2](https://github.com/sap/cloud-foundry-tools-api/compare/v1.0.1...v1.0.2) (2021-03-07)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* v2->v3 adjustments ([#73](https://github.com/sap/cloud-foundry-tools-api/issues/73)) ([24df910](https://github.com/sap/cloud-foundry-tools-api/commit/24df910e800dcf58a245713c731cdc8e741bc747))\r\n\r\n\r\n\r\n## [1.0.1](https://github.com/sap/cloud-foundry-tools-api/compare/v1.0.0...v1.0.1) (2021-03-04)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* integration adjustment ([#72](https://github.com/sap/cloud-foundry-tools-api/issues/72)) ([b6596b3](https://github.com/sap/cloud-foundry-tools-api/commit/b6596b340d50221feca2dad54ae112817ea6cd44))\r\n* integration scenario fixing ([#71](https://github.com/sap/cloud-foundry-tools-api/issues/71)) ([a9868cd](https://github.com/sap/cloud-foundry-tools-api/commit/a9868cdefc10cc60de255f9dfe5e38eadcba8d2a))\r\n\r\n\r\n\r\n# [1.0.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.8.1...v1.0.0) (2021-03-01)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* pad query with current space guid by default for cfGetServices call ([#63](https://github.com/sap/cloud-foundry-tools-api/issues/63)) ([cdcaca8](https://github.com/sap/cloud-foundry-tools-api/commit/cdcaca869e73dc0d44d63f40790901f6fa896c34))\r\n\r\n\r\n### Features\r\n\r\n* move on 'v3' format ([#58](https://github.com/sap/cloud-foundry-tools-api/issues/58)) ([846bd87](https://github.com/sap/cloud-foundry-tools-api/commit/846bd87de88190aca88a15e8e2642727292cbdf6))\r\n\r\n\r\n\r\n## [0.8.1](https://github.com/sap/cloud-foundry-tools-api/compare/v0.8.0...v0.8.1) (2021-02-22)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* bump patch version ([05dbda3](https://github.com/sap/cloud-foundry-tools-api/commit/05dbda39f2badd8c5d42f936d97337b7fe883574))\r\n\r\n\r\n\r\n# [0.8.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.7.0...v0.8.0) (2021-01-03)\r\n\r\n\r\n### Features\r\n\r\n* added cfGetSpaceServices that uses /v2/spaces/:guid/services ([#48](https://github.com/sap/cloud-foundry-tools-api/issues/48)) ([3831e7d](https://github.com/sap/cloud-foundry-tools-api/commit/3831e7d530e151f3b9970fb59acff4f9ed9329bf))\r\n\r\n\r\n\r\n# [0.7.0](https://github.com/sap/cloud-foundry-tools-api/compare/0.7.0...v0.7.0) (2020-12-30)\r\n\r\n\r\n### Features\r\n\r\n* adding service instance creation properties in ServiceTypeInfo interface ([#46](https://github.com/sap/cloud-foundry-tools-api/issues/46)) ([35b014d](https://github.com/sap/cloud-foundry-tools-api/commit/35b014da6225e2fcf350e2c7d1640d0b20ed6e7b))\r\n\r\n\r\n### Reverts\r\n\r\n* Revert \"Revert \"Create Dependabot config file (#30)\" (#38)\" (#40) ([7457929](https://github.com/sap/cloud-foundry-tools-api/commit/74579294be23b04bca4b75c725d42fd6a16b8636)), closes [#30](https://github.com/sap/cloud-foundry-tools-api/issues/30) [#38](https://github.com/sap/cloud-foundry-tools-api/issues/38) [#40](https://github.com/sap/cloud-foundry-tools-api/issues/40)\r\n* Revert \"Create Dependabot config file (#30)\" (#38) ([0f4368b](https://github.com/sap/cloud-foundry-tools-api/commit/0f4368b93d254788c7670846031d27684e23e9ae)), closes [#30](https://github.com/sap/cloud-foundry-tools-api/issues/30) [#38](https://github.com/sap/cloud-foundry-tools-api/issues/38)\r\n\r\n\r\n\r\n## [0.6.8](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.7...v0.6.8) (2020-11-04)\r\n\r\n\r\n\r\n## [0.6.7](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.6...v0.6.7) (2020-10-19)\r\n\r\n\r\n\r\n## [0.6.6](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.5...v0.6.6) (2020-10-12)\r\n\r\n\r\n\r\n## [0.6.5](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.4...v0.6.5) (2020-10-08)\r\n\r\n\r\n\r\n## [0.6.4](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.3...v0.6.4) (2020-09-29)\r\n\r\n\r\n\r\n## [0.6.3](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.2...v0.6.3) (2020-09-22)\r\n\r\n\r\n\r\n## [0.6.2](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.1...v0.6.2) (2020-08-23)\r\n\r\n\r\n\r\n## [0.6.1](https://github.com/sap/cloud-foundry-tools-api/compare/v0.6.0...v0.6.1) (2020-08-23)\r\n\r\n\r\n\r\n# [0.6.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.5.0...v0.6.0) (2020-08-20)\r\n\r\n\r\n\r\n# [0.5.0](https://github.com/sap/cloud-foundry-tools-api/compare/v0.4.4...v0.5.0) (2020-08-09)\r\n\r\n\r\n\r\n## 0.4.4 (2020-08-04)\r\n\r\n\r\n\r\n"},{"name":"cloud-sdk-analytics","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# cloud-sdk-analytics\r\n\r\nThis package contains the code we use for collecting usage data.\r\nPlease note that usage analytics is disabled by default, i.e. you need to explicitly opt-in for data to be collected.\r\nFor more information on how to opt-in and which data is collected, please refer to [this document](https://github.com/SAP/cloud-sdk-cli/blob/master/usage-analytics.md).\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\r\n"},{"name":"cloud-sdk-core","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# cloud-sdk-core\r\n\r\nThis package contains the core functionality for the Virtual Data Model (VDM) as well as the Cloud Platform abstractions.\r\n\r\n### Helpful Links\r\n\r\n- [Tutorials on developers.sap.com](https://developers.sap.com/tutorial-navigator.html?tag=products:technology-platform/sap-cloud-sdk/sap-cloud-sdk&tag=topic:javascript)\r\n- [SAP Cloud SDK on StackOverflow](https://stackoverflow.com/questions/tagged/sap-cloud-sdk?tab=Newest)\r\n- [SAP Cloud SDK on answers.sap.com](https://answers.sap.com/tags/73555000100800000895)\r\n- [Release notes](https://help.sap.com/doc/2324e9c3b28748a4ae2ad08166d77675/1.0/en-US/js-index.html)\r\n- [All versions of this documentation](https://help.sap.com/viewer/product/SAP_CLOUD_SDK/1.0/en-US)\r\n- [Product page of the SAP Cloud SDK](https://developers.sap.com/topics/cloud-sdk.html)\r\n- [SAP Cloud SDK Continuous Delivery Toolkit](https://github.com/SAP/cloud-s4-sdk-pipeline)\r\n- [Example Applications using the SAP Cloud SDK](https://github.com/SAP/cloud-s4-sdk-examples)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\r\n"},{"name":"cloud-sdk-generator-rest","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"## REST Generator\r\n\r\nThis is currently not release ready. excluded in `mail.ts`.\r\n\r\nThe generator wraps only the openapi-generator. \r\nThis is a flexible tool using many commandline flags and templates for easy adjustment.\r\n<br>[Command line arguments](https://github.com/OpenAPITools/openapi-generator#3---usage)\r\n<br>[Repo For mustache files](https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources/typescript-axios)\r\n\r\nIn the wrapping `generator-cli` we currently only expose `inputDir` and `outputDir` to generate tyescript-axios sources from the openapi.json files.\r\n\r\n\r\n### Things we have adjusted to the OpenApi Generator\r\n- Since the SAP graph definitions were lacking any tags we added a tag with the service name in camel case to each path of the service.\r\n- The method singature of the constructor was changed to take the accesstoken or basic for auth  and URL. \r\n  This was done by changing the `templates/baseApi.mustache` to achieve that.\r\n\r\n### Usage\r\n\r\nTo run the generator use:\r\n \r\n ```shell script\r\n ts-node `src/generator-cli.ts` -i <FolderContainingOpenApiDefinitions> -o <OutputDirectory>\r\n```\r\n\r\nOnce you have the generated classes, you can make calls via:\r\n```typescript\r\nimport { AxiosResponse } from 'axios';\r\nimport { SalesOrdersApi, InlineResponse200 as ResponseSalesOrder } from 'generated/sales-orders';\r\n\r\nconst response: AxiosResponse<ResponseSalesOrder> = await new SalesOrdersApi({ accessToken, basePath }).getSalesOrders()\r\n```\r\n\r\nBesides bearer token also basic is supported for authentication.\r\n\r\n### Problem Generator\r\n\r\n- If you add the option `'--additional-properties=withSeparateModelsAndApi=true'`\r\nand you have the templates enables, the model files are empty. Most likely there is no template found for the type.\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\r\n"},{"name":"cloud-sdk-generator","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# `@sap/cloud-sdk-generator`\r\n\r\nGenerate your own service module using a service specification (.edmx file).\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install @sap/cloud-sdk-generator\r\n```\r\n\r\n## Usage\r\n\r\nThe generator is primarily meant to be used on the command line:\r\n\r\n```sh\r\ngenerate-odata-client --inputDir path/to/your/service-specification(s) --outputDir path/where/the/modules/are/stored\r\n```\r\n\r\nRun `generate-odata-client --help` for further options.\r\n\r\nYou can also use the generator programatically. You will have to provide the options anyways.\r\n\r\n```ts\r\nimport { generateProject } from '@sap/cloud-sdk-generator';\r\n\r\n// initialize generator options based on what you want to do\r\nconst options: GeneratorOptions = initializeOptions();\r\n\r\n// creates a Project datastructure with all sourcefiles based on your options\r\nconst project = generateProject(options);\r\n\r\n// here you can modify you project if you need to\r\n\r\n// save the files at the specified location\r\nproject.save();\r\n\r\n// alternatively you can generate and save the project in one step with: generate(options)\r\n```\r\n\r\n### Helpful Links\r\n\r\n- [Tutorials on developers.sap.com](https://developers.sap.com/tutorial-navigator.html?tag=products:technology-platform/sap-cloud-sdk/sap-cloud-sdk&tag=topic:javascript)\r\n- [SAP Cloud SDK on StackOverflow](https://stackoverflow.com/questions/tagged/sap-cloud-sdk?tab=Newest)\r\n- [SAP Cloud SDK on answers.sap.com](https://answers.sap.com/tags/73555000100800000895)\r\n- [Release notes](https://help.sap.com/doc/2324e9c3b28748a4ae2ad08166d77675/1.0/en-US/js-index.html)\r\n- [All versions of this documentation](https://help.sap.com/viewer/product/SAP_CLOUD_SDK/1.0/en-US)\r\n- [Product page of the SAP Cloud SDK](https://developers.sap.com/topics/cloud-sdk.html)\r\n- [SAP Cloud SDK Continuous Delivery Toolkit](https://github.com/SAP/cloud-s4-sdk-pipeline)\r\n- [Example Applications using the SAP Cloud SDK](https://github.com/SAP/cloud-s4-sdk-examples)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\r\n"},{"name":"cloud-sdk-test-util","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# cloud-sdk-test-util\r\n\r\nPackage that contains utility functions for testing, like loading credentials or creating test destinations.\r\n\r\n### Helpful Links\r\n\r\n- [Tutorials on developers.sap.com](https://developers.sap.com/tutorial-navigator.html?tag=products:technology-platform/sap-cloud-sdk/sap-cloud-sdk&tag=topic:javascript)\r\n- [SAP Cloud SDK on StackOverflow](https://stackoverflow.com/questions/tagged/sap-cloud-sdk?tab=Newest)\r\n- [SAP Cloud SDK on answers.sap.com](https://answers.sap.com/tags/73555000100800000895)\r\n- [Release notes](https://help.sap.com/doc/2324e9c3b28748a4ae2ad08166d77675/1.0/en-US/js-index.html)\r\n- [All versions of this documentation](https://help.sap.com/viewer/product/SAP_CLOUD_SDK/1.0/en-US)\r\n- [Product page of the SAP Cloud SDK](https://developers.sap.com/topics/cloud-sdk.html)\r\n- [SAP Cloud SDK Continuous Delivery Toolkit](https://github.com/SAP/cloud-s4-sdk-pipeline)\r\n- [Example Applications using the SAP Cloud SDK](https://github.com/SAP/cloud-s4-sdk-examples)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\r\n"},{"name":"cloud-sdk-util","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# cloud-sdk-utils\r\n\r\nPackage that contains general utility functions that we reuse multiple times in the SDK.\r\nWhile primarily designed for internal usage, they might also be benefical for consumers of the SDK.\r\n\r\n### Helpful Links\r\n\r\n- [Tutorials on developers.sap.com](https://developers.sap.com/tutorial-navigator.html?tag=products:technology-platform/sap-cloud-sdk/sap-cloud-sdk&tag=topic:javascript)\r\n- [SAP Cloud SDK on StackOverflow](https://stackoverflow.com/questions/tagged/sap-cloud-sdk?tab=Newest)\r\n- [SAP Cloud SDK on answers.sap.com](https://answers.sap.com/tags/73555000100800000895)\r\n- [Release notes](https://help.sap.com/doc/2324e9c3b28748a4ae2ad08166d77675/1.0/en-US/js-index.html)\r\n- [All versions of this documentation](https://help.sap.com/viewer/product/SAP_CLOUD_SDK/1.0/en-US)\r\n- [Product page of the SAP Cloud SDK](https://developers.sap.com/topics/cloud-sdk.html)\r\n- [SAP Cloud SDK Continuous Delivery Toolkit](https://github.com/SAP/cloud-s4-sdk-pipeline)\r\n- [Example Applications using the SAP Cloud SDK](https://github.com/SAP/cloud-s4-sdk-examples)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://help.sap.com/doc/9dbcab0600b346c2b359a8c8978a45ba/1.0/en-US/index.html).\r\n"},{"name":"cloud-sdk-workflow-service-cf","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/cloud-sdk-workflow-service-cf\r\n\r\nThis package contains the OpenAPI client for the SAP Workflow API.\r\nThis API uses the SAP Workflow service. With the API, you can, for example, start new workflow instances and work with tasks.\r\n\r\nNote (relevant only for SAP API Business Hub): For authentication purposes, the API uses OAuth 2.0 security (with JSON Web Token, JWT). Thus, \"Try Out\" only works with an explicitly configured environment.\r\nFor more information on how to obtain the necessary parameters, please see [Determine Service Configuration Parameters](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/abb1f66b2c3b4983b6b656654cfc3d2b.html) in the documentation.\r\nThe OAuth client you use must have [extended scopes](https://help.sap.com/viewer/e157c391253b4ecd93647bf232d18a83/Cloud/en-US/baf2847f6d1c401a83ca3a1427b8ff84.html).\r\n\r\nNote: These APIs are designed for loosely coupled clients. This means:\r\n\r\n- If workflow service adds fields to responses, the API version number does not increase. Your client must ignore new fields.\r\n- The order of fields in responses and of entries in arrays may change. This applies unless the API provides an explicit means to specify the desired order.\r\n\r\n\r\n## Usage Example\r\n```\r\nimport { WorkflowInstancesApi } from '@sap/cloud-sdk-workflow-service-cf';\r\n\r\nconst responseData = await WorkflowInstancesApi.queryInstances().execute({ destinationName:'myDestinationName' });\r\n```\r\n\r\n## Helpful Links\r\n\r\n- [SAP Cloud SDK](https://github.com/SAP/cloud-sdk-js)\r\n- [SAP Cloud SDK Documentation portal - Getting started guide](https://sap.github.io/cloud-sdk/docs/js/getting-started)\r\n- [SAP Cloud SDK Documentation portal - API documentation](https://sap.github.io/cloud-sdk/docs/js/api)\r\n- [developers.sap.com - Product Overview](https://developers.sap.com/topics/cloud-sdk.html)\r\n- [developers.sap.com - Tutorials](https://developers.sap.com/tutorial-navigator.html?tag=software-product:technology-platform/sap-cloud-sdk&tag=tutorial:type/tutorial&tag=programming-tool:javascript)\r\n- [Release notes](https://help.sap.com/doc/2324e9c3b28748a4ae2ad08166d77675/1.0/en-US/js-index.html)\r\n- [SAP API Business Hub](https://api.sap.com/)\r\n    \r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this module will be documented centrally in the [SAP Cloud SDK release notes](https://sap.github.io/cloud-sdk/docs/js/release-notes-sap-cloud-sdk-for-javascript-and-typescript/).\r\n"},{"name":"consume-services-types","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# consume-services-types\r\n\r\nCommon types definition for different service providers.\r\n"},{"name":"consume-services","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# consume-services\r\n"},{"name":"create-hana-database-artifact","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Database Artifact Creation for Visual Studio Code\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"## 1.10.0\r\n\r\n### New Features\r\n- Artifacts can be generated into CAP projects\r\n\r\n### Fixes\r\n- The default hierarchy type for calculation views is set to \"SQL\"\r\n- The content of the analytical privilege \"AP1\" from the getting started scenario contained wrong data\r\n\r\n## 1.9.0\r\n\r\n### Fixes\r\n- Fixed a typo in the settings description\r\n- Adjustments for the changed publisher of the SAP HANA Database Explorer extension\r\n\r\n## 1.8.0\r\n\r\n### New Features\r\n- How to access remote objects was added as a second getting started scenario\r\n- The extension now reports anonymized usage analytics data\r\n\r\n## 1.7.0\r\n\r\n### New Features\r\n- It is now possible to deploy artifacts directly from the SAP HANA getting started guide\r\n\r\n### Fixes\r\n- Various SAP HANA getting started guide improvements\r\n\r\n## 1.6.0\r\n\r\n### Fixes\r\n- SAP HANA getting started guide improvements\r\n\r\n## 1.5.0\r\n\r\n### New Features\r\n- Add SAP HANA getting started guide\r\n\r\n## 1.4.0\r\n\r\n### New Features\r\n- It is now possible to create Document Store Collection Index (hdbcollectionindex) artifacts in projects with minimum feature version 1006 or higher\r\n\r\n### Fixes\r\n- Set SQL execution by default in generated calculation views\r\n\r\n## 1.3.0\r\n\r\n### New Features\r\n- The last-used path is now stored as a workspace setting\r\n\r\n### Fixes\r\n- Fix sample content for Document Store Collection (hdbcollection)\r\n- The artifact name is now generated correctly if an empty namespace is defined\r\n- Update dependencies\r\n\r\n## 1.2.0\r\n\r\n### Fixes\r\n- Update dependencies\r\n\r\n## 1.1.0\r\n\r\n### New Features\r\n- It is now possible to graphically choose a time data table when creating a time-based dimension calculation view\r\n\r\n### Fixes\r\n- Synonym config file sample content syntax was fixed\r\n- Grants file sample content syntax was fixed\r\n- CDS files now contain sample content\r\n\r\n## 1.0.0\r\n\r\nInitial release"},{"name":"destination-instance-service-provider","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/destination-instance-service-provider\r\n\r\n## Overview\r\n\r\n**destination-instance-service-provider** is an npm package that provides the APIs necessary for exposing destination service instance systems and services.\r\n\r\n## Usage\r\n\r\nTo add this package as a dependency in your **package.json** file, under the \"dependencies\" section, add the following dependency: `\"@sap/destination-instance-service-provider\": [Version]`\r\n\r\n## APIs\r\n\r\nThis repository exposes APIs for the exploration of SAP systems and services that are consumed from Cloud Foundry destination service instances.\r\n\r\n### init\r\n\r\nThis API initializes a provider repository representing a given destination instance.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; If cfTarget is not provided, there is an assumption that the user is already logged in to a Cloud Foundry space. The destination instance will be retrieved from this Cloud Foundry space.\r\n\r\n`async init(destinationInstanceName: string, cfTarget?: cfTools.ITarget): Promise<void>`\r\n\r\n**destinationInstanceName**: Defines the name of the destination service instance from which the systems will be retrieved.  \r\n**cfTarget (this is optional)**: Defines the Cloud Foundry configuration that can be used as a parameter to access the service instance.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _CF_CONFIGURATION_: This error is displayed if the user is not properly logged in to the Cloud Foundry space.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if the system cannot retrieve information from Cloud Foundry.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n### getSystems\r\n\r\nThis API retrieves systems exposed by the service instance that initialized the provider.\r\n\r\n`async getSystems(filter?: Filter): Promise<ProviderSystem[]>`\r\n\r\n**filter (this is optional)**: Only retrieves systems that comply with the given filter.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if data cannot be retrieved from the system.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n### getServices\r\n\r\nThis API retrieves services exposed by a specific system.\r\n\r\n`async getServices(options?: Record<string, any>): Promise<Service[]>`\r\n\r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _credentials (this is optional)_: for services that require authentication.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _filter (this is optional)_: used to filter for relevant services.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if data cannot be retrieved from the system.\r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n### getMetadata\r\n\r\nThis API retrieves metadata exposed by a specific system.\r\n\r\n`async getMetadata( service: Service, encoding: EncodingMode, options?: Record<string, any> ): Promise<ServiceMetadata>`\r\n\r\n**service**: Defines the service from which the metadata will be retrieved.  \r\n**encoding**: Defines the required encoding requested by the consumer.  \r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _credentials (this is optional)_: for services that require authentication.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _filter (this is optional)_: used to filter for relevant services.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _relativeUrl_ (this is optional)*: for a non-full URL - provides the relative URL to the service.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *RETRIEVE_DATA*: This error is displayed if metadata cannot be retrieved from the service.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *INTERNAL_ERROR\\*: This error is displayed for any other exception.\r\n\r\n### getAnnotations\r\n\r\nThis API retrieves an array of annotations exposed by a specific system.\r\n\r\n`async getAnnotations(service: Service, options?: Record<string, any>): Promise<Annotation[]`\r\n\r\n**service**: Defines the service from which the annotations will be retrieved.  \r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _credentials (this is optional)_: for services that require authentication.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if annotations cannot be retrieved from the service.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n## Examples\r\n\r\n_Initialize repository - Provides the destination service instance name._  \r\n`await destInstRepo.init(\"SAP-IT-destination\");`\r\n\r\n_List the destination instance systems (destinations)._  \r\n`const instSystems = await destInstRepo.getSystems();`\r\n\r\n_Create credentials object - Used to access a system or service that requires authentication._  \r\n`const credentials = getCredentialsObject(\"username\", \"password\");`\r\n\r\n_Select a system and list the services it provides (catalog services)._  \r\n_Note: Add credentials since the system needs authentication._  \r\n`const instSelectedSystem = findByName(instSystems, \"U1Y010_BASIC\");`  \r\n`const instServices = await instSelectedSystem.getServices({credentials: credentials});`\r\n\r\n_Create a filter object - Used to filter for required services._  \r\n`const filter = getNewFilter(\"protocol\", [\"odatav2\"]);`\r\n\r\n_Select a service and consume the metadata and annotations that the service provides._  \r\n_Note: Add credentials since the system needs authentication._  \r\n`const instSelectedService = findByName(instServices, \"ZPAGE_BUILDER_CUST\");`  \r\n`const instMetadata = await instSelectedSystem.getMetadata(instSelectedService, instProvider.EncodingMode.XML, {credentials: credentials, filter: filter});`  \r\n`const instAnnotations = await instSelectedSystem.getAnnotations(instSelectedService, {credentials: credentials});`\r\n\r\n- **credentials**: An object that enables you to add credentials to your system request.  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _USER_: system username  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _PSW_: system password  \r\n   Credentials can be built as follows:\\*  \r\n   credentials = new Authentication(<USR>, <PSW>);\r\n\r\n- **filter**: An object that enables you to filter for systems that you want to receive.  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _FILTER_KEY_: (string) A key used to filter the list of systems.  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _FILTER_VALUES_: (array of strings) accepted values of the filter key, separated by commas.  \r\n   Filters can be built as follows:  \r\n   filter = new Filter(new Map([[<FILTER_KEY>, <FILTER_VALUES>]]));\r\n\r\n### Git and GitHub\r\n\r\n1. Open Git Bash, go to the local repository directory, and sync with the remote repository.\r\n\r\n2. Develop in a **Local** branch.\r\n\r\n- Create a new descriptive branch `git checkout -b my-local-branch-name` <br>**OR** rename the previous one `git branch -m my-local-branch-name`.\r\n- Make sure _my-local-branch-name_ is **NOT master** and that there is **no existing** branch with this name.\r\n\r\n3. Sync with the remote repository.\r\n\r\n- Fetch the code from the master branch by running `git fetch; git merge`.\r\n\r\n4. Make your local changes.\r\n\r\n- Run `npm install` to install dependencies.\r\n- Run `npm run test` to compile the TypeScript code to JavaScript and run tests.\r\n\r\n5. Commit and push.\r\n\r\n- **Do not push directly to master!!!**\r\n- Commit your changes and push to create a new branch on GitHub by running `git push origin my-local-branch-name`\r\n- For consecutive commits, **DO NOT** use `commit amend`. You should create a new commit and push to the same feature branch again. This will add an extra commit to your pull request and retrigger the voters.\r\n\r\n6. Open a pull request.\r\n\r\n- Click 'New pull request' next to your branch.\r\n- Edit the pull request name with BLI or BCP. For example: _\"BLI DEVXCORE-123: my new feature\"_ or _\"BCP 1670451810: Fix my bug\"_.\r\n- A new branch _(my-local-branch-name)_ is created in the GitHub repository.\r\n- The new code should enable all voters and code review to pass successfully.\r\n\r\n7. Update the existing pull request.\r\n\r\n- Stage your changes and create a new commit.\r\n- Perform Git fetch.\r\n- Perform Git merge on origin/master - Merge your changes with the most updated master branch.\r\n- Push your changes to your _my-local-branch-name_ (Git push origin _my-local-branch-name_).\r\n\r\n8. Merge the pull request.\r\n\r\n- If all voters passed (XMake + JaaS Voter), click 'Merge pull request'.\r\n- If your pull request contains several commits, you combine them in one commit from GitHub by selecting the 'Confirm squash and merge' option from the Merge dropdown list.\r\n\r\n9. Delete your branch.\r\n\r\n- After the merge is complete, go to **Code > Branches**.\r\n- Look for your merged pull request and click the delete branch icon.\r\n\r\n### Tests and Coverage\r\n\r\n- Run `npm run test` to run the unit tests written in Mocha and the coverage test.\r\n\r\n## Release\r\n\r\nBump the version in the \"package.json\" GitHub file.\r\n\r\n**_Notes:_**\r\nMake sure to follow this versioning concept:\r\n\r\n- When providing new features (when releasing at the end of the sprint or when a new feature is ready), bump a major version (for example, from 1.1.0 to 1.2.0).\r\n- When providing a bug fix to an existing version (\"hotfix\"), bump a minor version (for example, from 1.1.0 to 1.1.1).\r\n"},{"name":"destinations","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# **@sap/destinations**\r\n\r\nUtility for consumption of the [SAP Cloud Platform Destination Service](https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/7e306250e08340f89d6c103e28840f30.html).\r\n\r\nExample usage:\r\n```javascript\r\nconst axios = require('axios')\r\nconst https = require('https')\r\nconst request = require('request')\r\nconst xsenv = require('@sap/xsenv')\r\nconst destinationsClient = require('@sap/destinations')\r\n\r\n//xsuaa service instance is needed only in multitenant scenario\r\nconst services = xsenv.getServices({\r\n  'destination-svc': { tag: 'destination' },\r\n  'xsuaa': { tag: 'xsuaa' }\r\n})\r\n\r\nconst client = destinationsClient(services)\r\n\r\nclient.load(\"destination-name\").then(destination => {\r\n    // Node.js standard http\r\n    // options object with correct Authorization header already set\r\n    const req = https.get(destination.toOptions(), (res) => {\r\n      res.setEncoding('utf8')\r\n      let data = ''\r\n      res.on('data', (chunk) => {\r\n        data += chunk\r\n      })\r\n      res.on('end', () => {\r\n        console.log(`standard - body: ${data}`)\r\n      })\r\n    })\r\n\r\n    // requests\r\n    request(destination.toOptions(), (error, response, body) => {\r\n      console.log('request - error:', error)\r\n      console.log('request - code:', response && response.statusCode)\r\n      console.log('request - body:', body)\r\n    })\r\n\r\n    // axios\r\n    axios(destination.toOptions())\r\n      .then(function (response) {\r\n        console.log('axios - code:', response.status, response.statusText)\r\n        console.log('axios - body:', response.data)\r\n      })\r\n      .catch(function (error) {\r\n        console.log('axios - error:', error.message)})\r\n})\r\n```\r\n\r\n# **What does @sap/destinations do?**\r\nThe destination service client will fetch a destination with a given name from the SAP Cloud Platform Destination Service. In the background @sap/destinations also fetches an access_token for the destination service so you don't have to.\r\n\r\nIf the requested destination is configured with **Basic Authentication** or **oAuth Client Credentials**, the returned object will contain access token for the destination itself in addition to the destination credentials. If it's configured with **oAuth User Token Exchange**, the returned object will contain the exchanged user token. The Destination Service does the exchange authomatically.\r\n\r\n```javascript\r\nclient.load(\"dest-oauth\").then( destination => {\r\n    const destAccessToken = destination.authTokens[0]\r\n    const destClientId = destination.destinationConfiguration.clientId\r\n    const destClientSecret = destination.destinationConfiguration.clientSecret\r\n    ...\r\n```\r\n\r\nThe destinations client returns an object with the same structure as the response from the SAP Cloud Platform Destination Service.\r\nYou can read more on the structure of the returned object in the [SAP Cloud Platform Destination Service Documentation](https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/83a3f3b9cd314618aba651044ed5b9df.html).\r\n\r\nFor convenience the returned destination object has a `toOptions()` function, so it could be easily passed to http clients like standard Node.js `http/https` packages, [request](https://www.npmjs.com/package/request), [axios](https://www.npmjs.com/package/axios) etc.\r\n\r\n```javascript\r\nclient.load(\"dest-name\").then(destination => {\r\n  request(destination.toOptions(), (error, response, body) => {\r\n    ...\r\n  })\r\n    ...\r\n```\r\n\r\n# **Supported Destination Types**\r\nCurrently the client supports and can fetch destinations configured with **NoAuthentication**, **Basic Authentication**, **oAuth Client Credentials** or **oAuth User Token Exchange*.\r\n\r\n# **API**\r\n## **Class: DestinationServiceClient**\r\n\r\n### **new DestinationServiceClient(services)**\r\nCreates a new DestinationServiceClient instance.\r\n\r\n* **`services`** *Object* Parameter containing the service binding information for the Destination Service and optionally XSUAA.\r\nThe structure is the same as the one in VCAP_SERVICES. If there is XSUAA passed, it will be used for token handling, otherwise the default\r\nUAA configured in the Destination Service binding will be used.\r\n* **_returns_** *DestinationServiceClient* a destination client for the corresponding destination service instance.\r\n\r\n### **load(destinationConfig)**\r\nAsynchronous. Fetches a destination from the Destination Service.\r\n\r\n* **`destinationConfig`** *string* or *Object* String containing the name of the destination or, in case of oAuth User Token Exchange Flow, a destination configuration object that has to be loaded. The object could contain the follwing properties:\r\n    - **`name`** *string* Name of the destination.\r\n    - **`token`** *string* User token that needs to be exchanged to access the destination. In case **`userDestination`** is configured, this token will be set as `Authorization` header in the request to the Detsination service. Otherwise this token will be set as `X-user-token` header.\r\n   - **`userDestination`** *bool* See above. Default is false.\r\nThe name resolution is as follows - first the library will look through destinations configured on instance level and then on subaccount level.\r\n* **_returns_** *Destination* A destination object with the same structure as the [Destination Service response](https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/83a3f3b9cd314618aba651044ed5b9df.html).\r\n\r\n\r\n## **Class: Destination**\r\n\r\n### **toOptions()**\r\nConverts a destinations object to an Options object that can be passed to http clients (standard Node.js `http/https` packages, [request](https://www.npmjs.com/package/request), [axios](https://www.npmjs.com/package/axios) etc.)\r\n\r\n* **_returns_** *Object* Options object containing the properties: `port`, `path`, `hostname`, `protocol`, `url` (result of URL.parse of the destination url) and\r\n`headers` (Authorization header).\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 0.2.1 - 2019-06-04\r\n\r\n### Fixed\r\n- toOptions function was not setting authorisation header correctly.\r\n\r\n## 0.2.0 - 2019-05-22\r\n\r\n### Added\r\n- Support NoAuthentication destinations.\r\n- Support OAuth2UserTokenExchange destinations.\r\n\r\n## 0.1.1 - 2019-03-19\r\n\r\n### Fixed\r\n- Wrong credentials names comming from service bindings.\r\n\r\n## 0.1.0 - 2019-03-19\r\n\r\n### Added\r\n- Initial Release: Support for Basic Authentication and oAuth Client Credentials destinations.\r\n"},{"name":"di.code-validation.core","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# di.code-validation.core  \r\ncode validation controller for DI.\r\nreturning issues in code according to validators configured\r\n\r\n### install\r\n\r\nnpm install di.code-validation.core --save-dev\r\n\r\n### CodeValidation API\r\n\r\n```javascript\r\nexecuteForProject(projectPath, workspaceRootName, configuration, callbackFunction)\r\n```\r\n\r\n_basePath_ - full path for the validated folder location\r\n\r\n_options_ - an object to set additional options for execution and return values processing.\r\n\r\n_options.pathPrefix_ - validation issues paths are relative to the project path. _pathPrefix enable to set constant prefix to the returned path.\r\n\r\n_configuration_ - configuration of the validators to execute.  object of type _ValidationConfig_\r\n\r\n_callbackFunction_ - callback of results. (TBD: add also failure for callback?)\r\n\r\n_ValidationConfig_ structure:\r\n```javascript\r\n  {\r\n      \"validators\" : {\r\n          \"validator1\" : {\r\n              \"extensions\" : ['.js', '.xsjs'],\r\n              \"filters\": {\r\n                  \"levels\" :[\"error\", \"warning\", \"info\"]\r\n              }\r\n          },\r\n          \"validator2\" : {\r\n              \"extensions\" : ['.new'],\r\n              \"filters\": {\r\n                  \"levels\" :[\"error\"]\r\n              }\r\n          }\r\n          ....\r\n      }\r\n  }\r\n```\r\n\r\n_result_ structure:\r\n```javascript\r\n{\r\n    \"validator_id\" : {\r\n        \"issues\" : {\r\n            \"relative_file_path\" : [\r\n                {\r\n                    \"category\" : \"Possible Error\",\r\n                    \"checker\" : \"validator checker name\",\r\n                    \"column\" : 1,\r\n                    \"line\" : 14,\r\n                    \"message\" : \"some message\",\r\n                    \"path\" : \"relative_file_path\",\r\n                    \"ruleId\" : \"optional name of rule\",\r\n                    \"severity\" : \"error\"\r\n                }\r\n                ....\r\n            ]\r\n        }\r\n        ....\r\n    }\r\n}\r\n```\r\n\r\n#### validator API\r\n\r\nEach validator should implement following API:\r\n\r\n```javascript\r\n  validateFiles(validationMetadata, fileResources)\r\n```\r\n\r\n  _validationMetadata_ - contains following methods:\r\n  \r\n      getRootPath() - workspaceRootName\r\n  \r\n      getLevels() - array of levels of issues to return\r\n  \r\n  _fileResources_ - array of files to validate (TBD: enable validation by extension of regular expression)\r\n  \r\n      getPath() - returns the file full path\r\n      \r\n      getText() - returns the text in the file\r\n\r\n#### run validation from command line\r\n\r\nnode di.code-validation.core\\bin\\run.js \"project file location\" \"client workspace root path\"\r\n\r\n--c \"configuration file location\" - file with validation configuration. if not supplied defaults used.\r\n\r\nExample for configuration file:\r\n\r\n```javascript\r\n  var configParam = { \r\n    \"validators\" : { \r\n      \"di.code-validation.js\" : { \r\n          \"extensions\" : [\".js\", \".xsjs\"], \r\n          \"filters\": { \r\n            \"levels\" :[\"error\", \"warning\", \"info\"] \r\n            } \r\n          } \r\n        } \r\n      };\r\n  module.exports =  configParam;\r\n```\r\n\r\n--l \"log file\" - location of the outpul log file. default is the execution directory\r\n\r\n### default configuration:\r\n\r\n```javascript\r\n  validators: {\r\n    \"di.code-validation.js\": {\r\n      extensions: [\".js\", \".xsjs\"]\r\n    },\r\n    \"di.code-validation.xml\": {\r\n      extensions: [ \".xml\"]\r\n    }\r\n  }\r\n```\r\n\r\n"},{"name":"di.code-validation.grunt","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# di.code-validation.grunt\r\nprovides grunt tasks for code validation\r\n\r\n## install\r\n\r\nnpm install di.code-validation.grunt --save-dev\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar fs = require('fs');\r\nvar path = require('path');\r\n\r\nmodule.exports = function (grunt) {\r\n    \"use strict\";\r\n\r\n    var pkg = grunt.file.readJSON('package.json');\r\n\r\n    // Project configuration.\r\n    grunt.initConfig({\r\n        // Task configuration.\r\n        pkg: pkg,\r\n        codevalidation: {\r\n            options: {\r\n                projectPath: '<path to the project>',\r\n                pathPrefix: '<optionally prefix to concat to the project path>',\r\n                ignoredPaths: [<path to folders to skip validaitons for>...],            \r\n                reporter: \"problems_reporter\",\r\n                reporterOptions: {outputFile: path.join(__dirname , \"code-validation-test.log\")}\r\n            }\r\n        }\r\n    });\r\n\r\n    grunt.loadNpmTasks('di.code-validation.grunt');\r\n    grunt.registerTask('validate', ['codevalidation']);\r\n};\r\n```\r\n\r\n"},{"name":"di.code-validation.js","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# di.code-validation.js\r\n\r\nA javascript code validator for DI based on eslint, implements di.code-validation.core API.\r\n\r\n# Install\r\n\r\nnpm install di.code-validation.js --save-dev\r\n\r\n# Migrating to v2.0.0\r\n\r\nWe have made ***breaking changes*** to this release as a result of the migration to eslint _v8.x.x_. Some of the public APIs now provide **asynchronous** behavior - please review the usage example to refine your code.\r\n\r\n# Usage\r\n\r\n```javascript\r\nconst jsvalidator = require(\"di.code-validation.js\");\r\nconst ValidationMetadata = require(\"di.code-validation.core\").validationMetadata;\r\nconst FileResource = require(\"di.code-validation.core\").fileResource;\r\n\r\nconst validationMetadata = new ValidationMetadata(<proLocation>);\r\nconst fileResources = [];\r\nconst fileResource = new FileResource(<full project path>, <full file path>);\r\nfileResources.push(fileResource);\r\nconst result = await jsvalidator.validateFiles(validationMetadata, fileResources);\r\n```\r\n\r\n_result_ structure\r\n\r\n```javascript\r\n{\r\n    \"category\" : <category for the rule>,\r\n    \"checker\" : <base linter used>,\r\n    \"column\" : 0,\r\n    \"line\" : 2,\r\n    \"helpUrl\" : <url for help documentation>,\r\n    \"message\" : <message>,\r\n    \"path\" : <full file path>,\r\n    \"ruleId\" : <rule id>,\r\n    \"severity\" : <error/warning/info>\r\n}\r\n```\r\n"},{"name":"di.code-validation.json","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z"},{"name":"di.code-validation.xml","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# di.code-validation.xml\r\n"},{"name":"dwc-cli","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/dwc-cli\r\n\r\nCommand-Line Interface (CLI) for SAP Data Warehouse Cloud.\r\n\r\n## Content\r\n\r\n1. [Installation](#installation)\r\n2. [Update the CLI](#update-the-cli)\r\n3. [Versioning](#versioning)\r\n4. [Authentication](#authentication)\r\n5. [Usage](#usage)\r\n   1. [From the command line](#from-the-command-line)\r\n   2. [As a Node.js module dependency](#as-a-nodejs-module-dependency)\r\n6. [Help & Documentation](#help-documentation)\r\n7. [Community & Feedback](#community--feedback)\r\n8. [License](#license)\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install -g @sap/dwc-cli\r\n```\r\n\r\nor\r\n\r\n```bash\r\n$ yarn global add @sap/dwc-cli\r\n```\r\n\r\n## Update the CLI\r\n\r\nSee [Installation](#installation).\r\n\r\nIn case of structural changes applied to the service document (see [Initialize the CLI](#initialize-the-cli)) with a new version of Data Warehouse Cloud you need to update the CLI. In this case, after you executed a command, the CLI issues a warning:\r\n\r\n```bash\r\n$ dwc <command>\r\nYour local CLI installation is outdated. Run 'npm install @sap/dwc-cli [-g]' to update\r\n```\r\n\r\n## Versioning\r\n\r\nThe semantic versioning of the CLI is handled according to SAP Data Warehouse Cloud versions and follows the same structure for major and minor versions.\r\n\r\n```bash\r\n$ dwc -v\r\n2021.21.0\r\n```\r\n\r\nFor an in-depth explanation see the blog post on [blogs.sap.com](https://blogs.sap.com/2021/09/21/new-command-line-for-sap-data-warehouse-cloud-code-way-to-the-cloud/).\r\n\r\n## Authentication\r\n\r\nPasscodes are used for authenticating commands sent from the CLI to your SAP Data Warehouse Cloud tenant. Passcodes can be provided explicitly using the `-p, --passcode` option in case the URL to retrieve a passcode is known, or implictly using an interactive session by omitting the `-p, --passcode` option.\r\n\r\nWhen omitting the `-p, --passcode` option the CLI prompts you to provide a passcode by navigating to the passcode authentication URL for your tenant. The URL is calculated based on the provided `-H, --host` value.\r\n\r\n```bash\r\n$ dwc cache-init -H https://mytenant.eu10.hcs.cloud.sap/\r\n✔ Do you want to retrieve a passcode from https://mytenant.authentication.eu10.hana.ondemand.com/passcode? … yes\r\n✔ Enter your temporary authentication code: … **********\r\n...\r\n```\r\n\r\nThe displayed URL can be used for retrieving more passcodes by refreshing the page when sending multiple commands which can then be fed to the `-p, --passcode` option.\r\n\r\nYou can retrieve the URL directly by running the `passcode-url` command:\r\n\r\n```bash\r\n$ dwc passcode-url -H https://mytenant.eu10.hcs.cloud.sap/\r\nhttps://mytenant.authentication.eu10.hana.ondemand.com/passcode\r\n```\r\n\r\n## Usage\r\n\r\nYou can either use the CLI from the terminal or command line, or use the module as a regular dependency in your code of your Node.js project.\r\n\r\n### From the command line\r\n\r\n#### Initialize the CLI\r\n\r\nBefore you can list and run commands against your SAP Data Warehouse Cloud tenant you need to initialize the CLI first. When initializing the CLI a service document is downloaded from your SAP Data Warehouse Cloud tenant which describes the commands your tenant is able to understand. To initialize the CLI run\r\n\r\n```bash\r\n$ dwc cache-init -H https://mytenant.eu10.hcs.cloud.sap/ -p somepasscode\r\n```\r\n\r\nYou can refresh the local copy of the service document by running the `cache-init` command again.\r\n\r\nAfter you executed a command the CLI issues a warning in case the local version of the service document is outdated. In that case, run the `cache-init` command again.\r\n\r\n```bash\r\n$ dwc <command>\r\nYour local CLI cache is outdated. Run 'dwc cache-init' to update\r\n```\r\n\r\n#### List available commands\r\n\r\nTo list available commands and required or optional options attach the `-h, --help` to the top-level `dwc` command or any subcommand of `dwc`:\r\n\r\n```bash\r\n$ dwc -h\r\nUsage: dwc [options] [command]\r\n\r\nCommand-Line Interface for SAP Data Warehouse Cloud.\r\n\r\nOptions:\r\n  -v, --version           output the current version\r\n  -H, --host <host>       specifies the url host where the tenant is hosted\r\n  -h, --help              display help for command\r\n\r\nCommands:\r\n  cache-clean             clean the local CLI cache\r\n  cache-init [options]    initialize the local CLI cache\r\n  passcode-url [options]  print the passcode url\r\n  help [command]          display help for command\r\n```\r\n\r\nTo list commands for a tenant for which the CLI was initialized, add the `-H, --host` option (notice the additional command `spaces`):\r\n\r\n```bash\r\n$ dwc -H https://mytenant.eu10.hcs.cloud.sap/ -h\r\nUsage: dwc [options] [command]\r\n\r\nCommand-Line Interface for SAP Data Warehouse Cloud.\r\n\r\nOptions:\r\n  -v, --version           output the current version\r\n  -H, --host <host>       specifies the url host where the tenant is hosted\r\n  -h, --help              display help for command\r\n\r\nCommands:\r\n  cache-clean             clean the local CLI cache\r\n  cache-init [options]    initialize the local CLI cache\r\n  spaces                  manage and orchestrate spaces\r\n  passcode-url [options]  print the passcode url\r\n  help [command]          display help for command\r\n```\r\n\r\nTo show available subcommands for a top-level command, run eg:\r\n\r\n```bash\r\n$ dwc spaces -H https://mytenant.eu10.hcs.cloud.sap/ -h\r\nUsage: dwc spaces [options] [command]\r\n\r\nmanage and orchestrate spaces\r\n\r\nOptions:\r\n  -H, --host <host> specifies the url host where the tenant is hosted\r\n  -h, --help        display help for command\r\n\r\nCommands:\r\n  create [options]  creates or updates space details based on an import file\r\n  read [options]    fetches space details for a specified space\r\n  delete [options]  delete an existing space\r\n  help [command]    display help for command\r\n```\r\n\r\n```bash\r\n$ dwc spaces create -H https://mytenant.eu10.hcs.cloud.sap/ -h\r\nUsage: dwc spaces create [options]\r\n\r\ncreates or updates space details based on an import file\r\n\r\nOptions:\r\n  -f, --filePath <filePath>  specifies the file to use as input for the command\r\n  -V, --verbose              print detailed log information to console (optional)\r\n  -H, --host <host>          specifies the url host where the tenant is hosted\r\n  -p, --passcode <passcode>  passcode for interactive session authentication (optional)\r\n  -h, --help                 display help for command\r\n```\r\n\r\nThe list of available commands differs based on the content of the service document you downloaded when running `cache-init`.\r\n\r\n### As a Node.js module dependency\r\n\r\nRequire the module as usual. You can also use it in your TypeScript project using the `import` syntax.\r\n\r\n```javascript\r\nconst dwc = require(\"@sap/dwc-cli\");\r\n```\r\n\r\n#### Work with commands\r\n\r\nThe module exports a `getCommands` function which returns a map of available commands. Make sure to always specify the `host` to receive `host`-specific commands. Otherwise, when omitting the `host` information, you will only get the list of general commands like `cache-clean`, `cache-init`, ...\r\n\r\n```javascript\r\nconst MY_HOST = \"https://mytenant.eu10.hcs.cloud.sap/\";\r\n\r\nconst commands = await dwc.getCommands(MY_HOST);\r\n\r\nconsole.log(commands);\r\n// {\r\n//   dwc: [AsyncFunction],\r\n//   'cache-clean': [AsyncFunction],\r\n//   'cache-init': [AsyncFunction],\r\n//   'passcode-url': [AsyncFunction],\r\n//   'cache-show': [AsyncFunction]\r\n//   'spaces create': [AsyncFunction]\r\n//   'spaces read': [AsyncFunction]\r\n//   'spaces delete': [AsyncFunction]\r\n// }\r\n```\r\n\r\nYou can call any available command and provide required options as follows:\r\n\r\n```javascript\r\nconst MY_HOST = \"https://mytenant.eu10.hcs.cloud.sap/\";\r\n\r\nconst options = {\r\n  \"--host\": MY_HOST,\r\n  \"--passcode\": \"somepasscode\",\r\n};\r\n\r\nawait commands[\"cache-init\"](options);\r\n```\r\n\r\n`options` is a map of available options for the respective command. You have to supply either the short flag or long name of the option, including `-` or `--` for the short flag or long name.\r\n\r\n#### Handle errors during command execution\r\n\r\nIf the command fails, an error is thrown you can catch and process as usual:\r\n\r\n```javascript\r\ntry {\r\n  await commands[\"cache-show\"]();\r\n} catch (err) {\r\n  // ops, the command failed!\r\n  console.log(err);\r\n}\r\n```\r\n\r\n#### Provide custom logger function\r\n\r\nAny output of a command you execute is forwarded to the `logger.output` function. To handle the result yourself, you can provide a custom `logger.output` function implementation:\r\n\r\n```javascript\r\nlet result = [];\r\nconst output = (...args) => result.push(args);\r\ndwc.configure({ customLogger: { output } });\r\n\r\nawait commands[\"spaces read\"]({\r\n  \"--space\": \"MYSPACE\",\r\n  \"--host\": \"https://mytenant.eu10.hcs.cloud.sap/\",\r\n  \"--passcode\": \"mypasscode\",\r\n});\r\n\r\nconsole.log(result);\r\n// [\r\n//   [\r\n//     '{\\n' +\r\n//       '  \"MYSPACE\": {\\n' +\r\n//       '    \"spaceDefinition\": {\\n' +\r\n//       '      \"version\": \"1.0.4\",\\n' +\r\n// ...\r\n//       '    }\\n' +\r\n//       '  }\\n' +\r\n//       '}'\r\n//   ]\r\n// ]\r\n```\r\n\r\n#### Provide custom passcode retrieval function\r\n\r\nYou can also provide a custom passcode retrieval function which is called every time before a command is executed. The function is expected to return a promise resolving into a string, the passcode. This way you can, for example, make use of programmatic passcode retrieval as described in [this blog](https://blogs.sap.com/2021/09/27/automatically-add-members-to-spaces-in-sap-data-warehouse-cloud-using-sap-dwc-cli/) using a headless browser and can omit the `--passcode` option when executing commands. The function needs to be configured only once before executing the first command.\r\n\r\n```javascript\r\nconst logger = {\r\n  customLogger: { output: console.log },\r\n};\r\n\r\nconst passcodeFunction = () => {\r\n  // instantiate headless browser, retrieve passcode, return it\r\n};\r\n\r\ndwc.configure(logger, passcodeFunction);\r\n\r\n// no --passcode option required\r\nawait commands[\"spaces read\"]({\r\n  \"--space\": \"MYSPACE\",\r\n  \"--host\": \"https://mytenant.eu10.hcs.cloud.sap/\",\r\n});\r\n```\r\n\r\n## Help Documentation\r\n\r\nFind the full documentation on [help.sap.com](https://help.sap.com/viewer/9f804b8efa8043539289f42f372c4862/cloud/en-US/5eac5b71e2d34c32b63f3d8d47a0b1d0.html), check out the blog post on [blogs.sap.com](https://blogs.sap.com/2021/09/21/new-command-line-for-sap-data-warehouse-cloud-code-way-to-the-cloud/) or use option `-h, --help`:\r\n\r\n```bash\r\n$ dwc <command> -h\r\n```\r\n\r\n## Community & Feedback\r\n\r\nSAP Community provides a forum where you can ask and answer questions, and comment and vote on the questions of others and their answers.\r\n\r\nSee [SAP Data Warehouse Cloud community](https://community.sap.com/topics/data-warehouse-cloud) for more details and use the tag _dwc-cli_ for questions concerning the CLI.\r\n\r\n## License\r\n\r\nThis package is provided under the terms of the [SAP Freeware License Agreement](https://tools.hana.ondemand.com/sap-freeware-license.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## 2022.13.0\r\n\r\n### Added\r\n\r\n- **Option --pretty**: You can now control whether to pretty-format the output. For all commands that return content you can optionally specify option `--pretty` to `JSON.stringify(content, null, 2)` the output. If omitted, the content will be returned as is. This also changes the default behavior when not specifying option `--output`, but showing the content directly in the terminal. Previously, the content was always formatted when printed to the terminal. Now, you have to explicitly add option `--pretty` in this case, too.\r\n\r\n## 2022.9.1\r\n\r\n### Fixed\r\n\r\n- **Local cache issue**: After initializing the CLI using `cache-init`, no additional commands like `spaces` was available. The downloaded discovery document for the tenant in question was effectively ignored.\r\n\r\n## 2022.9.0\r\n\r\n### Fixed\r\n\r\n- **Respect HTTP protocol of tenant entered by user**: No matter what the protocol of the tenant (`https` or `http`), the HTTP request send to the backend service of the respective tenant was always using `https`. This can cause issues if the client using the CLI is hidden behind a HTTP proxy which only allows for `http` requests. This addresses cases where commands failed with errors like _\"self signed certificate in certificate chain\"_.\r\n- **The CLI could not be used as a regular Node.js dependency** using the `requires` or `import` syntax within a Node.js project. Users of the CLI always had to use Node.js' `exec` functionality to work with the CLI. For more information, see [_As a Node.js module dependency_](README.md#as-a-nodejs-module-dependency).\r\n"},{"name":"dwf-core","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/dwf-core\r\nContains core functionality used across Data Warehousing Foundation backend\r\nand reuse packages to be consumed by data warehouse projects.\r\n\r\nNot intended for direct use though.\r\n","changelog":"# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\n\r\n## [2.2.4] 2022-04-09\r\n### Added\r\n- LICENSE file\r\n\r\n## [2.2.1] 2018-01-08\r\n### Added\r\n- Add CHANGELOG.md (this file) and publishable README.md\r\n\r\n### Changed\r\n- update node dependencies\r\n"},{"name":"dwf-deploy","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"stable: [master](../../tree/master) - [change log](../../tree/master/CHANGELOG.md) - [latest release](../../releases/latest) |  development: [master](../../tree/master) - [change log](../../tree/master/CHANGELOG.md) - [all releases](../../releases) - [development guidelines](../../wiki)\r\n\r\n# dwf-deploy\r\n\r\nThe DWF Deploy\r\n - Checks for unsupported design time artefacts - ok (DWF 2.0 SP01)\r\n - Prepares the payload for the materialization (i.e. processes the dwfnamespace files) - ok (DWF 2.0 SP01)\r\n - Executes the materialization of the design to runtime objects, where the transactional scope is on module level [dwf-runtime](../../../../DWF/dwf-runtime) - ok (DWF 2.0 SP01)\r\n - Grants required privileges to the technical user (i.e. to be able to perform the exposed actions) - TODO\r\n\r\nThe implementation is based on [xs2/hdideploy.js](../../../../xs2/hdideploy.js).\r\n\r\n```\r\n  +-----------------+            +-----------------+    +-----------------+\r\n  | dwf module      |            | Web IDE         |    | ... module      |\r\n  | w/ dwf-deploy   |            |                 |    |                 |\r\n  +-----------------+            +-----------------+    +-----------------+\r\n\r\n           |                              |                      |\r\n           |                              |                      |\r\n \\/ design -> runtime                        \\/ discover/execute\r\n           |                              |                      |\r\n           |                              |                      |\r\n\r\n  +-----------------------------------------------------------------------+\r\n  | dwf-runtime                                                           |\r\n  | types(toe,dlm), instances(toe/chaim, dlm/profile), actions (execute)  |\r\n  +-----------------------------------------------------------------------+\r\n```\r\n\r\nThe materialization patterns\r\n - .txt - accepted, but not processed\r\n - .dwfnamespace - overwrites the default logic for calculating the namespace. Default namespace for the src folder is calculated based on the following setting { \"name\": \"{mta.yaml mta name}.{mta.yaml dwf-module name}.src\", \"subfolder\": \"append\" }\r\n - .dwftaskchain - {mta name}/{dwf-module name}/src/.../toeChainExample.dwftaskchain -> {dwf-toe url per extension}/<namespace>/toeChainExample\r\n - .dwfdlmprofile - {mta name}/{dwf-module name}/src/.../dlmProfileExample.dwfdlmprofile -> {dwf-dlm-backend url per extension}\r\n\r\nThe considered scenarios\r\n - deploy/update: version >= 2.0.x\r\n - rename: version >= 2.2.x\r\n - delete: version >= 2.2.x\r\n - delta: version >= 2.2.x\r\n\r\n","changelog":"# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [2.6.4] - 2022-04-08\r\nAdded:\r\n- LICENSE file\r\n- BOM.json\r\n\r\nFixed:\r\n- For release on NPMJS via MoMa pipeline\r\n## [2.6.1] - 2021-08-20\r\nAdded:\r\n- Logs the nodejs version\r\n\r\nFixed:\r\n- Supports node 14\r\n\r\n## [2.6.0] - 2021-01-29\r\nAdded:\r\n- To be used with DWF 2.0 SP06\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Supports node 12\r\n\r\n## [2.5.0] - 2020-12-15\r\nAdded:\r\n-\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Requires engine ^10.0.0 || ^12.0.0\r\n\r\n## [2.4.1] - 2020-03-19\r\nAdded:\r\n-\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Requires engine ^8.0.0 || ^10.0.0\r\n\r\n## [2.4.0] - 2018-09-13\r\nAdded:\r\n- .dwfdlmtablegroup - the design time artifact for modeling text, where the content of the file can be any valid text\r\n- .dwfndso - the design time artifact for modeling text, where the content of the file can be any valid text\r\n\r\nFixed:\r\n- .dwfnamespace - calculation and handling\r\n\r\n## [2.3.0] - 2018-03-05\r\nAdded:\r\n- Released for DWF 2 SP03\r\n\r\nFixed:\r\n- changelog - complies with the 'Keep a Changelog' format\r\n- Requires engine ^6.9.1\r\n\r\n## [2.2.4] - 2017-09-07\r\n### Fixed\r\n- .dwfnamespace - fixed calculation, will require redeploy\r\n\r\n## [2.2.3] - 2017-08-15\r\n### Fixed\r\n- license – shall have no license\r\n\r\n## [2.2.2] - 2017-08-11\r\n### Fixed\r\n- trace - the version of the module\r\n- repository - properly to update the providers and object types\r\n\r\n## [2.2.1] - 2017-06-29\r\n### Fixed\r\n- minor fixes\r\n- dwfdlmprofile - aligns with the general requirements for deployment of design time artefacts\r\n- log and trace - handles better the sensitive data\r\n- verbose - traces the details of the request and response\r\n\r\n## [2.2.0] - 2017-05-30\r\n### Added\r\n- .dwfnamespace - schema validation\r\n- repository - persists the calculated hash in the object instance\r\n- dwf-template - removes the open source dependencies that are required for its Backend module, because they shall be made available via the dwf-dws-client\r\n- .dwftaskchain -  delta-deployment\r\n\r\n## [2.0.3] - 2017-03-21\r\n### Fixed\r\n- dwf-template - bumps the versions of express and body-parser\r\n\r\n## [2.0.2] - 2017-03-21\r\n### Fixed\r\n- dwf-template - removes the dependency to swagger-express-mw\r\n\r\n## [2.0.1] - 2017-03-14\r\n### Added\r\n- dwf-template - adds the open source dependencies that are required for its Backend module\r\n\r\n### Fixed\r\n- stdout and stderr - writes synchronously to avoid loss of log output in case of crashes, etc.\r\n- trace - removes the sensitive information for the traced data\r\n- dwf-template - adds the dependencies that are required by the Backend module of our dwf-template\r\n- ssl certificate - loads the certificate by calling xsenv.loadCertificates(). If no certificates are loaded, then falls back to process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0 to avoid rejecting unauthorized backends\r\n- org_guid and space_guid - fetched from the environment and pushed to the repository\r\n\r\n## [2.0.0] - 2017-02-23\r\n### Added\r\n- dwf module environment - isolation per version, currently used for version 1\r\n- repository - updates the dwf repository after dwf service provider is modified\r\n- .dwfnamespace - the design time artifact for modeling namespaces, wihch are different than the default ones\r\n- command line arguments - help, version, trace, verbose, exit and rejectUnauthorized\r\n- .dwftaskchain - batch post for all task chains will replace the old post per task chain, to ensure the deployment transaction of module level\r\n- .txt - the design time artifact for modeling text, where the content of the file can be any valid text\r\n- .{any extension} - rejects the deployment of dwf-modules, which contain unsupported file extensions\r\n - .dwftaskchain - the design time artifact for modeling task chains, where the content of the file shall be a valid stringified json\r\n\r\n### Fixed\r\n- empty dwf module - Cannot read property 'forEach' of undefined: \\@sap\\dwf-deploy\\lib\\dwf\\repository.js:35\r\n- .dwftaskchain - supports nameless designtime files (i.e. .dwftaskchain as a complete file name)\r\n- service instance - logs the name of the service instance (a.k.a. container) to which is deploying\r\n- environment - expects the finalized structure for DWF 2.0 SP00 and HANA 2 SP01\r\n- the stack trace of an error - will not be lost, but will be traced\r\n- .dwftaskchain - will check the status code in the response of the post http call\r\n- .dwftaskchain - will abort the deployment, when two or more designtime files defining the same runtime object\r\n- .dwftaskchain - the default namespace of the runtime object is now prefixed with {mta.yaml mta name}.{mta.yaml dwf-module name}\r\n - .dwftaskchain - the name of the runtime object is derived by the file name, but without its file extension\r\n"},{"name":"dwf-dlm-backend","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# dwf-dlm-backend\r\n\r\nThis is the Data Lifecycle Management (DLM) as an npm module.\r\n","changelog":"# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [2.5.3] - 2022-04-09\r\nAdded:\r\n- Add LICENSE file\r\n- Add BOM json\r\n\r\nFixed:\r\n- Release on NPMJS\r\n\r\n## [2.5.1] - 2023-03-19\r\nAdded:\r\n-\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n\r\n## [2.5.0] - 2020-12-23\r\nAdded:\r\n-\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Requires engine ^10.0.0 || ^12.0.0\r\n\r\n## [2.3.2] - 2019-03-22\r\n###  Added: \r\n- Bumped version of dwf-core to 2.2.2\r\n\r\n### Fixed:\r\n- \r\n\r\n## [2.3.1] - 2018-09-13\r\n### Added:\r\n-\r\n\r\n### Fixed:\r\n- Schema Validation of dlmProfile :: global.node[0] datastore should have atleast 1 non empty key\r\n\r\n## [2.3.0] - 2018-03-02\r\n### Added:\r\n- Released for DWF 2 SP03\r\n- Content Validation for tableExtension, tableExternal, and tableInternal\r\n- extension node\r\n\r\n### Fixed:\r\n- warning for empty keys for tableExternal, ExtentionNode type ROUNROBIN\r\n- the content validation the dlm profiles: partition_level_1\r\n- content validation - node[2]/../column/key - no key is accecpted, when (extension node and roundrobin) or table external\r\n- npm-shrinkwrap\r\n- Schema Validation of dlmProfile :: dlmprofile--> runtime--> node--> action--> view--> \"pruningUnionNode\" renamed as \"pruning\"\r\n\r\n## [2.2.3] -2017-08-30\r\n### Added:\r\n-\r\n\r\n### Fixed:\r\n-\r\n\r\n## [2.2.2] -2017-08-15\r\n\r\n### Added:\r\n-\r\n\r\n### Fixed:\r\n- dlm profile - content validation\r\n\r\n## [2.2.1] -2017-08-11\r\n\r\n### Added:\r\n-\r\n\r\n### Fixed:\r\n- start script - exposes the main.js for successful start\r\n\r\n## [2.2.0] -2017-08-11\r\n\r\n### Added:\r\n- dlm profile - schema validation (Semantics)\r\n- dlm profile - content validation\r\n\r\n### Fixed:\r\n-\r\n"},{"name":"dwf-dws-client","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Data Warehouse Services Client\r\nThis Node.js package registers the SAP default task types at the Data Warehouse\r\nScheduler that need access to the local HDI and DWF containers of the consuming\r\nproject. In addition it runs an HTTP server to provide task type related\r\nendpoints for value helps and task execution.\r\n\r\n# Usage\r\nAdd this package as dependency in a standard Node.js module in your XSA\r\napplication.\r\n\r\nIn your development descriptor `mta.yaml` ensure that HDI (type\r\n`com.sap.xs.hdi-container` and DWF (type `com.sap.xs.dwf-edw-client`) services\r\nare bound in the resources section. For example:\r\n\r\n```yaml\r\nresources:\r\n- name: myapp-dws\r\n  type: com.sap.xs.dwf-edw-client\r\n  properties:\r\n      dwf-edw-client-name: ${service-name}\r\n- name: myapp-hdi\r\n  type: com.sap.xs.hdi-container\r\n  properties:\r\n      hdi-container-name: ${service-name}\r\n```\r\n\r\nThe service instances have to be required by the module consuming this package\r\n\r\n```yaml\r\nmodules:\r\n- name: myapp-Backend\r\n  type: nodejs\r\n  path: Backend\r\n  requires:\r\n    - name: myapp-hdi\r\n    - name: myapp-dws\r\n```\r\n\r\nIn the start script of your Node.js module load this package and instantiate\r\nthe client for the Task Orchestration Engine of the Data Warehouse Scheduler\r\n(TOE):\r\n\r\n```js\r\nconst xsenv = require('@sap/xsenv');\r\nconst dwsClient = require('@sap/dwf-dws-client');\r\n\r\nconst loopBackUrl = JSON.parse(process.env.VCAP_APPLICATION).full_application_uris[0];\r\nconst rejectUnauth = true;\r\nconst TaskChain = dwsClient.taskChain.createTaskChainClient(\r\n  xsenv.getServices({\r\n    dwf: {\r\n      tag: 'dwf'\r\n    }\r\n  }).dwf,\r\n  loopBackUrl,\r\n  rejectUnauth\r\n);\r\n```\r\n\r\nTo allow the scheduler to call the registered endpoints, start an HTTP server\r\nand expose the routes. Below, you see an example using\r\n[express.js](https://expressjs.com).\r\n**Be aware** that this example omits proper authentication and\r\nauthorization checks which must be implemented for productive use.\r\n\r\n```js\r\nconst PORT = process.env.PORT || 3000;\r\nconst express = require('express');\r\nconst app = express();\r\n\r\nTaskChain.addRouter(app, '/backend');\r\napp.listen(PORT, err => {\r\n  if (err) {\r\n    console.error(err);\r\n    process.exit(2);\r\n  }\r\n\r\n  TaskChain.registerTaskGroups(err1 => {\r\n    if (err1) {\r\n      console.error(err1);\r\n      process.exit(1);\r\n    }\r\n    console.log('Backend module listening on: ' + PORT);\r\n  });\r\n});\r\n```","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [2.6.6] - 2022-04-09\r\n\r\n### Changed\r\n\r\n- Add LICENSE file\r\n\r\n## [2.6.0] - 2021-01-27\r\n\r\n### Changed\r\n\r\n- Update node.js version\r\n- Update \"@sap/hana-client\" to \"2.6.58\"\r\n- Update \"@sap/hdbext\" to \"7.0.1\"\r\n- Update \"@sap/logging\" to \"6.0.0\"\r\n\r\n## [2.5.4] - 2019-04-04\r\n\r\n### Changed\r\n\r\n- Bump logging version to 4.1.0\r\n\r\n## [2.5.3] - 2019-02-19\r\n\r\n### Removed\r\n\r\n- Remove activation id from message text\r\n\r\n## [2.5.2] - 2019-02-05\r\n\r\n### Changed\r\n\r\n- Modify error handling for task execution\r\n- Update npm-shrinkwrap.json\r\n\r\n## [2.5.1] - 2019-01-29\r\n\r\n### Changed\r\n\r\n- Remove module \"lodash\"\r\n\r\n## [2.5.0] - 2019-01-24\r\n\r\n### Changed\r\n\r\n- Update module \"@sap/hdbext\" from \"5.0.0\" to \"5.1.0\"\r\n- Update module \"express\" from \"4.16.3\" to \"4.16.4\"\r\n- Update module \"lodash\" from \"4.17.4\" to \"4.17.11\"\r\n\r\n## [2.4.3] - 2019-01-02\r\n\r\n### Fixed\r\n\r\n- Removed devDependencies from npm-shrinkwrap.json\r\n\r\n## [2.4.2] - 2018-12-21\r\n\r\n### Changed\r\n\r\n- Replace module \"hdb\" with \"@sap/hdbext\"\r\n\r\n## [2.4.1] - 2018-11-05\r\n\r\n### Added\r\n\r\n- Set application name while opening db connection.\r\n\r\n## [2.4.0] - 2018-09-14\r\n\r\n### Changed\r\n\r\n- Check url-api version of DWF runtime / DWF Task Orchestration Engine\r\n- Update checking service credentials of db service /helpers/dbClient\r\n- Fix callback handling of module /hanaNative/tasks/getMsgTableNames\r\n- Switch from ESLint to StandardJS\r\n- Fix NDSO getOperationInfo calls\r\n- Replace module \"@sap/hdbext\" by \"hdb\"\r\n- Correct typos in texts in /i18n/toe.properties\r\n- Update versions of used modules\r\n\r\n## [2.3.3] - 2018-03-05\r\n\r\n### Changed\r\n\r\n- Remove default value of message table for task type execute procedure\r\n- Update versions of used modules and npm-shrinkwrap.json\r\n- Support value help button for ndso names\r\n- Limit ndso SQL result to 50\r\n- Set Certificate Authority for tasktype load from url\r\n\r\n## [2.3.2] - 2018-01-22\r\n\r\n### Changed\r\n\r\n- Update versions of used @sap modules and npm-shrinkwrap.json.\r\n\r\n## [2.3.1] - 2018-01-19\r\n\r\n### Changed\r\n\r\n- Update npm-shrinkwrap.json.\r\n- Allow empty path parameters for value help services.\r\n- Correct names of value help placeholders of registered task types.\r\n- Update versions of used @sap modules.\r\n\r\n## [2.3.0] - 2018-01-12\r\n\r\n### Added\r\n\r\n- Initial version for Data Warehousing Foundation 2.0 SP03: Adjust the parameter models of the task types\r\nto new features provided by the parameter form control.\r\n"},{"name":"dwf-generator","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# dwf-generator \r\n\r\n## Generating Database Artifacts\r\n\r\nDatabase artifacts, that are needed fot the relocation from HANA to remote sources, are\r\ngenerated by DWF-Generator and placed in the database and DWF modules\r\n\r\n## Running executables globally\r\n\r\n1. install the module globally\r\n\r\n1. ```$ generate DWF_MODULE example2.dwfdlmprofile,folder\\\\example2.dwf```or\r\n\r\n    ```$ generate -d DWF_MODULE -f example2.dwfdlmprofile,folder\\\\example2.dwf```\r\n\r\n## Running executables inside the module package\r\n\r\n1. install the module inside a project\r\n1. navigate to the prefix/node_nodules/nodejs-command-line-tool\r\n1. ```$ npm run generate DWF_MODULE example2.dwfdlmprofile,folder\\\\example2.dwf``` or\r\n\r\n    ```$ npm run generate -d DWF_MODULE -f example2.dwfdlmprofile,folder\\\\example2.dwf```\r\n\r\n***\r\n\r\n'DWF_MODULE' is a folder which contains infomation\r\nto generate design time files;\r\n\r\n'example2.dwfdlmprofile,folder\\\\example2.dwf'(no space) are relative paths to dlm profiles (optional)\r\n\r\n## Additional inputs\r\n\r\n- Disable schema and content validation: ```--dv``` or ```--disable-validation```\r\n- Disable modifing yaml file: ```--dmy``` or ```--disable-modify-yaml```\r\n","changelog":"# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## 2.3.0 - 2018-03-05\r\n### Added\r\n- Released for DWF 2 SP03\r\n- dlm - extension node\r\n\r\n### Fixed\r\n- Disables reading schema from grantor service in local hdi case\r\n- Adjust placeholders for templates\r\n- npm-shrinkwrap\r\n\r\n## 2.2.7-1\r\n### Added\r\n-\r\n\r\n### Fixed\r\n- Vora to HANA relocation: Skip value validation in the where clause due to performance issues\r\n\r\n## [2.2.6] - 2017-10-23\r\n### Added\r\n- supports service replacement\r\n\r\n### Fixed\r\n- relocation procedure - vora - Error 256 - sql processing error: \"DWF_20170908_CROSSSCHEMA_DWF_20170908_CROSSSCHEMA_CONTAINER_1\".\"DLM_GEN.dlm.dlm.crossSchema_Vora_SalesOrder::VORA_to_HANA_n2_to_n0\": line 146 col 7 (at pos 7998): sql processing error: Cannot execute null SQL string (NullConversion exception): line 146 col 7 (at pos 7998)\r\n- relocation procedure - vora - Error: \"db://#V0_KEY_VALUES\": the object cannot be provided more than once [8212002]\r\n- keeps CHANGELOG.md and README.md in the release\r\n\r\n## [2.2.5] - 2017-10-19\r\n### Added\r\n-\r\n\r\n### Fixed\r\n- cleans up modified grantor services in yaml\r\n- replaces the static with dynamic relocation rule\r\n\r\n## [2.2.4] - 2017-09-01\r\n### Added\r\n-\r\n\r\n### Fixed\r\n-\r\n\r\n## [2.2.3] - 2017-08-15\r\n### Added\r\n-\r\n\r\n### Fixed\r\n-\r\n\r\n## [2.2.2] - 2017-08-11\r\n### Added\r\n-\r\n\r\n### Fixed\r\n-\r\n\r\n## [2.2.1] - 2017-06-29\r\n### Added\r\n-\r\n\r\n### Fixed\r\n-\r\n\r\n\r\n## [2.2.0] - 2017-05-30\r\n### Added\r\n-\r\n\r\n### Fixed\r\n-\r\n"},{"name":"dwf-ndso-backend","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Native DataStore Object (NDSO) Service Backend\r\nThis Node.js package contains service implementations (tasks) of the Native\r\nDataStore Object. The NDSO backend is part of the SAP HANA Data Warehousing\r\nFoundation product.\r\n\r\nAs such it is used, for example, by the DataStore Manage UI of the Database\r\nExplorer or the Data Warehouse Scheduler.\r\n\r\n[Change Log](./CHANGELOG.md)\r\n\r\n**Be aware** that as this being a technical reuse package you are not supposed\r\nto consume it directly in a custom application. It is used by the aforementioned\r\nSAP products/tools though.\r\n\r\n# NDSO Task Reference\r\nNDSO tasks are exposed as simple asynchronous functions\r\n\r\n<a name=\"activate\"></a>\r\n\r\n## activate(tracer, client1, client2, schema, ndso, loadIds, [callback]) ⇒ <code>Promise</code>\r\nMoves data from inbound queue(s) to active data and change log.\r\nWriting of active data and change log is done by the HANA core procedure\r\n`SYS.DSO_ACTIVATE_CHANGES`.\r\n\r\nThis operation takes care of\r\n- verifying the provided load IDs\r\n- setting status of earlier, failed activations to 'DELETED'\r\n- compiling procedure options like aggregation behavior and before-image\r\n  handling\r\n- calling the procedure\r\n- deleting load data from inbound queue(s)\r\n\r\n**Fulfills**: [<code>ActivationResult</code>](#ActivationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| loadIds | <code>Array.&lt;integer&gt;</code> | load requests to be activated |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"addSubscriber\"></a>\r\n\r\n## addSubscriber(tracer, client1, client2, schema, ndso, subscriberName, [description], [callback]) ⇒ <code>Promise</code>\r\nAdds a new subscriber entry to the subscribers entity\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| subscriberName | <code>string</code> | name (and key) of the subscriber |\r\n| [description] | <code>string</code> | optional description |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"checkMetadataConsistency\"></a>\r\n\r\n## checkMetadataConsistency(tracer, client1, client2, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nPerforms consistency checks on the NDSO.\r\nThe operation fails, if inconsistencies are found\r\n\r\nPerformed checks ensure:\r\n- Inbound queues consistency\r\n- Change log entries deleted for cleaned up activations\r\n- Inbound queue entries deleted for finished activations\r\n- Affected requests consistency\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"cleanupChangelog\"></a>\r\n\r\n## cleanupChangelog(tracer, client1, client2, schema, ndso, requestIds, [callback]) ⇒ <code>Promise</code>\r\nCleans up change log. The operation verifies, if the provided activation\r\nrequest IDs can be cleaned up and then deletes them from the change log\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| requestIds | <code>Array.&lt;integer&gt;</code> | activation requests for which change log shall be  deleted |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"cleanupMetadata\"></a>\r\n\r\n## cleanupMetadata(tracer, client1, client2, schema, ndso, [maxRequestId], [maxTimestamp], [callback]) ⇒ <code>Promise</code>\r\nCleans up metadata up to either the provided maximal activation request ID\r\nor corresponding creation timestamp (whichever is higher).\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n**Todo**\r\n\r\n- [ ] not implemented, i.e., it does not actually delete any data\r\n\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [maxRequestId] | <code>integer</code> | request ID up to which to clean up |\r\n| [maxTimestamp] | <code>string</code> | ISO 8601 UTC timestamp up to which to clean up |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"deleteAll\"></a>\r\n\r\n## deleteAll(tracer, client1, client2, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nDeletes all NDSO data (main and metadata entities).\r\nThe operation fails, if there are subscribers\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"deleteRequest\"></a>\r\n\r\n## deleteRequest(tracer, client1, client2, schema, ndso, requestIds, [callback]) ⇒ <code>Promise</code>\r\nDeletes load requests. The operation verifies, if the provided request IDs\r\ncan be deleted and then deletes them from the inbound queue(s)\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| requestIds | <code>Array.&lt;integer&gt;</code> | load requests to be deleted |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"deleteWithFilter\"></a>\r\n\r\n## deleteWithFilter(tracer, client1, client2, schema, ndso, queryOptions, propagateDeletion, [callback]) ⇒ <code>Promise</code>\r\nDeletes active data by the provided query filter. Optionally writes an\r\nactivation request into the change log which allows rollback\r\n\r\n**Fulfills**: [<code>DeleteResult</code>](#DeleteResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| queryOptions | [<code>QueryOptions</code>](#QueryOptions) | note that for this task, the 'options'  (and more specifically, the filter `flt`) are actually mandatory because the  context is selective deletion from active data which must not be  unrestricted (that would be deleteAll) |\r\n| propagateDeletion | <code>bool</code> | if true, deletions will be added to change log |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getDataStores\"></a>\r\n\r\n## getDataStores(tracer, client, schema, [queryOptions], [callback]) ⇒ <code>Promise</code>\r\nProvides a list of NDSOs in the schema\r\n\r\n**Fulfills**: [<code>DataStores</code>](#DataStores)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| [queryOptions] | [<code>QueryOptions</code>](#QueryOptions) |  |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getDataStoreFeature\"></a>\r\n\r\n## getDataStoreFeature(tracer, client, schema, [callback]) ⇒ <code>Promise</code>\r\nProvides information if the NDSO metamodel exists in the schema.\r\nThe metamodel is a prerequisite to model NDSOs\r\n\r\n**Fulfills**: [<code>DataStoreFeature</code>](#DataStoreFeature)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getLogForOperation\"></a>\r\n\r\n## getLogForOperation(tracer, client, schema, ndso, operationId, [callback]) ⇒ <code>Promise</code>\r\nProvides the message log for an operation\r\n\r\n**Fulfills**: [<code>LogForOperation</code>](#LogForOperation)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| operationId | <code>integer</code> | ID of the operation logs shall be read for |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getMetadata\"></a>\r\n\r\n## getMetadata(tracer, client, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nProvides NDSO metadata\r\n\r\n**Fulfills**: [<code>Metadata</code>](#Metadata)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getMonitoringOverview\"></a>\r\n\r\n## getMonitoringOverview(tracer, client, schema, [queryOptions], [callback]) ⇒ <code>Promise</code>\r\nProvides monitoring relevant information about all NDSOs in the schema.\r\n\r\n**Fulfills**: [<code>MonitoringOverview</code>](#MonitoringOverview)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| [queryOptions] | [<code>QueryOptions</code>](#QueryOptions) |  |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getOperationInfo\"></a>\r\n\r\n## getOperationInfo(tracer, client, schema, ndso, [queryOptions], [callback]) ⇒ <code>Promise</code>\r\nProvides general request information\r\n\r\n**Fulfills**: [<code>OperationInfo</code>](#OperationInfo)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [queryOptions] | [<code>QueryOptions</code>](#QueryOptions) |  |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getOperationsForRequest\"></a>\r\n\r\n## getOperationsForRequest(tracer, client, schema, ndso, requestId, [callback]) ⇒ <code>Promise</code>\r\nProvides the list of operations that affected a specific request\r\n\r\n**Fulfills**: [<code>OperationsForRequest</code>](#OperationsForRequest)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| requestId | <code>integer</code> | request ID which to retrieve operations for |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getRequestInfo\"></a>\r\n\r\n## getRequestInfo(tracer, client, schema, ndso, [queryOptions], [callback]) ⇒ <code>Promise</code>\r\nProvides general request information\r\n\r\n**Fulfills**: [<code>RequestInfo</code>](#RequestInfo)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [queryOptions] | [<code>QueryOptions</code>](#QueryOptions) |  |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getRequestsForActivation\"></a>\r\n\r\n## getRequestsForActivation(tracer, client, schema, ndso, [maxRequestId], [callback]) ⇒ <code>Promise</code>\r\nProvides requests that can be activated. Condition:\r\n- finished load requests\r\n- after latest activation\r\n- not subject to a deleteRequest operation\r\n- (optional) load request ID lower than provided maxRequestId\r\n\r\n**Fulfills**: [<code>RequestsForOperation</code>](#RequestsForOperation)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [maxRequestId] | <code>integer</code> | request ID up to which to retrieve load  requests |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getRequestsForCleanup\"></a>\r\n\r\n## getRequestsForCleanup(tracer, client, schema, ndso, [maxRequestId], [maxTimestamp], [callback]) ⇒ <code>Promise</code>\r\nProvides requests that can be cleaned up. Condition:\r\n- finished activation requests\r\n- not subject to rollback/clean-up operation\r\n- extracted by all subscribers\r\n- (optional) activation request ID less than or equal to provided\r\n  max ID or timestamp\r\n\r\n**Fulfills**: [<code>RequestsForOperation</code>](#RequestsForOperation)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [maxRequestId] | <code>integer</code> | request ID up to which to fetch requests |\r\n| [maxTimestamp] | <code>string</code> | ISO 8601 UTC timestamp up to which to fetch requests |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getRequestsForDeletion\"></a>\r\n\r\n## getRequestsForDeletion(tracer, client, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nProvides requests that can be deleted. Condition:\r\n- load request failed OR finished and after latest activation\r\n- not subject to a deleteRequest operation\r\n\r\n**Fulfills**: [<code>RequestsForOperation</code>](#RequestsForOperation)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getRequestsForRollback\"></a>\r\n\r\n## getRequestsForRollback(tracer, client, schema, ndso, minRequestId, [callback]) ⇒ <code>Promise</code>\r\nProvides requests that can be rolled back. Condition:\r\n- finished activation requests\r\n- after latest rollback/clean-up operation\r\n- not yet extracted by any subscriber (as rollbacks are just deleted from\r\n  change log, subscribers won't get a corresponding delta corrupting their\r\n  data)\r\n- (optional) load request ID greater than or equal to provided minRequestId\r\n\r\n**Fulfills**: [<code>RequestsForOperation</code>](#RequestsForOperation)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| minRequestId | <code>integer</code> | request ID from which to roll back later activations |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getRowcountWithFilter\"></a>\r\n\r\n## getRowcountWithFilter(tracer, client, schema, ndso, queryOptions, [callback]) ⇒ <code>Promise</code>\r\nProvides number of rows in active data filtered by the provided query filter\r\n\r\n**Fulfills**: [<code>RowcountWithFilter</code>](#RowcountWithFilter)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| queryOptions | [<code>QueryOptions</code>](#QueryOptions) | note that for this task, the 'options'  (and more specifically, the filter `flt`) are actually mandatory because  this is a preview task for deleteWithFilter |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"getSubscribers\"></a>\r\n\r\n## getSubscribers(tracer, client, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nProvides a list of subscribers\r\n\r\n**Fulfills**: [<code>Subscribers</code>](#Subscribers)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"removeSubscriber\"></a>\r\n\r\n## removeSubscriber(tracer, client1, client2, schema, ndso, subscriberName, [callback]) ⇒ <code>Promise</code>\r\nRemoves a subscriber from the subscribers entity\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| subscriberName | <code>string</code> | name (and key) of the subscriber |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"repairRunningOperations\"></a>\r\n\r\n## repairRunningOperations(tracer, client1, client2, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nRepairs running operations that are not really running anymore and sets their\r\nstatus to failed. This is done by attempting to retrieve a lock for the\r\ncorresponding entry in the operation history\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"resetSubscriber\"></a>\r\n\r\n## resetSubscriber(tracer, client1, client2, schema, ndso, subscriberName, [callback]) ⇒ <code>Promise</code>\r\nResets `maxRequestId` of a subscriber in the subscribers entity back to 0\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| subscriberName | <code>string</code> | name (and key) of the subscriber |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"rollback\"></a>\r\n\r\n## rollback(tracer, client1, client2, schema, ndso, activationIds, [callback]) ⇒ <code>Promise</code>\r\nRestores data from the change log back to active data.\r\nWriting of active data and change log is done by the HANA core procedure\r\n`SYS.DSO_ROLLBACK_CHANGES`.\r\n\r\nThis operation takes care of\r\n- verifying the provided activation IDs\r\n- compiling procedure options like aggregation behavior and before-image\r\n  handling\r\n- calling the procedure\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| activationIds | <code>Array.&lt;integer&gt;</code> | activation requests to roll back |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"storeCsv\"></a>\r\n\r\n## storeCsv(tracer, client1, client2, schema, ndso, iqName, data, withHeader, [callback]) ⇒ <code>Promise</code>\r\nLoads CSV data into the provided inbound queue.\r\n\r\nIf the data contain a header row, it is excluded from data but serves as\r\nfield list for the INSERT statement.\r\n\r\nData is generally loaded by just providing the data unaltered to the prepared\r\nstatement except for binary data types (VARBINARY, BLOB) where a hexadecimal\r\nstring is expected instead\r\n\r\n**Fulfills**: [<code>LoadResult</code>](#LoadResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| iqName | <code>string</code> | inbound queue to load the data into |\r\n| data | <code>array</code> \\| <code>string</code> | CSV data as array or string |\r\n| withHeader | <code>bool</code> | load requests to be activated |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n<a name=\"storeSql\"></a>\r\n\r\n## storeSql(tracer, client1, client2, schema, ndso, iqName, externalSql, [callback]) ⇒ <code>Promise</code>\r\nLoads data into the provided inbound queue by the FROM clause provided via\r\n`externalSql`.\r\n\r\n`externalSql` needs to provide `technicalAttributes.recordMode` and all\r\nsemantical column names as the inbound queue (if the source table has\r\ndifferent column names, they must be aliased accordingly).\r\n\r\n**Fulfills**: [<code>LoadResult</code>](#LoadResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| iqName | <code>string</code> | inbound queue to load the data into |\r\n| externalSql | <code>string</code> | SQL by which to load data (used as `FROM`  clause) |\r\n| [callback] | <code>function</code> | callback function |\r\n\r\n**Example**  \r\n```sql\r\n SELECT\r\n   ''    AS \"technicalAttributes.recordMode\",\r\n   CUST  AS \"CustomerName\",\r\n   PRICE AS \"Amount\"\r\n FROM CUST_PRICES\r\n```\r\n<a name=\"smokeTest\"></a>\r\n\r\n## smokeTest(tracer, client1, client2, schema, ndso, [callback]) ⇒ <code>Promise</code>\r\nPerforms a smoke test on the provided NDSO, executing all tasks, beginning\r\nwith operations related to subscribers, then deletes all of them and runs\r\ndeleteAll to have a defined start-state\r\n\r\n:warning: **Only use this in test environments!**\r\n\r\n**Fulfills**: [<code>OperationResult</code>](#OperationResult)  \r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| tracer | <code>object</code> | tracer e.g. by @sap/logging |\r\n| client1 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| client2 | <code>object</code> | DB client by node-hdb or @sap/hana-client |\r\n| schema | <code>string</code> | DB schema |\r\n| ndso | <code>string</code> | full DataStore name with namespace |\r\n| [callback] | <code>operationCallback</code> | callback function |\r\n\r\n<a name=\"ActivationResult\"></a>\r\n\r\n## ActivationResult\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| operationId | <code>integer</code> | ID of the activate operation |\r\n| activationId | <code>integer</code> | ID of the resulting activation request |\r\n\r\n<a name=\"DeleteResult\"></a>\r\n\r\n## DeleteResult\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| operationId | <code>integer</code> | ID of the deleteWithFilter operation |\r\n| [changeLogId] | <code>integer</code> | ID of the optional activation request |\r\n\r\n<a name=\"DataStores\"></a>\r\n\r\n## DataStores\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;string&gt;</code> | NDSO names |\r\n\r\n<a name=\"DataStoreFeature\"></a>\r\n\r\n## DataStoreFeature\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| isDataStoreActive | <code>bool</code> | true, if metamodel found |\r\n| [version] | <code>string</code> | model version |\r\n\r\n<a name=\"LogForOperation\"></a>\r\n\r\n## LogForOperation\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.posit | <code>integer</code> | defines message order |\r\n| result.timestamp | <code>string</code> | ISO 8601 UTC timestamp of message  creation |\r\n| result.msgType | <code>string</code> | message severity |\r\n| result.msgNumber | <code>integer</code> | numeric message ID |\r\n| result.msgText | <code>string</code> | message text |\r\n\r\n<a name=\"MetadataMetaTable\"></a>\r\n\r\n## MetadataMetaTable\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>string</code> | entity name of the meta table |\r\n| fullName | <code>string</code> | fully qualified and quoted table name including  schema and namespace |\r\n\r\n<a name=\"MetadataActiveDataField\"></a>\r\n\r\n## MetadataActiveDataField\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>string</code> | field name |\r\n| isKey | <code>bool</code> | indicates, if field is a semantical key |\r\n| aggregation | <code>string</code> | defines before-image behavior (NOP or SUM) |\r\n| sqlDataTypename | <code>string</code> | HANA data type |\r\n| [typeParam1] | <code>integer</code> | parameter attribute 1 (e.g. length) |\r\n| [typeParam2] | <code>integer</code> | parameter attribute 2 (e.g. scale) |\r\n| [defaultValue] | <code>string</code> | default value |\r\n\r\n<a name=\"MetadataChangeLogField\"></a>\r\n\r\n## MetadataChangeLogField\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>string</code> | field name |\r\n| isKey | <code>bool</code> | indicates, if field is a semantical key |\r\n| sqlDataTypename | <code>string</code> | HANA data type |\r\n\r\n<a name=\"MetadataInboundQueueField\"></a>\r\n\r\n## MetadataInboundQueueField\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>string</code> | field name |\r\n| isKey | <code>bool</code> | indicates, if field is a semantical key |\r\n| aggregation | <code>string</code> | defines aggregation behavior (NOP, MOV, MIN,  MAX or SUM) |\r\n| sqlDataTypename | <code>string</code> | HANA data type |\r\n| [typeParam1] | <code>integer</code> | parameter attribute 1 (e.g. length) |\r\n| [typeParam2] | <code>integer</code> | parameter attribute 2 (e.g. scale) |\r\n| [defaultValue] | <code>string</code> | default value |\r\n\r\n<a name=\"MetadataProcedure\"></a>\r\n\r\n## MetadataProcedure\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>string</code> | qualified name of the procedure (with namespace,  without schema) |\r\n| ifVersion | <code>string</code> | interface version of the procedure in the form X.Y (e.g. 1.0), major version incremented for backwards incompatible changes and minor for backwards compatible changes |\r\n\r\n<a name=\"Metadata\"></a>\r\n\r\n## Metadata\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>string</code> | NDSO name |\r\n| snapshotSupport | <code>bool</code> | if true, every activation will overwrite  the complete active data table, i.e., inbound queue data is considered to  always be complete |\r\n| operationHistory | [<code>MetadataMetaTable</code>](#MetadataMetaTable) | operation history containing  operation ID, timestamp, user, status etc. |\r\n| affectedRequests | [<code>MetadataMetaTable</code>](#MetadataMetaTable) | mapping table of n:m  relation of operations to requests |\r\n| aggregationHistory | [<code>MetadataMetaTable</code>](#MetadataMetaTable) | stores aggregation  behavior on activation. Needed to account for model changes between  activation and rollback |\r\n| logMessages | [<code>MetadataMetaTable</code>](#MetadataMetaTable) | log messages per operation |\r\n| idGen | [<code>MetadataMetaTable</code>](#MetadataMetaTable) | indicates request type (load,  activation, general operation). Without sequence, new IDs are drawn based on  the content of this table |\r\n| subscribers | [<code>MetadataMetaTable</code>](#MetadataMetaTable) | stores subscribers doing  delta-extractions from the change log. The latest extracted activation  requests are written by each subscriber and affect housekeeping, like  cleanupChangelog |\r\n| activeData | <code>object</code> | main, reportable data entity |\r\n| activeData.name | <code>string</code> | entity name of the data table |\r\n| activeData.fullName | <code>string</code> | fully qualified and quoted table  name including schema and namespace |\r\n| activeData.fields | [<code>Array.&lt;MetadataActiveDataField&gt;</code>](#MetadataActiveDataField) |  |\r\n| [changeLog] | <code>object</code> | optional data entity to track changes |\r\n| changeLog.name | <code>string</code> | entity name of the data table |\r\n| changeLog.fullName | <code>string</code> | fully qualified and quoted table  name including schema and namespace |\r\n| changeLog.fields | [<code>Array.&lt;MetadataChangeLogField&gt;</code>](#MetadataChangeLogField) |  |\r\n| activationQueues | <code>Array.&lt;object&gt;</code> | one or more data entity to queue  inbound data for activation |\r\n| activationQueues.name | <code>string</code> | entity name of the data table |\r\n| activationQueues.fullName | <code>string</code> | fully qualified and quoted  table name including schema and namespace |\r\n| activationQueues.fields | [<code>Array.&lt;MetadataInboundQueueField&gt;</code>](#MetadataInboundQueueField) |  |\r\n| procedures | <code>object.&lt;string, MetadataProcedure&gt;</code> | map of supported  SQL procedures. Key is the operation identifier, e.g. LOAD |\r\n| sequence | <code>string</code> | sequence used to draw new IDs |\r\n| metaModel | <code>object</code> | information about current NDSO metamodel |\r\n| metaModel.version | <code>string</code> | metamodel version |\r\n\r\n<a name=\"MonitoringTableStats\"></a>\r\n\r\n## MonitoringTableStats\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| tableName | <code>string</code> | table name |\r\n| [size] | <code>integer</code> | table estimated maximal memory size in bytes  (not provided, if user lacks authorization) |\r\n| [rows] | <code>integer</code> | table row count (not provided, if user lacks  authorization) |\r\n\r\n<a name=\"MonitoringOverview\"></a>\r\n\r\n## MonitoringOverview\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.name | <code>string</code> | NDSO name |\r\n| result.lastOp | <code>string</code> | type of the last operation |\r\n| result.lastOpBy | <code>string</code> | user last changing the last operation |\r\n| result.lastOpAt | <code>string</code> | ISO 8601 UTC timestamp when the  last operation was last changed |\r\n| result.lastOpStatus | <code>string</code> | status of the last operation |\r\n| result.subscribers | <code>integer</code> | number of subscribers |\r\n| result.stats | <code>object</code> | table statistics |\r\n| result.stats.activeData | [<code>MonitoringTableStats</code>](#MonitoringTableStats) | stats for  active data entity |\r\n| result.stats.inboundQueues | [<code>Array.&lt;MonitoringTableStats&gt;</code>](#MonitoringTableStats) | stats for  inbound queue entities |\r\n| [result.stats.changeLog] | [<code>MonitoringTableStats</code>](#MonitoringTableStats) | optional stats  for change log entity |\r\n| [result.message] | <code>string</code> | optional warning message derived from  authorization errors by HANA; thrown, if user lacks authorization for  monitoring synonyms (e.g. M_CS_TABLES) |\r\n\r\n<a name=\"OperationInfo\"></a>\r\n\r\n## OperationInfo\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.operationId | <code>integer</code> | operation ID |\r\n| result.operation | <code>string</code> | operation type |\r\n| result.status | <code>string</code> | operation status |\r\n| result.userName | <code>string</code> | user last changing the operation |\r\n| result.lastTimestamp | <code>string</code> | ISO 8601 UTC timestamp when the  operation was last changed |\r\n| [result.operationDetails] | <code>object</code> | optional operation details |\r\n\r\n<a name=\"OperationsForRequest\"></a>\r\n\r\n## OperationsForRequest\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.operationId | <code>integer</code> | operation ID |\r\n| result.operation | <code>string</code> | operation type |\r\n| result.status | <code>string</code> | operation status |\r\n| result.userName | <code>string</code> | user last changing the operation |\r\n| result.lastTimestamp | <code>string</code> | ISO 8601 UTC timestamp when the  operation was last changed |\r\n| result.affectedRequests | <code>Array.&lt;integer&gt;</code> | related request IDs |\r\n\r\n<a name=\"RequestInfo\"></a>\r\n\r\n## RequestInfo\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.operationId | <code>integer</code> | ID of the last operation affecting  the request |\r\n| result.operation | <code>string</code> | type of the last operation affecting  the request |\r\n| result.status | <code>string</code> | status of the last operation affecting  the request |\r\n| result.userName | <code>string</code> | user last changing the operation |\r\n| result.startTimestamp | <code>string</code> | ISO 8601 UTC timestamp when the  operation was started |\r\n| result.lastTimestamp | <code>string</code> | ISO 8601 UTC timestamp when the  operation was last changed |\r\n| result.dependentRequests | <code>Array.&lt;integer&gt;</code> | related request IDs |\r\n| result.requestStatus | <code>string</code> | current status of the request  (derived from the latest operation affecting it) |\r\n| [result.operationDetails] | <code>object</code> | optional operation details |\r\n\r\n<a name=\"RowcountWithFilter\"></a>\r\n\r\n## RowcountWithFilter\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.tableName | <code>string</code> | fully qualified name of active data table |\r\n| result.rowCount | <code>integer</code> | total number of rows |\r\n\r\n<a name=\"Subscribers\"></a>\r\n\r\n## Subscribers\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.subscriberName | <code>string</code> | subscriber name |\r\n| result.description | <code>string</code> | additional description |\r\n| result.userName | <code>string</code> | user that created the subscriber |\r\n| result.creationTimestamp | <code>string</code> | ISO 8601 UTC timestamp of the  subscriber creation |\r\n| result.maxRequest | <code>integer</code> | last activation request the  subscriber extracted from the change log |\r\n| result.pushNotification | <code>string</code> | not implemented |\r\n\r\n<a name=\"OperationResult\"></a>\r\n\r\n## OperationResult\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| operationId | <code>integer</code> | ID of the operation |\r\n\r\n<a name=\"LoadResult\"></a>\r\n\r\n## LoadResult\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| operationId | <code>integer</code> | ID of the load operation |\r\n| loadId | <code>integer</code> | ID of the resulting load request |\r\n\r\n<a name=\"QueryOptions\"></a>\r\n\r\n## QueryOptions\r\nSome tasks offer a parameter `queryOptions` that allow for backend-side\r\npaging, sorting and filtering. The task expects it to be an object like this:\r\n\r\n**Example**  \r\n```javascript\r\n{\r\n  lim: 100,             // LIMIT in SQL: returns up to 100 rows\r\n  off: 200,             // OFFSET in SQL: skips first 200 rows\r\n  flt: {                // builds WHERE in SQL; multiple columns are connected\r\n    COLUMN1: 'value1',  // by AND\r\n    COLUMN2: 123,\r\n    COLUMN3: [          // array elements for same column are connected by OR\r\n      {\r\n        op: 'BT',       // BT resolves to 'BETWEEN ? AND ?'\r\n        val: [10, 20]\r\n      },\r\n      {\r\n        op: 'EQ',       // EQ resolves to 'IN (?,?,?)'\r\n        val: [95, 99, 101]\r\n      },\r\n      {\r\n        op: 'LT',      // LT ('less than') resolves to '< ?'\r\n        val: 50        // there's also LE ('less or equal')\r\n      },\r\n      {\r\n        op: 'GT',      // GT ('greater than') resolves to '> ?'\r\n        val: 'abc'     // there's also GE ('greater or equal')\r\n      }\r\n    ]\r\n  },\r\n  fltMode: 'PARTIAL',   // instead of 'WHERE = ?' this resolves to 'WHERE LIKE ?'\r\n                        // and wildcards around value (e.g. '%value1%')\r\n                        // default is 'EXACT'\r\n  ord: [                // builds ORDER BY in SQL\r\n    {\r\n      col: 'COLUMN1'    // defaults to 'ASC'\r\n    },\r\n    {\r\n      col: 'COLUMN3',\r\n      dir: 'DESC'\r\n    }\r\n  ]\r\n}\r\n```\r\n<a name=\"RequestsForOperation\"></a>\r\n\r\n## RequestsForOperation\r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| result | <code>Array.&lt;object&gt;</code> |  |\r\n| result.requestId | <code>integer</code> | request ID |\r\n| result.userName | <code>string</code> | user last affecting the request  (by operation) |\r\n| result.timestamp | <code>string</code> | ISO 8601 UTC timestamp when the  operation was last changed |\r\n\r\n","changelog":"# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [Unreleased]\r\nnothing yet\r\n\r\n## [2.3.2] - 2022-04-09\r\n### Changed\r\n- Add LICENSE file\r\n\r\n## [2.2.0] - 2018-08-15\r\n### Changed\r\n- addSubscriber and resetSubscriber operations now fail if there is no change\r\n  log modeled\r\n- changed expected metamodel version for generated NDSOs from 1.2.0 to 2.0.0.\r\n\r\n  While the metamodel itself does not contain incompatible changes,\r\n  previously deployed NDSOs won't be operable after upgrading the metdamodel\r\n  and require manual migration. This is intended but from the user's perspective\r\n  a breaking change which shall be reflected by a new major version according to\r\n  semver\r\n- getMetadata now also returns typeParam1, typeParam2 and defaultValue for\r\n  active data fields\r\n\r\n### Fixed\r\n- Fix storeCSV to only ignore actually empty rows (before, it also filtered\r\n  those only containing special characters). Also made check for line-endings\r\n  agnostic of the operating system\r\n\r\n## [2.1.0] - 2018-07-06\r\n### Added\r\n- Generated NDSOs are supported\r\n- Enhance metadata object to include sequence, procedures and metamodel information\r\n- Support generated synonyms (`DataWarehouse.DataStore` namespace) for DB objects\r\n- Implemented checkMetadataConsistency task\r\n\r\n### Changed\r\n- Added to operation storeSQL default handling for `NULL` values in columns\r\n  defined as `TIMESTAMP`\r\n\r\n### Fixed\r\n- Fix storeCSV to ignore empty lines\r\n\r\n## [2.0.2] - 2018-04-17\r\n### Fixed\r\n- Fix getRequestsFor*Deletion* to still provide loads if multiple loads are done\r\n  before a partial activation (before, the remaining loads were not returned)\r\n\r\n## [2.0.1] - 2018-04-16\r\n### Fixed\r\n- Fix getRequestsForActivation to still provide loads if multiple loads are done\r\n  before a partial activation (before, the remaining loads were not returned)\r\n- Fix repairRunningOperations to update lastTimestamp column in the\r\n  operationHistory table\r\n- Fix start messages for add-, reset- and removeSubscriber (showed '{0}' instead\r\n  of subscriber name)\r\n\r\n## [2.0.0] - 2018-04-13\r\n### Added\r\n- complete NDSO task reference on README (generated by\r\n  [`jsdoc-to-markdown`](https://www.npmjs.com/package/jsdoc-to-markdown))\r\n- support more [query options](./README.md#queryoptions)\r\n\r\n### Changed\r\n- **Incompatible:** Rewrite task getOperationInfo to now take generic query\r\n  options instead of dedicated filter parameters\r\n- **Incompatible:** Rewrite tasks getRowcountWithFilter and deleteWithFilter\r\n  to now filter by generic query options instead of using a provided where\r\n  clause\r\n- **Incompatible:** added default handling to operation storeSQL if the source\r\n  data contains `NULL` values. This required to explicitly list the columns in\r\n  the underlying SQL statement which effectively means, that the provided SQL\r\n  serving as `FROM` clause needs to provide the exact same column names as the\r\n  corresponding inbound queue has. As that was not required before, old\r\n  statements may not work anymore\r\n- deleteWithFilter now writes `filter` instead of `where` into operationDetails\r\n- Lists of request IDs are now shortened for more than 5 requests in log and\r\n  tracing messages (affects, for example, activate and rollback operations)\r\n- cleanupChangelog now writes `requestCount` and `requestList` into\r\n  operationDetails. `requestList` is shortened the same way as log entries\r\n- Reworked log messages (e.g. expanded 'lines' suffix by a dedicated detail\r\n  message listing how many rows have been inserted, updated, deleted as it has\r\n  been only for activate and rollback before)\r\n- cleanupChangelog is now rejected without writing an operation when run on NDSO\r\n  without change log\r\n- Minor performance improvement for getMetadata\r\n- Minor improvement of CSV checks (removes empty semicolons and final line breaks)\r\n\r\n### Fixed\r\n- Fix getRequestsForActivation and getRequestsForDeletion to also consider\r\n  running activations/deletions (the affected load requests are not returned\r\n  anymore)\r\n- Fix getRequestsForActivation to not fail without maxRequestId\r\n- Fix getRequestsForDeletion to also provide failed loads before last activation\r\n- Fix getRequestsForCleanup to also consider running rollbacks/clean-ups\r\n  (the affected activation requests are not returned anymore)\r\n- Fix getRequestsForRollback to exclude requests that have been extracted by\r\n  subscribers as rollbacks are just deleted from change log\r\n- Fix rollback for aggregation-related model changes. Before, when activating\r\n  with a `SUM` aggregation, then changing the model e.g. to a `MOV` aggregation\r\n  a rollback would not treat the before-image as negated because that\r\n  information was taken from active data, not the aggregation history. As a\r\n  result, data was likely corrupted after such a rollback\r\n- Fix deleteWithFilter to also write aggregation history if called with\r\n  `propagateDeletion`. In combination with the fix for rollback, this would have\r\n  resulted in data corruption after rollback of a deletion\r\n- Fix operation timestamps by updating the operation status once more before the\r\n  final commit\r\n\r\n### Removed\r\n- Remove checksum handling; hashes are neither verified nor updated anymore\r\n- Remove setConfig as there was no supported global config anymore anyway\r\n- Remove dependency to [`async`](https://www.npmjs.com/package/async)\r\n\r\n## [1.4.0] - 2018-02-06\r\n### Added\r\n- Promise support by all tasks (just omit callback to use it)\r\n- storeCSV now supports NDSOs with binary types (`VARBINARY` and `BLOB`). To\r\n  utilize this, provide data as hexadecimal strings, data is inserted via\r\n  `HEXTOBIN` SQL function\r\n\r\n### Changed\r\n- **Incompatible:** queryOption 'ord' now array as order is relevant and object\r\n  property order is unspecified\r\n- queryOption 'flt' now supports multiple values. Refer to [README](./README.md)\r\n  for details\r\n- deleteWithFilter now writes `where` instead of `sWhere` into operationDetails\r\n- Slight performance improvement overall by caching repeatedly retrieved\r\n  metadata\r\n- Complete refactoring of smokeTest, increasing coverage and significantly\r\n  improving performance\r\n- getDatastoreFeature now checks for existence of NDSO meta model instead of a\r\n  runtime environment variable. It also returns the meta model version\r\n- getMetadata now returns `defaultValue`s for inbound queue fields\r\n\r\n### Removed\r\n- setConfig option `earlyCallback`\r\n\r\n## [1.3.1] - 2017-12-18\r\n### Fixed\r\n- Fix timeout issue in smokeTest\r\n\r\n## [1.3.0] - 2017-12-15\r\n### Changed\r\n- **Incompatible**: Remove custom format `YYYYMMDDHH24MISS` for timestamps,\r\n  now ISO 8601 UTC strings (`YYYY-MM-DD\"T\"HH24:MI:SS.FF3\"Z\"`)\r\n  are sent and expected for filtering\r\n- **Incompatible**: Rewrite task getRequestInfo:\r\n  - now takes generic query options instead of multiple query parameters\r\n  - returns flat array as result instead of splitting loads and activations\r\n  - fix typo in `dependentRequests` property\r\n  - significant performance improvement by pushing whole logic to HANA\r\n\r\n### Deprecated\r\n- setConfig option `earlyCallback` shall not be used anymore and will be removed\r\n  soon.\r\n\r\n## [1.2.0] - 2017-12-12\r\n### Added\r\n- Add new task getMonitoringOverview that fetches all NDSOs of the provided\r\n  schema and provides information relevant for monitoring, like the last\r\n  operation and stats like table sizes and row count.\r\n\r\n  Note that the latter requires access to the monitoring views `SYS.M_CS_TABLE`\r\n  and `SYS.M_RS_TABLE`.\r\n- Add queryOptions to task getDataStores which support filtering, sorting and\r\n  paging. Refer to [README](./README.md) for details\r\n- Add support for drawing request IDs from sequence.\r\n\r\n  To do so the sequence must be named as annotation\r\n  `@DataStore.sequence: 'name with namespace'`. When introducing a sequence for\r\n  existing NDSOs, you should define `RESET BY` according to the maximum value\r\n  in the `idGenerator` table. Note that that table will continue to be updated\r\n  even if IDs are drawn by sequence.\r\n\r\n### Changed\r\n- Provide detail message with modified rows after operations activate and\r\n  rollback also for alternative client `@sap/hana-client`\r\n- Write application user into metadata tables, if available (falls back to the\r\n  technical `CURRENT_USER` if not)\r\n\r\n### Fixed\r\n- Fix crash in getOperationsForRequest if no operation found (may happen during\r\n  deleteAll)\r\n- Fix message logging for failed operations. It used to throw an error like\r\n  'statement.execBatch undefined'\r\n\r\n## [1.1.1] - 2017-11-20\r\n### Fixed\r\n- Fix getRequestsForActivation to return multiple requests again\r\n- Fix activation for multiple inbound queues\r\n- Fix logging of activation procedure parameters (was missing change log\r\n  info)\r\n\r\n## [1.1.0] - 2017-11-07\r\n### Added\r\n- Support for alternative HANA client `@sap/hana-client`\r\n\r\n### Changed\r\n- Improve log for activate/rollback: procedure result is now added as proper\r\n  log messages, not technical JSON (only for `node-hdb` client)\r\n- Use most recent version of `async`\r\n\r\n### Fixed\r\n- Follow-up fix of error handling if operation cannot be started\r\n- Fix rollback error if previous rollback failed\r\n\r\n## [1.0.5] - 2017-10-24\r\n### Changed\r\n- operation status of checkMetadataConsistency now reflects consistency result,\r\n  i.e., if there is an error the operation status will be FAILED\r\n- getRowcountWithFilter can now be called without the superfluous second DB\r\n  client, i.e., with `tracer, client, schema, ndso, whereClause, callback`.\r\n  The signature stays compatible though, the second client is just optional\r\n\r\n### Fixed\r\n- Fix smokeTest status polling which exited too early because smokeTest uses\r\n  the same DB connections for all operations and therefore sees status\r\n  'FINISHED' before it is committed. Now it polls for an internal indicator\r\n  instead\r\n- Fix error handling if operation cannot be started (e.g. called with not\r\n  existing NDSO name)\r\n- Fix repairRunningOperations. It used to check the runningOperations entity\r\n  but with introduction of startOperation that is written in the first commit\r\n  without locking again. The repair operation now checks the operationHistory\r\n  instead because the status update is the first update after the first commit.\r\n\r\n## [1.0.4] - 2017-10-13\r\n### Changed\r\n- Close database connections for operations when `earlyCallback` is active\r\n- Improve README.md\r\n\r\n## [1.0.3] - 2017-10-12\r\n### Fixed\r\n- Fix task smokeTest to also support `earlyCallback` option. It used to return\r\n  immediately, so the still running operations could interfere with test\r\n  clean-up procedures\r\n\r\n## [1.0.2] - 2017-10-11\r\n### Fixed\r\n- Fix number of written lines in various operation success messages\r\n- Fix list of deletable load requests (task getRequestsForDeletion); used to\r\n  return also activated and already deleted load requests\r\n- Fix list of requests for rollback (task getRequestsForRollback); used to\r\n  return also requests that the change log has meanwhile been cleared for\r\n  (resulted in technical error during rollback: 'Unique constraint violation')\r\n\r\n## [1.0.1] - 2017-10-06\r\n### Added\r\n- Add CHANGELOG.md (this file) and publishable README.md\r\n- Add new task `setConfig` that allows to set options by a key-value object.\r\n\r\n  Currently, only option `earlyCallback` is supported which makes operations\r\n  call the main callback function already after drawing IDs and writing the\r\n  operation into the history. This fixes various timeout issues when executing\r\n  operations in the HRTT Manage UI.\r\n\r\n### Fixed\r\n- Fix side-effect of disabling autocommit. In case of errors also the\r\n  affectedRequests entity was rolled back which resulted in an inconsistency and,\r\n  for example, failing load or activation requests were not shown on the UI.\r\n- Fix checksum calculation for LargeBinary (BLOB) fields as casting to VARCHAR\r\n  is invalid. As a result such NDSOs could not be activated.\r\n\r\n## [1.0.0] - 2017-09-29\r\n### Added\r\n- First release of this package; based on code from @sap/dwf-dws-client and\r\n  the Database Explorer (HANA Runtime Tools, HRTT)\r\n\r\n### Changed\r\n- Exclude internal helpers from the `tasks` folder which now only contains\r\n  real tasks to be invoked by a consumer\r\n\r\n### Fixed\r\n- Fix checksum handling in task CheckMetadataConsistency. It now works like the\r\n  check on Activate.\r\n"},{"name":"e2e-trace","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/e2e-trace\r\n\r\nNode.js package with end to end tracing capabilities.\r\n\r\n\r\n## Overview\r\n\r\n### SAP Passport\r\n\r\nSAP Passports allow to identify a specific request in an end-to-end scenario involving several components communicating with each other.\r\nThis is especially helpful in the task of following the state of a business transaction across different systems.\r\nTo achieve that, the client should send a special header ('sap-passport') containing the SAP Passport to the first component.\r\nThe SAP Passport is a hex string with a special structure. The client can send one via a browser plugin or via SAPUI5 application frontend.\r\nWhenever an SAP Passport comes into a component, this component should also include the unique identifiers of the SAP Passport in its logs/traces,\r\nupdate it with component specific data and then forward it to the next system.\r\n\r\nSee the diagram below:\r\n\r\n![SAP Passport overview diagram](diagram.png \"Overview diagram\")\r\n\r\nAn application receives an SAP Passport in the 'sap-passport' header. The same header is used when the SAP Passport is getting forwarded over the HTTP protocol to another system.\r\nIf it is being sent to HANA, the SAP Passport should be set as the 'SAP_PASSPORT' session variable of the database connection.\r\n\r\n#### API\r\n\r\n- Loading the package:\r\n\r\n```js\r\nvar SAPPassport = require('@sap/e2e-trace').Passport;\r\n```\r\n\r\n- Creating an SAP Passport instance\r\n\r\n```js\r\nfunction requestHandler(req, res) {\r\n  var encodedPassport = req.headers[SAPPassport.HEADER_NAME];\r\n  if (encodedPassport) {\r\n    var passport = new SAPPassport(encodedPassport);\r\n  }\r\n}\r\n```\r\n\r\nThe library provides a constant for the 'sap-passport' header: `SAPPassport.HEADER_NAME`.\r\n\r\nThe `passport` variable is an instance with which you may read/modify the SAP Passport in your component.\r\n\r\n- Reading the unique identifiers of an SAP Passport\r\n\r\n```js\r\nvar identifiers = passport.readUniqueIdentifiers();\r\n```\r\n\r\nThe returned value (assigned to the `identifiers` variable) is an object that has the following properties: `transactionID`, `rootContextID`, `connectionID`, `connectionCounter`.\r\nThese SAP Passport fields got to be present in the logs/traces of the component.\r\nIf you are using the `sap-logging` library, refer to its documentation to check whether the specific version is capable of handling SAP Passports or not.\r\n\r\n\r\n- Updating the SAP Passport - this is done right before forwarding it to the next component.\r\n\r\n```js\r\npassport.update({\r\n  previousComponent: 'my-application',\r\n  connectionID: '00112233445566778899AABBCCDDEEFF',\r\n  connectionCounter: 36\r\n});\r\n```\r\n\r\nThis method takes an object with the following properties:\r\n\r\nProperty      | Value      | Mandatory | Semantics\r\n------------- | ---------- | --------- | --------------------------\r\n`previousComponent` | ASCII string. Up to 32 characters. | | This is the name of the current component which is about to make an outbound connection to another component. Defaults to _XSA Node.js_.\r\n`connectionID` | GUID, 16-byte hex | yes | Every connection between the current component and the next component should have an ID which is passed as that property.\r\n`connectionCounter`| Positive integer, up to 4 bytes | yes | States for which time the connection with the given `connectionID` is being reused.\r\n\r\n- Compacting the SAP Passport - HANA DB has a limitation over the SAP Passport size.\r\nThis is why it is recommended to call the method `compact` before forwarding an SAP Passport to HANA.\r\n\r\n```js\r\npassport.compact();\r\n```\r\n\r\n- Generating a hex string out of the updated SAP Passport - the SAP Passport can be send to other components in this format.\r\n\r\n```js\r\nvar http = require('http');\r\nvar url = require('url');\r\n\r\nvar encodedPassport = passport.serialize();\r\n\r\nvar options = url.parse('http://my-host:1234/my/path');\r\noptions.headers = {};\r\noptions.headers[SAPPassport.HEADER_NAME] = encodedPassport;\r\n\r\nvar request = http.request(options);\r\nrequest.on('error', function (err) { /* ... */ });\r\nrequest.on('response', function (response) { /* ... */ });\r\nrequest.end();\r\n```\r\n\r\n\r\n### DSR records\r\n\r\nDistributed Statistics Records contain statistical information regarding an incoming request.\r\nThe library writes every record on the standard output in a JSON format.\r\nGathering DSR statistics is triggered when a request containing an SAP passport is received.\r\n\r\n#### API\r\n\r\n```js\r\nvar connect = require('connect');\r\nvar createDsrMiddleware = require('@sap/e2e-trace').createDsrMiddleware;\r\n\r\nvar app = connect();\r\n\r\napp.use(createDsrMiddleware());\r\napp.use('/path', function (req, res, next) {\r\n  // ...\r\n});\r\n```\r\n\r\nThe DSR middleware (can be used with frameworks like `connect` and `express`) should be the first middleware in the request processing flow.\r\n\r\nExample DSR record:\r\n\r\n```json\r\n{\"action\":\"https://host:5555/path?a=1&b=2\",\"receivedBytes\":1230,\"sentBytes\":110,\"respTime\":18,\"transId\":\"104A7DB661D31EE69DE912281546ED81\",\"userId\":\"n.a.\",\"startTime\":1473506434377}\r\n```\r\n\r\nProperties in a DSR record:\r\n\r\nProperty      | Description\r\n------------- | -----------\r\nstartTime     | Time at which request processing starts (milliseconds elapsed since 1 January 1970 00:00:00 UTC).\r\naction        | The requested URL.\r\nreceivedBytes | Number of bytes the incoming HTTP request contains (lengths of request line, headers section and body included). **Note**: due to a bug in Node.js, this field might be 0 in some runtime versions. Refer to the `engines/node` property in _package.json_ for recommended Node.js versions.\r\nsentBytes     | Number of bytes the outgoing HTTP response contains (lengths of status line, headers section and body included).\r\nrespTime      | Number of milliseconds spent in request processing (until the whole outgoing HTTP response has been handed off to the operating system for transmission over the network).\r\ntransId       | The Transaction ID field of the SAP Passport that has triggered the DSR record.\r\nuserId        | User ID of the current user taken from the request object. Defaults to `n.a.`.\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 3.1.0 - 2022-01-12\r\n\r\n### Added\r\n- Support for Node.js 16.x\r\n\r\n## 3.0.0 - 2020-12-01\r\n\r\n### Added\r\n- Support for Node.js 14.x\r\n\r\n### Removed\r\n- Support for Node.js 6.x\r\n\r\n## 2.1.0 - 2019-12-06\r\n\r\n### Added\r\n- Support for Node.js 12.x\r\n\r\n## 2.0.0 - 2019-04-25\r\n\r\n### Removed\r\n- Support for Node.js v0.12 and v4\r\n\r\n<a name=\"1.4.1\"></a>\r\n## 1.4.1 - 2019-01-15\r\n\r\n### Fixed\r\n- Update shrinkwrap\r\n\r\n<a name=\"1.4.0\"></a>\r\n## 1.4.0 - 2019-01-15\r\n\r\n### Added\r\n- Node.js version 10 support\r\n\r\n## 1.3.0 - 2018-01-19\r\n\r\n### Added\r\n- npm-shrinkwrap.json\r\n\r\n## 1.2.0 - 2018-01-08\r\n\r\n### Added\r\n- CHANGELOG.md\r\n- Node.js version 8 support\r\n\r\n## 1.1.3 - 2017-07-04\r\n\r\n### Removed\r\n- Remove lodash as a productive dependency.\r\n\r\n## 1.1.2 - 2017-01-24\r\n\r\n### Changed\r\n- Rename package to use *sap* scope.\r\n"},{"name":"edm-converters","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/edm-converters\r\n===================\r\n\r\nThis module provides several model converters. The following converters are currently supported:\r\n\r\n* OData V2 EDM model (XML Format) to OData V4 EDM (JSON Format)\r\n(details [Readme](./lib/edmxV20ToJsonV40/README.md))\r\n* OData V4 EDM model (XML Format) to OData V4 EDM (JSON Format)\r\n(details [Readme](./lib/edmxV40ToJsonV40/README.md))\r\n\r\nEach converter is contained in separate folder inside the lib folder.\r\nA detailed description of a converter is provided in the README.md\r\nof each converter sub-folder, or you may check the API documentation\r\nin the `index.js` and other files. Please note that it is also possible\r\nto compile an HTML version of the API documentation with:\r\n\r\n```\r\ncd @sap/edm-converters\r\nnpm install  # this will install the development dependencies\r\nnpm run doc      # this will generate the documentation\r\n```\r\n\r\n(If the module is installed into the global node package folder,\r\nuse `npm root -g` to find and navigate to it.)\r\n\r\n# Usage scenario\r\n\r\nThe model converters can be used to convert the OData EDMX V2 or EDMX V4 model of a remote service\r\ninto the EDM V4 JSON format. This EDM V4 JSON format can then be used with the OData Consumption library\r\nin module @sap/odata-v4 to consume remote OData services.\r\n\r\nThe converters can be called via commandline or programmtically via an API\r\n\r\n# Installation\r\n\r\nThe @sap/edm-converters provide a commandline interface and a API for use with node.\r\n\r\n## Installation commandline interface\r\n\r\nIf you want to use the commandline interface we recommend to install the @sap/edm-converters with\r\n\r\n```npm install -g @sap/edm-converters```\r\n\r\nInstalling it globally eases the usage of the converters from any folder.\r\nIf you do so, then after installation the ```convert_edm``` symlink/script should be created.\r\nYou can test this with calling ```convert_edm -v``` to show the converter version.\r\n\r\n## Installation for API usage\r\n\r\nIf you want to used the converters from your node application, then you can either install it locally or global. Just add:\r\n```js\r\nconst converters = require('@sap/edm-converters'):\r\n```\r\n\r\nThe converter can then be accessed via:\r\n```js\r\nconverters.MetadataConverterFactory.createEdmxV20ToJsonV40(<option>);\r\nor\r\nconverters.MetadataConverterFactory.createEdmxV40ToJsonV40(<option>);\r\n```\r\n\r\nPlease check the API documentation in\r\n```lib/<converter>/index.js``` for documentation about the parameters of the converter.\r\n\r\n\r\n# Console usage\r\n\r\nAll converters follow the following pattern\r\n\r\n```sh\r\nconvert_edm <converter> <file to be converted> <further arguments>\r\n```\r\nNote: Currently absolute path as well as relative path to your model is supported.\r\n\r\nCurrently the converters edmxV20ToJsonV40 and edmxV40ToJsonV40 are supported.\r\nCommon sample arguments are:\r\n\r\n* ```-i, --input <file to be converted>```\r\n  Input file to be converted\r\n* ```--inputdir <input directory>```\r\n  Containing the source files, if <file> is relative\r\n* ```-o, --output <output file>```\r\n  Target file to be generated\r\n* ```--outputdir <output directory>```\r\n  Output directory, if target file is relative or more files are generated\r\n* ```-l, --loglevel```\r\n  Use 'e'/'i'(default)/'d' to show log information (e=error-log, i=info-log ,d=debug-log)\r\n* ```-t, --target```\r\n  Omit or set to 'cs02' to produce the Oasis CSDL 4.01-CS02 format;\r\n  if the Oasis CSDL Json 4.01-CS01 format should be produced, set to 'cs01'.\r\n  The CS01 format can be used as the EDM JSON to bootstrap the Okra library.\r\n* Converters may have additional options. Please see below on how to show documentation about this converters.\r\n\r\n# Get help\r\n\r\n## Get console help:\r\n\r\n```sh\r\nconvert_edm --help\r\n```\r\n\r\n## Get distinct converter help:\r\n\r\n```sh\r\nconvert_edm edmxV40ToJsonV40 --help\r\n```\r\n\r\n# Releases and Milestones\r\n\r\n[Changelog](./CHANGELOG.md)\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3.1.txt).\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [1.0.41] - 2021-03-30\r\n\r\n### Added \r\n- support for node.js version 14\r\n\r\n## [1.0.40] - 2021-01-27\r\n\r\n### Fixed \r\n- Fixed Cardinality Issues for V2.\r\n\r\n## [1.0.39] - 2020-11-19\r\nBugfixes mentioned in GWTCDA-3192\r\n\r\n### Fixed \r\n- Reverted back ComplexType/EnumType Kind to Type for V4.\r\n## [1.0.38] - 2020-10-13\r\n\r\nBugfix for cap issue 6098\r\n\r\n### Changed\r\n- Changelog fixes\r\n\r\n## [1.0.37] - 2020-10-12\r\n\r\n### Added\r\n- license file: LICENSE\r\n\r\n## [1.0.30] - 2020-05-19\r\n\r\n### Fixed\r\n   * Added fix to link enum Types to property in entity sets for V4.\r\n\r\n## [1.0.29] - 2020-05-08\r\n\r\n## [1.0.27] - 2020-05-07\r\n\r\n## [1.0.26] - 2020-05-05\r\n\r\n### Fixed\r\n   * Added fix for several missing entity sets which\r\n     are stemming from the same entity For Mock Server Use Case V4.\r\n\r\n### Added\r\n- support for node.js version 12\r\n\r\n### Removed\r\n- support for node.js versions 6 and 8 due to their end of life\r\n\r\n## [1.0.21] - 2019-09-17\r\n\r\n### Fixed\r\n   * Added fix for entities having more than one navigation property.\r\n     Now all navigation property bindings are rendered correctly\r\n     in OData V4 output (before only the last was added to the output).\r\n\r\n## [2.0.0] - 2019-09-13\r\n\r\n### Added\r\n   * CSN Generation For Mock Server Use Case V2.\r\n\r\n## [1.0.3] - 2019-03-29\r\n\r\n### Fixed\r\n* CSN Generation Fixes For Mock Server Use Case V4.\r\n\r\n## [1.0.1] - 2019-03-21\r\n\r\n## [1.0.0] - 2019-03-08\r\n\r\n### Added\r\n   * EDMXV4 to EDMV4 JSON Converter\r\n   * EDMV4 JSON to CSN Converter\r\n   * EDMXV2 to EDMV4 JSON Converter\r\n   * EDMXV2 to CSN Converter\r\n\r\n## [0.0.18] - 2019-03-07\r\n\r\n- # Test Release. Not for productive usage\r\n\r\n## [0.0.17] - 2019-03-06\r\n\r\n- # Test Release. Not for productive usage\r\n\r\n## [0.0.16] - 2019-03-06\r\n\r\n### Added\r\n- Add new -t,--target option to produce OData Node.js csdl json custom format\r\n\r\n### Changed\r\n- Remove Temporal vocabulary from autoloading\r\n- Improve error message if XML elements cannott be resolved\r\n- Change generated $Collection = \"true\" to true boolean for functions generated from function imports\r\n- $Nullable is not set on NavigationProperty collections anymore.\r\n- Improve error message if XML elements cannot be resolved\r\n- Change generated $Collection = \"true\" to true boolean for functions generated from function imports\r\n\r\n## [0.0.15] - 2018-12-12\r\n\r\n### Added\r\n- OData V2-XML to OData V4-JSON converter - Add $Collection to EntitySets\r\n\r\n## [0.0.14] - 2018-11-30\r\n\r\n## [0.0.13] - 2018-11-30\r\n\r\n- # Test Release. Not for productive usage\r\n\r\n## [0.0.12] - 2018-11-29\r\n\r\n### Added\r\n- Autoloading for oasis default vocabularies\r\nAdd following changes:\r\n- Remove $Kind from EntityContainer EntitySets,Singletons and add $Collection to EntitySets\r\n    - See OASIS Issue: https://issues.oasis-open.org/browse/ODATA-1231\r\n\r\n- V4 Converter\r\n    - Now a missing referenced document does not break the processing\r\n    - On execution end there is a new callback parameter providing all missing referenced documents and corresponding uris\r\n\r\n### Removed\r\n- Change output conversion of Constant Expressions (will be provided later):\r\n    - See OASIS Issue: https://issues.oasis-open.org/browse/ODATA-1221\r\n\r\n## [0.0.11] - 2018-11-06\r\n\r\n## [0.0.10] - 2018-11-06\r\n\r\n## [0.0.9] - 2018-11-06\r\n\r\n### Changed\r\n- Change output conversion of Constant Expressions\r\n    - See OASIS Issue: https://issues.oasis-open.org/browse/ODATA-1221\r\n- Remove $Kind from EntityContainer entities\r\n    - See OASIS Issue: https://issues.oasis-open.org/browse/ODATA-1231\r\n\r\n## [0.0.8] - 2018-10-18\r\n\r\n## [0.0.7] - 2018-10-16\r\n\r\n## [0.0.6] - 2018-10-16\r\n\r\n## [0.0.5] - 2018-09-27\r\n\r\n## [0.0.4] - 2018-09-25\r\n\r\n## [0.0.3] - 2018-09-13\r\n\r\n## [0.0.2] - 2018-08-22\r\n\r\n### Added\r\n\r\n* Release version 0.0.1 (alpha version)"},{"name":"edmx2csn","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Getting started\r\n\r\n<!-- markdownlint-disable MD001 MD022 -->\r\n##### Table of Contents\r\n<!-- markdownlint-enable MD001 MD022 -->\r\n\r\n- [Overview](#overview)\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n- [Constraints](#constraints)\r\n\r\n## Overview\r\nEDMX2CSN is a command line utility that will convert an OData V2 model (EDMX) to a CSN (JSON) file. The primary use case for this utility is when you're building an extension application that connects to a remote OData V2 data source such as S4HANA.  In such a case, converting the EDMX model from the OData V2 data source to CSN is the first step you take, along with defining the CDS data model, in order to define the CDS service model for your application.\r\n\r\n## Installation\r\n\r\n1. Install the EDMX2CSN utility from one of the following repositories:\r\n   Nexus **milestones** registry or npm registry:\r\n\r\n  ```\r\n  npm config set registry <local nexus milestone or https://registry.npmjs.org/>\r\n  ```\r\n\r\n  or **releases** registry:\r\n\r\n  ```\r\n  npm config set registry <local nexus release or https://registry.npmjs.org/>\r\n  ```\r\n  > ***Do not add direct dependency to edmx2csn github project!***\r\n\r\n  >npm does not support snapshots via nexus. The only possibility is to download manually a snapshot and install it.\r\n\r\n2. Install the EDMX2CSN utility using npm:\r\n\r\n  ```\r\n  npm install \"@sap/edmx2csn\"\r\n  ```\r\n\r\n3. As an alternative to step 2, maintain your package.json dependencies as follows:\r\n\r\n  package.json\r\n  ```\r\n    \"dependencies\": {\r\n      \"@sap/edmx2csn\": \"*\"\r\n    }\r\n  ```\r\n\r\n## Usage\r\n\r\nThe compiler with its options is invoked like any other npm/Unix command:\r\n\r\n    To generate CSN file from an EDMX File:\r\n            a) Windows: $homedir>./node_modules/.bin/edmx2csn.cmd -i ${input_folder}/metadata.xml -o ${output_folder} -f\r\n            b) Linux: $homedir>./node_modules/.bin/edmx2csn.sh -i ${input_folder}/metadata.xml -o ${output_folder} -f\r\n\r\n    To generate CSN file from an EDMX URL:\r\n            a) Windows: $homedir>./node_modules/.bin/edmx2csn.cmd -i ${service_url}/$metadata -o ${output_folder}\r\n            b) Linux:   $homedir>./node_modules/.bin/edmx2csn.sh -i ${service_url}/$metadata -o ${output_folder}\r\n\r\n## Constraints\r\n\r\n    1) Supports only OData V2 services.\r\n    2) Supports only publicly available OData service URLs (for example, http://services.odata.org/V2/OData/OData.svc/$metadata).\r\n    3) Multiple schemas are not supported (for example, http://services.odata.org/V2/Northwind/Northwind.svc/$metadata).\r\n    4) Function imports in EDMX are not supported.","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Unreleased\r\n\r\n## [1.0.9] - 2020-03-17\r\n\r\n## [1.0.8] - 2019-08-16\r\n\r\n### Fixed\r\n- Fixed an issue with version tag in CSN.\r\n\r\n## [1.0.7] - 2019-08-05\r\n\r\n### Fixed\r\n- Fixed an issue to pick the Cardinality when Association and AssociatioSet Name are different.\r\n- Added version tag.\r\n\r\n## [1.0.6] - 2018-12-04\r\n### Fixed\r\n- Renamed the attribute `targetMax` to `max`.\r\n- Replaced the CSN syntax `onCond` used in associations with `on`.\r\n\r\n## [1.0.5] - 2018-10-03\r\n### Fixed\r\n- Edm.DateTimeOffset is now mapped to Date for any property having the attribute `sap:display-format=\"Date\"`.\r\n- Errors generated from this tool is now propagated back to the system process that invokes this tool.\r\n\r\n## [1.0.4] - 2018-09-24\r\n### Fixed\r\n- Edm.single is now mapped to DecimalFloat in the HANA database.\r\n- Fixed an issue when mapping navigation in the OData model to `onCond` in the CSN model.\r\n- New option `-p` has been added to ignore `@cds.persistence.skip` annotation specified on any entity in the model.\r\n\r\n## [1.0.3] - 2018-08-20\r\n### Fixed\r\nModified open source dependency to a specific version.\r\n\r\n## [1.0.2] - 2018-08-13\r\n### Fixed\r\nConverts inherited complex types and entities from the OData model to CSN equivalent.\r\n\r\n## [1.0.1] - 2018-05-30\r\n\r\n### Added\r\nThe annotation @cds.persistence.skip:true is added for all entities in the converted CSN file.\r\n\r\n## [1.0.0] - 2018-05-02\r\n \r\n### Added\r\n- Performs basic OData V2 metadata validation\r\n- Converts OData V2 entities/properties to CSN entities/elements\r\n- Converts OData V2 complex types to CSN structures\r\n- Converts OData V2 entity navigations to CSN associations\r\n"},{"name":"eslint-plugin-cds","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/eslint-plugin-cds\r\n\r\n\r\nThe [ESLint](https://eslint.org) plugin includes a set of recommended [SAP Cloud Application Programming Model (CAP)](https://cap.cloud.sap) model and environment rules.\tThe aim of CDS linting is to catch issues with CDS models and with the environment early. To use this module we recommend to install [@sap/cds-dk](https://www.npmjs.com/package/@sap/cds-dk) globally.\r\n\r\nSee the [CDS Linting documentation](https://cap.cloud.sap/docs/tools/#cds-lint) for more details, or jump directly to a complete [list of rules](https://cap.cloud.sap/docs/tools/#cds-lint-rules). CAP provides a set of recommended rules. On top, you can create your own, application-specific rules.\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [2.3.5] - 2022-04-05\r\n\r\n### Changed\r\n\r\n- Catch root model compilation errors and do not try again on every file (-> long lint times for broken models)\r\n- Add to lint reports with rules marked with '!'\r\n\r\n## [2.3.4] - 2022-03-31\r\n\r\n### Changed\r\n\r\n- Only deduplicate model error messages when working within VS Code Editor\r\n- Hide `no-dollar-prefixed-names` compiler warning message in VS Code Editor (already passed by lsp)\r\n\r\n## [2.3.3] - 2022-03-24\r\n\r\n### Added\r\n\r\n- Added new rule `no-dollar-prefixed-names`\r\n- Lint reports with rules marked with '!' notify of rule compile errors\r\n- Lint reports of any thrown errors can be exposed by `--debug` (includes stack)\r\n\r\n## [2.3.2] - 2022-01-24\r\n\r\n### Changed\r\n\r\n- Rule `require-2many-oncond` now also detect navigations of aaspects for flavor 'parsed'\r\n- Removed duplicates from rule results of category 'Environment'\r\n\r\n## [2.3.1] - 2021-12-10\r\n\r\n### Changed\r\n\r\n- Removed custom formatter as it is no longer used by `cds lint`.\r\n- Deduplicate lint results from from rules of category environment.\r\n- Removed 'unpeploy.json' from files as no lint rule requires it\r\n- Fixed redundant triggers of model recompilations for non-model files and model files without changes\r\n\r\n## [2.3.0] - 2021-12-03\r\n\r\n### Added\r\n\r\n- Added new rule 'valid-csv-header'\r\n\r\n### Changed\r\n\r\n- Fixed suggestion messages in editor option (and disabled auto-fix)\r\n- Added rule properties 'docs.recommended', 'severity'\r\n\r\n## [2.2.2] - 2021-11-08\r\n### Added\r\n\r\n- Added new rule 'no-join-on-draft-enabled-entities'\r\n\r\n### Changed\r\n\r\n- Compile 'model' files based on CSN flavor 'inferred'\r\n- Compile 'outsider' files based on CSN flavor 'parsed'\r\n\r\n## [2.2.1] - 2021-11-01\r\n### Changed\r\n\r\n- Optimized model loading and fixed bug in loading of 'outsider' files\r\n\r\n## [2.2.0] - 2021-10-29\r\n### Added\r\n\r\n- Added typings to javascript for all exposed apis\r\n\r\n### Changed\r\n\r\n- Aligned rule creation and tester api with ESLint\r\n\r\n## [2.1.2] - 2021-10-05\r\n### Changed\r\n\r\n- Allow not only *.js but also other file types (i.e. *.ts, etc) to bypass plugin rules\r\n\r\n## [2.1.1] - 2021-10-04\r\n### Changed\r\n\r\n- Added preprocessor to avoid (other plugins) parsing errors on cds files\r\n\r\n## [2.1.0] - 2021-09-23\r\n### Changed\r\n\r\n- Source code is now Javascript only\r\n- Rule API simplified to only include report and cds\r\n- Added new rules `no-db-keywords` and `require-2many-oncond`\r\n- Filter out lint messages when run from command line with custom formatter\r\n\r\n## [2.0.5] - 2021-07-18\r\n### Added\r\n\r\n- When used from within VS Code ESLint exnteion, do not show environment rules\r\n### Changed\r\n\r\n-  Rule 'min-node-version' reverted to use cds.resolve not cds.home\r\n\r\n## [2.0.4] - 2021-07-12\r\n### Added\r\n\r\n- Plugin also considers 'outsider' files which are not part of a model\r\n### Changed\r\n\r\n- Custom formatter now prints projectPath for triggered env rule checks\r\n\r\n## [2.0.3] - 20210-07-09\r\n### Changed\r\n\r\n- Removed `npm-shrinkwrap.json` file from package\r\n\r\n## [2.0.2] - 2021-07-07\r\n### Changed\r\n\r\n- Fixed bug that always triggers csn-compile-err on type\r\n\r\n## [2.0.1] - 2021-07-06\r\n### Added\r\n\r\n- Re-added model rule 'csn-compile-err' to pass csn compile errors to eslint for readability\r\n\r\n### Changed\r\n\r\n- Formatter ignores all lint reports for other file extensions except for those in plugin overrides files\r\n\r\n## [2.0.0] - 2021-07-02\r\n### Added\r\n\r\n- New API: split exports into 'impl' (for eslint) and 'api' (for user)\r\n- CDS parser now ingests eslint-disable comments to turn off rules\r\n\r\n### Changed\r\n\r\n- API: getRuleTester now erquires relative path from ruleTester location to project root\r\n\r\n## [1.1.7] - 2021-06-22\r\n### Changed\r\n\r\n- Load/Update model must be in sync with every 'on-type' event\r\n\r\n## [1.1.6] - 2021-06-21\r\n### Changed\r\n\r\n- Formatter no longer has explicit dependencies, only reslies on 'stylish' output\r\n- Formatter behaves like eslint and does not print anything on success (no warning/error messages)\r\n- Formatter prints warnings/errors of 'uncategorized' rules separately\r\n- On glob file expressions, gets multiple models in series and reports on all warnings/errors\r\n\r\n## [1.1.5] - 2021-05-26\r\n### Changed\r\n\r\n- Naming convention rules changed to severity 'warning'\r\n- Rules of type 'suggestion' must return 'fix' for appliable multipass fixes\r\n- Split model generation into load and update to be able to work on all files\r\n\r\n## [1.1.4] - 2021-05-20\r\n### Changed\r\n\r\n- Formatter does not show any (env/other) lint messages on model error\r\n- Rule lower-camelcase-elements reverted to also check type keys\r\n- Rule lower-camelcase-elements is not triggered by element 'ID' (see Bookshop in CAP samples)\r\n\r\n## [1.1.3] - 2021-05-12\r\n### Changed\r\n\r\n- Changed rule type for naming convention rules to \"suggestion\"\r\n- Do not rely on namespaces/contexts to extract entity names\r\n- Added extra layer to also support ruleTester \"environment\" checks\r\n\r\n## [1.1.2] - 2021-05-05\r\n### Changed\r\n\r\n- Updated all rules to ingest args: (cds, context)\r\n- Use context's sourcecode to get correct range indices for fixers\r\n\r\n## [1.1.1] - 2021-05-04\r\n### Changed\r\n\r\n- Removed bulky headers from custom formatter\r\n- Removed latest-cds-version rule from recommended rules\r\n- Fixed min-node-version rule to always find cds.home\r\n- If no model files are found, do not fail but only do env checks\r\n- Fixed formatter to also print any other ESLint messages received\r\n\r\n## [1.1.0] - 2021-04-29\r\n### Added\r\n\r\n- Custom cds formatter for separate reporting of env and model checks\r\n\r\n### Changed\r\n\r\n- Fixed version of model rule 'sql-cast-suggestion'\r\n\r\n## [1.0.8] - 2021-04-12\r\n### Added\r\n\r\n- Proxy for cds object replaces fragile object clone from before\r\n- Added proper typings and ignore where options should remain invisible to the (cds) api\r\n- Added docstrings and header to each file to explain ESLint context\r\n- Added model rule 'sql-cast-suggestion'\r\n## [1.0.7] - 2021-04-01\r\n### Changed\r\n\r\n- Do not crash if `parserServices.cds` is not available\r\n\r\n## [1.0.6] - 2021-04-01\r\n### Added\r\n\r\n- peer dependency to `eslint`\r\n- error handling without throw to avoid editor pop-up hell\r\n- simplified api, cds instead of parserServices\r\n\r\n## [1.0.4] - 2021-03-24\r\n### Changed\r\n\r\n- Added sync model load from cds to generate fully resolved models\r\n- Simplified model rules with cds.reflect\r\n- Added model rules 'lower-camelcase-elements', 'upper-camelcase-entities'\r\n- Removed model rule 'no-entity-moo' and use as sample custom rule in docs\r\n- Refactored and added more parserServices\r\n\r\n## [1.0.3] - 2021-01-22\r\n### Changed\r\n\r\n- Fixed rule min-node-version to check if cds dependency is installed\r\n- Updated README glob statement to double asterisk for check nested dirs\r\n\r\n## [1.0.2] - 2021-01-21\r\n### Changed\r\n\r\n- Fixed rules to work in concert and allow for globs\r\n- Improved README for better readability\r\n\r\n## [1.0.1] - 2021-01-19\r\n### Added\r\n\r\n- Rule `assocs-card-flaw` in category *Model validation*\r\n\r\n### Changed\r\n\r\n- Refactoring of ruleFactory and parser code\r\n\r\n## [1.0.0] - 2020-12-07\r\n### Added\r\n- Initial release 1.0.0\r\n"},{"name":"eslint-plugin-ui5-jsdocs","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"## Overview\r\n\r\nThis is the eslint plugin for UI5 appplications. It contains a set of eslint rules and recommended ESLint configuration for static jsdoc code checks of sap.ui.define modules to be used by UI5 appplication developers.\r\n\r\n## Usage\r\n\r\nTo add this package as a dependency in your **package.json** file, do the following:\r\n\r\n1. Under the \"devDependencies\" section, add the following dependency: `\"@sap/eslint-plugin-ui5-jsdocs\": \"2.0.x\"`\r\n1. Add `.eslintrc.json` file with the following content:\r\n\r\n```json\r\n{\r\n  \"plugins\": [\"@sap/ui5-jsdocs\"],\r\n  \"extends\": \"plugin:@sap/ui5-jsdocs/recommended\"\r\n}\r\n```\r\n\r\n## List of rules\r\n\r\n| Rule                                                           | Description                                      | Recommended Severity | Fixable |\r\n| :------------------------------------------------------------- | :----------------------------------------------- | :------------------- | :------ |\r\n| [no-jsdoc](docs/rules/no-jsdoc.md)                             | There is no JSDoc provided                       | Warning              | yes     |\r\n| [no-jsdoc-param](docs/rules/no-jsdoc-param.md)                 | There is no JSDoc param defined                  | Warning              | yes     |\r\n| [check-jsdoc-param-type](docs/rules/check-jsdoc-param-type.md) | The JSDoc param type is incorrect                | Warning              | yes     |\r\n| [duplicate-jsdoc-params](docs/rules/duplicate-jsdoc-params.md) | The argument should contain only one JSDoc param | Warning              | no      |\r\n\r\n"},{"name":"eslint-plugin-webide-feature","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# ESLint plugin for SAP Web IDE features\r\n\r\n## Table of contents\r\n\r\n- [Overview](#overview)\r\n- [Usage](#usage)\r\n- [List of rules](#list-of-rules)\r\n\r\n## Overview\r\n\r\nThis is the eslint plugin for Web IDE features. It contains a set of eslint rules and recommended ESLint configuration for static code checks to be used by Web IDE feature developers.\r\n\r\n## Usage\r\n\r\n### Add linting to tests\r\n\r\nTo add this package as a dependency in your package.json file, do the following:\r\n\r\n1. Under the \"scripts\" section, add: `\"lint\": \"eslint src\"`\r\n1. Under the \"scripts\" section, add: \"npm run lint\" to the test section: `\"test\": \"npm run lint && ...\"`\r\n1. Under the \"devDependencies\" section, add the following dependency: `\"@sap/eslint-plugin-webide-feature\": \"a.b.c\"`\r\n1. Add `.eslintrc.json` file with the following content:\r\n\r\n```json\r\n{\r\n\t\"plugins\": [\"@sap/webide-feature\"],\r\n\t\"extends\": \"plugin:@sap/webide-feature/recommended-internal\"\r\n}\r\n```\r\n\r\nThe linting checks will be executed as part of tests.\r\n\r\n**Please note that each version of this ESLint plugin corresponds to certain version of SAP Web IDE. As cloud version of SAP Web IDE is continiously updated it is strongly recommended to update the version of this plugin as soon as it is released. To update your feature to use the latest version of ESLint plugin, run: npm install --save-exact @sap/eslint-plugin-webide-feature@latest**\r\n\r\n### Fix existing lint issues\r\n\r\nAfter you have added linting, please execute it with `npm run lint`. Do not worry if you see lots of warnings and errors most of the can be fixed automatically with [--fix option of ESLint](https://eslint.org/docs/user-guide/command-line-interface#--fix), by running `node_modules/.bin/eslint src --fix`. Remaining issues can be fixed manually or ignored by [using special comments or overrding recommended configuration values](https://eslint.org/docs/user-guide/configuring#configuring-rules). To fix the issues manually please refer to the documentation of specific rule.\r\n\r\n## List of rules\r\n\r\n| Rule                                                                           | Description                                                                                             | Recommended Severity |\r\n| :----------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------ | :------------------- |\r\n| [no-private-methods](docs/rules/no-private-methods.md)                         | Do not invoke private methods                                                                           | Error                |\r\n| [no-private-apis](docs/rules/no-private-apis.md)                               | Do not invoke private methods                                                                           | Warning              |\r\n| [bundled-uris-valid](docs/rules/bundled-uris-valid.md)                         | \"bundledPlugins\" and \"bundledFeatures\" arrays items must start with \"file:\" and have valid uri          | Error                |\r\n| [no-deprecated-fields](docs/rules/no-deprecated-fields.md)                     | package.json file should contain neither deprecatedPluginExtensions nor deprecatedConfigIncludes fields | Warning              |\r\n| [feature-description-valid](docs/rules/feature-description-valid.md)           | package.json file must contain description field                                                        | Warning              |\r\n| [homepage-url-valid](docs/rules/homepage-url-valid.md)                         | package.json file must contain a homepage field with a valid path                                       | Warning              |\r\n| [package-json-exists](docs/rules/package-json-exists.md)                       | package.json file must exist in feature's root folder                                                   | Error                |\r\n| [consistent-ids](docs/rules/consistent-ids.md)                                 | each package.json and plugin.json file must has consistent ids                                          | Error                |\r\n| [feature-name-valid](docs/rules/feature-name-valid.md)                         | package.json file must contain name field                                                               | Error                |\r\n| [no-optional-features](docs/rules/no-optional-features.md)                     | package.json file must not contain optionalBundledFeatures field                                        | Error                |\r\n| [feature-author-valid](docs/rules/feature-author-valid.md)                     | package.json file must contain an author field with name and icon                                       | Warning              |\r\n| [feature-version-valid](docs/rules/feature-version-valid.md)                   | package.json file must contain a version field                                                          | Error                |\r\n| [webide-dependencies-consistent](docs/rules/webide-dependencies-consistent.md) | \"webideDependencies\" section should be declared properly                                                | Error                |\r\n| [plugin-name-valid](docs/rules/plugin-name-valid.md)                           | plugin.json file must contain name field                                                                | Error                |\r\n| [plugin-provides-valid](docs/rules/plugin-provides-valid.md)                   | service and interface file references in \"plugin.json\" file must be valid                               | Error                |\r\n| [no-unused-required-services](docs/rules/no-unused-required-services.md)       | All required services of a plugin must be in use                                                        | Warning              |\r\n| [valid-json-files](docs/rules/valid-json-files.md)                             | All JSON files in a feature must be valid                                                               | Error                |\r\n","changelog":"# Changelog for Eslint Plugin Web IDE Feature\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\n## 1.3.22 - 14/03/2019\r\n\r\n### Added\r\n\r\n- Added support for service aliases.\r\n\r\n## 1.3.21 - 28/11/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"no-private-apis\" was fixed to show errors when service is private and uses a method.\r\n\r\n## 1.3.20 - 25/11/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"plugin-provides-valid\" was fixed to reduce the number of false positive warnings\r\n\r\n## 1.3.19 - 28/10/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"no-private-apis\" was fixed to reduce the number of false positive warnings\r\n\r\n## 1.3.17 - 14/08/2018\r\n\r\n### Fixed\r\n\r\n- Fixed relative url in configs files.\r\n\r\n## 1.3.16 - 09/08/2018\r\n\r\n### Added\r\n\r\n- Added recommended-new.json - only webide-eslint related checks\r\n\r\n## 1.3.15 - 26/04/2018\r\n\r\n### Updated\r\n\r\n- Update package version.\r\n\r\n## 1.3.14 - 26/04/2018\r\n\r\n### Updated\r\n\r\n- Update Web IDE package version in dev-dependencies.\r\n\r\n## 1.3.13 - 28/02/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"no-private-apis\" reports errors with empty service name: 'error The \"\" service is a \"private\" service'.\r\n- The rule \"no-private-methods\" crashes with error: \"Cannot read property 'startsWith' of undefined\".\r\n- The rule \"feature-description-valid\" severity has changed from \"error\" to \"warn\".\r\n- The rule \"unicorn/prefer-starts-ends-with\" is turned off.\r\n\r\n## 1.3.12 - 15/02/2018\r\n\r\n### Added\r\n\r\n- Added recommended-internal.json - the recommended rules configuration for internal webide feature developers.\r\n\r\n### Fixed\r\n\r\n- Tied the SDK version used by no-private-apis rule to the latest Web IDE version.\r\n\r\n## 1.3.7 - 31/01/2018\r\n\r\n### Fixed\r\n\r\n- Fixed bundled-uris-valid - added validity checks for more use cases (for example, uris with white spaces)\r\n- Fixed consistent-ids - fixed consistency check of bundled features ids\r\n- Fixed no-unused-required-services - added check for not used required services (via oContext.service and not via this.context.service)\r\n- Fixed handling of ignored paths\r\n- Formatting rules were excluded from recommended config\r\n\r\n## 1.3.4 - 16/01/2018\r\n\r\n### Added\r\n\r\n- Added no-private-apis to rules library\r\n- Added bundled-uris-valid to rules library\r\n- Added no-deprecated-fields to rules library\r\n- Added homepage-url-valid to rules library\r\n- Added consistent-ids to rules library\r\n- Added no-optional-features to rules library\r\n- Added feature-author-valid to rules library\r\n- Added webide-dependencies-consistent to rules library\r\n- Added plugin-name-valid to rules library\r\n- Added plugin-provides-valid to rules library\r\n- Added valid-json-files to rules library\r\n- Added no-unused-required-services to rules library\r\n\r\n### Removed\r\n\r\n- Removed plugin-path from rules library\r\n- Removed requires-services from rules library\r\n\r\n### Renamed\r\n\r\n- Renamed packagejson-description to feature-description-valid in rules library\r\n- Renamed packagejson-exists to package-json-exists in rules library\r\n- Renamed packagejson-name to feature-name-valid in rules library\r\n- Renamed packagejson-version to feature-version-valid in rules library\r\n\r\n### Fixed\r\n\r\n- Problem with \"Unused required service\" rule - dot service names\r\n- services/methods implemented within my feature are all flagged as private\r\n- .eslintignore not working good with linter\r\n\r\n## 1.2.3 - 20/12/2017\r\n\r\nThis is the initial version of Eslint Plugin Web IDE Feature. It contains a set of eslint rules for static code checks to be used by Web IDE feature developers.\r\n\r\n### Added\r\n\r\n- Added no-private-methods to rules library\r\n- Added packagejson-description to rules library\r\n- Added packagejson-exists to rules library\r\n- Added packagejson-name to rules library\r\n- Added packagejson-version to rules library\r\n- Added plugin-path to rules library\r\n- Added requires-services to rules library\r\n"},{"name":"external-service-mashup","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/external-service-mashup\r\nThe git repository for external service mashup.\r\n\r\n## Introduction\r\nThe external services are able to be imported into LCAP / CAP application, and it's possible to query remote data from external OData services.\r\n\r\nSo far, it's read-only support, no update or delete to external db.\r\n\r\nBoth navigation scenarios as below are supported:\r\n- association from local entity to external entity\r\n- association from external entity to local entity\r\n\r\n## Usage\r\nIt could be used within LCAP / CAP event handler.","changelog":"# Change Log\r\n## 1.1.1\r\n### Updated\r\n- Make handlers tenant agnostic and enable tenant extensions\r\n## 1.1.0\r\n### Added\r\n- Enhance association handling for draft enabled service entity\r\n## 1.0.0\r\n### Added\r\n- Support OData service entity navigation either from local to external or from external to local\r\n"},{"name":"faas","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/faas\r\nProvides the SAP Cloud Platform Functions runtime for Node.js and basic SDK features.\r\n\r\n## Table of contents\r\n* [Overview](#overview)\r\n* [Package](#package)\r\n* [Install](#install)\r\n* [Service Instances](#service-instances)\r\n* [Naming Rules](#naming-rules)\r\n* [Function Projects](#function-projects)\r\n  * [Project Attributes](#project-attributes)\r\n  * [Secrets and Config Maps](#secrets-and-config-maps)\r\n  * [Service References](#service-references)\r\n  * [Functions](#functions)\r\n* [Function Triggers](#function-triggers)\r\n  * [HTTP](#http-trigger)\r\n  * [Timer](#timer-trigger)\r\n  * [AMQP](#amqp-trigger)\r\n  * [CloudEvents](#cloudevents-trigger)\r\n* [Function Runtime API](#function-runtime-api)\r\n  * [Global Variables](#global-variables)\r\n  * [Handler Exceptions](#handler-exceptions)\r\n  * [Handler Parameter: event](#handler-parameter-event)\r\n  * [Handler Parameter: context](#handler-parameter-context)\r\n* [Function Test](#function-test)\r\n* [Function Debugging](#function-debugging)\r\n* [Function Unit Test](#function-unit-tests)\r\n\r\n## Overview\r\n\r\nSAP Cloud Platform Serverless Runtime provides together with other components also Functions as a service (__FaaS__).\r\nDevelopers can focus on pure application logic while writing the code,\r\nwhereas FaaS takes responsibility to run the code in a secure, reliable and cost-efficient way.\r\n\r\nTechnically, FaaS runs on Kubernetes (__K8s__).\r\nArtifact deployments are managed using a service API, also running in K8s, next to the runtime of course.\r\nThe overall architecture would allow integration of different serverless runtimes. However, currently K8s is used.\r\n\r\nIn Cloud Foundry (__CF__) service `xsf-runtime` (Extension Factory, serverless runtime) is used as entry point.\r\nEach service instance represents a K8s namespace in a shared cluster.\r\nAll artifacts deployed to a given service will end up as resource in the corresponding namespace.\r\nK8s namespaces (Faas tenants) are strictly isolated from each other.\r\n\r\nFunction development is based on projects, using file `faas.json` as manifest.\r\nAny local IDE as well as WebIDE (Wing) can be used for implementation.\r\n\r\n## Package\r\n\r\nThis package comprises two functional parts.\r\nFirst, it provides the function runtime for Node.js (version 8.11.3 or higher):\r\n* runtime components as such\r\n* http server to run (or debug) functions locally\r\n* test runner to support function unit tests\r\n\r\nSecondly, it offers basic SDK functionality by installing command ` faas-sdk`:\r\n* check project consistency\r\n* create and test deployment files (`values.yaml`)\r\n\r\nThe function code is provided with usual `js` files.\r\n```javascript\r\n'use strict';\r\n\r\n/**\r\n * @param {FaasEvent} event\r\n * @param {FaasContext} context\r\n * @return {Promise|*}\r\n */\r\nmodule.exports = function(event, context) {\r\n    const rval = context.getSecretValueJSON('my-secret-1', 'rv.json');\r\n    return rval.Info.Success;\r\n};\r\n```\r\n\r\nDifferent trigger types are supported to invoke functions under various conditions.\r\nSecrets provide an appropriate storage for credentials. Config maps can be used in addition for any further settings.\r\n\r\n## Install\r\n\r\nThere are two FaaS client tools, waiting to support local development:\r\n* __faas-sdk__: supports the development phase, checks project consistency, runs functions locally in a similar environments like in __K8s__, enables unit test implementation\r\n* __faas-cli__: used to manage artifact deployment into __K8s__, uses FaaS instances in the Cloud Foundry as entry point\r\n\r\nLet's start:\r\n* Install __Cloud Foundry CLI__:\r\n  * Download latest release: [https://github.com/cloudfoundry/cli/releases](https://github.com/cloudfoundry/cli/releases)\r\n  * Install binaries, test via `cf version`\r\n* Install __xfsrt-cli__:\r\n  * Go to [https://tools.hana.ondemand.com/#cloud](https://tools.hana.ondemand.com/#cloud)\r\n  * Search for \"SAP Cloud Platform Serverless Runtime CLI\"\r\n  * Install one binary, test via `xfsrt-cli version`\r\n* Install __Node.js__ (version 8.12.0 or higher):\r\n  * Download from [https://nodejs.org/en/download/](https://nodejs.org/en/download/)\r\n  * Install Node.js runtime\r\n  * Test installation with `node -v` and `npm -v`\r\n* To define devDependency to `@sap/faas` in your function projects\r\n  * Run inside a project folder `npm i @sap/faas`\r\n  * `xfsrt-cli faas project run` will also guide you here\r\n\r\nUpdate the local IDE of your choice and install plugins for Node.js.\r\nFinally, enable language support for Node.js and JavaScript (ECMAScript 6):\r\nYou may also find these links helpful: [Javascript Reference](https://developer.mozilla.org/bm/docs/Web/JavaScript) and [NodeJS Reference](https://nodejs.org/en/docs/)\r\n\r\nThe natural home of a FaaS project is a git repository.\r\nBased on that you can later easily switch between local IDE and SAP Web IDE.\r\nHence, we recommend to set up a git repository for your project from the beginning.\r\n\r\n## Naming Rules\r\nAll runtime artifacts need a name that matches the following constraints:\r\n* Only lower case characters `[a-z]` and numbers `[0-9]` and `-` can be used.\r\n* Separator `-` must not appear at the begin or the end of the name.\r\n* Maximum length is restricted to 60 characters.\r\n\r\nThis applies to:\r\n* secrets\r\n* config maps\r\n* service references\r\n* functions\r\n* triggers\r\n* project names and\r\n* project version identifiers\r\n\r\nSecret and config map __keys__ (names of its entries) are usually based on file names.\r\nThat's why it may contain `.` as well, but not at the beginning or the end.\r\n\r\n## Function Projects\r\nWe recommend using FaaS projects, as this simplifies development tasks.\r\nEach project is defined with just one file, called `faas.json`.\r\nUsually, it will reside next to a `package.json` file.\r\n\r\nA first project can easily be created with an empty folder and the following command:\r\n```bash\r\nfaas-sdk init -p ./my-test\r\n```\r\nIt will create a simple project with one function, one secret, one http trigger and simple unit tests.\r\nAfter `npm install` all unit tests, local test run and __K8s__ deployment will work immediately.\r\nContinue with renaming artifacts and modifying the function code.\r\n\r\nA first example defines one single function `build-qrcode`.\r\nThe source code is provided with file `.\\lib\\iso-time.js`.\r\nAnd the `HTTP` trigger `build-qrcode` will invoke the function.\r\n```json\r\n{\r\n  \"project\": \"qrcode-producer\",\r\n  \"version\": \"0.0.1\",\r\n\r\n  \"runtime\": \"nodejs8\",\r\n  \"library\": \"./lib\",\r\n\r\n  \"functions\": {\r\n    \"build-qrcode\": {\r\n      \"module\": \"iso-time.js\"\r\n    }\r\n  },\r\n\r\n  \"triggers\": {\r\n    \"build-qrcode\": {\r\n      \"type\": \"HTTP\",\r\n      \"function\": \"build-qrcode\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nA second example shows one project defining two functions, both implemented in the same module file.\r\nIn this case the module file `main.js` exports two function handlers `f1` and `f2`.\r\n```json\r\n{\r\n  \"project\": \"chain\",\r\n  \"version\": \"0.0.1\",\r\n\r\n  \"runtime\": \"nodejs8\",\r\n  \"library\": \"./lib\",\r\n\r\n  \"functions\": {\r\n    \"chain-func1\": {\r\n      \"module\": \"main.js\",\r\n      \"handler\": \"f1\"\r\n    },\r\n    \"chain-func2\": {\r\n      \"module\": \"main.js\",\r\n      \"handler\": \"f2\"\r\n    }\r\n  },\r\n\r\n  \"triggers\": {\r\n    \"chain-simple\": {\r\n      \"type\": \"HTTP\",\r\n      \"function\": \"chain-func1\"\r\n    }\r\n  }\r\n}\r\n```\r\n### Project Attributes\r\nAt the top level of `faas.json` the following fields can be defined:\r\n* __`project`__: used as label for all runtime artifacts (see restrictions to [naming rules](#naming-rules))\r\n* __`version`__: used as label for all runtime artifacts (see restrictions to [naming rules](#naming-rules))\r\n\r\nSpecific to the runtime:\r\n* __`runtime`__: used to select the runtime, currently only `nodejs8` is supported\r\n* __`library`__: base directory for all source code file references, just to reduce redundancy\r\n\r\nRuntime artifacts:\r\n* __`secrets`__: collection of secrets, used to store credentials, api keys and the like\r\n* __`configs`__: collection of config maps, used for less critical, configuration-like settings, that shall not be hard-coded\r\n* __`functions`__: collection of functions that this project defines\r\n* __`triggers`__: collection of triggers, different types with individual settings\r\n\r\nEach runtime artifact collection uses the [object name](#object-names) as json key field.\r\nThe name must be unique per artifact type in the scope of one __K8s__ namespace (that is, service instance).\r\n\r\nFor example:\r\n* Multiple namespaces may define their own secret `test1`.\r\n* In one namespace there might be a function `test1` and a secret `test1` in parallel.\r\n* However, there will be only one secret `test1` in one namespace at a time, even if two different projects are used to deploy it.\r\n\r\nNo assumptions are made regarding the separation of projects.\r\nIn particular, __FaaS__ runtime will __not__ prevent multiple projects from deploying any artifacts concurrently.\r\n\r\n### Secrets and Config Maps\r\nTechnically, secrets and config maps share the same structure.\r\nA local directory containing one or more files is used for declaration.\r\nAll files together must not exceed a total size of 1Mb.\r\n```json\r\n{\r\n  \"project\": \"example\",\r\n  \"version\": \"0.0.1\",\r\n\r\n  \"runtime\": \"nodejs8\",\r\n  \"library\": \"./lib\",\r\n\r\n  \"secrets\": {\r\n    \"sec1\": {\r\n      \"source\" : \"./data/sec1\"\r\n    }\r\n  },\r\n\r\n  \"configs\": {\r\n    \"cfg1\": {\r\n      \"source\" : \"./data/cfg1\"\r\n    }\r\n  }\r\n}\r\n```\r\nIn addition to the unique object name, for example, `sec1` or `cfg1`, only one attribute is required:\r\n* __`source`__: relative path to the data directory\r\n\r\nThe data directory and its contained files define the data model and default values.\r\nAs the files will most likely show up in a git repository you may wish to see placeholder values first, later replaced (dynamically) by valid credentials, for instance.\r\n\r\nBoth tools, `faas-sdk` and `faas-cli`, support a simple mechanism for that: a deployment file with a predefined structure.\r\nTake this as an example:\r\n```yaml\r\nsecret-values:\r\n  sec1:\r\n    rv.json:\r\n      Info:\r\n        Success: Demo\r\n        Failure: Todo\r\n      Code:\r\n        Success: A\r\n        Failure: X\r\n    text: Nice Test!\r\n```\r\nHere, values are defined for secret `sec1`, and its two files `rv.json` and `text`.\r\nFor `json` or `yaml` files also single object attributes inside the file can be replaced. Arrays are handled as one value only.\r\nIn the case of other files e.g. text or binary data, the whole file content can be replaced.\r\n\r\nTo initialize such a deployment file based on specific secret definitions run inside the project:\r\n```bash\r\nfaas-sdk init-values -y values.yaml\r\n```\r\nThe command will search `faas.json` starting from the current working directory.\r\nOnce found it will add the content of secret and config map files to the deployment file `values.yaml`.\r\nAs no directory is specified it will be stored in folder `deploy` (to be ignored by git) next to `faas.json`.\r\n\r\nAfter adjusting the deployment file content you can start a local test run:\r\n```bash\r\nfaas-sdk run -y values.yaml\r\n```\r\n\r\nAnd for cloud deployment it can be used as well:\r\n```bash\r\nfaas-cli project deploy -y ./deploy/values.yaml -s my-cf-service -k my-cf-service-key\r\n```\r\n\r\nThese deployment files can also be used to define mock data for [function unit tests](#function-unit-tests).\r\n\r\n### Service References\r\n\r\nBesides the option to use secrets there is a more simple way to provide credentials of SAP CP platform services to functions or triggers.\r\nFirst, you can use the command line tool to transfer service keys to a secure store in the faas runtime:\r\n* Run ```cf login```\r\n* Run ```faas-cli login```\r\n* Run ```faas-cli service register -s <service-name> -b <service-key>```\r\n\r\nTo list all registered services (for your faas tenant, means service instance):\r\n* Run ```faas-cli service list```\r\n\r\nThen you can define in your project a service reference, for example to an enterprise messaging instance:\r\n```json\r\n{\r\n  \"services\": {\r\n    \"my-ems\": {\r\n      \"type\": \"enterprise-messaging\",\r\n      \"instance\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\r\n      \"key\": \"xxx\"\r\n    }\r\n  }\r\n}\r\n```\r\nFinally, use the alias `my-ems` inside `faas.json` at trigger definitions and/or within function code.\r\nThe specific values of the reference can be provided with deploy values as well.\r\n\r\n### Functions\r\nLet's start with an example again:\r\n```json\r\n{\r\n  \"project\": \"example\",\r\n  \"version\": \"0.0.1\",\r\n\r\n  \"runtime\": \"nodejs8\",\r\n  \"library\": \"./lib\",\r\n\r\n  \"functions\": {\r\n    \"my-new-fnc\": {\r\n      \"module\" : \"index.js\",\r\n      \"handler\": \"\",\r\n      \"secrets\": [ \"sec-xbem\", \"sec-ebaas\" ],\r\n      \"configs\": [],\r\n      \"timeout\": 180,\r\n      \"maxBody\": \"1MiB\"\r\n    }\r\n  }\r\n}\r\n```\r\nIn addition to the unique object name `my-new-fnc` the following attributes can be provided:\r\n* __`module`__: source code file that exports the function handler (it may require other files of course)\r\n* __`handler`__: only needed if `module.exports` appears as an object where handler can be found as attribute\r\n* __`httpApi`__: indicates whether or not HTTP request and response are required by the function handler\r\n* __`secrets`__: array of secrets used by the function\r\n* __`configs`__: array of config maps used by the function\r\n* __`timeout`__: seconds the function can run, minimum between 10 and 180 seconds\r\n* __`maxBody`__: limit for body size (payload) of incoming requests provided to the function, default `1MiB`\r\n\r\nThe function handler may require built-in modules, further local module files or external packages.\r\nExternal dependencies (or devDependencies, for example for unit testing) are defined as usual in `package.json`.\r\n\r\nAn important entry in devDependencies is `@sap/faas`.\r\nIt allows the implementation of function unit tests.\r\nFurthermore, it offers type definitions that your local IDE may use for code proposals.\r\n```json\r\n{\r\n  \"dependencies\": {\r\n  },\r\n  \"devDependencies\": {\r\n    \"@sap/faas\": \">=0.7.6\"\r\n  }\r\n}\r\n```\r\n\r\nThe function handler in file `ìndex.js` may look like this:\r\n```javascript\r\n'use strict';\r\n\r\n/**\r\n * @namespace Faas\r\n * @typedef {import(\"@sap/faas\").Faas.Event} Faas.Event\r\n * @typedef {import(\"@sap/faas\").Faas.Context} Faas.Context\r\n */\r\n\r\n/**\r\n * @param {Faas.Event} event\r\n * @param {Faas.Context} context\r\n * @return {Promise<*>|*}\r\n */\r\nmodule.exports = function(event, context) {\r\n    const rval = context.getSecretValueJSON('sec1', 'rv.json');\r\n    return rval.Info.Success;\r\n};\r\n```\r\nPlease note how jsdoc annotations are used to declare the types.\r\nWith that IDE shall support you in finding methods and attributes of `event` and `context` while typing.\r\n\r\n## Function Triggers\r\nFunctions are invoked by triggers.\r\nA single function may be referenced by multiple trigger instances of different types.\r\nIn principle a single trigger may also invoke different functions, e.g. an AMQP trigger with multiple rules.\r\n\r\nThe following types are supported:\r\n* HTTP\r\n* Timer\r\n* AMQP\r\n* CloudEvents\r\n\r\nA first example shows how triggers are defined in principle within `faas.json`:\r\n```json\r\n{\r\n  \"project\": \"example\",\r\n  \"version\": \"0.0.1\",\r\n\r\n  \"runtime\": \"nodejs8\",\r\n  \"library\": \"./lib\",\r\n\r\n  \"functions\": {\r\n    \"my-new-fnc\": {\r\n      \"module\" : \"index.js\"\r\n    }\r\n  },\r\n\r\n  \"triggers\": {\r\n    \"demo\": {\r\n      \"type\": \"HTTP\",\r\n      \"function\": \"my-fnc-01\"\r\n    },\r\n    \"job1\": {\r\n      \"type\": \"Timer\",\r\n      \"schedule\": \"0/15 * * * *\",\r\n      \"function\": \"my-fnc-02\"\r\n    }\r\n  }\r\n\r\n}\r\n```\r\nTrigger `demo` will provide an HTTP endpoint.\r\nFor each received HTTP request the function `my-fnc-01` will be invoked.\r\nIn parallel trigger `job1` will call function `my-fnc-02` each quarter of an hour.\r\n\r\n### HTTP Trigger\r\n\r\nFor each trigger instance an external `HTTP` endpoint will be created.\r\nEach incoming request will be forwarded to the function, except those for method 'OPTIONS'.\r\nThe result of the function will be returned as response.\r\n\r\n__Attributes__:\r\n* __`function`__: the function to call\r\n\r\n__Example__:\r\n```json\r\n{\r\n  \r\n  \"triggers\": {\r\n    \"demo\": {\r\n      \"type\": \"HTTP\",\r\n      \"function\": \"my-new-fnc\"\r\n    }\r\n  }\r\n  \r\n}\r\n```\r\n\r\nBe aware that the endpoint is public visible.\r\nSo far authentication/authorization has to be handled by the function code.\r\nIt is planned to support automated oauth token validation in future.\r\n\r\n### Timer Trigger\r\n\r\nA single `Timer` trigger defines a schedule, optionally with timezone to call a selected function.\r\nDifferent schedule formats are supported:\r\n\r\n* simple duration\r\n  - every 1 minute and 30 seconds: `1m30s`,\r\n  - every 15 seconds `15s`,\r\n  - every 1 hour 30 minutes and 15 seconds: `1h30m15s`\r\n\r\n* cron expression, [spec conform](https://en.wikipedia.org/wiki/Cron), 5 fields\r\n  ```\r\n  ┌───────────── minute (0 - 59)\r\n  │ ┌───────────── hour (0 - 23)\r\n  │ │ ┌───────────── day of the month (1 - 31)\r\n  │ │ │ ┌───────────── month (1 - 12)\r\n  │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday; 7 is also Sunday on some systems)\r\n  │ │ │ │ │\r\n\r\n  * * * * *\r\n  ```\r\n\r\n* cron expression, additional field for seconds, 6 fields\r\n  ```\r\n  ┌───────────── second (0 - 59)\r\n  │ ┌───────────── minute (0 - 59)\r\n  │ │ ┌───────────── hour (0 - 23)\r\n  │ │ │ ┌───────────── day of the month (1 - 31)\r\n  │ │ │ │ ┌───────────── month (1 - 12)\r\n  │ │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday; 7 is also Sunday on some systems)\r\n  │ │ │ │ │ │\r\n\r\n  * * * * * *\r\n  ```\r\n\r\nTogether with cron expressions also a timezone can be of importance, typically when scheduling for hours.\r\nValid timezone values follow [Iana timezone database](https://www.iana.org/time-zones).\r\n\r\n__Attributes__:\r\n* __`schedule`__: duration or cron expression, which defines the execution interval\r\n* __`timezone`__: optional, timezone\r\n* __`function`__: the function to call\r\n\r\n__Examples for schedule and timezone__:\r\n\r\n| schedule | timezone | execution |\r\n|---|---|---|\r\n|`30s`            |             | every 30 seconds, start immediately, 10:15:12, 10:15:42, 10:16:12 ... |\r\n|`1h30m`          |             | every one and a half hour, 10:12:10, 11:42:10, 13:12:10, 14:42:10 ... |\r\n|`0 * * * *`      |             | each full hour                                                        |\r\n|`0/15 * * * *`   |             | each quarter of an hour                                               |\r\n|`0/15 * * * * *` |             | each 15 seconds, 10:00:00, 10:00:15, 10:00:30, 10:00:45, 10:01:00 ... |\r\n|`30 4 * * *`     |Asia/Tokyo   | each day 04:30, Tokyo time                                            |\r\n|`15 8 * * *`     |Europe/Berlin| each day 08:15, Berlin time                                           |\r\n|`20-24/2 * * * *`|             | each hour the 20th, 22nd and 24th minute                              |\r\n\r\nThe minimum interval of a timer is 1 second, runtime will either round up or raise an error if syntax is wrong.\r\nIf a function call takes longer than the scheduled interval, the timer will skip those calls and log this accordingly.\r\nIf a function can not be reached, the timer will repeat to try this a defined number of times with a growing delay.\r\n\r\nUpdates to timer definitions may require a timer restart, which may be of importance when scheduling hours or longer intervals.\r\nFor example, if you define a timer schedule of `1h` and change the timer 5 minutes before execution to `1h30m` you will have to wait full `1h30m` for the next call.\r\n\r\nA timer is restarted if `schedule` or `timezone` change, otherwise it is only updated, keeping the calculated point in time for the next execution.\r\n\r\n### AMQP Trigger\r\n\r\nThis trigger type invokes functions as message consumers.\r\nAs long business events are transported via messages the trigger can also be seen as a business event trigger.\r\n\r\nDepending on rules functions are selected based on message properties.\r\nThe function results can optionally be sent as new messages.\r\nIf the function execution fails the corresponding message can also be forwarded to an error topic.\r\n\r\nTechnically the trigger behaves like an [AMQP 1.0](https://www.amqp.org/resources/specifications) client.\r\nIt will connect to any peer either via WebSocket (with or without OAuth credentials flow) or via plain TCP, most likely using SASL credentials. \r\nUsually, the peer will be a message broker like Enterprise Messaging provides it for example.\r\n\r\n__Attributes__:\r\n* __`service`__: a service alias, it must be defined in the same project\r\n* __`secret`__: a secret that provides credentials to connect if no service reference is provided\r\n* __`config`__: a config map that provides the amqp link settings and binding rules\r\n\r\nUsually, the secret can be re-used by multiple triggers as it provides just connection data for a messaging broker.\r\nThe config map will be trigger specific, providing link settings (to address queues or topics) as well as binding rules.\r\n\r\n__Secret Entries__:\r\n* `dial` or `dial.json`: destination data like host, port, use of websocket or not, oauth credentials if needed\r\n* `sasl` or `sasl.json`: SASL mechanism (ANONYMOUS, PLAIN), corresponding parameters if plain TCP connections are used\r\n\r\n__Config Entries__:\r\n* `amqp` or `amqp.json`: definition of AMQP links and sessions to use, addresses, settle modes and so on \r\n* `bind` or `bind.json`: rules to select functions based on message properties and to specify result and error handling\r\n\r\nIt will be important to use a deployment file (values.yaml) to provide real credentials and settings for a specific deployment.\r\nThose data must not be stored in the secret and config defintion fields directly, as you probably will not wish to see it on git.\r\n\r\n### CloudEvents Trigger\r\n\r\nThis trigger allows you to subscribe CloudEvents and to define a rule-based function invocation.\r\nIt works similar to an AMQP trigger, but does not require secret or config map.\r\nInstead it is completely defined within `faas.json`.\r\nFurthermore, it will configure the messaging service automatically with the project deployment.\r\n\r\n```json\r\n{\r\n  \"functions\": {\r\n    \"ce-coffee-handler\": {\r\n      \"module\": \"index.js\",\r\n      \"services\": []\r\n    }\r\n  },\r\n  \"triggers\": {\r\n    \"my-ce\": {\r\n      \"type\": \"CloudEvents\",\r\n      \"service\": \"my-ems\",\r\n      \"rules\": [\r\n        {\r\n          \"ce-source\": \"\",\r\n          \"ce-type\": \"com.sap.coffee.required\",\r\n          \"function\": \"ce-coffee-handler\",\r\n          \"failure\": \"accept\"\r\n        },\r\n        {\r\n          \"ce-source\": \"\",\r\n          \"ce-type\": \"com.sap.coffee.produced\",\r\n          \"function\": \"ce-coffee-handler\",\r\n          \"failure\": \"accept\"\r\n        },\r\n        {\r\n          \"ce-source\": \"\",\r\n          \"ce-type\": \"com.sap.coffee.consumed\",\r\n          \"function\": \"ce-coffee-handler\",\r\n          \"failure\": \"accept\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\nWhile deployment the referenced messaging service will be called to create a queue and topic subscriptions according to the given rules.\r\nFor one single message only one single rule is applied, the first that matches.\r\nCurrently SAP Enterprise Messaging is supported. The list may be extended according to development requests you raise.\r\n\r\n## Function Runtime API\r\nThe function handler is implemented as usual (anonymous) function, receiving two parameters: `event` and `context`.\r\nIt may return a simple value directly or a `Promise` to handle asynchronous execution.\r\nAs a consequence, `async` and `await` may be used as well.\r\n\r\n### Global Variables\r\nMultiple calls may arrive in parallel in one Node.js instance.\r\nEach call will be handled in a [sandbox](https://nodejs.org/docs/latest-v8.x/api/vm.html#vm_vm_runinnewcontext_code_sandbox_options).\r\nThis means global variables of the main file are never shared and never reused.\r\n\r\nHowever, the sandbox does not cover globals of any dependent file.\r\nHence, global variables in required modules must be handled with care if it cannot be avoided.\r\nValid examples for those globals could be:\r\n* A cache for access tokens, not retrieved for each single call\r\n* Protocol clients that manage a permanent network connection, e.g. to a message broker\r\n\r\nStill, there is no guarantee that a Node.js instance is running for a certain time,\r\nbut in fact such a cache or reused client will be reused many times and will improve overall performance significantly.\r\n\r\n### Handler Exceptions\r\nThe function code can throw an exception at any point in time to stop processing unexpected internal state.\r\nIn this case an HTTP caller for example will receive response status code 500 (internal server error) only.\r\nError details will be added to the function log.\r\n`faas-cli` can be used to retrieve log entries.\r\n\r\n### Handler Parameter: __event__\r\nProvides attributes and methods related to a single function invocation.\r\n\r\n__Attributes__:\r\n* __`auth`__: authorization data\r\n  * __`type`__: first part of HTTP authorization header, e.g. `Basic`, `Bearer`, ..: \r\n  * __`credentials`__: plain data corresponding to `type`\r\n* __`ce`__: [cloud event context attributes](https://github.com/cloudevents/spec/blob/v0.2/spec.md#context-attributes), only defined if available\r\n  * __`specVersion`__: version of the CloudEvents specification which the event uses\r\n  * __`source`__: event producer `\"sap/app/01\"`\r\n  * __`type`__: event type, e.g. `\"sap.common.alert\"`\r\n  * __`id`__: ID of the event\r\n  * __`subject`__: subject of the event\r\n  * __`time`__: timestamp of when the event happened\r\n  * __`dataContentType`__: data encoding format\r\n  * __`dataSchema`__: link to the schema that the data attribute adheres to\r\n  * __`data`__: event payload, please note `event.ce.data` will always be equal to `event.data`\r\n  * __`extensions`__: additional metadata not covered by the specification\r\n* __`data`__: payload data (HTTP body) related to invocation, depending on the received content type, either `string`, `Buffer` or `Object`, data can always be found here, with or without cloud event.\r\n* __`http`__: only defined if explicitly requested, provides access to HTTP `request` and `response` if available\r\n\r\n__Methods__:\r\n* __`decodeJsonWebToken():{ header: object, payload: object, signature: string }`__:\r\nDecodes event credentials as JSON WebToken (JWT).\r\nReturns `null` if the mechanism is not 'Bearer' or if the token has no valid JWT structure.\r\nDoes not validate the token signature, as this has been done by the calling trigger already.\r\nThe token itself is provided in field `event.auth.credentials`.\r\n* __`decodeUserPassword():{ user: string, password: string }`__:\r\nDecodes event credentials as basic authentication data.\r\nReturns `null` if the mechanism is not 'Basic' or if the credentials do not match the expected structure.\r\nDoes not validate the credentials against any provider, as this will be function logic already.\r\n* __`setBadRequest()`__:\r\nSets the event status to `bad request`.\r\nEvent will not be processed, handler may still add data to the response, for example as hint. \r\nIn contrast, throwing any error would be treated as internal error.\r\n* __`setUnauthorized()`__:\r\nSets the event status to `unauthorized`.\r\nEvent will not be processed, handler may still add data to the response, for example as hint.\r\nIn contrast, throwing any error would be treated as internal error.\r\n* __`getContentType():string`__:\r\nProvides the received content type.\r\nIn the case of cloud events it will be taken from the event itself.\r\nData are provided accordingly, this means as object in case of `json`-format or as string or Buffer otherwise.\r\n* __`setResponseType(string)`__:\r\nDefines the response content type explicitly.\r\nOtherwise callers' accepted types will be compared with the return data type and best matches will be used.\r\nFallback strategy is based on the returned data type only.\r\n* __`getResponseStream(contentType):WritableStream`__:\r\nThe response content type is defined and the corresponding stream is returned.\r\nIt is possible to write data directly to the stream or to pipe data from other streams.\r\nThe function handler shall return a `Promise` to the runtime to indicate the asynchronous end of processing.\r\n* __`sendResponseEvent(ce)`__:\r\nThe cloud event is returned as result of function execution.\r\nHttp-Triggers would return it to the caller.\r\nAMQP or CE trigger can send the event, depending on its configuration. Source will be adjusted.\r\n\r\nIf the function returns a simple value without defining the content type, a matching response content type will be selected automatically.\r\nAnd if the client was sending an HTTP request with `Accept` header this will also be taken into account.\r\n\r\n### Handler Parameter: __context__\r\nProvides attributes and methods related to the current process.\r\n\r\n__Attributes__:\r\n* __`funcName`__: function name\r\n* __`timeoutMS`__: milliseconds that the function is allowed to run\r\n\r\n__Methods__: (runtime nodejs8 provides the same methods, but __not__ async)\r\n* __`async getServiceCredentials(faas-json-alias)`__: provides service credentials as binary data (Buffer)`\r\n* __`async getServiceCredentialsString(faas-json-alias)`__: provides service credentials as text`\r\n* __`async getServiceCredentialsJSON(faas-json-alias)`__: provides service credentials as parsed JSON data`\r\n* __`async getSecretValueStream(name, key)`__: provides secret value stream\r\n* __`async getSecretValue(name, key)`__: provides secret value as binary data (Buffer)\r\n* __`async getSecretValueString(name, key)`__: provides secret value as text\r\n* __`async getSecretValueJSON(name, key)`__: provides secret value as parsed JSON data\r\n* __`async getSecretValueYAML(name, key)`__: provides secret value as parsed YAML data\r\n* __`async getConfigValueStream(name, key)`__: provides config value stream\r\n* __`async getConfigValue(name, key)`__: provides config value as binary data (Buffer)\r\n* __`async getConfigValueString(name, key)`__: provides config value as text\r\n* __`async getConfigValueJSON(name, key)`__: provides config value as parsed JSON data\r\n* __`async getConfigValueYAML(name, key)`__: provides config value as parsed YAML data\r\n* __`async callFunction(name, content): response`__:\r\nCalls another function by `name` within the same __K8s__ namespace,\r\n`content.data` provides the request payload, `content.type` the request content type.\r\n`response.data` contains the received payload, `response.type` the received content type.\r\nSpecial handling with runtime `nodejs8`: the method accepts a JsCallback as third parameter or returns a promise otherwise.\r\n* __`getFunctionEndpoint(name):string`__: Only available with enabled HTTP API,\r\nexpects a function name (inside the same __K8s__ namespace) and returns the corresponding HTTP endpoint.\r\n\r\nThe object is reused for all function calls within the current Node.js instance,\r\nbut attributes must not be changed.\r\n\r\n## Function Test\r\nThe following command runs all functions of a project locally:\r\n```bash\r\nfaas-sdk run -r 7777 -y values.yaml\r\n```\r\nIt will search `faas.json` starting from the current working directory.\r\nAfter reading all declarations one HTTP server starts listening at the given port.\r\nThe URL for each function is printed to the console.\r\n\r\nEach function will find the same environment like in the cloud later on.\r\nUse any HTTP client or just a Web browser to call it.\r\n\r\n## Function Debugging\r\nTo debug function code in a local IDE, usually a debug configuration is needed:\r\n* Install `@sap/faas` as devDependency.\r\n* Create a debug configuration in your local IDE for Node.js.\r\n* Use `./node_modules/@sap/faas/lib/cli.js` as file to execute.\r\n* Use `run` as cli argument.\r\n* Use this directory or just another underneath `faas.json` as working directory.\r\n* Set break points and invoke a function via browser or HTTP client.\r\n\r\n## Function Unit Tests\r\nFinally, also unit tests for functions can be implemented. Here, `@sap/faas` provides a test method.\r\nIt will do the following:\r\n* Start an HTTP server as described before.\r\n* Execute the provided test callback.\r\n* Shut down the server afterwards.\r\n\r\nAs entry point the same [`context`](#handler-parameter:-context) object is provided that functions see at runtime.\r\nIt allows to call functions and to read secret or config map values, at this point of course starting from the local files.\r\nA deployment file can be provided to apply mock data.\r\n\r\nThe following example uses a well-known test framework, even if `@sap/faas` does not enforce its usage.\r\n```javascript\r\n/*jshint mocha:true*/\r\n'use strict';\r\n\r\nconst assert = require('assert');\r\nconst faas = require('@sap/faas');\r\n\r\ndescribe('hello secret example', () => {\r\n\r\n//  ************************************************************************************************\r\n\r\n    it('using default values', (done) => {\r\n        faas.test(done,\r\n            {\r\n            },\r\n            async (context) => {\r\n                const result = await context.callFunction('hello-secret', {});\r\n                assert.equal(result.type, 'text/plain; charset=utf-8');\r\n                assert.equal(result.data, 'Demo');\r\n            }\r\n        );\r\n    });\r\n\r\n//  ************************************************************************************************\r\n\r\n    it('using deploy values', (done) => {\r\n        faas.test(done,\r\n            {\r\n                'deploy-values': '../mock/values.yaml'\r\n            },\r\n            async (context) => {\r\n                const result = await context.callFunction('hello-secret', {});\r\n                assert.equal(result.type, 'text/plain; charset=utf-8');\r\n                assert.equal(result.data, 'Nice Test!');\r\n            }\r\n        );\r\n    });\r\n\r\n//  ************************************************************************************************\r\n\r\n    it('read secret text', (done) => {\r\n        faas.test(done,\r\n            {\r\n            },\r\n            async (context) => {\r\n                assert.equal(context.getSecretValueString('sec1', 'text'), 'Hello World!');\r\n            }\r\n        );\r\n    });\r\n\r\n//  ************************************************************************************************\r\n\r\n    it('read secret json', (done) => {\r\n        faas.test(done,\r\n            {\r\n            },\r\n            async (context) => {\r\n                assert.deepStrictEqual(context.getSecretValueJSON('sec1', 'rv.json'), {\r\n                    \"Info\": {\r\n                        \"Success\": \"Demo\",\r\n                        \"Failure\": \"Todo\"\r\n                    },\r\n                    \"Code\": {\r\n                        \"Success\": \"A\",\r\n                        \"Failure\": \"X\"\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    });\r\n\r\n//  ************************************************************************************************\r\n\r\n});\r\n```\r\n\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.7.11] - 2020-10-12\r\n\r\n- update: README after move to npmjs\r\n- added: optional parameter info at event.setUnauthorized(info) and event.setBadRequest(info)\r\n\r\n## [0.7.10] - 2020-09-23\r\n\r\n- fixed; event error responses\r\n\r\n## [0.7.9] - 2020-07-01\r\n\r\n## [0.7.8] - 2020-07-01\r\n\r\n- fixed: express route for local test run with special function names, e.g. \"fun\" and \"fun2\"\r\n- startup log lines removed, more simple log consumption\r\n\r\n## [0.7.7] - 2020-03-12\r\n\r\n## [0.7.6] - 2020-03-12\r\n\r\n## [0.7.5] - 2020-03-11\r\n\r\n- fixed: special handling for cloudevent response in function call, e.g. in unit tests\r\n## [0.7.4] - 2020-03-09\r\n\r\n## [0.7.3] - 2020-03-06\r\n\r\n## [0.7.2] - 2020-01-31\r\n\r\n- fixed: code completion for vscode and intellij\r\n\r\n## [0.7.1] - 2020-01-28\r\n\r\n- fixed: service credentials, provide only credentials content\r\n\r\n## [0.7.0] - 2020-01-24\r\n\r\n- optimized runtime (full separation of sdk support)\r\n- added: context methods for service credentials\r\n- added: event.setBadRequest()\r\n- added: event.setUnauthorized()\r\n\r\n## [0.6.3] - 2019-09-23\r\n\r\n- fixed: function codes console.log() reaches runtime log in Node.js 10 or higher\r\n\r\n## [0.6.2] - 2019-05-21\r\n\r\n- fixed: README.md, explain faas instance descriptor\r\n- fixed: cleanup dependencies for example\r\n- fixed: cleanup dependencies for project template\r\n- updated dev dependencies, e.g. nyc for code coverage\r\n\r\n## [0.6.0] - 2019-02-15\r\n\r\n## [0.5.1] - 2018-12-18\r\n\r\n### Added\r\n\r\n- initial version\r\n- documentation\r\n- command `faas-cli`\r\n- init project\r\n- init deploy values\r\n- local run support\r\n- unit test support\r\n"},{"name":"fibers","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"fibers(1) -- Fiber support for v8 and Node\r\n==========================================\r\n[![npm version](https://badgen.now.sh/npm/v/fibers)](https://www.npmjs.com/package/fibers)\r\n[![isc license](https://badgen.now.sh/npm/license/fibers)](https://github.com/laverdet/node-fibers/blob/master/LICENSE)\r\n[![travis build](https://badgen.now.sh/travis/laverdet/node-fibers)](https://travis-ci.org/laverdet/node-fibers)\r\n[![npm downloads](https://badgen.now.sh/npm/dm/fibers)](https://www.npmjs.com/package/fibers)\r\n\r\nFibers, sometimes called [coroutines](https://en.wikipedia.org/wiki/Coroutine), are a powerful tool which expose an API to jump between multiple call stacks from within a single thread. This can be useful to make code written for a synchronous library play nicely in an asynchronous environment.\r\n\r\nINSTALLING\r\n----------\r\n[![NPM](https://nodei.co/npm/fibers.png)](https://www.npmjs.com/package/fibers)\r\n\r\n### via npm\r\n* `npm install fibers`\r\n* You're done! (see \"supported platforms\" below if you run into errors)\r\n\r\n### from source\r\n* `git clone git://github.com/laverdet/node-fibers.git`\r\n* `cd node-fibers`\r\n* `npm install`\r\n\r\nNote: node-fibers uses [node-gyp](https://github.com/TooTallNate/node-gyp) for\r\nbuilding. To manually invoke the build process, you can use `node-gyp rebuild`.\r\nThis will put the compiled extension in `build/Release/fibers.node`. However,\r\nwhen you do `require('fibers')`, it will expect the module to be in, for\r\nexample, `bin/linux-x64-v8-3.11/fibers.node`. You can manually put the module\r\nhere every time you build, or you can use the included build script. Either\r\n`npm install` or `node build -f` will do this for you. If you are going to be\r\nhacking on node-fibers, it may be worthwhile to first do `node-gyp configure`\r\nand then for subsequent rebuilds you can just do `node-gyp build` which will\r\nbe faster than a full `npm install` or `node-gyp rebuild`.\r\n\r\n### meteor users please read this\r\nIf you're trying to get meteor running and you ended up at this page you're\r\nprobably doing something wrong. Please uninstall all versions of NodeJS and\r\nMeteor, then start over. See\r\n[meteor#5124](https://github.com/meteor/meteor/issues/5124) for more\r\ninformation.\r\n\r\n### supported platforms\r\nIf you are running 64-bit nodejs version 12.x or 14.x on Linux, OS X, or Windows (7 or later) then\r\nyou should be able to install fibers from npm just fine. If you are running nodejs v10.x then you\r\nwill need to use `npm install fibers@4`. Older versions of nodejs will require older and older\r\nversion of fibers.\r\n\r\n(special thanks to [Jeroen Janssen](https://github.com/japj) for his work on fibers in Windows)\r\n\r\nIf you do end up needing to compile fibers first make sure you have node-gyp installed as a global\r\ndependency (`npm install -g node-gyp`), and that you have setup your build environment by following\r\nthe instructions at [node-gyp](https://github.com/TooTallNate/node-gyp). Ubuntu-flavored Linux users\r\nmay need to run `sudo apt-get install g++` as well.\r\n\r\n\r\nEXAMPLES\r\n--------\r\n\r\nThe examples below describe basic use of `Fiber`, but note that it is **not\r\nrecommended** to use `Fiber` without an abstraction in between your code and\r\nfibers. See \"FUTURES\" below for additional information.\r\n\r\n### Sleep\r\nThis is a quick example of how you can write sleep() with fibers. Note that\r\nwhile the sleep() call is blocking inside the fiber, node is able to handle\r\nother events.\r\n\r\n\t$ cat sleep.js\r\n\r\n```javascript\r\nvar Fiber = require('fibers');\r\n\r\nfunction sleep(ms) {\r\n\tvar fiber = Fiber.current;\r\n\tsetTimeout(function() {\r\n\t\tfiber.run();\r\n\t}, ms);\r\n\tFiber.yield();\r\n}\r\n\r\nFiber(function() {\r\n\tconsole.log('wait... ' + new Date);\r\n\tsleep(1000);\r\n\tconsole.log('ok... ' + new Date);\r\n}).run();\r\nconsole.log('back in main');\r\n```\r\n\r\n\t$ node sleep.js\r\n\twait... Fri Jan 21 2011 22:42:04 GMT+0900 (JST)\r\n\tback in main\r\n\tok... Fri Jan 21 2011 22:42:05 GMT+0900 (JST)\r\n\r\n\r\n### Incremental Generator\r\nYielding execution will resume back in the fiber right where you left off. You\r\ncan also pass values back and forth through yield() and run(). Again, the node\r\nevent loop is never blocked while this script is running.\r\n\r\n\t$ cat generator.js\r\n\r\n```javascript\r\nvar Fiber = require('fibers');\r\n\r\nvar inc = Fiber(function(start) {\r\n\tvar total = start;\r\n\twhile (true) {\r\n\t\ttotal += Fiber.yield(total);\r\n\t}\r\n});\r\n\r\nfor (var ii = inc.run(1); ii <= 10; ii = inc.run(1)) {\r\n\tconsole.log(ii);\r\n}\r\n```\r\n\r\n\t$ node generator.js\r\n\t1\r\n\t2\r\n\t3\r\n\t4\r\n\t5\r\n\t6\r\n\t7\r\n\t8\r\n\t9\r\n\t10\r\n\r\n\r\n### Fibonacci Generator\r\nExpanding on the incremental generator above, we can create a generator which\r\nreturns a new Fibonacci number with each invocation. You can compare this with\r\nthe [ECMAScript Harmony\r\nGenerator](http://wiki.ecmascript.org/doku.php?id=harmony:generators) Fibonacci\r\nexample.\r\n\r\n\t$ cat fibonacci.js\r\n\r\n```javascript\r\nvar Fiber = require('fibers');\r\n\r\n// Generator function. Returns a function which returns incrementing\r\n// Fibonacci numbers with each call.\r\nfunction Fibonacci() {\r\n\t// Create a new fiber which yields sequential Fibonacci numbers\r\n\tvar fiber = Fiber(function() {\r\n\t\tFiber.yield(0); // F(0) -> 0\r\n\t\tvar prev = 0, curr = 1;\r\n\t\twhile (true) {\r\n\t\t\tFiber.yield(curr);\r\n\t\t\tvar tmp = prev + curr;\r\n\t\t\tprev = curr;\r\n\t\t\tcurr = tmp;\r\n\t\t}\r\n\t});\r\n\t// Return a bound handle to `run` on this fiber\r\n\treturn fiber.run.bind(fiber);\r\n}\r\n\r\n// Initialize a new Fibonacci sequence and iterate up to 1597\r\nvar seq = Fibonacci();\r\nfor (var ii = seq(); ii <= 1597; ii = seq()) {\r\n\tconsole.log(ii);\r\n}\r\n```\r\n\r\n\t$ node fibonacci.js\r\n\t0\r\n\t1\r\n\t1\r\n\t2\r\n\t3\r\n\t5\r\n\t8\r\n\t13\r\n\t21\r\n\t34\r\n\t55\r\n\t89\r\n\t144\r\n\t233\r\n\t377\r\n\t610\r\n\t987\r\n\t1597\r\n\r\n\r\n### Basic Exceptions\r\nFibers are exception-safe; exceptions will continue travelling through fiber\r\nboundaries:\r\n\r\n\t$ cat error.js\r\n\r\n```javascript\r\nvar Fiber = require('fibers');\r\n\r\nvar fn = Fiber(function() {\r\n\tconsole.log('async work here...');\r\n\tFiber.yield();\r\n\tconsole.log('still working...');\r\n\tFiber.yield();\r\n\tconsole.log('just a little bit more...');\r\n\tFiber.yield();\r\n\tthrow new Error('oh crap!');\r\n});\r\n\r\ntry {\r\n\twhile (true) {\r\n\t\tfn.run();\r\n\t}\r\n} catch(e) {\r\n\tconsole.log('safely caught that error!');\r\n\tconsole.log(e.stack);\r\n}\r\nconsole.log('done!');\r\n```\r\n\r\n\t$ node error.js\r\n\tasync work here...\r\n\tstill working...\r\n\tjust a little bit more...\r\n\tsafely caught that error!\r\n\tError: oh crap!\r\n\t\t\tat error.js:11:9\r\n\tdone!\r\n\r\n\r\nFUTURES\r\n-------\r\n\r\nUsing the `Fiber` class without an abstraction in between your code and the raw\r\nAPI is **not recommended**. `Fiber` is meant to implement the smallest amount of\r\nfunctionality in order make possible many different programming patterns. This\r\nmakes the `Fiber` class relatively lousy to work with directly, but extremely\r\npowerful when coupled with a decent abstraction. There is no right answer for\r\nwhich abstraction is right for you and your project. Included with `node-fibers`\r\nis an implementation of \"futures\" which is fiber-aware. Usage of this library\r\nis documented below. There are several other externally-maintained options\r\nwhich can be found on the [wiki](https://github.com/laverdet/node-fibers/wiki).\r\nYou **should** feel encouraged to be creative with fibers and build a solution\r\nwhich works well with your project. For instance, `Future` is not a good\r\nabstraction to use if you want to build a generator function (see Fibonacci\r\nexample above).\r\n\r\nUsing `Future` to wrap existing node functions. At no point is the node event\r\nloop blocked:\r\n\r\n\t$ cat ls.js\r\n\r\n```javascript\r\nvar Future = require('fibers/future');\r\nvar fs = Future.wrap(require('fs'));\r\n\r\nFuture.task(function() {\r\n\t// Get a list of files in the directory\r\n\tvar fileNames = fs.readdirFuture('.').wait();\r\n\tconsole.log('Found '+ fileNames.length+ ' files');\r\n\r\n\t// Stat each file\r\n\tvar stats = [];\r\n\tfor (var ii = 0; ii < fileNames.length; ++ii) {\r\n\t\tstats.push(fs.statFuture(fileNames[ii]));\r\n\t}\r\n\tstats.map(function(f) {\r\n\t\tf.wait()\r\n\t});\r\n\r\n\t// Print file size\r\n\tfor (var ii = 0; ii < fileNames.length; ++ii) {\r\n\t\tconsole.log(fileNames[ii]+ ': '+ stats[ii].get().size);\r\n\t}\r\n}).detach();\r\n```\r\n\r\n\t$ node ls.js \r\n\tFound 11 files\r\n\tbin: 4096\r\n\tfibers.js: 1708\r\n\t.gitignore: 37\r\n\tREADME.md: 8664\r\n\tfuture.js: 5833\r\n\t.git: 4096\r\n\tLICENSE: 1054\r\n\tsrc: 4096\r\n\tls.js: 860\r\n\tMakefile: 436\r\n\tpackage.json: 684\r\n\r\n\r\nThe future API is designed to make it easy to move between classic\r\ncallback-style code and fiber-aware waiting code:\r\n\r\n\t$ cat sleep.js\r\n\r\n```javascript\r\nvar Future = require('fibers/future'), wait = Future.wait;\r\n\r\n// This function returns a future which resolves after a timeout. This\r\n// demonstrates manually resolving futures.\r\nfunction sleep(ms) {\r\n\tvar future = new Future;\r\n\tsetTimeout(function() {\r\n\t\tfuture.return();\r\n\t}, ms);\r\n\treturn future;\r\n}\r\n\r\n// You can create functions which automatically run in their own fiber and\r\n// return futures that resolve when the fiber returns (this probably sounds\r\n// confusing.. just play with it to understand).\r\nvar calcTimerDelta = function(ms) {\r\n\tvar start = new Date;\r\n\tsleep(ms).wait();\r\n\treturn new Date - start;\r\n}.future(); // <-- important!\r\n\r\n// And futures also include node-friendly callbacks if you don't want to use\r\n// wait()\r\ncalcTimerDelta(2000).resolve(function(err, val) {\r\n\tconsole.log('Set timer for 2000ms, waited '+ val+ 'ms');\r\n});\r\n```\r\n\r\n\t$ node sleep.js\r\n\tSet timer for 2000ms, waited 2009ms\r\n\r\n\r\nAPI DOCUMENTATION\r\n-----------------\r\nFiber's definition looks something like this:\r\n\r\n```javascript\r\n/**\r\n * Instantiate a new Fiber. You may invoke this either as a function or as\r\n * a constructor; the behavior is the same.\r\n *\r\n * When run() is called on this fiber for the first time, `fn` will be\r\n * invoked as the first frame on a new stack. Execution will continue on\r\n * this new stack until `fn` returns, or Fiber.yield() is called.\r\n *\r\n * After the function returns the fiber is reset to original state and\r\n * may be restarted with another call to run().\r\n */\r\nfunction Fiber(fn) {\r\n\t[native code]\r\n}\r\n\r\n/**\r\n * `Fiber.current` will contain the currently-running Fiber. It will be\r\n * `undefined` if there is no fiber (i.e. the main stack of execution).\r\n *\r\n * See \"Garbage Collection\" for more information on responsible use of\r\n * `Fiber.current`.\r\n */\r\nFiber.current = undefined;\r\n\r\n/**\r\n * `Fiber.yield()` will halt execution of the current fiber and return control\r\n * back to original caller of run(). If an argument is supplied to yield(),\r\n * run() will return that value.\r\n *\r\n * When run() is called again, yield() will return.\r\n *\r\n * Note that this function is a global to allow for correct garbage\r\n * collection. This results in no loss of functionality because it is only\r\n * valid to yield from the currently running fiber anyway.\r\n *\r\n * Note also that `yield` is a reserved word in Javascript. This is normally\r\n * not an issue, however some code linters may complain. Rest assured that it\r\n * will run fine now and in future versions of Javascript.\r\n */\r\nFiber.yield = function(param) {\r\n\t[native code]\r\n}\r\n\r\n/**\r\n * run() will start execution of this Fiber, or if it is currently yielding,\r\n * it will resume execution. If an argument is supplied, this argument will\r\n * be passed to the fiber, either as the first parameter to the main\r\n * function [if the fiber has not been started] or as the return value of\r\n * yield() [if the fiber is currently yielding].\r\n *\r\n * This function will return either the parameter passed to yield(), or the\r\n * returned value from the fiber's main function.\r\n */\r\nFiber.prototype.run = function(param) {\r\n\t[native code]\r\n}\r\n\r\n/**\r\n * reset() will terminate a running Fiber and restore it to its original\r\n * state, as if it had returned execution.\r\n *\r\n * This is accomplished by causing yield() to throw an exception, and any\r\n * futher calls to yield() will also throw an exception. This continues\r\n * until the fiber has completely unwound and returns.\r\n *\r\n * If the fiber returns a value it will be returned by reset().\r\n *\r\n * If the fiber is not running, reset() will have no effect.\r\n */\r\nFiber.prototype.reset = function() {\r\n\t[native code]\r\n}\r\n\r\n/**\r\n * throwInto() will cause a currently yielding fiber's yield() call to\r\n * throw instead of return gracefully. This can be useful for notifying a\r\n * fiber that you are no longer interested in its task, and that it should\r\n * give up.\r\n *\r\n * Note that if the fiber does not handle the exception it will continue to\r\n * bubble up and throwInto() will throw the exception right back at you.\r\n */\r\nFiber.prototype.throwInto = function(exception) {\r\n\t[native code]\r\n}\r\n```\r\n\r\n\r\nFuture's definition looks something like this:\r\n\r\n```javascript\r\n/**\r\n * Returns a future-function which, when run, starts running the target\r\n * function and returns a future for the result.\r\n * \r\n * Example usage: \r\n * var funcy = function(arg) {\r\n *   return arg+1;\r\n * }.future();\r\n * \r\n * funcy(1).wait(); // returns 2\r\n */\r\nFunction.prototype.future = function() { ... }\r\n\r\n/**\r\n * Future object, instantiated with the new operator.\r\n */\r\nfunction Future() {}\r\n\r\n/**\r\n * Wrap a node-style async function to return a future in place of using a callback.\r\n * \r\n * fn - the function or object to wrap\r\n * array - indicates that this callback will return more than 1 argument after `err`. For example,\r\n *         `child_process.exec()` returns [err, stdout, stderr]\r\n * suffix - appends a string to every method that was overridden, if you passed an object\r\n * \r\n * Example usage: Future.wrap(asyncFunction)(arg1).wait()\r\n */\r\nFuture.wrap = function(fn, multi, suffix) { ... }\r\n\r\n/**\r\n * Invoke a function that will be run in its own fiber context and return a future to its return\r\n * value.\r\n *\r\n * Example:\r\n * Future.task(function() {\r\n *   // You can safely `wait` on stuff here\r\n * }).detach();\r\n */\r\nFuture.task = function(fn) { ... }\r\n\r\n/**\r\n * Wait on a series of futures and then return. If the futures throw an exception this function\r\n * /won't/ throw it back. You can get the value of the future by calling get() on it directly. If\r\n * you want to wait on a single future you're better off calling future.wait() on the instance.\r\n * \r\n * Example usage: Future.wait(aFuture, anotherFuture)\r\n */\r\nFuture.wait = function(/* ... */) { ... }\r\n\r\n/**\r\n * Return the value of this future. If the future hasn't resolved yet this will throw an error.\r\n */\r\nFuture.prototype.get = function() { ... }\r\n\r\n/**\r\n * Mark this future as returned. All pending callbacks will be invoked immediately.\r\n * \r\n * value - the value to return when get() or wait() is called.\r\n * \r\n * Example usage: aFuture.return(value)\r\n */\r\nFuture.prototype.return = function(value) { ... }\r\n\r\n/**\r\n * Throw from this future as returned. All pending callbacks will be invoked immediately.\r\n * Note that execution will continue normally after running this method, \r\n * so make sure you exit appropriately after running throw()\r\n * \r\n * error - the error to throw when get() or wait() is called.\r\n * \r\n * Example usage: aFuture.throw(new Error(\"Something borked\"))\r\n */\r\nFuture.prototype.throw = function(error) { ... }\r\n\r\n/**\r\n * \"detach\" this future. Basically this is useful if you want to run a task in a future, you\r\n * aren't interested in its return value, but if it throws you don't want the exception to be\r\n * lost. If this fiber throws, an exception will be thrown to the event loop and node will\r\n * probably fall down.\r\n */\r\nFuture.prototype.detach = function() { ... }\r\n\r\n/**\r\n * Returns whether or not this future has resolved yet.\r\n */\r\nFuture.prototype.isResolved = function() { ... }\r\n\r\n/**\r\n * Returns a node-style function which will mark this future as resolved when called.\r\n * \r\n * Example usage: \r\n *   var errback = aFuture.resolver();\r\n *   asyncFunction(arg1, arg2, etc, errback)\r\n *   var result = aFuture.wait();\r\n */\r\nFuture.prototype.resolver = function() { ... }\r\n\r\n/**\r\n * Waits for this future to resolve and then invokes a callback.\r\n *\r\n * If only one argument is passed it is a standard function(err, val){} errback.\r\n *\r\n * If two arguments are passed, the first argument is a future which will be thrown to in the case\r\n * of error, and the second is a function(val){} callback.\r\n */\r\nFuture.prototype.resolve = function(/* errback or future, callback */) { ... }\r\n\r\n/**\r\n * Propogate results to another future.\r\n * \r\n * Example usage: future1.proxy(future2) // future2 gets automatically resolved with however future1 resolves\r\n */\r\nFuture.prototype.proxy = function(future) { ... }\r\n\r\n/**\r\n * Differs from its functional counterpart in that it actually resolves the future. Thus if the\r\n * future threw, future.wait() will throw.\r\n */\r\nFuture.prototype.wait = function() { ... }\r\n\r\n/**\r\n * Support for converting a Future to and from ES6 Promises.\r\n */\r\nFuture.fromPromise = function(promise) { ... }\r\nFuture.prototype.promise = function() { ... }\r\n```\r\n\r\nGARBAGE COLLECTION\r\n------------------\r\n\r\nIf you intend to build generators, iterators, or \"lazy lists\", you should be\r\naware that all fibers must eventually unwind. This is implemented by causing\r\nyield() to throw unconditionally when the library is trying to unwind your\r\nfiber-- either because reset() was called, or all handles to the fiber were lost\r\nand v8 wants to delete it.\r\n\r\nSomething like this will, at some point, cause an infinite loop in your\r\napplication:\r\n\r\n```javascript\r\nvar fiber = Fiber(function() {\r\n\twhile (true) {\r\n\t\ttry {\r\n\t\t\tFiber.yield();\r\n\t\t} catch(e) {}\r\n\t}\r\n});\r\nfiber.run();\r\n```\r\n\r\nIf you either call reset() on this fiber, or the v8 garbage collector decides it\r\nis no longer in use, the fiber library will attempt to unwind the fiber by\r\ncausing all calls to yield() to throw. However, if you catch these exceptions\r\nand continue anyway, an infinite loop will occur.\r\n\r\nThere are other garbage collection issues that occur with misuse of fiber\r\nhandles. If you grab a handle to a fiber from within itself, you should make\r\nsure that the fiber eventually unwinds. This application will leak memory:\r\n\r\n```javascript\r\nvar fiber = Fiber(function() {\r\n\tvar that = Fiber.current;\r\n\tFiber.yield();\r\n}\r\nfiber.run();\r\nfiber = undefined;\r\n```\r\n\r\nThere is no way to get back into the fiber that was started, however it's\r\nimpossible for v8's garbage collector to detect this. With a handle to the fiber\r\nstill outstanding, v8 will never garbage collect it and the stack will remain in\r\nmemory until the application exits.\r\n\r\nThus, you should take care when grabbing references to `Fiber.current`.\r\n"},{"name":"fibrous","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"Fibrous\r\n=======\r\n\r\nEasily mix asynchronous and synchronous programming styles in node.js.\r\n\r\n[![build status][travis-badge]][travis-link]\r\n[![npm version][npm-badge]][npm-link]\r\n[![mit license][license-badge]][license-link]\r\n[![we're hiring][hiring-badge]][hiring-link]\r\n\r\nBenefits\r\n--------\r\n\r\n* Easy-to-follow flow control for both serial and parallel execution\r\n* Complete stack traces, even for exceptions thrown within callbacks\r\n* No boilerplate code for error and exception handling\r\n* Conforms to standard node async API\r\n\r\nInstall\r\n-------\r\n\r\nFibrous requires node version 0.6.x or greater.\r\n\r\n```\r\nnpm install fibrous\r\n```\r\n\r\n\r\nExamples\r\n-----\r\n\r\nWould you rather write this:\r\n\r\n```javascript\r\nvar updateUser = function(id, attributes, callback) {\r\n  User.findOne(id, function (err, user) {\r\n    if (err) return callback(err);\r\n    \r\n    user.set(attributes);\r\n    user.save(function(err, updated) {\r\n      if (err) return callback(err);\r\n\r\n      console.log(\"Updated\", updated);\r\n      callback(null, updated);\r\n    });\r\n  });\r\n});\r\n```\r\n\r\nOr this, which behaves identically to calling code:\r\n\r\n```javascript\r\nvar updateUser = fibrous(function(id, attributes) {\r\n  user = User.sync.findOne(id);\r\n  user.set(attributes);\r\n  updated = user.sync.save();\r\n  console.log(\"Updated\", updated);\r\n  return updated;\r\n});\r\n```\r\n\r\nOr even better, with [CoffeeScript](http://coffeescript.org):\r\n\r\n```coffeescript\r\nupdateUser = fibrous (id, attributes) ->\r\n  user = User.sync.findOne(id)\r\n  user.set(attributes)\r\n  updated = user.sync.save()\r\n  console.log(\"Updated\", updated)\r\n  updated\r\n```\r\n\r\n### Without Fibrous\r\n\r\nUsing standard node callback-style APIs without fibrous, we write \r\n(from [the fs docs](http://nodejs.org/docs/v0.6.14/api/fs.html#fs_fs_readfile_filename_encoding_callback)):\r\n\r\n```javascript\r\nfs.readFile('/etc/passwd', function (err, data) {\r\n  if (err) throw err;\r\n  console.log(data);\r\n});\r\n```\r\n\r\n### Using sync\r\n\r\nUsing fibrous, we write:\r\n\r\n```javascript\r\ndata = fs.sync.readFile('/etc/passwd');\r\nconsole.log(data);\r\n```\r\n\r\n### Using future\r\n\r\nThis is the same as writing:\r\n\r\n```javascript\r\nfuture = fs.future.readFile('/etc/passwd');\r\ndata = future.wait();\r\nconsole.log(data);\r\n```\r\n\r\n### Waiting for Multiple Futures\r\n\r\nOr for multiple files read asynchronously:\r\n\r\n```javascript\r\nfutures = [\r\n  fs.future.readFile('/etc/passwd'),\r\n  fs.future.readFile('/etc/hosts')\r\n];\r\ndata = fibrous.wait(futures);\r\nconsole.log(data[0], data[1]);\r\n```\r\n\r\nNote that `fs.sync.readFile` is **not** the same as `fs.readFileSync`. The\r\nlatter blocks while the former allows the process to continue while\r\nwaiting for the file read to complete.\r\n\r\nMake It Fibrous\r\n---------------\r\n\r\nFibrous uses [node-fibers](https://github.com/laverdet/node-fibers)\r\nbehind the scenes.\r\n\r\n`wait` and `sync` (which uses `wait`\r\ninternally) require that they are called within a fiber. Fibrous\r\nprovides two easy ways to do this.\r\n\r\n### 1. fibrous Function Wrapper\r\n\r\nPass any function to `fibrous` and it returns a function that\r\nconforms to standard node async APIs with a callback as the last\r\nargument. The callback expects `err` as the first argument and the function\r\nresult as the second. Any exception thrown will be passed to the\r\ncallback as an error.\r\n\r\n```javascript\r\nvar asynFunc = fibrous(function() {\r\n  return fs.sync.readFile('/etc/passwd');\r\n});\r\n```\r\n\r\nis functionally equivalent to:\r\n\r\n```javascript\r\nvar asyncFunc = function(callback) {\r\n  fs.readFile('/etc/passwd', function(err, data) {\r\n    if (err) return callback(err);\r\n\r\n    callback(null, data);\r\n  });\r\n}\r\n```\r\n\r\nWith coffeescript, the fibrous version is even cleaner:\r\n\r\n```coffeescript\r\nasyncFunc = fibrous ->\r\n  fs.sync.readFile('/etc/passwd')\r\n```\r\n\r\n`fibrous` ensures that the passed function is\r\nrunning in an existing fiber (from higher up the call stack) or will\r\ncreate a new fiber if one does not already exist.\r\n\r\n### 2. Express/Connect Middleware\r\n\r\nFibrous provides [connect](http://www.senchalabs.org/connect/)\r\nmiddleware that ensures that every request runs in a fiber.\r\nIf you are using [express](http://expressjs.com/), you'll\r\nwant to use this middleware.\r\n\r\n```javascript\r\nvar express = require('express');\r\nvar fibrous = require('fibrous');\r\n\r\nvar app = express();\r\n\r\napp.use(fibrous.middleware);\r\n\r\napp.get('/', function(req, res){\r\n  data = fs.sync.readFile('./index.html', 'utf8');\r\n  res.send(data);\r\n});\r\n```\r\n\r\n### 3. Wrap-and-run with fibrous.run\r\n\r\n`fibrous.run` is a utility function that creates a fibrous function then executes it.\r\n\r\nProvide a callback to handle any errors and the return value of the passed function (if you need it).\r\nIf you don't provide a callback and there is an error, run will throw the error which will produce an uncaught exception.\r\nThat may be okay for quick and dirty work but is probably a bad idea in production code.\r\n\r\n```javascript\r\nfibrous.run(function() {\r\n  var data = fs.sync.readFile('/etc/passwd');\r\n  console.log(data.toString());\r\n  return data;\r\n}, function(err, returnValue) {\r\n  console.log(\"Handle both async and sync errors here\", err);\r\n});\r\n```\r\n\r\n### 4. Waiting on a callback\r\n\r\nSometimes you need to wait for a callback to happen that does not conform to `err, result` format (for example streams). In this case the following pattern works well:\r\n\r\n```javascript\r\nvar stream = <your stream>\r\n\r\nfunction wait(callback) {\r\n  stream.on('close', function(code) {\r\n    callback(null, code);\r\n  });\r\n}\r\n\r\nvar code = wait.sync();\r\n```\r\n\r\nDetails\r\n-------\r\n\r\n### Error Handling / Exceptions\r\n\r\nIn the above examples, if `readFile` produces an error, the fibrous versions\r\n(both `sync` and `wait`) will throw an exception. Additionally, the stack\r\ntrace will include the stack of the calling code unlike exceptions\r\ntypically thrown from within callback.\r\n\r\n\r\n### Testing\r\n\r\nFibrous provides a test helper for [jasmine-node](https://github.com/mhevery/jasmine-node) \r\nthat ensures that `beforeEach`, `it`, and `afterEach` run in a fiber.\r\nRequire it in your shared `spec_helper` file or in the spec files where\r\nyou want to use fibrous.\r\n\r\n```javascript\r\nrequire('fibrous/lib/jasmine_spec_helper');\r\n\r\ndescribe('My Spec', function() {\r\n  \r\n  it('tests something asynchronous', function() {\r\n    data = fs.sync.readFile('/etc/password');\r\n    expect(data.length).toBeGreaterThan(0);\r\n  });\r\n});\r\n```\r\n\r\nIf an asynchronous method called through fibrous produces an error, the\r\nspec helper will fail the spec.\r\n\r\n[mocha-fibers](https://github.com/tzeskimo/mocha-fibers) provides a fiber wrapper for [mocha](http://mochajs.org/).\r\n\r\nIf you write a helper for other testing frameworks, we'd love to include it in the project.\r\n\r\n### Console\r\n\r\nFibrous makes it much easier to work with asynchronous methods in an\r\ninteractive console, or REPL.\r\n\r\nIf you find yourself in an interactive session, you can require fibrous so that\r\nyou can use `future`.\r\n\r\n```\r\n> fs = require('fs');\r\n> require('fibrous');\r\n> data = fs.future.readFile('/etc/passwd', 'utf8');\r\n> data.get()\r\n```\r\n\r\nIn this example, `data.get()` will return the result of the future,\r\nprovided you have waited long enough for the future to complete.\r\n(The time it takes to type the next line is almost always long enough.)\r\n\r\nYou can't use `sync` in the above scenario because a fiber has not been created\r\nso you can't call `wait` on a future.\r\n\r\nFibrous does provide a bin script that creates a new interactive console where each command\r\nis run in a fiber so you can use sync. If you install fibrous with `npm install -g fibrous`\r\nor have `./node_modules/.bin` on your path, you can just run:\r\n\r\n```\r\n$ fibrous\r\nStarting fibrous node REPL...\r\n> fs = require('fs');\r\n> data = fs.sync.readFile('/etc/passwd', 'utf8');\r\n> console.log(data);\r\n##\r\n# User Database\r\n#\r\n...\r\n```\r\n\r\nOr for a CoffeeScript REPL:\r\n\r\n```\r\n$ fibrous -c [or --coffee]\r\nStarting fibrous coffee REPL...\r\ncoffee> fs = require 'fs'\r\ncoffee> data = fs.sync.readFile '/etc/passwd', 'utf8'\r\ncoffee> console.log data\r\n##\r\n# User Database\r\n#\r\n...\r\n```\r\n\r\n### Gotchas\r\n\r\n\r\nThe first time you call `sync` or `future` on an object, it builds the sync\r\nand future proxies so if you add a method to the object later, it will\r\nnot be proxied.\r\n\r\n#### With Express and `bodyParser` or `json`\r\n\r\nYou might be getting an error in Express that you are not in context of a fiber even after adding `fibrous.middleware` to your stack. This can happen if you added it before `express.json()` or `express.bodyParser()`. Here's an example:\r\n\r\n```javascript\r\n// might not work\r\napp.use(fibrous.middleware);\r\napp.use(express.bodyParser());\r\n\r\n// or\r\napp.use(fibrous.middleware);\r\napp.use(express.json());\r\n\r\n// should work\r\napp.use(express.bodyParser());\r\napp.use(fibrous.middleware);\r\n\r\n// or\r\napp.use(express.json());\r\napp.use(fibrous.middleware);\r\n```\r\n\r\nBehind The Scenes\r\n-----------------\r\n\r\n\r\n### Futures\r\n\r\nFibrous uses the `Future` implementation from [node-fibers](https://github.com/laverdet/node-fibers).\r\n\r\n`future.wait` waits for the future to resolve then returns the result while allowing the process\r\nto continue. `fibrous.wait` accepts a single future, multiple future arguments or an array of futures.\r\nIt returns the result of the future if passed just one, or an array of\r\nresults if passed multiple.\r\n\r\n`future.get` returns the result of the resolved future or throws an\r\nexception if not yet resolved.\r\n\r\n### Object & Function mixins\r\n\r\nFibrous mixes `future` and `sync` into `Function.prototype` so you can\r\nuse them directly as in:\r\n\r\n```javascript\r\nreadFile = require('fs').readFile;\r\ndata = readFile.sync('/etc/passwd');\r\n```\r\n\r\nFibrous adds `future` and `sync` to `Object.prototype` correctly so they\r\nare not enumerable.\r\n\r\nThese proxy methods also ignore all getters, even those that may\r\nreturn functions. If you need to call a getter with fibrous that returns an\r\nasynchronous function, you can do:\r\n\r\n```javascript\r\nfunc = obj.getter\r\nfunc.future.call(obj, args)\r\n```\r\n\r\n### Disclaimer\r\n\r\nSome people don't like libraries that mix in to Object.prototype\r\nand Function.prototype. If that's how you feel, then fibrous is probably\r\nnot for you. We've been careful to mix in 'right' so that we don't\r\nchange property enumeration and find that the benefits of having sync\r\nand future available without explicitly wrapping objects or functions\r\nare worth the philosophical tradeoffs.\r\n\r\n\r\nContributing\r\n------------\r\n\r\n```\r\ngit clone git://github.com/goodeggs/fibrous.git\r\nnpm install\r\nnpm test\r\n```\r\n\r\nFibrous is written in [coffeescript](http://coffeescript.org) with\r\nsource in `src/` compiled to `lib/`.\r\n\r\nTests are written with [jasmine-node](https://github.com/mhevery/jasmine-node) in `spec/`.\r\n\r\nRun tests with `npm test` which will also compile the coffeescript to\r\n`lib/`.\r\n\r\nPull requests are welcome. Please provide tests for your changes and\r\nfeatures. Thanks!\r\n\r\nContributors\r\n------------\r\n\r\n* Randy Puro ([randypuro](https://github.com/randypuro))\r\n* Alon Salant ([asalant](https://github.com/asalant))\r\n* Bob Zoller ([bobzoller](https://github.com/bobzoller))\r\n\r\n[travis-badge]: http://img.shields.io/travis/goodeggs/fibrous/master.svg?style=flat-square\r\n[travis-link]: https://travis-ci.org/goodeggs/fibrous\r\n[npm-badge]: http://img.shields.io/npm/v/fibrous.svg?style=flat-square\r\n[npm-link]: https://www.npmjs.org/package/fibrous\r\n[license-badge]: http://img.shields.io/badge/license-mit-blue.svg?style=flat-square\r\n[license-link]: LICENSE.md\r\n[hiring-badge]: https://img.shields.io/badge/we're_hiring-yes-brightgreen.svg?style=flat-square\r\n[hiring-link]: http://goodeggs.jobscore.com/?detail=Open+Source&sid=161\r\n"},{"name":"fiori-json-services","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Fiori-Json-Services\r\n# Description\r\nThis module is designated to support the following for json files according to the Language Server Protocol-LSP :\r\n* Returns supported commands for auto fix in manifest.json\r\n* Returns code actions that can be executed according to the given diagnostics and validation of the manifest.json file.\r\n* Returns which changes / text edits to execute according to the code action requested.\r\n\r\nCurrently this module supports generation of stable ids for targets and views in the manifest.json file when the flexEnabled flag is set to  true.\r\n\r\nthe test script runs on update and pull request.\r\n#Updating The Repository With Your Changes:\r\n\r\n1. Fork the repository.\r\n2. Change the code as you wish.\r\n3. Go to package.json and update the version to the new version number - increment by one (example : from 0.0.1 to 0.0.2).\r\n4. Commit and create new pull request with your changes.\r\n5. Make sure pull request was approved and merged to master branch.\r\n6. https://prod-build10300.wdf.sap.corp/job/devx/job/DevX-fiori-json-services-master-CI-linuxx86_64/\r\n    Press  Build now\r\n   \r\n6. Wait to see that the build succeeded.\r\n\r\n\r\n\r\n"},{"name":"generator-adaptation-project-deployment","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# generator-adaptation-project-deployment\r\nGenerator for adaptation project deployment\r\n"},{"name":"generator-adaptation-project","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# generator-adaptation-project\r\nYeoman generator for creating an Adaptation project in SAP Business Application Studio\r\n\r\n## Installation (development purposes only)\r\n1. Open your SAP BAS instance\r\n2. Create a new Basic dev space\r\n3. Open the folder `home/user/projects` in a terminal and `git clone` this repository (for issues with user authentication see [BAS help on Connect to Your Git Source Control System](https://help.sap.com/docs/SAP%20Business%20Application%20Studio/9d1db9835307451daa8c930fbd9ab264/e7a42bcb9d124b43be7e396b11d5e808.html)\r\n4. Go into your repo in the terminal and run `npm i`\r\n5. Run `npm run build`\r\n6. Run `npm link`\r\n7. When ready refresh the SAP BAS window\r\n8. To open the yeoman-ui: View => Find Command … => Open Template Wizard _(Currently console prompt mode is not supported)_\r\n\r\nIn case you have changes that you need to apply run `npm unlink` and then execute steps 5 ans 6\r\n\r\n## Debugging\r\n### Steps to prepare your BAS (one time for devspace):\r\n1. In terminal: `npm i -g generator-code`\r\n2. Create a fake debug project as entry point to your project => in terminal: `yo code` (choose default answers in all your steps, remember its name)\r\n3. Download latest vsix of yeoman-ui: (https://github.com/SAP/yeoman-ui/releases)\r\n4. Create folder: /home/user/default-plugins\r\n5. Copy the downloaded vsix into the \"default-plugins\" folder\r\n6. Stop and start the devspace\r\n\r\n### Steps to debug:\r\n1. Put break points in the code of generator-adaptationproject-creation accordingly (click on the left hand-side next to the corresponding line)\r\n2. From Command pallete run \"Hosted Plugin: Debug Instance\"\r\n4. Choose the name of your extension folder you have created with \"yo code\" in step 2 in \"Steps to prepare your BAS\"\r\n5. A new BAS instance opens in a new tab and there run View => Find Command … => Open Template Wizard\r\n6. Crete a new adaptation project to run the creation generator\r\n7. Go to the first BAS instance and see that it has stopped to your break points\r\n\r\n### Debugging fine tuning\r\n(in case the break points only in .js-files are fired but not in .ts- files then)\r\n1. Create a launch.json in the .vscode folder in home/user/projects\r\n2. Add the following configuration:\r\n```\r\n{\r\n\t// Use IntelliSense to learn about possible attributes.\r\n\t// Hover to view descriptions of existing attributes.\r\n\t\"version\": \"0.2.0\",\r\n\t\"configurations\": [\r\n\t\t{\r\n\t\t\t\"type\": \"node\",\r\n\t\t\t\"request\": \"attach\",\r\n\t\t\t\"name\": \"Attach generator debugger\",\r\n\t\t\t\"port\": 9229\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n3. Attach to the process by going to the Debug tab (leftmost pane, icon with a bug), selecting the `Attach generator debugger` configuration and pressing `Start debugging`\r\n\r\n"},{"name":"generator-add-hdb-module","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Database Module Generator\r\nThis generator simplifies the process to add a SAP HANA database module to a SAP HANA database project.\r\nIt scaffolds the basic module structure, and provides a way to bind the database module to a Cloud Foundry service. \r\n## Prerequisites\r\n* To interact with Cloud Foundry this generator requires the [Cloud Foundry Command Line Interface](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/4ef907afb1254e8286882a2bdef0edf4.html)\r\n## Installation\r\n`npm install -g @sap/generator-add-hdb-module`\r\n## Configuration\r\n* [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/en-US/8f46c6e6f86641cc900871c903761fd4.html), and command-line require no additional configuration. \r\n* To use a graphical UI for the generator in Visual Studio Code install the [Application Wizard](https://marketplace.visualstudio.com/items?itemName=SAPOS.yeoman-ui) extension.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"## 1.4.0\r\n\r\n### Fixes\r\n- Generation could fail because the Cloud Foundry space was not set correctly\r\n\r\n## 1.3.0\r\n\r\n### New Features\r\n- The configuration of new projects now includes a mapping for hdbcollectionindex\r\n\r\n### Fixes\r\n- Upgrade Yeoman generator version from 4 to 5\r\n- Use Cloud Foundry API version 3\r\n- Usability improvements\r\n\r\n## 1.2.0\r\n\r\n### Fixes\r\n- Fix generated .hdiconfig file to remove deployment warning\r\n- Set the correct permissions for generated .env files\r\n- The home directory is now found correctly on Windows\r\n- The \"bind-local\" Cloud Foundry CLI plugin is no longer required\r\n\r\n## 1.1.0\r\n\r\n### New Features\r\n- A .gitignore file is created on the project level when called from a project generator\r\n\r\n### Fixes\r\n- Update dependencies\r\n\r\n## 1.0.1\r\n\r\n### Fixes\r\n- Fixed module .gitignore entry for the node_modules folder\r\n- Updated version of @sap/hdi-deploy in generated package.json\r\n\r\n## 1.0.0\r\n\r\nInitial release"},{"name":"generator-base-mta-module","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"\r\n# @sap/generator-base-mta-module\r\nYeoman generator for collecting user inputs on the multi target application (MTA) project location and the target for generating the module content, etc. in a consistent way.\r\n\r\n## Requirements\r\n\r\n[Cloud MTA](https://github.com/SAP/cloud-mta) minimal version should be [0.1.2](https://github.com/SAP/cloud-mta/releases/tag/v0.1.2).\r\n\r\n\r\n## Installation\r\n\r\nFirst, install [Yeoman](http://yeoman.io) and generator-base-module using [npm](https://www.npmjs.com/) (we assume you have pre-installed [node.js](https://nodejs.org/)).\r\n\r\n\r\n```bash\r\nnpm install -g yo\r\nnpm install -g @sap/generator-base-mta-module\r\n```\r\n\r\n## Generate\r\n\r\nThen call the generator:\r\n\r\n```bash\r\nyo base-mta-module --mtaFilePath=c:/testMTA/mta.yaml --defaultName=ui5\r\n```\r\n\r\n## Generator options\r\n\r\nThe generator accepts several options which can be passed by user (are written as command line flags):\r\n * mtaFilePath - path to mta.yaml file. Serves the use case where the path to the mta.yaml is known from the context.\r\n * mtaFilesPathsList - list of mta.yaml files. Serves the use case where the list of available mta.yaml files is known from the context. If the mtaFilePath option is passed, this parameter is ignored.\r\n * configPath - path to the configuration file. \r\n * defaultName - default module name.\r\n * targetFolderPath - path to the module target folder. Indicates where to generate the module folder.\r\n * relativeTargetFolderPath - path to the module target folder relative to the mta.yaml file, e.g 'app'.\r\n * addMtaId - add MTAID to module name: true or false(default). Only relevant if default module name is provided.\r\n * noTargetFolder - No folder module: true or false(default). Set this option to true if no content in the file tree should be generated for this module. This option overrides the “targetFolderPath” option.\r\n\r\n## Getting To Know Yeoman\r\n\r\n * Feel free to [learn more about Yeoman](http://yeoman.io/).\r\n \r\n \r\n ## Release \r\n 1.1.5\r\n"},{"name":"generator-cap-project","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/generator-cap-project\r\n\r\n\r\n\r\n\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/c8f199cdcb7b48f2adc1bb3ec44e4dc4/Trial/en-US/8f46c6e6f86641cc900871c903761fd4.html).\r\n\r\nSee the [documentation](https://cap.cloud.sap/) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n\r\n\r\n\r\n\r\n\r\n## [1.6.6] - 2022-05-09\r\n\r\n### Fixed\r\n\r\n- Call `pathGetter` function using correct `this` context.\r\n- Using `cds env get` to get cds environment entry.\r\n\r\n## [1.6.5] - 2022-04-26\r\n\r\n### Fixed\r\n\r\n- Removed `Package Manager` error message when running generator.\r\n- `FsUtil.getTouchedFiles` now uses Yeoman store to print added/changed files.\r\n\r\n## [1.6.4] - 2022-03-08\r\n\r\n### Fixed\r\n\r\n- Add new `FsUtil` api methods.\r\n\r\n## [1.6.3] - 2022-02-28\r\n\r\n- Technical release.\r\n\r\n## [1.6.2] - 2022-02-28\r\n\r\n### Changed\r\n- Update `yeoman-generator` dependency.\r\n\r\n## [1.6.1] - 2022-02-04\r\n\r\n### Fixed\r\n- Various bug fixes\r\n\r\n## [1.6.0] - 2021-09-20\r\n\r\n### Changed\r\n- Consume latest version of `@sap-devx/yeoman-ui-types`.\r\n- Consume latest version of `yeoman-generator`.\r\n\r\n### Added\r\n- New log label `[cds]` for log output.\r\n\r\n\r\n## [1.5.4] - 2021-07-19\r\n\r\n### Fixed\r\n- Destination root handling in `SAP Business Application Studio`.\r\n\r\n\r\n## [1.5.2] - 2021-06-28\r\n\r\n### Changed\r\n- Internal refactorings\r\n\r\n\r\n## [1.5.1] - 2021-06-22\r\n\r\n### Changed\r\n- Use `cds env` to determine path to `@sap/cds-dk`.\r\n\r\n\r\n## [1.5.0] - 2021-05-04\r\n\r\n### Changed\r\n- Update dependencies\r\n\r\n\r\n## [1.4.3] - 2021-04-29\r\n\r\n### Changed\r\n- Internal updates for `@sap/cds-dk`support.\r\n\r\n\r\n## [1.4.2] - 2021-01-29\r\n\r\n### Changed\r\n- Consume latest version of `@sap-devx/yeoman-ui-types`.\r\n- Improved node modules lookup handling in `SAP Business Application Studio`.\r\n\r\n\r\n## [1.4.1] - 2021-01-05\r\n\r\n### Fixed\r\n- Fix look up path bug in `SAP Business Application Studio` for node modules.\r\n\r\n\r\n## [1.4.0] - 2020-10-15\r\n\r\n### Changed\r\n- Better support for `SAP Business Application Studio` via UI enhancements and logging.\r\n\r\n\r\n## [1.3.0] - 2020-10-06\r\n\r\n### Changed\r\n- All file operations (write, copy, ...) commit directly after execution.\r\n\r\n\r\n## [1.2.1] - 2020-09-22\r\n\r\n### Fixed\r\n- For `Java` projects also copy dot files, e.g. `.cdsrc.json`.\r\n\r\n### Changed\r\n- Internal refactorings, now requiring `@sap/cds-dk` version `>=1.7.0`.\r\n\r\n\r\n## [1.2.0] - 2020-09-01\r\n\r\n### Changed\r\n- Update `yeoman-generator` dependency.\r\n- Project names must not contain an underscore to ensure compatibility with Maven.\r\n- Added human readable display name.\r\n\r\n\r\n## [1.1.3] - 2020-07-16\r\n\r\n### Fixed\r\n- Internal refactorings.\r\n- Internal bug fixes.\r\n\r\n\r\n## [1.1.2] - 2020-07-02\r\n\r\n### Fixed\r\n- Internal bug fixes.\r\n\r\n\r\n## [1.1.1] - 2020-06-08\r\n\r\n### Fixed\r\n- Internal refactorings.\r\n\r\n\r\n## [1.1.0]\r\n\r\n### Fixed\r\n- Bug in folder name validation fixed when folder name is not in parameter list on command line.\r\n\r\n### Features\r\n- Using `yeoman-generator` library version `4.10.1`.\r\n\r\n## [1.0.7]\r\n\r\n### Fixed\r\n- Only allow word characters, numbers and '-' as folder name characters.\r\n\r\n## [1.0.6]\r\n\r\n### Fixed\r\n- Generator sets project folder correctly when finished.\r\n- Changed initial label to `Project Details` for better readability.\r\n- Improved error messages.\r\n\r\n## [1.0.5]\r\n\r\n### Features\r\n- Add mandatory prompt for project name.\r\n\r\n## [1.0.4]\r\n\r\n### Features\r\n- Discovery of `@sap/cds-dk` now also uses `cds -v` to get the home folder of cds.\r\n\r\n## [1.0.3]\r\n\r\n### Fixed\r\n- Fix error handling\r\n\r\n### Features\r\n- Add parser for generic generator options.\r\n"},{"name":"generator-cds","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/generator-cds\r\n\r\n\r\n\r\n\r\nThis module has been deprecated. We recommend to install [@sap/cds-dk](https://www.npmjs.com/package/@sap/cds-dk) globally. See section [Getting Started](https://cap.cloud.sap/docs/get-started/) in the CAP documentation for information about project creation and project structure.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](https://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/).\r\n\r\n\r\n## [2.17.9] - 2022-06-20\r\n### Changed\r\n- Add `node 14` to generated `package.json` files.\r\n\r\n## [2.17.8] - 2022-03-22\r\n\r\n### Changed\r\n- Internal refactoring for integration tests.\r\n- Add `engines` node version `14` and remove `10` in generated project.\r\n- Update dependencies\r\n\r\n\r\n## [2.17.7] - 2021-04-16\r\n\r\n### Fixed\r\n- Use `ping` command to check availability of docu server.\r\n\r\n\r\n## [2.17.6] - 2021-04-08\r\n\r\n### Fixed\r\n- Use `@sap/cds-dk` entry in `package.json` with version `^3`.\r\n\r\n\r\n## [2.17.4] - 2021-02-03\r\n\r\n### Fixed\r\n- Use `engines` entry in `db/package.json` with version `^10 || ^12`.\r\n\r\n\r\n## [2.17.3] - 2020-12-11\r\n\r\n### Fixed\r\n- Use `engines` entry in `package.json` and `db/package.json` with version `>=10`.\r\n\r\n\r\n## [2.17.2] - 2020-11-24\r\n\r\n### Fixed\r\n- Legacy support for `Node.js` version 8 or higher.\r\n\r\n\r\n## [2.17.1] - 2020-11-03\r\n\r\n### Fixed\r\n- Use Maven Java `Archetype` version `1.40.11`.\r\n\r\n\r\n## [2.17.0] - 2020-10-06\r\n\r\n### Fixed\r\n- Move `@sap/cds-dk` to project root dependencies to enable MTA build in SAP Web IDE.\r\n\r\n\r\n## [2.16.0] - 2020-09-09\r\n\r\n### Changed\r\n- Updated `fs-extra` library version.\r\n- Requiring `Node.js` version 10 or higher.\r\n\r\n\r\n## [2.15.7] - 2020-09-01\r\n\r\n### Changed\r\n- Updated dependencies.\r\n\r\n\r\n## [2.15.6] - 2020-08-04\r\n\r\n### Fixed\r\n- Add `@sap/cds-dk` as dev dependency, so that `cds` commands can be executed in absence of global installation of `cds-dk`.\r\n\r\n\r\n## [2.15.5] - 2020-07-16\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.40.6`.\r\n\r\n### Changed\r\n- Removed `package-lock.json` from generated `.gitignore` file.\r\n\r\n## [2.15.4] - 2020-07-02\r\n\r\n### Changed\r\n- Small improvements and refactorings.\r\n\r\n## [2.15.3] - 2020-06-16\r\n\r\n### Changed\r\n- Refactored internal code.\r\n\r\n## [2.15.2] - 2020-06-15\r\n\r\n### Fixed\r\n- Fixed some minor bugs.\r\n\r\n## [2.15.1] - 2020-06-15\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.40.2`.\r\n\r\n## [2.15.0] - 2020-05-25\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.40.0`.\r\n\r\n## [2.14.3]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.39.3`.\r\n\r\n## [2.14.2]\r\n\r\n### Changed\r\n- Use `@sap/hana-client` instead of `hdb` npm library.\r\n- Use `512M` as default `disk-quota`.\r\n\r\n## [2.14.1]\r\n\r\n### Changed\r\n- Updated `minimist` and `yaml` npm library versions.\r\n- Use `cds build` command instead of `cds build/all`.\r\n\r\n## [2.14.0]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.39.0`.\r\n\r\n## [2.13.2]\r\n\r\n### Changed\r\n- Engine entry for Nodejs is now `^10 || ^12` in `srv` and `root` package.json.\r\n\r\n## [2.13.1]\r\n\r\n### Removed\r\n- Remove `engines.node` entry in package.json for `db` folder.\r\n\r\n## [2.13.0]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.38.0`.\r\n\r\n### Fixed\r\n- Add engine entry for `Nodejs 12.0` to package.json.\r\n\r\n## [2.12.2]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.37.1`.\r\n\r\n## [2.12.1]\r\n\r\n### Feature\r\n- Change warning text when used directly on command line.\r\n\r\n## [2.12.0]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.37.0`.\r\n\r\n## [2.11.3]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.36.2`.\r\n\r\n## [2.11.2]\r\n\r\n### Fixed\r\n- Do not use maven dependency `slf4j` in pom.xml anymore when technology is Java.\r\n\r\n## [2.11.1]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.36.1`.\r\n\r\n## [2.11.0]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.36.0`.\r\n\r\n## [2.10.2]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.35.4`.\r\n\r\n### Fixed\r\n- Improved launch config for VS Code to enable debugging.\r\n\r\n## [2.10.1]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.35.2`.\r\n\r\n### Fixed\r\n- Create launch config file with reference to cds.js instead of npx.\r\n\r\n## [2.10.0]\r\n\r\n### Feature\r\n- Add csv sample data for books, authors and orders\r\n- Use Maven Java `Archetype` version `1.35.0`.\r\n\r\n### Fixed\r\n- Add missing entries to generated `.gitignore` file.\r\n\r\n## [2.9.0]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.34.1`.\r\n\r\n## [2.8.3]\r\n\r\n### Feature\r\n- Use cds environment parameter `cds_version` to specify used cds version in semver format.\r\n\r\n## [2.8.2]\r\n\r\n### Fixed\r\n- Add debug profile in srv `pom.xml`.\r\n\r\n## [2.8.1]\r\n\r\n### Fixed\r\n- Clean up pom.xml generation.\r\n\r\n## [2.8.0]\r\n\r\n### Fixed\r\n- Use service plan for uaa configuration based on environment.\r\n\r\n## [2.7.0]\r\n\r\n- Fix creation of root level `pom.xml`\r\n- Fix `integration tests` for `Odata version 4`\r\n\r\n## [2.6.3]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.32.5`.\r\n- No `npm install` is done if project is located in a monorepo, where node modules is managed\r\n  by e.g. lerna.\r\n\r\n### Fixed\r\n- Improve console output when project creation is done.\r\n\r\n## [2.6.2]\r\n\r\n### Fixed\r\n- Add missing `integration tests` for `OData version 4`.\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.32.3`.\r\n\r\n## [2.6.1]\r\n\r\n### Fixed\r\n- `Jacoco` support for java based srv modules.\r\n- Issue warning if user calls `cds init help` instead of `cds help init`\r\n\r\n## [2.6.0]\r\n\r\n### Features\r\n- Use default names for database (`db`) and service (`srv`) folders.\r\n- Use `v2` and `v4` as OData version values.\r\n\r\n### Fixed\r\n- Add missing prompt descriptions.\r\n\r\n## [2.5.1]\r\n\r\n### Fixed\r\n- Fix support for `theia` based generator.\r\n- Temp folder deletion via native os call.\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.32.0`.\r\n\r\n## [2.5.0]\r\n\r\n### Features\r\n- Add parameter `--pipeline` to create pipeline specific files.\r\n- Add integration tests if user selects db and srv with srv technology java.\r\n\r\n## [2.4.12]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.31.3`.\r\n\r\n### Fixed\r\n- Use new maven group id for `ngdbc` driver.\r\n\r\n## [2.4.11]\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.31.1`.\r\n\r\n### Fixed\r\n- Add logger to API so environment can inject specific loggers.\r\n\r\n## [2.4.10]\r\n\r\n### Fixed\r\n- Add `default-*.json` and `connection.properties` to root level `.gitignore` file.\r\n\r\n### Feature\r\n- Use Maven Java `Archetype` version `1.30.1`.\r\n\r\n## [2.4.9]\r\n\r\n### Fixed\r\n- Stop creation when required npm library cannot be found.\r\n- Enhance reporting of internal errors.\r\n\r\n## [2.4.8]\r\n\r\n### Fixed\r\n- Create correct `odata` version entry in root package.json.\r\n\r\n## [2.4.7]\r\n\r\n### Fixed\r\n- Add `mta_archives` to .gitignore file.\r\n- Create `directory` entry in pom.xml to avoid errors when importing project.\r\n\r\n## [2.4.6]\r\n\r\n### Fixed\r\n- Add folder name to created hdi container name.\r\n- Reuse existing hdi container when creating a srv module.\r\n- Show npm install output in console by default.\r\n- Use `ISC`as standard license in generated project.\r\n\r\n## [2.4.5]\r\n\r\n### Fixed\r\n- Only add `disk-quota` when not using java as srv technology.\r\n- Do not add `logback.xml` to `pom.xml` excludes for java srv.\r\n- Add `cds.folders` entry to root level package.json.\r\n- Create `sqlite3` development dependency for db technology sqlite.\r\n- Add all folders specified in `--modules` to cds.requires section in project root package.json.\r\n- Add odata.version entry to root level package.json.\r\n\r\n## Features\r\n- Use plugin version `2.0.0.0` in generated .hdiconfig file.\r\n- Using fix archetype version `1.28.1` for java srv projects.\r\n\r\n## [2.4.4]\r\n\r\n### Fixed\r\n- Using managed service uaa in mta.yaml\r\n\r\n## [2.4.3]\r\n\r\n### Fixed\r\n- Empty mta.yaml was not parsed correctly.\r\n- Empty package.json prevented correct project setup, cds build problems occurred afterwards.\r\n\r\n\r\n## [2.4.2]\r\n\r\n### Fixed\r\n- Bug in package.json generation\r\n\r\n\r\n## [2.4.1]\r\n\r\n### Fixed\r\n- Bug in file overwrite handling\r\n\r\n### Features\r\n- When running init on existing project, generator copies missing files but leaves existing.\r\n- If parameter --force is present the generator overwrites entries in mta.yaml rather than reuse existing\r\n\r\n\r\n## [2.4.0]\r\n\r\n### Features\r\n- Deprecate add module (replace with init --modules)\r\n- Remove command line coloring\r\n- Simplify internal CLI (CLI will be deprecated in the near future)\r\n- Do not allow projects outside current working folder, e.g. init ../../some/where/else is not allowed\r\n- No output at all (not even error messages) when using --quiet\r\n- Create a module folder even if it is empty based on the supplied options\r\n- Parameter --modules only supports one folder of each type\r\n\r\n### Fixed\r\n- Bug in mta.yaml creation which resulted in missing/invalid uaa entry\r\n- Removal of existing tasks in .cdsrc.json during add module\r\n\r\n\r\n## [2.3.10]\r\n\r\n### Features\r\n- Support named module folders, e.g. --modules myDB:db creates a db folder named myDB, while --modules db creates a db folder named db\r\n- Enhance output when using --debug flag\r\n\r\n\r\n## [2.3.9]\r\n\r\n### Fixed\r\n- Use existing UAA instance in mta.yaml, if file exists\r\n"},{"name":"generator-fiori-elements","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/generator-fiori-elements\r\n\r\n## Deprecated\r\n\r\nThe **SAP Fiori elements generator** has been deprecated.  There is now an **SAP Fiori generator** that combines both the Fiori freestyle generator and Fiori elements generator.  \r\n\r\nPlease see [@sap/generator-fiori](https://www.npmjs.com/package/@sap/generator-fiori) for full details on the new generator.\r\n","changelog":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [1.0.28] - 2021-02-05\r\n#### Added\r\n- The Fiori elements generator has been deprecated. Please use the `@sap/generator-fiori` generator which combines the Fiori elements and Fiori freestyle generators.\r\n\r\n## [1.0.27] - 2021-01-22\r\n### Added\r\n- Added ability to generate an application without user interaction by passing a json payload of the relevant answers to the Yeoman command line.\r\n- Added support for destinations in SAP Business Application Studio that have been defined on the instance level rather than account level.\r\n- In VSCode, moved non-confidential information for saved SAP systems out of the operating system secure storage.\r\n- Added SAP Systems panel in VSCode to allow users delete previously saved systems.\r\n- Generated Fiori applications for a CAP project can now add deployment configuration.\r\n\r\n### Fixed\r\n- Improved UX and description when needing to add missing service keys for a generated application at run time.\r\n\r\n## [1.0.25] - 2020-12-10\r\n### Added\r\n- The generator now supports the SAP API Business Hub for data source selection when using VSCode.\r\n\r\n### Fixed\r\n- Ensure correct manifest version is generated for corresponding UI5 version\r\n\r\n## [1.0.24] - 2020-11-25\r\n### Added\r\n- Support for OData V4 data sources for the List Report Object Page and Analytical List Page floorplans.\r\n- The generator now supports the API Business Hub for data source selection in the SAP Business Application Studio.\r\n\r\n### Fixed\r\n- Adding a new SAP system in VSCode now only gets saved when the application is being generated.  Previously this was happening when proceeding from the data source step.\r\n\r\n## [1.0.23] - 2020-11-13\r\n### Added\r\n- Snapshot versions of UI5 now supported on Business Application Studio for internal users.\r\n- Supports generating deployment configuration for Cloud Foundry where the parent folder contains an MTA file.\r\n- Support for launching from CAP project explorer in Business Application Studio.\r\n\r\n### Fixed\r\n- Changing the SAP System to use before generation now correctly resets the proceeding fields.\r\n\r\n## [1.0.21] - 2020-10-27\r\n### Added\r\n- Dropdown selections for services and entities are now sorted alphabetically.\r\n- Module name now allows dash and underscore characters.\r\n\r\n### Fixed\r\n- The suggested project folder to use for generating the application in VSCode now defaults to the open workspace folder.\r\n\r\n\r\n## [1.0.20] - 2020-10-13\r\n### Added\r\n- The associated NPM libraries are now installed in the background after the generator closes for better performance.\r\n\r\n### Fixed\r\n- Sorted SAP system connections alphabetically.\r\n- The `Readme` file generated for each application is now correctly detailed the selected floorplan.\r\n- Fixed warning messages from the generated `manifest.json` file.\r\n\r\n## [1.0.19] - 2020-09-26\r\n### Fixed\r\n- Updated support for SAP system connections.\r\n\r\n## [1.0.18] - 2020-09-25\r\n### Fixed\r\n- Performance improvements to the generation time.\r\n\r\n### Added\r\n- 'Select Qualifier' dropdown not displayed for the Analytical List Page floorplan unless the chosen main entity supports it.\r\n- Mandatory fields in the generator are now represented with a red asterisk.\r\n- When no optional namespace is provided, the generated annotations file will use the default namespace of 'local'.\r\n- List report pages now have the 'useDateRange' manifest property set to 'true' by default.  See https://sapui5.hana.ondemand.com/#/topic/fef65d03d01a4b2baca28983a5449cf7.html for further details.\r\n- Object pages now have the 'defaultLayoutTypeIfExternalNavigation' set to 'MidColumnFullScreen' by default.  See https://sapui5.hana.ondemand.com/#/topic/1d4a0f94bfee48d1b50ca8084a76beec.html for further details.\r\n\r\n## [1.0.17] - 2020-09-10\r\n### Fixed\r\n- The navigation property for a Worklist template now correctly supported.\r\n- Fixed issue in SAP Business Application Studio where generating an application without a workspace open would display an error.\r\n\r\n### Added\r\n- The Analytical List Page floorplan now provides a dropdown list of suitable qualifiers, rather than a free text input.\r\n- Connection error messaging improved in SAP Business Application Studio.\r\n\r\n## [1.0.16] - 2020-09-08\r\n### Fixed\r\n- Data source connections for Cloud URLs in SAP Business Application Studio support basic authentication.\r\n\r\n## [1.0.15] - 2020-08-31\r\n### Fixed\r\n- Data source discovery for Cloud URLs in SAP Business Application Studio no longer requires the ping service to be exposed.\r\n\r\n### Added\r\n- A default saved system name will now be suggested when adding a new SAP system.\r\n- The List Report Object Page V2 and V4 template options have been merged.  The generator now detects the version of the service provided and generates the required application type.\r\n- The minimum version of UI5 supported for V4 applications has been updated to 1.81.0\r\n\r\n## [1.0.14] - 2020-08-20\r\n### Fixed\r\n- The Launch configuration entries for generated projects in VSCode should now work on Windows.  Please ensure you have updated to version 1.48.0 of Microsft Visual Studio Code.\r\n\r\n### Added\r\n- Generated application now includes a `.gitignore` file.\r\n- Support for V4.01 OData services.\r\n- Support for discovering connected Cloud Foundry systems.\r\n- Updated to latest version of `@ui5/cli`.\r\n\r\n## [1.0.13] - 2020-08-13\r\n### Added\r\n- When generating an application for an existing OData V4 CAP project you can now choose whether to add an associated `annotations.cds` file in the advanced options.\r\n\r\n## [1.0.8] - 2020-07-21\r\n### Fixed\r\n- Generated application now contains the correct versions of the `@sap/ux-specification` and `@sap/ux-ui5-tooling` libraries that conform to semantic versioning.\r\n\r\n### Known issues\r\n- VSCode version 1.47.2 and above introduces a breaking change on Windows environments where the launch configuration entries added for your generated projects will not work.  As a workaround:\r\n\r\n  - Go to `preferences` > `settings`\r\n  - Search for `debug preview` and uncheck the `Use the new in-preview JavaScript debugger for Node.js and Chrome` option in both user and workspace\r\n\r\n## [1.0.7] - 2020-07-07\r\n### Fixed\r\n- Generating an OVP application now uses the correct global filter dropdown selection.\r\n- Service URL in lowercase now retrieves correct backend annotations.\r\n\r\n### Added\r\n- Support for the Run Configuration panel in SAP Business Application Studio for any generated applications.\r\n- Namespace field is now optional during generation.\r\n\r\n## [1.0.5] - 2020-06-24\r\n### Fixed\r\n- No longer permitted to generate an application without choosing a valid service.\r\n- Updated name of generated annotation.xml for a worklist application to correctly reflect the manifest entry.\r\n\r\n### Added\r\n- Added tooltips for Analytical template fields to better describe their meaning\r\n- Add more SAP System information to the generated Readme.md\r\n\r\n## [1.0.4] - 2020-06-18\r\n### Fixed\r\n- Explicitly set @sap scope for generated projects to ensure installation completes successfully.\r\n\r\n## [1.0.0] - 2020-06-16\r\nRelease status: GA \r\nWe are pleased to announce the official GA of the SAP Fiori elements application Yeoman templates\r\n\r\n## [0.2.9] - 2020-05-06\r\n### Fixed\r\n- Generated metadata alias for local annotation file\r\n- Updated template titles and description to be consistent.\r\n\r\n### Added\r\n- Readme.md file in generated application now contains details of the options chosen to generate the application.\r\n\r\n## [0.2.8] - 2020-04-22\r\n### Fixed\r\n- Module name with '.' fails to load with mock data.\r\n\r\n### Added\r\n- Added support for Analytical List Page / Object Page Fiori Elements template.\r\n- Added support for Work List Fiori Elements template.\r\n\r\n## [0.2.5] - 2020-04-08\r\n### Fixed\r\n- The entry \"Latest\" is now present at the top of the drop down list for the UI5 version, and only versions of UI5 from 1.65 and above will be presented as options.  Previous versions are not supported.\r\n- Naming for the generated annotation file has been updated.  It has been renamed from `annotation0.xml` to `annotation.xml`.\r\n- Ensure generated annotation file supports multiple schemas from metadata.\r\n\r\n## [0.2.4] - 2020-03-25\r\n### Fixed\r\n- Overview Page manifest generation contains invalid annotations entry \r\n\r\n### Added\r\n- Visual Enhancement, show list of entities in alphabetical order during generation\r\n- Ensure versions of UI5 that are presented during generation are up to date\r\n\r\n\r\n## [0.2.1] - 2020-03-12\r\n### Fixed\r\n- Start parent folder selector at selected folder instead of workspace root\r\n- Allow multiple applications to be run simultaneously\r\n- Improved error messaging when OData Service URL cannot be accessed\r\n- Removed unnecessary `@sap` NPM reference in generated app `.npmrc` file\r\n- OData Url placeholder text (`http://<hostname>:<port>/path/to/odata/service`) should disappear on focus\r\n\r\n### Added\r\n- Wait for install to complete before closing App Generator\r\n- Remove V4 template option for Beta customers.  V4 templates are not yet ready for beta\r\n- Default to the latest version of UI5 when no specific version is selected\r\n\r\n## [0.0.717] - 2020-02-27\r\n### Fixed\r\n- Removed invalid entry from generated `.npmrc` files\r\n- Handle query parameters in OData Service URL\r\n\r\n### Added\r\n- CHANGELOG.md documenting changes\r\n\r\n## [0.0.720] - 2020-02-19\r\n### Added\r\n- Initial version\r\n"},{"name":"generator-fiori-freestyle","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/generator-fiori-freestyle\r\n\r\n## Deprecated\r\n\r\nThe **SAP Fiori freestyle generator** has been deprecated.  There is now an **SAP Fiori generator** that combines both the Fiori freestyle generator and Fiori elements generator.  \r\n\r\nPlease see [@sap/generator-fiori](https://www.npmjs.com/package/@sap/generator-fiori) for full details on the new generator.\r\n","changelog":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.9.20] - 2021-02-05\r\n#### Added\r\n- The Fiori freestyle generator has been deprecated. Please use the `@sap/generator-fiori` generator which combines the Fiori elements and Fiori freestyle generators.\r\n\r\n## [0.9.19] - 2021-01-22\r\n### Added\r\n- Added support for destinations in SAP Business Application Studio that have been defined on the instance level rather than account level.\r\n- In VSCode, moved non-confidential information for saved SAP systems out of the operating system secure storage.\r\n- Added SAP Systems panel in VSCode to allow users delete previously saved systems.\r\n\r\n## [0.9.17] - 2020-12-10\r\n### Added\r\n- The SAP Fiori Worklist V2 and SAP Fiori Worklist V4 floorplan types have been merged into one floorplan.  The version of the OData service provided will determine which application type is generated.\r\n- The generator now supports the SAP API Business Hub for data source selection when using VSCode.\r\n\r\n## [0.9.16] - 2020-11-25\r\n### Added\r\n- The generator now supports the API Business Hub for data source selection in the SAP Business Application Studio.\r\n\r\n### Fixed\r\n- Adding a new SAP system in VSCode now only gets saved when the application is being generated.  Previously this was happening when proceeding from the data source step.\r\n\r\n## [0.9.15] - 2020-11-13\r\n### Added\r\n- Snapshot versions of UI5 now supported on Business Application Studio for internal users.\r\n\r\n### Fixed\r\n- Standard SAP UI5 floorplan no longer generates an invalid mock data launch target\r\n\r\n## [0.9.13] - 2020-10-27\r\n### Added\r\n- Dropdown selections for services and entities are now sorted alphabetically.\r\n- Module name now allows dash and underscore characters.\r\n\r\n### Fixed\r\n- The suggested project folder to use for generating the application in VSCode now defaults to the open workspace folder.\r\n\r\n## [0.9.12] - 2020-10-13\r\n### Added\r\n- Added support for plain UI5 freestyle template.\r\n\r\n### Fixed\r\n- Sorted SAP system connections alphabetically.\r\n- The Fiori freestyle generator should now be discoverable from the `Install and Explore Generators` tab in the Application Wizard by filtering on `SAP Fiori` shortcuts.\r\n\r\n## [0.9.7] - 2020-08-31\r\n### Added\r\n- CHANGELOG.md documenting changes\r\n- Optionally generate annotations.cds file for CAP projects\r\n- Update README.md\r\n- Added tooltip to display generator version number on first step of generator.\r\n- The minimum version of UI5 supported for V4 applications has been updated to 1.81.0\r\n\r\n### Fixed\r\n- Technical name in generated freestyle application should now be correctly generated.\r\n\r\n## [0.9.6] - 2020-08-21\r\n### Fixed\r\n- Loading of advanced options could timeout on some external systems.\r\n- Updated version of UI5 tooling library\r\n\r\n## [0.9.5] - 2020-08-13\r\n### Fixed\r\n- Worklist V4 Application template enabled.\r\n\r\n## [0.9.4] - 2020-08-08\r\n### Fixed\r\n- Data source authorisation with Cloud systems  \r\n\r\n## [0.9.3] - 2020-08-07\r\n### Added\r\n- Initial version\r\n"},{"name":"generator-fiori","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/generator-fiori\r\n\r\n## Features\r\n\r\nThe **SAP Fiori application generator** provides a single entry point to generate both SAP Fiori elements applications and SAP Fiori freestyle applications. Users can choose the type of template required, along with the relevant data source, and an application will be generated into the specified folder.\r\n\r\nThe generated application conforms to the [Fiori Design guidelines](https://experience.sap.com/fiori-design-web/floorplans/floorplan-overview/) and SAP best practices.\r\n\r\n## Installation\r\n\r\n1. Get [Node.js](https://nodejs.org/en/download/)\r\n1. Install Yeoman(https://https://yeoman.io/) by executing `npm install -g yo`. Note: `yo` version 4.3.0 or higher required for macOS Monterey.\r\n1. Install the [MTA](https://www.npmjs.com/package/mta) Node.js package (version 1.0 or higher) by executing `npm install -g mta`.\r\n\r\nThe SAP Fiori generator can be installed using either of the following methods:\r\n\r\n- **Install the generator from NPM**\r\n\r\n  - Execute\r\n\r\n    ```sh\r\n    npm install -g @sap/generator-fiori\r\n    ```\r\n\r\n- **Install the generator from the SAP Fiori Tools extension pack.**\r\n\r\n  - Installing the SAP Fiori Tools extension pack will automatically check if the SAP Fiori generator is installed and install it if necessary.\r\n\r\nAfter installation, verify your installation to see if Yeoman has been installed correctly with the Fiori generator.\r\n\r\n```\r\nyo\r\n```\r\n\r\n  Make sure you see the `@sap/fiori` generator listed.\r\n\r\n## Launch Fiori application generator\r\n\r\n### Using Yeoman\r\n\r\n- `yo`\r\n\r\nOR\r\n\r\n### Using the Yeoman Application Wizard\r\n\r\n- Additionally you can use the Yeoman Application Wizard for a more feature rich user experience.\r\n- Download the latest release of the Yeoman Application Wizard from the VSCode marketplace.  Search for 'Application Wizard' in the marketplace.\r\n- Invoke the Yeoman UI Wizard in VSCode by calling `CMD + Shift + P -> Open Application Wizard`\r\n- This will show all Yeoman templates that have been installed on the user's machine, and should include an option for the `SAP Fiori application`\r\n- Alternatively, if you have the SAP Fiori tools pack installed, you can call `CMD + Shift + P -> Fiori: Open Application Generator`.  This will launch the Yeoman UI Wizard but restrict it to just work with with the SAP Fiori Tools Application Generator.\r\n\r\n## Usage for Fiori elements application\r\n\r\nOnce SAP Fiori application generator is launched successfully, a user is asked to choose the application type. The user can choose between Fiori\r\nelements and Fiori freestyle applications. The templates (floorplans) of the selected application type are then listed for user to\r\nchoose.\r\n\r\n### Generator Wizard Steps\r\n\r\n#### 1. Template selection\r\n\r\nSelect the required template type to use when generating your application. The generator currently supports the following templates:\r\n\r\n**SAP Fiori elements**\r\n- List Report Object Page\r\n- Worklist\r\n- Analytical List Page\r\n- Overview Page\r\n\r\n**SAP Fiori freestyle**\r\n- SAP Fiori Worklist Application\r\n- SAP Fiori Master-Detail Application\r\n- SAPUI5 Application\r\n\r\n#### 2. Select Data Source\r\n\r\nCurrently, the generator supports the following methods to provide the Data Source:\r\n\r\n- **Connect to a System**\r\n\r\n  You can connect to a System in VSCode by selecting one of the following methods:\r\n\r\n  1. You can choose to connect to an existing ABAP on premise system by providing the URL and optional SAP Client identifier.  If the URL requires authentication, you will need to provide those details during generation.\r\n  1. You can connect to an ABAP environment on the SAP Business Technology Platform.  In this case, you must provide a local file that defines the service connection details for the desired ABAP Environment.  Once you provide these details, a browser tab will launch for you to provide authentication details.\r\n\r\n  In both cases, if you choose to save the SAP system for future reference, the system details will be stored in the secure storage location of your operating system.\r\n\r\n- **Connect to an OData service**\r\n\r\n  Enter the OData endpoint URL you wish to use in your generated application. Currently, the generator supports an OData endpoint that is either unauthenticated or authenticated with Basic authentication. For an authenticated OData endpoint, you will be asked to provide a username and password.\r\n\r\n- **Connect to SAP API Business Hub**\r\n\r\n  You can use any of the services available in the SAP API Business Hub by providing your authentication details and choosing the relevant service.\r\n\r\n- **Use a Local CAP Project**\r\n\r\n  For Odata V4 CAP projects, you can reference an existing project and use the service in that project during generation.\r\n\r\n- **Upload a data service metadata file**\r\n\r\n  Upload a service metadata file that represents the back end service from the file system. This allows the user to generate the application without relying on a back end service being available.\r\n\r\n  **Note:** Uploading a data service metadata file will restrict the generated application to only be available using mock data.\r\n\r\n#### 3. Select relevant entities\r\n\r\nOnce the data source has been supplied, the **SAP Fiori application generator** will present a list of entities from the OData service to choose.\r\n\r\n#### 4. Add project descriptor data\r\n\r\nIn the next step, provide the following information:\r\n\r\n- **Module name** Required.  Must be alpha-numberic and cannot contain spaces.  The generated NodeJS application will use the module name as its package name.  Will also be used as the folder name of the generated application.\r\n- **App Title** Required.  This will be the title in the header of the generated application\r\n- **Namespace** Required.  The UI5 project namespace to be used.  Must start with a letter and contain letters, digits and periods only.\r\n- **Description** Required. The text description of the application.\r\n- **Parent Folder** Required.  The parent folder into which the new application will be generated.  The new application will be generated in a new folder with the `Module Name` as detailed above.  If there already exists a folder with the same name, the user must choose a new Module name.\r\n\r\n- **Advanced Configuration** Optional.  The user can choose to customise the generated application with the following options:\r\n\r\n  - **UI5 CSS Theme**\r\n  - **UI5 Javascript Library Version**\r\n\r\n- **Deployment Configuration** Optional.  If selected, an extra step will be added to the generator for adding deployment configuration using either ABAP or Cloud Foundry\r\n\r\n- **FLP Configuration** Optional.  If selected, an extra step will be added to the generator for adding Fiori launchpad configuration to the generated application.\r\n\r\n### Running the generated app\r\n\r\nAfter the application has been successfully generated, open a terminal and browse to the root folder of the generated application. For a V2 template application, there are two methods available to run the application:\r\n\r\n- **Running the application with connection to the live OData endpoint**\r\n\r\n  Start the application using `npm start`.  This will make the application available on `localhost:8080`, and will connect to the live OData endpoint.  If the OData endpoint requires authentication, the user will be asked to authenticate in the browser.\r\n\r\n- **Running the application using mock data (V2 only)**\r\n\r\n  Start the application using `npm run start-mock`.  This will make the application available on `localhost:8080`, but will use a mock server to reflect the OData endpoint.  This ensures that developers can use the application without having to connect to a live OData service.\r\n\r\n- **Running the application using context menu**\r\n\r\n  Under the `src` folder, find the `app.json` file.  Right click and select **Open Preview in Browser** (launches a browser with your application).\r\n\r\n\r\n## Prerequisites\r\n\r\nThe generated application requires the following software to be installed:\r\n\r\n- [NodeJS](https://nodejs.org/en/download/) Node version must be >10.15.3 - 10.x or 12.13.\r\n- [MTA](https://www.npmjs.com/package/mta) MTA Version must be >= 1.0\r\n- Windows OS requires [windows-build-tools](https://www.npmjs.com/package/windows-build-tools) NPM module installed globally.\r\n\r\n## Support\r\n\r\nJoin the [SAP Fiori Tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.\r\nPlease assign tag: _SAP Fiori tools_\r\n\r\nTo log an issue with SAP Fiori Tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n","changelog":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [1.6.4] - 2022-06-23\r\n### Added\r\n- Added a check when using a destination in SAP Business Application Studio with the Fiori generator to ensure that the destination catalog service(s) can be found.\r\n\r\n#### Changed\r\n- Changed deployment configuration with clear text and hints whilst enforcing transport request validation where applicable.\r\n\r\n### Fixed\r\n- Fixed issue where an invalid saved SAP System in Windows was not displaying the correct error message.\r\n- Fixed ABAP deployment issue where user could be asked to re-authenticate against backend even if they had already authenticated successfully.\r\n\r\n## [1.6.3] - 2022-06-09\r\n### Added\r\n- The list of minimum SAPUI5 versions available during project generation are now grouped into `maintained versions` and `out of maintenance versions` for easy reference.\r\n- Added a check when deploying to an existing SAPUI5 ABAP repository with a new SAP App ID.  Previously the deployment would overwrite the existing one, now the user is asked to confirm the overwrite.\r\n\r\n### Fixed\r\n- Fixed an issue where the CDS watch script for an SAP Fiori application in a Node.js CAP project was not getting created.\r\n- Fixed an issue where the previews are failing for a Fiori Freestyle application when created with Data Source as `None`.\r\n- Fixed an issue where the reuse library referenced in an existing project was not being loaded from the local workspace.\r\n\r\n## [1.6.1] - 2022-05-26\r\n### Added\r\n- Added unique non-identifable `toolsId` identifer to the manifest.json file for generated projects to support telemetry.\r\n\r\n#### Changed\r\n- Updated validation of Node.js CAP data sources to detail if the compilation of the services failed.\r\n- Improved the error message when an OData service URL provided does not reference an OData service.\r\n\r\n### Fixed\r\n- Fixed issue when using API Business Hub in SAP Business Application Studio with local preview.\r\n- Fixed issue where the Generator would not follow http redirects for an OData service URL.\r\n\r\n## [1.6.0] - 2022-05-12\r\n### Added\r\n- Added support for the SAP Fiori elements Overview Page floorplan with an OData V4 data source.\r\n- Added Ability to generate Cloud Foundry deployment configuration for an existing SAP Fiori project in a non-interactive mode.\r\n\r\n#### Changed\r\n- Updated the launch targets generated for a SAP Fiori application in VSCode to remove those allowing you to specify an SAPUI5 version at runtime.  Please use the Fiori Run Configurations tool to change the version of SAPUI5 needed.\r\n \r\n### Fixed\r\n- Fixed issue where adding an SAP Fiori application to a JAVA Cap Project may fail to start if the relevant plugins and configuration were not already present in the project. These updates are now added as part of generation if needed.\r\n- Fixed the Form Entry Object Page floorplan to only accept OData V4 services.\r\n\r\n## [1.5.5] - 2022-04-28\r\n### Added\r\n- Added support for the SAP Fiori elements Worklist floorplan with an OData V4 data source.\r\n\r\n#### Changed\r\n- Adding a new system during generation will now display the username of the user after authentication to the system.\r\n- The deployment name is no longer automatically populated from the module name when adding deployment configuration.\r\n\r\n### Fixed\r\n- Fixed CAP services retrieval to support services defined in nested folders in CAP projects.\r\n\r\n## [1.5.4] - 2022-04-14\r\n### Added\r\n- Added support for instance based destinations in deployment configuration for local Node.js CAP projects in SAP Business Application Studio.\r\n\r\n#### Changed\r\n- Fiori generator for application type `SAP Fiori elements` now consumes the open source SAP Fiori elements templates published [here](https://github.com/SAP/open-ux-tools).\r\n\r\n### Fixed\r\n- Fixed bug where VSCode launch configuration would not start the project correctly in certain situations.\r\n- Fixed issue where the Fiori generator would allow the user to continue if the mandatory navigation entity was not selected.\r\n\r\n## [1.5.3] - 2022-03-31\r\n### Added\r\n- Added support for creating new saved SAP systems in VSCode.  Users can click on the '+' icon and select to create an ABAP on Premise or ABAP Environment on SAP Business Technology Platform saved system.  Users must test the connection to validate it connects before saving.\r\n\r\n#### Changed\r\n- Determining if telemetry data is to be captured during generation is now determined from the global SAP Fiori tools setting in the command palette: `Fiori: Change Telemetry Settings`.\r\n\r\n### Fixed\r\n- Fixed bug where message longtexts were not displayed in the console for ABAP deployment errors.  These can be copied and pasted into the browser for more details.\r\n- Fixed bug where the SAP Fiori generator could crash if the project folder location was read-only.\r\n- Fixed error where SAP Fiori freestyle projects with an uploaded metadata file were not being validated correctly.\r\n\r\n## [1.5.2] - 2022-03-17\r\n### Fixed\r\n- Fixed invalid xs-security.json file location when using generator in non-interactive mode for CAP projects.\r\n- Fixed launch configurations in VSCode when the Fiori project is generated inside an MTA subfolder.\r\n- Fixed bug where App Router configuration needed to be added to an MTA.yaml file before Fiori deployment configuration.\r\n- Fixed issue with deployment errors containing longtext messages that did not have the associated URL clickable.\r\n\r\n## [1.5.1] - 2022-03-03\r\n#### Added\r\n- Added warning during deployment if deploying to an ABAP system that uses a lower version of SAPUI5 than that specified as the minimum SAPUI5 version in the SAP Fiori project being deployed.\r\n\r\n#### Changed\r\n- Added entity selection details to the `README.md` file for a generated SAP Fiori application.\r\n\r\n### Fixed\r\n- Fixed issue with generated applications not working with SAPUI5 versions greater than or equal to 1.100.0\r\n- The `start-variants-management` script will not be available if the SAP Fiori project was generated by uploading a metadata document rather than using a live service.\r\n\r\n## [1.5.0] - 2022-02-17\r\n#### Added\r\n- Added support for editing saved SAP systems in VSCode by selecting the saved system from the SAP Systems list and updating as needed.  Users must test the connection to validate it connects before saving.\r\n- Added support for matching the suggested minimum SAPUI5 version with the backend ABAP system, where applicable.  The SAPUI5 version dropdown will now default to the same version of SAPUI5 if the data source provided is an ABAP backend and the SAPUI5 version can be determined. \r\n\r\n#### Changed\r\n- Removed the `Latest` label from the list of minimum SAPUI5 versions.  The version of SAPUI5 choosen during generation will now be a fixed version from that selected.\r\n- Generated applications with a OData V2 data source now use an external mockserver for mock support, rather than the SAPUI5 client side mock.\r\n\r\n### Fixed\r\n- The generated `README.md` file now correctly details if the application was generated with the Fiori elements or Fiori freestlye generator.\r\n\r\n## [1.4.7] - 2022-02-03\r\n#### Changed\r\n- Updated the `Analytical List Page` floorplan, when used with an V4 OData service, to now only support version 1.90 and above of SAPUI5.  This enables the generated project to adhere to the latest recommended configuration.\r\n- Updated the local preview `npm` targets to not use the browser cache to ensure the latest updates are being reflected in the browser.\r\n- Removed unneeded i18n references from the generated manifest file.\r\n\r\n### Fixed\r\n- Fixed an issue where the Fiori generator would crash if attempting to connect to an on-premise system using SAML in VSCode.\r\n\r\n## [1.4.6] - 2022-01-20\r\n#### Added\r\n- Generating an SAP Fiori freestyle application will launch the `Application Info` page for that application after generation completes. \r\n\r\n#### Changed\r\n- The SAP Fiori freestyle template `SAP Fiori Master-Detail Application` has been renamed `SAP Fiori List-Detail Application`.\r\n\r\n### Fixed\r\n- Starting your SAP Fiori application from the launch/debug configuration with a specified version of UI5 will now use that specific version of UI5.\r\n- Fixed linting errors displayed after application is deployed.\r\n- SAP Fiori freestyle applications generated with a CAP project no longer identify as SAP Fiori elements applications within the SAP Fiori tools suite.\r\n\r\n## [1.4.4] - 2021-12-09\r\n#### Added\r\n- Added support for the experimental SAP Horizon theme, as long as a supported version of UI5 is selected during generation.\r\n\r\n#### Changed\r\n- Choosing the UI5 version for your application is no longer under `Advanced Options` and is now directly on the `Project Attributes` step for better visibility.\r\n\r\n### Fixed\r\n- Selecting a Fiori freestyle SAPUI5 template with no datasource no longer crashes the generator.\r\n- Performing a test deployment no longer reports the result as an error unless the test deployment fails.\r\n\r\n## [1.4.3] - 2021-11-25\r\n#### Added\r\n- A new SAP Fiori elements floor plan is now available.  The `Form Entry Object Page` floor plan for V4 OData sources allows you to create an SAP Fiori application with an object page for data entry.\r\n- The `List Report Object Page` floor plan and the new `Form Entry Object Page` floor plan can now optionally generate UI annotations during generation if there are none already available in the supplied data source.  **Note:** This is an experimental feature and can be switched off by disabling the `Sap › Ux › Application Modeler: Enable Experimental Features` option in the settings.\r\n\r\n#### Changed\r\n- Generated applications now use the Fiori CLI in the generated launch configuration to start the application.\r\n\r\n### Fixed\r\n- Fixed crash in the `CF Application Router` generator if an MTA ID with invalid characters is provided.\r\n- Using the SAP Fiori generator from the command line in Business Application Studio now supports data sources using the API Business Hub.\r\n- Generating a SAP Fiori freestyle application into a CAP project with an `mta.yaml` file should now launch successfully.\r\n- Using a Java CAP project with the SAP Fiori generator no longer requires a `package.json` file in the root folder.\r\n\r\n## [1.4.1] - 2021-11-11\r\n#### Added\r\n- Generating an Analytical List Page application with an OData V4 data source will now default to a table type of `AnalyticalTable`, and the user will no longer be asked to choose a table type.  The user can change this table type after generation using the Page Editor tool.\r\n\r\n#### Changed\r\n- Fiori generator for application type `SAPUI5 freestyle` now consumes the open source Freestyle templates published [here](https://github.com/SAP/open-ux-tools).\r\n\r\n### Fixed\r\n- Saved SAP systems should not ask the user to re-authenticate when being used with the Fiori generator in VSCode, unless needed.\r\n\r\n## [1.4.0] - 2021-10-28\r\n#### Added\r\n- UUA Authentication is now supported during deployment without launching a browser, as long as the relevant authentication parameters are supplied. See the SAP Fiori tools help portal for full details.\r\n\r\n### Fixed\r\n- Generating an application into a CAP project no longer adds unnecessary npm dependencies.\r\n- Destinations in SAP Business Application Studio are now filtered to show only those that can be used in the generator.\r\n\r\n## [1.3.7] - 2021-10-14\r\n#### Added\r\n- A new npm script for ABAP deployment configuration has been added, `deploy-test`.  Using this target will allow you to validate your deployment configuration without actually deploying.\r\n\r\n## [1.3.6] - 2021-10-07\r\n### Fixed\r\n- OData services that require a querystring parameter in the URL are now supported.\r\n\r\n## [1.3.5] - 2021-09-30\r\n#### Added\r\n- The Fiori command line tools now has help context information available.  Typing `npx fiori help` will give the user a list of commands that the Fiori command line tools support.  Help text for individual Fiori commands can also be displayed, e.g. `npx fiori add help`.\r\n\r\n### Fixed\r\n- Adding deployment configuration to a Fiori application with an existng MTA project should now successfully update the `mta.yaml` and `package.json` files in the parent folder.\r\n- Fixed standalone deployment configuration for Cloud Foundry destinations.\r\n- The Fiori generator no longer crashes if the Cloud Foundry account does not match that configured in SAP Business Application Studio.\r\n\r\n## [1.3.3] - 2021-09-16\r\n#### Added\r\n- The generator now supports optionally adding eslint validation to the generated project.  Choosing this option from the advanced options of the generator will add the eslint libraries and a new target `npm run lint` to perform the validation.\r\n- ABAP deployment now allows the user to provide a project ZIP file from either the local filesystem or from a remote URL.\r\n- Successful deployment to Cloud Foundry will provide instructions on how to retreive the URL of the deployed application.\r\n- Using the `CF Application Router Generator` for generating a multi-targeted application no longer asks for the version of the MTA, but will default to `0.0.1` in the generated `mta.yaml` file.\r\n\r\n### Fixed\r\n- Better handling for destinations with SAML authentication.\r\n- Deployment logic updated to ensure only files in the `dist` folder are uploaded.\r\n- Better support for long MTA identifier names during Cloud Foundry deployment.\r\n- Improved support for project folders with spaces with the generator.\r\n\r\n## [1.3.2] - 2021-09-02\r\n#### Added\r\n- Added ability to optionally include UI5 code assistance libraries to the generated application by choosing it in the advanced options of the generator.\r\n- Using a Saved System in VSCode will now ask the user to re-authenticate if the saved credentials are no longer valid.\r\n\r\n### Fixed\r\n- Fixed an issue which caused the Fiori generator to crash when connecting to a Cloud Foundry service if the SAP Business Application Studio subaccount is not the same as the Cloud Foundry organisation.\r\n\r\n## [1.3.1] - 2021-08-19\r\n#### Added\r\n- Added support for generating Fiori applications using the SAP API Business Hub from the Service Center in Business Application Studio.\r\n- Non identifiable and optional telemetry data has been added for deployment.\r\n\r\n### Fixed\r\n- The `minUI5Version` version in the generated `manifest.json` file now details the UI5 version used during generation.\r\n- Improved support for detecting Reuse libraries in the local workspace.\r\n\r\n## [1.3.0] - 2021-07-28\r\n### Fixed\r\n- Fixed an issue which caused the Fiori generator to crash due to presence of multiple schemas in the metadata file\r\n- Fixed an issue where generated project was missing undeploy script when deploy config was created for Cloud Foundry environment\r\n- Fixed an issue where the cloned reuse library with missing description in i18 file was not being listed for being added as a reference\r\n\r\n\r\n## [1.2.5] - 2021-07-22\r\n#### Added\r\n- Added support for Cloud Foundry deployment configuration during non-interactive generation.\r\n\r\n### Fixed\r\n- Better support for determining if pre-requisite `mta` library is installed before attempting to add Cloud Foundry deployment configuration.\r\n- Removed erroneous telemetry error messages when using the generator from the command line.\r\n- Fixed the deployment name character restrictions for ABAP deployment. \r\n\r\n## [1.2.4] - 2021-07-08\r\n#### Added\r\n- Destinations configured with a service URL endpoint, or a hostname, can now be used with the Fiori generator in Business Application Studio.\r\n- Reuse components and libraries in the local workspace can now be added to your project.  Use the command palette entry `Fiori: Add Reference to SAP Fiori Reusable Libraries` to invoke this functionality.\r\n\r\n### Fixed\r\n- In Business Application Studio, the Cloud Foundry Destination dropdown in the Deployment Configuration step of the Generator should now successfully return all available destinations.\r\n\r\n## [1.2.3] - 2021-06-24\r\n#### Added\r\n- Deploying to a system that requires authentication will now prompt for a username and password if a local `.env` file with the credentials is not present.\r\n- Installing the generator in a custom location is now supported.\r\n\r\n### Fixed\r\n- Freestyle applications generated for a CAP project will no longer contain invalid test artefacts.\r\n- The `start-local` npm target now works with the SAP Belize theme.\r\n- Deleting a saved SAP system from VSCode now also deletes the authentication token from the secure storage.\r\n- Deployed Fiori elements applications now correctly display the application title.\r\n\r\n## [1.2.1] - 2021-06-10\r\n#### Added\r\n- Added support for the Service Center in Business Application Studio.  Services selected in the Service Center can now be used with the Fiori generator and the user will not be asked to provide a data source during generation, the selected service from the Service Center will be used instead.\r\n- Added support for Destinations in Business Application Studio that have been configured with a service endpoint URL rather than a catalog service.\r\n\r\n### Fixed\r\n- Requesting authentication for a saved system in VSCode no longer launches multiple browsers to authenticate. Only one browser should now open.\r\n- Browser title for deployed applications now correctly displays the application title.\r\n- Upgraded UI5 libraries to resolve security vulnerabilities.\r\n\r\n## [1.2.0] - 2021-05-28\r\n### Fixed\r\n- The Fiori generator will be automatically installed if it is invoked from the command palette in VSCode and not already installed.\r\n- Projects migrated from WebIDE to Business Application Studio can now be deployed.\r\n- Migrated projects now include an OPA test script where applicable.\r\n\r\n## [1.1.11] - 2021-05-14\r\n#### Added\r\n- Added support to include undeployment script (check `undeploy` script in package.json) when deployment configuration is generated for ABAP systems.\r\n\r\n#### Fixed\r\n- To ensure consistency, all generated V2, V4 or CAP applications will now have a header bar and preview will launch the application in a browser directly without showing Fiori launchpad first\r\n\r\n## [1.1.10] - 2021-04-29\r\n#### Added\r\n- Improved the destination catalog service request to ensure the list of services returned is filtered to those suitable for Fiori applications.  Note: the catalog service needs to also be updated to accommodate this change, if not, the existing list is returned.\r\n\r\n#### Fixed\r\n- The Fiori migration wizard on Business Application Studio no longer asks for the client field.\r\n\r\n## [1.1.9] - 2021-04-15\r\n#### Added\r\n- Fiori elements applications generated with the following floor plans now have simple OPA automated tests generated with the project:\r\n\t- List Report Object Page (with either a V2 or V4 OData service)\r\n\t- Analytical List Page (with an V4 OData service)\r\n- Added Ability to generate a Fiori freestyle application from the command line in a non-interactive mode.\r\n- Floor plan icons in the generator have been updated.\r\n- The deployment configuration questions have been reduced where system information can already be determined.\r\n- The generator now requires [MTA](https://www.npmjs.com/package/mta) Node.js package (version 1.0 or higher) to be installed globally.  Please ensure you have updated by executing `npm install -g mta`.\r\n\r\n#### Fixed\r\n- Navigating back and forwards within the wizard should not lose previously completed steps.\r\n- The generator will no longer suggest the first folder in a workspace to generate the application into.\r\n- Better handling of long module names for deployment\r\n- The generator README.MD file now correctly details the floor plan used.\r\n\r\n## [1.1.7] - 2021-04-01\r\n#### Added\r\n- Uploading a metadata document for V4 OData services is now supported.\r\n- Better error messaging when the destination in Business Application Studio is not available.\r\n\r\n#### Fixed\r\n- The freestyle floor plans now correctly generate for a CAP project.\r\n- Going back from deployment to the project attributes step in the wizard now retains the data between steps.\r\n- Adding launchpad config on the command line can now overwrite existing configuration if desired.\r\n\r\n## [1.1.6] - 2021-03-26\r\n#### Fixed\r\n- Adding Cloud Foundry deployment configuration in Business Application Studio during generation no longer results in an error.\r\n\r\n## [1.1.5] - 2021-03-18\r\n#### Added\r\n- Freestyle SAPUI5 floor plan now supports OData V4 services.\r\n- The analytical list page floor plan with OData V4 service now supports navigation entities.\r\n- Adding deployment configuration for Cloud Foundry now supports the managed application router.\r\n- Using the `CF Application Router Generator` for generating a multi-targeted application now supports the managed application router.\r\n\r\n#### Fixed\r\n- Applications deployed to the managed application router cannot resolve the ui5 destination.\r\n- In some cases, validation messages for invalid OData service URLs were not being displayed.\r\n\r\n## [1.1.4] - 2021-03-04\r\n#### Added\r\n- Added support for the central Fiori Launchpad for managed app router configurations.\r\n- Generated projects no longer contain a `.npmrc` file and use the global settings.\r\n- Project generation time has been improved.\r\n\r\n#### Fixed\r\n- The Fiori generator no longer has a conflict with the SAP Mobile Development Kit VSCode extension.\r\n- Fixed invalid 401 error for OData service URL endpoints.\r\n- Project folder is no longer created before generation starts.\r\n- Deployment to Cloud Foundry now supports Org name with spaces.\r\n- Updating an existing MTA file with deployment configuration on Windows is now supported.\r\n\r\n## [1.1.2] - 2021-02-19\r\n#### Added\r\n- Support for adding project deployment configuration to an existing managed app router.\r\n- Project paths in generated launch configuration are now relative.\r\n- Migrating an existing application now prompts for system client.\r\n- In SAP Business Application Studio, the destination name for MTA deployment configuration is now a dropdown of available destinations rather than a free text field.\r\n- For ABAP deployment configuration, the user can now optionally provide a deployment description.\r\n\r\n#### Fixed\r\n- Standalone deployment to Cloud Foundry no longer returns an error.\r\n\r\n## [1.1.0] - 2021-02-05\r\n#### Added\r\n- Initial Version\r\n- Consolidated the existing `Fiori elements` and `Fiori freestyle` generators into one. The first step of the combined generator will ask you to choose which type of application you would like to generate.\r\n- Added support for deployment configuration as part of generation. Users can now choose to add either Cloud Foundry or ABAP deployment configuration using the generator if they wish.\r\n- Added support for Fiori launch pad (FLP) configuration as part of generation.  \r\n- Added a new `Cloud Foundry Application Router Generator` that allows the user to generate generic Cloud Foundry configuration which can then be used with subsequent Fiori projects.\r\n- Added support for custom paths for folder locations in CDS projects.\r\n- The authenticated username is now displayed alongside the saved system name when using VSCode.\r\n"},{"name":"generator-hdb-project","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","changelog":"## 1.4.0\r\n\r\n### Fixes\r\n- Allow periods ('.') in project names\r\n- Update @sap/generator-add-hdb-module to version 1.4.0\r\n\r\n## 1.3.0\r\n\r\n### Fixes\r\n- Update @sap/generator-add-hdb-module to version 1.3.0\r\n\r\n## 1.2.0\r\n\r\n### Fixes\r\n- Update @sap/generator-add-hdb-module to version 1.2.0\r\n\r\n## 1.1.0\r\n\r\n### Fixes\r\n- Update @sap/generator-add-hdb-module to version 1.1.0\r\n\r\n## 1.0.1\r\n\r\n### Fixes\r\n- Update @sap/generator-add-hdb-module to version 1.0.1\r\n\r\n## 1.0.0\r\n\r\nInitial release"},{"name":"graph-toolkit","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP Graph Toolkit\r\n\r\nSAP Graph is a unified API for SAP, using modern open standards like OData v4.\r\n\r\nWith SAP Graph, developers access SAP-managed business data as a single semantically connected data graph, spanning the suite of SAP products. Targeting SAP's ecosystem of developers and customers, SAP Graph's one API and Business Data Graph reduce the cost and complexity of creating and deploying reusable extension applications.\r\n\r\nThe SAP Graph Command Line Tool allows users with the role of _SAP_Graph_Key_User_ to mantain business data graphs.\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install -g @sap/graph-toolkit\r\n```\r\n\r\nor for a specific version (e.g. 3.0.7)\r\n\r\n```sh\r\nnpm install -g @sap/graph-toolkit@3.0.7\r\n```\r\n\r\nTest your installation with\r\n\r\n```sh\r\ngraphctl --version\r\n```\r\n\r\nFor this example, you should see the output\r\n\r\n```sh\r\n3.0.7\r\n```\r\n\r\n## Usage\r\n\r\nExecute the following command to get help and an overview of all available commands\r\n\r\n```sh\r\ngraphctl --help\r\n```\r\n\r\nFor more information, see [Documentation](https://explore.graph.sap/docs/beta/configure/configure-graph).\r\n"},{"name":"grunt-sapui5-bestpractice-build","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# grunt-sapui5-bestpractice-build\r\n\r\nGrunt tasks for SAP WebIDE.\r\n\r\n## Pre-requisites\r\nMake sure that you have installed npm version >=5.6.0.\r\n\r\n## Getting Started\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install @sap/grunt-sapui5-bestpractice-build --save-dev\r\n```\r\n\r\nOR add the following package.json to your application \r\n\r\n```js\r\n{\r\n\t\"name\": \"<your-project-name>\",\r\n\t\"version\": \"0.0.1\",\r\n\t\"description\": \"Project description\",\r\n\t\"private\": true,\t \r\n\t\"devDependencies\": {\r\n\t\t\"@sap/grunt-sapui5-bestpractice-build\": \"1.X.X\"\r\n\t}\r\n}\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your wcGruntfile.js:\r\n\r\n```js\r\n\r\nmodule.exports = function(grunt) {         \r\n\t'use strict';\r\n\t\r\n    grunt.loadNpmTasks(\"@sap/grunt-sapui5-bestpractice-build\");   \r\n    grunt.config.merge({\r\n        compatVersion: \"1.56\",\r\n        deploy_mode: \"html_repo\"\r\n    });    \r\n    grunt.registerTask(\"default\", [\r\n        \"clean\",\r\n        \"lint\",\r\n        \"build\"\r\n    ]);\r\n    \r\n};\r\n```\r\n\r\nOptional Parameters:        \r\n\"compatVersion\" - UI5 version in which the built artifact will be deployed.    \r\n\"deploy_mode\" - Indication whether the deployed artifact will be hosted by an HTML5 repository. If so, the value should be \"html_repo\". \r\n"},{"name":"grunt-sapui5-bestpractice-test","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Running Unit and Integration Tests\r\nThis module is used to support running unit and integration tests via a Grunt task.\r\n\r\n## Usage\r\n1. Copy this command and run it. \r\n\r\n        npm install --save-dev @sap/grunt-sapui5-bestpractice-test\r\n   This will add the grunt-sapui5-bestpractice-test module to your package.json file.\r\n2. Add the following script to your package.json file to enable running the unit and integration tests via npm.\r\n\r\n        \"scripts\": {\r\n            \"test\": \"grunt unit_and_integration_tests\"\r\n        }\r\n3. Add this code to the Gruntfile.js file.\r\n\r\n        grunt.loadNpmTasks(\"@sap/grunt-sapui5-bestpractice-test\");\r\n        \r\n        grunt.registerTask(\"unit_and_integration_tests\", \r\n            [\r\n                \"test\"\r\n            ]\r\n        );\r\n        \r\n        grunt.config.merge({\r\n            coverage_threshold: {\r\n                statements: 0,\r\n                branches: 100,\r\n                functions: 0,\r\n                lines: 0\r\n            }\r\n        });\r\n4. Run the unit and integration tests.\r\n\r\n        npm test\r\n","changelog":""},{"name":"grunt-sapui5module-bestpractice-build","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/grunt-sapui5module-bestpractice-build\r\n\r\nGrunt tasks for sapui5 module build.\r\n\r\n## Getting Started\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install @sap/grunt-sapui5module-bestpractice-build --save-dev\r\n```\r\n\r\nOR add the following package.json to your application \r\n\r\n```js\r\n{\r\n\t\"name\": \"<your-project-name>\",\r\n\t\"version\": \"0.0.1\",\r\n\t\"description\": \"Project description\",\r\n\t\"private\": true,\t \r\n\t\"devDependencies\": {\r\n\t\t\"@sap/grunt-sapui5module-bestpractice-build\": \"X.X.X\"\r\n\t}\r\n}\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile.js:\r\n\r\n```js\r\n\r\nmodule.exports = function(grunt) {         \r\n\t'use strict';\r\n    grunt.loadNpmTasks('@sap/grunt-sapui5module-bestpractice-build');\r\n\r\n    grunt.registerTask('default', [\r\n        'lint'\r\n    ]);\r\n                \r\n};\r\n```\r\n\r\n## Linting\r\nThe package contains several default validators for linting the project code.\r\n"},{"name":"grunt-tests-webide-bestpractice","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# tests-grunt\r\nNode module to support unit and integration tests via a grunt task\r\nThe module is a sub module of the web ide best practice\r\n\r\nplease see:\r\nhttps://www.sap.com/developer/tutorials/webide-grunt-basic.html\r\n"},{"name":"hana-client","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/hana-client\r\n\r\nFully-featured Node.js driver for [SAP HANA](https://www.sap.com/products/hana.html). It is used to connect, issue SQL queries, and obtain result sets.\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install @sap/hana-client\r\n```\r\n\r\n## Prerequisites\r\n\r\nThis driver communicates with the native HANA libraries, and thus requires\r\nplatform-specific native binaries. The official hosted version includes\r\nprecompiled libraries for Linux, Windows and Mac OS X.\r\n\r\nThe @sap/hana-client driver supports versions of Node.js 8.11.2 and higher.\r\n\r\n## Community\r\n\r\nSAP Community provides a forum where you can ask and answer questions, and\r\ncomment and vote on the questions of others and their answers.\r\n\r\nSee [SAP HANA Community Questions](https://answers.sap.com/tags/73554900100700000996) for details.\r\n\r\n## Help Guide\r\n\r\nThe SAP HANA Node.js Driver help guide and API reference can be found on [help.sap.com](https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-US/a5c332936d9f47d8b820a4ecc427352c.html).\r\n\r\n## Getting Started\r\n\r\n```js\r\nvar hana = require('@sap/hana-client');\r\n\r\nvar conn = hana.createConnection();\r\n\r\nvar conn_params = {\r\n  serverNode  : 'myserver:30015',\r\n  uid         : 'system',\r\n  pwd         : 'Password123'\r\n};\r\n\r\nconn.connect(conn_params, function(err) {\r\n  if (err) throw err;\r\n  conn.exec('SELECT Name, Description FROM Products WHERE id = ?', [301], function (err, result) {\r\n    if (err) throw err;\r\n\r\n    console.log('Name: ', result[0].Name, ', Description: ', result[0].Description);\r\n    // output --> Name: Tee Shirt, Description: V-neck\r\n    conn.disconnect();\r\n  })\r\n});\r\n```\r\n\r\n## Establish a database connection\r\n\r\n### Connecting\r\n\r\nA database connection object is created by calling `createConnection`.  The\r\nconnection is established by calling the connection object's `connect` method,\r\nand passing in an object representing connection parameters.\r\n\r\n#### Example: Connecting over TCP/IP\r\n\r\n```js\r\nconn.connect({\r\n  host    : 'myserver',\r\n  port    : '30015',\r\n  uid     : 'system',\r\n  pwd     : 'Password123'\r\n});\r\n```\r\n\r\n### Disconnecting\r\n\r\n```js\r\nconn.disconnect(function(err) {\r\n  if (err) throw err;\r\n  console.log('Disconnected');\r\n});\r\n```\r\n\r\n## Direct Statement Execution\r\n\r\nDirect statement execution is the simplest way to execute SQL statements. The\r\ninputs are the SQL command to be executed, and an optional array of positional\r\narguments. The result is returned using callbacks. The type of returned result\r\ndepends on the kind of statement.\r\n\r\n### DDL Statement\r\n\r\nIn the case of a successful DDL Statement, nothing is returned.\r\n\r\n```js\r\nconn.exec('CREATE TABLE Test (id INTEGER PRIMARY KEY, msg VARCHAR(128))', function (err, result) {\r\n  if (err) throw err;\r\n  console.log('Table Test created!');\r\n});\r\n```\r\n\r\n### DML Statement\r\n\r\nIn the case of a DML Statement the number of `affectedRows` is returned.\r\n\r\n```js\r\nconn.exec(\"INSERT INTO Test VALUES(1, 'Hello')\", function (err, affectedRows) {\r\n  if (err) throw err;\r\n  console.log('Number of affected rows:', affectedRows);\r\n});\r\n```\r\n\r\n### Query\r\n\r\nThe `exec` function is a convenient way to completely retrieve the result of a\r\nquery. In this case all selected rows are fetched and returned in the callback.\r\n\r\n```js\r\nconn.exec(\"SELECT * FROM Test WHERE id < 5\", function (err, rows) {\r\n  if (err) throw err;\r\n  console.log('Rows:', rows);\r\n});\r\n```\r\n\r\nValues in the query can be substitued with JavaScript variables by using `?`\r\nplaceholders in the query, and passing an array of positional arguments.\r\n\r\n```js\r\nconn.exec(\"SELECT * FROM Test WHERE id BETWEEN ? AND ?\", [5, 8], function (err, rows) {\r\n  if (err) throw err;\r\n  console.log('Rows:', rows);\r\n});\r\n```\r\n\r\n## Prepared Statement Execution\r\n\r\n### Prepare a Statement\r\n\r\nThe connection returns a `statement` object which can be executed multiple times.\r\n\r\n```js\r\nconn.prepare('SELECT * FROM Test WHERE id = ?', function (err, stmt){\r\n  if (err) throw err;\r\n  // do something with the statement\r\n});\r\n```\r\n\r\n### Execute a Statement\r\n\r\nThe execution of a prepared statement is similar to the direct statement execution.\r\nThe first parameter of `exec` function is an array with positional parameters.\r\n\r\n```js\r\nstmt.exec([16], function(err, rows) {\r\n  if (err) throw err;\r\n  console.log(\"Rows: \", rows);\r\n});\r\n```\r\n\r\n### Execute a Batch Statement\r\n\r\nThe execution of a prepared batch statement is similar to the direct statement execution.\r\nThe first parameter of `execBatch` function is an array with positional parameters.\r\n\r\n```js\r\nvar stmt=conn.prepare(\"INSERT INTO Customers(ID, NAME) VALUES(?, ?)\");\r\nstmt.execBatch([[1, 'Company 1'], [2, 'Company 2']], function(err, rows) {\r\n  if (err) throw err;\r\n  console.log(\"Rows: \", rows);\r\n});\r\n```\r\n\r\n### Execute a Query\r\n\r\nThe execution of a prepared query is similar to the direct statement execution.\r\nThe first parameter of `execQuery` function is an array with positional parameters.\r\n\r\n```js\r\nvar stmt=conn.prepare(\"SELECT * FROM Customers WHERE ID >= ? AND ID < ?\");\r\nstmt.execQuery([100, 200], function(err, rs) {\r\n  if (err) throw err;\r\n    var rows = [];\r\n    while (rs.next()) {\r\n      rows.push(rs.getValues());\r\n    }\r\n  console.log(\"Rows: \", rows);\r\n});\r\n```\r\n\r\n### Drop Statement\r\n\r\n```js\r\nstmt.drop(function(err) {\r\n  if (err) throw err;\r\n});\r\n```\r\n\r\n## Transaction Handling\r\n\r\n__Transactions are automatically commited.__ Setting autocommit to false implicitly\r\nstarts a new transaction that must be explicitly committed, or rolled back.\r\n\r\n### Commit a Transaction\r\n\r\n```js\r\nconn.setAutoCommit(false);\r\n// Execute some statements\r\nconn.commit(function(err) {\r\n  if (err) throw err;\r\n  console.log('Transaction commited.');\r\n});\r\n```\r\n\r\n### Rollback a Transaction\r\n\r\n```js\r\nconn.setAutoCommit(false);\r\n// Execute some statements\r\nconn.rollback(function(err) {\r\n  if (err) throw err;\r\n  console.log('Transaction rolled back.');\r\n});\r\n```\r\n\r\n## Resources\r\n\r\n+ [SAP HANA Documentation](https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-US/a5c332936d9f47d8b820a4ecc427352c.html)\r\n","changelog":"# Hana Client 2.10.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.10 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.10/en-US\r\n\r\nFor the latest updates please see SAP Note 3087732 - SAP HANA Client 2.10 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3087732\r\n\r\n# Hana Client 2.9.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.9 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.9/en-US\r\n\r\nFor the latest updates please see SAP Note 3063974 - SAP HANA Client 2.9 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3063974\r\n\r\n# Hana Client 2.8.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.8 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.8/en-US\r\n\r\nFor the latest updates please see SAP Note 3033179 - SAP HANA Client 2.8 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3033179\r\n\r\n# Hana Client 2.7.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.7 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.7/en-US\r\n\r\nFor the latest updates please see SAP Note 3000693 - SAP HANA Client 2.7 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3000693\r\n\r\n# Hana Client 2.6.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.6 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.6/en-US\r\n\r\nFor the latest updates please see SAP Note 2973943 - SAP HANA Client 2.6 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/2973943\r\n\r\n# Hana Client 2.5.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.5 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.5/en-US\r\n\r\nFor the latest updates please see SAP Note 2937532 - SAP HANA Client 2.5 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/2937532\r\n\r\n# Hana Client 2.4.x Drivers\r\n\r\n## Version 2.4.202\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 247255: Some rows of a query could have been incorrectly missing if the server returned a fetch warning.\r\n - Issue Number 246397: SQLDBC/ODBC tracing output could have been incorrect in several cases.\r\n - Issue Number 242465: When fallback routing happened in executing hint routed FDA select, the application server could have received an un-initialized ITAB result and produced an ABAP dump.\r\n\r\n## Version 2.4.196\r\n\r\n### Changes:\r\n\r\n - Issue Number 246837: node.js process crashes while executing a statement created by Stream.createProcStatement() when connection is closed.\r\n - Issue Number 245618: Application crashes with 'Check failed: IsGlobalEmpty()'.\r\n - Issue Number 244631: Fix Memory leaks caused by warnings.\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 244599: Long-running plan execution cannot be canceled.\r\n\r\n## Version 2.4.194\r\n\r\n### Changes:\r\n\r\n - Issue Number 239769: Using HanaLobStream produced an incorrect streaming result of NULL value.\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 244509: The wrong error message was displayed when the cseKeyStorePassword property was missing\r\n - Issue Number 237977: When bulk fetching rows into buffers from a ResultSet, the driver may have returned success when an error occurred while fetching data.\r\n - Issue Number 236457: There were several SQLDBC tracing issues with flushing disabled and trace only on error\r\n - Issue Number 241887: VARCHARMODE session variable was not visible using the ClientInfo interface when connecting with ABAPVARCHARMODE=1\r\n\r\n## Version 2.4.191\r\n\r\n### Changes:\r\n\r\n - Issue Number 242230: Possible crash on queries with TEXT columns\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 243053: When specifying HOSTNAME environment variable and\r\n   using both JDBC and SQLDBC-based drivers to connect with SecureStore\r\n   entries, or Client Side Encryption operations, the JDBC operations could\r\n   have failed\r\n - Issue Number 240995: Reading BLOB longer than SQLDBC packet size limit\r\n   resulted in silent truncation\r\n - Issue Number 238492: There was no way for S/4 HANA to check if all internal\r\n   connections for routing were valid on a distributed system\r\n\r\n## Version 2.4.186\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 243922: WebSockets would have only reported 'HTTP Exception' from HTTP errors\r\n - Issue Number 236729: HANA Client for Linux x86_64 was not backwards compatible with Red Hat Enterprise Linux 5\r\n\r\n## Version 2.4.182\r\n\r\n### Changes:\r\n\r\n - Bug 236802: SQLDBC 2.4.132 and later may infinitely loop on reading finished NCLOB into a more than large enough UCS2 destination buffer if the payload contains non-BMP characters\r\n\r\n## Version 2.4.177\r\n\r\n### Changes:\r\n\r\n - Bug: 233849 - [node] The ResultSet object could be prematurely freed by node.js GC\r\n\r\n## Version 2.4.171\r\n\r\n### Changes:\r\n\r\n - Bug: 233849 - [node] fix heap-use-after-free\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 233843 - [SQLDBC] SNI is not set correctly when sslValidateCertificate is false\r\n - Bug: 231977 - [SQLDBC] ALTER CLIENTSIDE ENCRYPTION COLUMN KEY <column key name> ADD KEYCOPY ENCRYPTED WITH KEYPAIR <keypair name> fails with error -10429: Encryption of Column Encryption Key failed: Failed to create temporary Key ID table\r\n - Bug: 231823 - [SQLDBC] Corrupted debug trace\r\n\r\n## Version 2.4.167\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 233843 - [SQLDBC] SNI is not set correctly when sslValidateCertificate is false\r\n - Bug: 228317 - [SQLDBC] Audit log APPLICATION_USER_NAME column is single character on slave node and it works fine on master node\r\n\r\n## Version 2.4.162\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 230135 - [SQLDBC] SQLDBC will now trace the initial connection reply packet\r\n - Bug: 229397 - [SQLDBC] Fixed incorrect reporting of rows-affected for LOB datatype\r\n - Bug: 228712 - [SQLDBC] DBSL could have given a Secure store error: Timeout waiting for the secure store access lock\r\n\r\n## Version 2.4.155\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 228735 - [SQLDBC] Unintialized scalar value in Connection\r\n - Bug: 226661 - [SQLDBC] Client not work well with deferred_lob_writing ON\r\n\r\n## Version 2.4.154\r\n\r\n### Changes:\r\n\r\n - Bug: 225625 - [node] \"stderr maxBuffer length exceeded\" error when deploying an mtar to CF\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 220794 - [SQLDBC] Enable frequent TCP keepalive probes\r\n\r\n## Version 2.4.153\r\n\r\n### Changes:\r\n\r\n - Bug: 221808 - [node] mdx get_axisinfo return garbage data\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 225784 - [SQLDBC] Crash when OOM during error reporting\r\n - Bug: 224703 - [SQLDBC] Send networkGroup in DBConnectInfo\r\n\r\n## Version 2.4.151\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 225299 - [SQLDBC] Show tracing category & level at start of restarted trace files\r\n - Bug: 224855 - [SQLDBC] Windows trace file archiving stop at first copy\r\n - Bug: 224764 - [SQLDBC] crash at: time::Transaction::xa_remote_rollback - Assertion failed: is_global_coordinator_\r\n - Bug: 223866 - [SQLDBC] Include original value in conversion failure situations\r\n - Bug: 223751 - [SQLDBC] Remove RANGE_RESTRICTION test against CE server\r\n - Bug: 192870 - [SQLDBC] Support returning TIMESTAMP with 'T' seperator instead of space (like ISO 8601)\r\n\r\n## Version 2.4.144 (HANA 2.0 SPS03 Rev 37.02)\r\n\r\n### Changes:\r\n\r\n - Bug: 217819 - [node] getColumnInfo on stored procedure result: accumulates column infos after multiple executions\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 223345 - [SQLDBC] Adjust/remove SQLDBC tests on master due to XSEngine removal\r\n - Bug: 218913 - [SQLDBC] Support HTTP CONNECT Proxy connections\r\n - Bug: 218677 - [SQLDBC] Server-side WebSocket pings disconnect client\r\n\r\n## Version 2.4.142 (HANA 2.0 SPS04 Rev 41)\r\n\r\n### Changes:\r\n\r\n - Bug: 221035 - [node] Wrong results for Node.js client with option rowsAsArray\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 221067 - [SQLDBC] Detect when connected to a cloud edition server\r\n - Bug: 220794 - [SQLDBC] Enable frequent TCP keepalive probes\r\n - Bug: 218956 - [SQLDBC] SQLDBC pass to a null value to hana server\r\n - Bug: 218917 - [SQLDBC] Error -10333 when SAPR3 prepare call with IN ITAB\r\n - Bug: 196975 - [SQLDBC] UCS-2 non-BMP (U+10000) conversions to UTF-8 are incorrect\r\n - Bug: 177745 - [SQLDBC] improve SQLDBC handling of exceptions and OOM\r\n\r\n## Version 2.4.139 (HANA 2.0 SPS03 Rev037.01)\r\n\r\n### Changes\r\n\r\n - Bug: 219118 - [node] Improve performance of fetching data from date, time, timestamp columns\r\n - Bug: 217395 - [node] need a way to check if output parameter is null and get its length\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 215654 - [SQLDBC] Invalid number of row counts returned (0, expected 4)\r\n - Bug: 213867 - [SQLDBC] Columns which appear after the encrypted column in the SELECT list do not have the correct length\r\n - Bug: 117546 - [SQLDBC] DBACOCKPIT SQLDBC trace integration issue\r\n\r\n## Version 2.4.126 (SP04 Takt 12, Rev 40)\r\n\r\n### Changes\r\n\r\n - Bug: 210467 - [node] Value of inout clob procedure parameter lost\r\n - Bug: 210265 - [node] HanaProcStatement does not close result sets\r\n - Bug: 208719 - [node] Batch inserts with null value leading to data corruption\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 212792 - [SQLDBC] Unexpected numeric overflow\r\n - Bug: 212269 - [SQLDBC] Support 0x80 Proxy Authentication for Cloud Connector\r\n - Bug: 210821 - [SQLDBC] Client crashes during connect after self-assignment of SQLDBC_ConnectProperties object\r\n - Bug: 210818 - [SQLDBC] Access violation while inserting empty string\r\n - Bug: 210341 - [SQLDBC] The SP04 converter for INTEGRAL to ASCII conversion is almost 2 times slower than the SP03 one\r\n - Bug: 210340 - [SQLDBC] The SP04 converter for REAL to ASCII conversion is 3 times slower than the SP03 one\r\n - Bug: 208245 - [SQLDBC] FDA partition-aware routing ignored partition information update\r\n - Bug: 201548 - [SQLDBC] secondary connections need to send SessionContext - required for workload replay\r\n - Bug: 177745 - [SQLDBC] improve SQLDBC handling of exceptions and OOM\r\n\r\n\r\n# Hana Client 2.3.x Drivers\r\n\r\n\r\n## Version 2.3.152\r\n\r\n### Changes\r\n\r\n - Bug: 214413 - [node] NVARCHAR columns truncated by Connection.exec\r\n - Bug: 210467 - [node] Value of inout clob procedure parameter lost\r\n - Bug: 210265 - [node] HanaProcStatement does not close result sets\r\n - Bug: 200139 - [node] Segmentation fault errors in Node.js client\r\n - Bug: 193735 - [node] executeBatch incorrectly inserting invalid data\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 212269 - [SQLDBC] Support 0x80 Proxy Authentication for Cloud Connector\r\n - Bug: 210818 - [SQLDBC] Access violation while inserting empty string\r\n - Bug: 208370 - [SQLDBC] SP03/04 is 10 times slower than SP02 on fetching data from numeric columns when the data is bound with CHAR\r\n - Bug: 208245 - [SQLDBC] FDA partition-aware routing ignored partition information update\r\n\r\n## Version 2.3.144\r\n\r\n### Changes\r\n\r\n - Bug: 170890 - [node] Feature request: Introduce a way to configure query timeout\r\n - Bug: 208719 - [node] Batch inserts with null value leading to data corruption\r\n - Bug: 207730 - [node] Data corruption (decimal data type) with execBatch\r\n - Bug: 202061 - [node] nodejs is killed by @sap/hana-client\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 212269 - [SQLDBC] Support 0x80 Proxy Authentication for Cloud Connector\r\n - Bug: 209416 - [SQLDBC] Much slower to fetch a value from a bool column than from a tinyint column\r\n - Bug: 207692 - [SQLDBC] [dbcapi] SQL strings are always assumed to be ASCII encoding\r\n - Bug: 205486 - [SQLDBC] Implicit XA join at prepare time\r\n - Bug: 204378 - [SQLDBC] Big endian client or server corruption during range partitioning\r\n - Bug: 180821 - [SQLDBC] improve sqldbc tracing\r\n\r\n## Version 2.3.134\r\n\r\nNote: This version includes node 10 support.\r\n\r\n### Changes\r\n\r\n - Bug: 207088 - [node] hana-client throws error when inserting UTF8 value into NCLOB column\r\n - Bug: 203323 - [node] crash in ~executeBaton\r\n - Bug: 202025 - [node] crash in hana-client master snapshot during HRTT-service component tests\r\n - Bug: 201692 - [node] GetParameterValues() may return different values for queries executed using exec and execQuery\r\n - Bug: 200139 - [node] Segmentation fault errors in Node.js client\r\n - Bug: 197590 - [node] AddressSanitizer: heap-buffer-overflow in statement.cpp:644\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 206695 - [SQLDBC] Always send ClientInfo APPLICATION / APPLICATIONUSER in ClientInfo\r\n - Bug: 205558 - [SQLDBC] Cannot set isolation level as described in docs\r\n - Bug: 205486 - [SQLDBC] Implicit XA join at prepare time\r\n - Bug: 205420 - [SQLDBC] SQL code: -10923 occurred while accessing table USR01\r\n - Bug: 202117 - [SQLDBC] Websocket connection to port with no listener hangs on Windows\r\n - Bug: 201991 - [SQLDBC] Change limit of READLOBREQUEST requested chunk size to be at most packet size - 1KB instead of 1KB*124\r\n - Bug: 201333 - [SQLDBC] Always cache cookies for all authentication methods\r\n - Bug: 201180 - [SQLDBC] Coverity failure - CID 175085 - dereference after null check\r\n - Bug: 199762 - [SQLDBC] result set and parameters incorrect after prepare, alter, routed execute\r\n - Bug: 197565 - [SQLDBC] Support 32bit fetchsize\r\n - Bug: 188197 - [SQLDBC] specifying hosts for multiple unrelated systems can cause issues for multiple connections\r\n\r\n## Version 2.3.130\r\n\r\n### Changes\r\n\r\n - Bug: 201050 - [node] HANA client crashes if ResultSet is closed while async next is running\r\n - Bug: 198780 - [node] Prepare happens twice for same statement execution (non distributed), impacts performance\r\n - Bug: 198599 - [node] empty DATE & TIMESTAMP causes crash/memory leak with prepared statements\r\n - Bug: 198300 - [node] executeQuery crashes if no parameters passed in\r\n - Bug: 197989 - [node] Node crashes with core dumps were found\r\n - Bug: 197914 - [node] nodejs application server memory increases even after drop and disconnect\r\n - Bug: 196801 - [node] Node driver crashes in getParameterValue\r\n - Bug: 186681 - [node] Fatal error when fetching a CLOB value of ~500MB\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 199481 - [SQLDBC] Cursor holdability not correctly sent to the server\r\n - Bug: 199218 - [SQLDBC] Certain years cause DATE values to be incorrectly returned as NULL with DFV=1\r\n - Bug: 197444 - [SQLDBC] CSE test failures report misleading error messages\r\n - Bug: 197279 - [SQLDBC] Unable to lock newly created table with active distributed statement routing\r\n - Bug: 188197 - [SQLDBC] specifying hosts for multiple unrelated systems can cause issues for multiple connections\r\n - Bug: 184551 - [SQLDBC] fix Performance regression\r\n - Bug: 183778 - [SQLDBC] CESU-8 -> UTF-8 conversions don't work, CESU-8 isn't used in the SQLDBC protocol\r\n - Bug: 163009 - [SQLDBC] SQLDBC client can send out-of-date StatementContext resulting in server internal errors or incorrect transaction behaviour\r\n\r\n## Version 2.3.123\r\n\r\n### Changes\r\n\r\n - Bug: 196993 - [node] - Segmentation fault in stmt.getRowStatus()\r\n - Bug: 196811 - [node] - AddressSanitizer: heap-use-after-free in getResultSet()\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 196981 - [SQLDBC] - Remove <CURRENT WRITE POSITION> at the end of trace file\r\n - Bug: 196540 - [SQLDBC] - SystemReplicationIntegrationTest testReconnectBehaviour, testBackOffTimerRetry sporadic failures\r\n - Bug: 195187 - [SQLDBC] - enabling autocommit with write txn \"Invalid transaction state\" error\r\n - Bug: 197118 - [SQLDBC] - Crash in SQLDBC::Connection::updateTopology\r\n - Bug: 189159 - [SQLDBC] - Fix \"-10429: Failed to open the key store file. Opening of the Keystore failed.\"\r\n\r\n## Version 2.3.122\r\n\r\n### Changes\r\n\r\n - Bug: 179616 - [node] - Stream.createStatement does not support parameter bindings with an array of arrays\r\n - Bug: 194801 - [node] - NCLOB output parameter truncated\r\n - Bug: 191764 - [node] - crash in hana Node driver\r\n - Bug: 178638 - [node] - Expose named constants for Isolation Level\r\n - Bug: 186986 - [node] - HanaProcStatement: add possibility to have ColumnInfo on output tables (both output table parameters and SELECT results)\r\n - Bug: 183202 - [node] - Column info does not distinguish between column name and alias\r\n\r\n## Version 2.3.121\r\n\r\n### Changes\r\n\r\n - Bug: 185046 - [node] - Batch insert: specify which group has been inserted successfully and which not\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 182656 - [SQLDBC] - [Decimal38, DFV=8] Performance regression (30%) in benchCppPsaloadBarrier.py (elapsed time)\r\n\r\n## Version 2.3.120\r\n\r\n### Changes\r\n\r\n - Bug: 194578 - [node] - @sap/hana-client could not be installed on Mac OS X 10.13.6 - node-gyp build fatal error: 'thread' file not found\r\n\r\n## Version 2.3.119 (Rev 33)\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 189502 - [SQLDBC] - core file produced if the OS400 version of R3trans connects to the database using the HDB client\r\n\r\n## Version 2.3.118-ms\r\n\r\n### Changes\r\n\r\n - Bug: 190151 - [node] - node driver returns incorrect values for large DECIMAL and SMALLDECIMAL types\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 194315 - [SQLDBC] - Crash at PreparedStatement::getObject() if passed negative param-index\r\n - Bug: 191790 - [SQLDBC] - Wrong function name when using TO_VARCHAR function in GENERATED ALWAYS AS clause\r\n - Bug: 193427 - [SQLDBC] - Non terminated input string access overflow\r\n\r\n## Version 2.3.117 (Rev 33 RC3)\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 189511 - [SQLDBC] - Hierarchy Warning as error\r\n\r\n## Version 2.3.115 (Rev 33 RC2)\r\n\r\n### Changes\r\n\r\n - Bug: 187823 - [node] - Error message from query is truncated\r\n - Bug: 186963 - [node] - Procedures, output parameters with unicode characters not readable\r\n - Bug: 186399 - [node] - Error when using DDL Statement in dynamic SQL\r\n - Bug: 184557 - [node] - node driver memory leak\r\n - Bug: 186462 - [node] - executeBatch doesn't return error if callback function isn't provided \r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 184711 - [SQLDBC] Vulnerabilities in trace files\r\n - Bug: 186830 - [SQLDBC] Coverity 33397, 171110\r\n\r\n## Version 2.3.112\r\n\r\nNote: This version contains the dependent module debug@3.1.0 and ms@2.0.0 to address security issues in those modules.\r\n\r\n### Changes\r\n\r\n - Bug 184286 - Coverity CID 169674 - Resource leak in object\r\n - Bug 182045 - Preparing SQL statement returns error \"Unhandled SQLDBC type '32'\"\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug 189083 - FDA fetch next after warning\r\n - Bug 189856 - error when AA hint based routing to down secondary or bad VolumeIds\r\n - Bug 184710 - [hdbkeystore] Imported key pairs are not validated\r\n - Bug 172302 - conversion error on bulk execute should fail all rows to match server behavior\r\n - Bug 184128 - [SQLDBC] Decrypted data and keys are not wiped\r\n - Bug 186707 - HE2E:H2SP4:Trying to encrypt a decimal column gets error\r\n\r\n## Version 2.3.108\r\n\r\n### Changes\r\n\r\n - Bug: 183789 - hana_client crashes when single sign-on attempted\r\n - Bug: 186603 - Crash in hana_node driver when using ResultSet.prototype.getData() for a NULL value\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 185978 - Invalid numeric value for parameter/column (3) source type DECIMAL, target type FIXED16\r\n - Bug: 184670 - Batch insert with decimals does not work\r\n - Bug: 186968 - SQLDBC-based clients on Windows and 32-bit Linux platforms use an invalid value for a Randomly encrypted NULL for a TIMESTAMP column\r\n - Bug: 172302 - conversion error on bulk execute should fail all rows to match server behavior\r\n - Bug: 183982 - [SQLDBC] Allow override of APPLICATION / APPLICATIONUSER\r\n - Bug: 185435 - SQL Error \"-10901 No space left in request packet\" during FOR ALL ENTRIES FDA\r\n - Bug: 182050 - large clientinfo that fills packet causes client crash or failures\r\n - Bug: 184700 - node.js driver ignored databasename connect parameter\r\n - Bug: 184107 - [SQLDBC] WebSockets does not have a thread to return responses for ping/pong\r\n - Bug: 165561 - Netweaver workprocess crashes from SQLDBC\r\n\r\n## Version 2.3.106\r\n\r\n### Changes\r\n\r\n - Bug: 184700 - node.js driver ignored databasename connect parameter\r\n\r\n## Version 2.3.102\r\n\r\n### Changes\r\n\r\n - Bug: 184700 [nodejs] - Replace SQLDBC connection parameter serverDb with databasename\r\n - Bug: 184409 [nodejs] - HXE: SQL error while accessing data base explorer from cockpit UI\r\n - Bug: 182956 [SQLDBC] - SQLDBC should clear all write lobs before silent re-execution for stale metadata\r\n - Bug: 183012 [SQLDBC] - Support siteType connection property in the SQLDBC driver.\r\n - Bug: 183521 [SQLDBC] - StatementContext FlagSet now tests appropriate bit for A/A fallback\r\n - Bug: 180790 [SQLDBC] - Add socket timeout support\r\n - Bug: 182950 [SQLDBC] - Implement support for Client-side Encrypted Decimal38\r\n - Bug: 182230 [SQLDBC] - dfv8 error source expectation change\r\n - Bug: 182476 [SQLDBC] - Fetching a BOOLEAN value as string Host Type returns \"TRUE\" or \"FALSE\" instead of \"1\" or \"0\"\r\n - Bug: 181236 [nodejs] - Executing a DELETE statement returns undefined if the data doesn't exist, and make default CharSet=UTF-8 for node driver\r\n\r\nThe above bug fix also fixes the following bug reports:\r\n - Bug: 183239 - Unicode problem - HANA node.js client return wrong results \"???\"\r\n - Bug: 183364 - Error: result set has not been fetched yet when selecting an NCHAR column\r\n - Bug: 183368 - Unicode characters not readable when using a stream\r\n\r\n## Version 2.3.99\r\n\r\n### Changes\r\n\r\n - Bug: 172007 - WebSockets cannot reliably detect socket failures for reconnect logic \r\n - Bug: 180692 - enable TLS 1.2 in openssl versions pre 1.1.0\r\n - Bug: 181793 - [SQLDBC] WebSockets do not support ping/pong for DBaaS\r\n\r\n## Version 2.3.92-rel\r\n\r\n### Changes\r\n\r\n - Bug: 179911 - Array type returned by Connection.execute is truncated\r\n - Bug: 179717 - node.js client crashes the app if a JS error happens in parallel\r\n - Bug: 179718  - a procedure call via createProcStatement doesn't include the object for scalar results\r\n - Bug: 178819 - Cannot fetch spatial types using stream\r\n\r\n## Version 2.3.78\r\n\r\n### Changes\r\n\r\n - Bug: 178841  - Resultset.getValues returns incorrect data for double/real/float\r\n\r\n## Version 2.3.75\r\n\r\n### Changes\r\n\r\n - Bug: 178226 - MDX SELECT returns no results\r\n\r\n## Version 2.3.67\r\n\r\nNote: This version contains HappyMake-built binaries for Linux x64.\r\n\r\n### Changes\r\n\r\n - Bug: 176354 - prepared-statement.exec doesn't support parameter bindings with an array of arrays\r\n - Bug: 176359 - result objects of procedure calls are different in node-hdb vs. hana-client\r\n - Bug: 176361 - node-hdb treats undefined in parameters bindings as null, hana-client reports an error\r\n - Bug: 176397 - Process exits unexpectedly when 'setWarningCallback' is used\r\n - Bug: 174396 - DVF8 SQLDBC_SQLTypes for ODBC and DBCAPI\r\n\r\n## Version 2.3.65-ms\r\n\r\n### Changes\r\n\r\n - Bug: 175368 - Authentication fails if password contains a semicolon (;)\r\n - Bug: 176053 - instanceNumber connection property not supported\r\n - Bug: 175381 - [DBCAPI] Lob data could be truncated\r\n - Bug: 174309 - [SQLDBC] detect ResultSetPart overrun (DEV_ASSERTS in ResultDataIterator needed to be converted to runtime errors to prevent undefined behavior due to incorrect RESULTSET parts)\r\n\r\n## Version 2.3.63-ms\r\n\r\n### Changes\r\n\r\n - Bug: 175602 - Error when inserting zero-length stream into HANA through node client\r\n - Bug: 175368 - Authentication fails if password contains a semicolon\r\n - Bug: 175712 - Intermittent failures when inserting blobs into HANA through streams\r\n\r\n## Version 2.3.59-ms\r\n\r\n### Changes\r\n\r\n - Bug: 170723 - crash in dbcapi_get_function_code\r\n - Bug: 170934 - Failed Client Conti: node.js giving regex_error\r\n - Bug: 174161 - [DBCAPI] - DBCAPI reuses previous ResultSet bindings when fetching more results for a multi-resultset query\r\n - Bug: 173705 - garbage collector causes sporadic crashes\r\n - Enhancement: PPC BE support\r\n - Enhancement: Node 8 support\r\n\r\n## Version 2.3.41\r\n\r\n### Changes\r\n\r\n - Bug: 169885 - Connection pooling\r\n\r\n## Version 2.3.40\r\n\r\n### Changes\r\n\r\n - Bug: 169668 - wrong value returned from ResultSet.getValue(N)\r\n - Bug: 169674 - Main thread blocks when destroying a statement through garbage collector\r\n - Bug: 168663 - Cannot unset client info\r\n\r\n## Version 2.3.39 (Nexus Release, Takt5)\r\n\r\n### Changes\r\n\r\n - Bug: 160073 - Cannot create TLS-encrypted connection using certificate string\r\n\r\n## Version 2.3.38\r\n\r\n### Changes\r\n\r\n - Bug: 167516 - Crash if integer input parameter is given an empty string\r\n - Bug: 167524 - Crash when iterating an empty result set or a result set is not fully consumed\r\n - Bug: 167504 - No way to specify multiple hosts for connection\r\n - Bug: 167517 - Data type 53 incorrect in TypeCode.js\r\n - Bug: 167531 - Cannot determine if a Connection is connected\r\n - Bug: 167112 - Streaming API -- insert statement returns \"undefined\" result\r\n\r\n## Version 2.3.31\r\n\r\n### Changes\r\n\r\n - Bug: 162268 - statement options are not supported in statement.exec\r\n - Bug: 165051 - Coverity CID 140729 - Dereference before null check\r\n\r\n## Version 2.3.28\r\n\r\n### Changes\r\n\r\n - Bug: 163582 - MDX SELECT is not handled properly\r\n\r\n## Version 2.3.27\r\n\r\n### Changes\r\n\r\n - Bug: 163070 - clientsBarrier.seq fails - node4 test crashes\r\n - Bug: 163236 - Failed Client Conti: NodeJS crashing on master\r\n - Bug: 163374 - node driver returns incorrect numbers for large BIGINT\r\n - Bug: 163375 - node driver returns incorrect unicode strings for NCLOB\r\n\r\n## Version 2.3.23\r\n\r\n### Changes\r\n\r\n - Bug: 162924 - dbcapi crashes when fetching multiple resultsets\r\n\r\n## Version 2.3.21 (Nexus Release, Takt 3, npm.sap.com)\r\n\r\n### Changes\r\n\r\n - Bug: 162265 - end() is not available out-of-the-box\r\n\r\n\r\n\r\n# Hana 2 SP02 Drivers\r\n\r\n\r\n## Version 2.2.64\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 181384 - [SQLDBC] - LOB data got lost in batch mode if the lob data length greater than a network packet size\r\n - Bug: 182139 - [SQLDBC] - Error -10922 (200501) Write transaction already started on other connection in ABAP report\r\n - Bug: 180790 - [SQLDBC] - SDA query failure due to connection timeout error -10807 (Add socket timeout support)\r\n - Bug: 155895 - [SQLDBC] - Insert of timestamps as strings behaves different between cursor.execute() and cursor.executemany()\r\n - Bug: 182476 - [SQLDBC] - Fetching a BOOLEAN value as string Host Type returns \\\"TRUE\\\" or \\\"FALSE\\\" instead of \\\"1\\\" or \\\"0\\\"\r\n\r\n## Version 2.2.62\r\n\r\n### Changes\r\n\r\n - Bug: 178226 - [node] - MDX SELECT returns no results\r\n - Bug: 179911 - [node] - Array type returned by Connection.execute is truncated\r\n - Bug: 176397 - [node] - Process exits unexpectedly when 'setWarningCallback' is used\r\n - Bug: 175459 - [SQLDBC] - error message improvement for numeric overflow\r\n - Bug: 178841 - [node] - Resultset.getValues returns incorrect data for double/real/float\r\n - Bug: 178680 - [SQLDBC] - Access violation while batch-inserting BLOB-placeholder in expression\r\n - Bug: 180561 - [SQLDBC] - BasisClient lacks CRASH_ASSERT_* macros\r\n - Bug: 178819 - [node] - Cannot fetch spatial types using stream\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 175459 - [SQLDBC] - error message improvement for numeric overflow\r\n - Bug: 178680 - [SQLDBC] - Access violation while batch-inserting BLOB-placeholder in expression\r\n - Bug: 180561 - [SQLDBC] - BasisClient lacks CRASH_ASSERT_* macros\r\n\r\n## Version 2.2.57\r\n\r\n### Changes\r\n\r\n - Bug: 175712 - [node] - Intermittent failures when inserting blobs into HANA through streams\r\n - Bug: 173705 - [node] - garbage collector causes sporadic crashes\r\n - Bug: 175368 - [node] - Authentication fails if password contains a semicolon (;)\r\n - Bug: 176053 - [node] - instanceNumber connection property not supported\r\n - Bug: 169885 - [node] - Connection pooling\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 174651 - [SQLDBC] - Network compression assertions on non-rel builds on distributed system\r\n - Bug: 168750 - [SQLDBC] - Many transactions were blocked by record locks right after secondary replication was registered, and record locks were never released\r\n - Bug: 176544 - [SQLDBC] - testJtClientsDistributed table placement should be default\r\n\r\n## Version 2.2.53\r\n\r\n### Changes\r\n\r\n - Bug: 170723 - [node] - crash in dbcapi_get_function_code\r\n - Bug: 169885 - [node] - Connection pooling\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 170954 - [SQLDBC] - The second part can be off by a second for the timestamp output param in a procedure call\r\n - Bug: 171387 - [SQLDBC] - Trace content removal too aggressive\r\n - Bug: 174788 - [SQLDBC] - Statement routing not working for batch updates if 1-level part. key in the set-clause\r\n - Bug: 168697 - [SQLDBC] - DLL Autocommit setting will get lost on reconnect\r\n - Bug: 163336 - [SQLDBC] - General error;600 failed routed execution: anchor is switched in runtime: line 0 col 0 (at pos 0) after topology changed on SDA source site\r\n - Bug: 171093 - [SQLDBC] - SQL level tracing should imply DISTRIBUTION tracing but does not\r\n - Bug: 174161 - [SQLDBC] - DBCAPI reuses previous ResultSet bindings when fetching more results for a multi-resultset query\r\n\r\n## Version 2.2.39 (included in Rev 24 ; 2.00.024)\r\n\r\n### Changes\r\n\r\n - Bug: 169668 - wrong value returned from ResultSet.getValue(N)\r\n - Bug: 169674 - Main thread blocks when destroying a statement through garbage collector\r\n - Bug: 168663 - Cannot unset client info\r\n\r\n## Version 2.2.37\r\n\r\n### Changes\r\n\r\n - Bug: 160073 - Cannot create TLS-encrypted connection using certificate string\r\n - Bug: 167516 - Crash if integer input parameter is given an empty string\r\n - Bug: 167524 - Crash when iterating an empty result set or a result set is not fully consumed\r\n - Bug: 167504 - No way to specify multiple hosts for connection\r\n - Bug: 167517 - Data type 53 incorrect in TypeCode.js\r\n - Bug: 167531 - Cannot determine if a Connection is connected\r\n - Bug: 160073 - Cannot create TLS-encrypted connection using certificate string\r\n - Bug: 167112 - Streaming API -- insert statement returns \"undefined\" result\r\n\r\n## Version 2.2.35 (included in Rev 23 ; 2.00.023)\r\n\r\n### Changes\r\n\r\n - Bug: 162268 - statement options are not supported in statement.exec\r\n - Bug: 165051 - Coverity CID 140729 - Dereference before null check\r\n - Bug: 163582 - MDX SELECT is not handled properly\r\n - Bug: 163070 - clientsBarrier.seq fails - node4 test crashes\r\n - Bug: 163236 - Failed Client Conti: NodeJS crashing on master\r\n\r\n## Version 2.2.34\r\n\r\n### Changes\r\n\r\n - Bug: 163374 - node driver returns incorrect numbers for large BIGINT\r\n - Bug: 163375 - node driver returns incorrect unicode strings for NCLOB\r\n - Bug: 160968 - Failed Client Conti: ADO.NET - ColumnMapping tests fail sporadically but often\r\n\r\n## Version 2.2.31\r\n\r\n### Changes\r\n\r\n - Bug: 162924 - dbcapi crashes when fetching multiple resultsets\r\n\r\n## Version 2.2.28 (included in 2.00.022)\r\n\r\n### Changes\r\n\r\n - Bug: 162265 - end() is not available out-of-the-box\r\n - Bug: 160083 - Writing a stream from an HTTP IncomingMessage hangs\r\n - Bug: 160422 - Writing a stream that is not an instance of Readable crashes\r\n - Bug: 156392 - crash in ResultSet.getValues()\r\n - Bug: 159735 - Need to know total number of rows returned without fetching each one\r\n - Bug: 159649 - crash in getInputParameters\r\n - Bug: 160416 - Need a way to close a stream early\r\n\r\n## Version 2.2.27\r\n\r\n### Changes\r\n\r\n - Bug: 154982 - clients.seq fails - node tests on Windows fail with RC = 65280\r\n - Bug: 156105 - executing procedure call with CLOB output parameter very slow\r\n - Bug: 156119 - How to insert data from a stream\r\n - Bug: 150587 - cannot call stored procedures with named parameters\r\n\r\n## Version 2.2.25 (included in 2.00.021)\r\n\r\n### Changes\r\n\r\n - Bug: 156388 - Readable streams are not implemented correctly\r\n - Bug: 156389 - ResultSet.close() is not available as an async method\r\n - Bug: 156133 - Cannot determine if a statement was dropped\r\n - Bug: 156146 - INOUT parameter gets wrong value and type, depending on input parameter type\r\n - Bug: 155535 - If no parameters passed to stmt.execQuery, cannot get output parameter values\r\n - Bug: 156386 - ResultSet.getValues() crashes if connection was closed\r\n - Bug: 153647 - wrong number of arguments in callback from exec for DDL\r\n - Bug: 153657 - passing too many parameters should return an error\r\n - Bug: 153674 - getParameterValue for boolean type returns invalid value\r\n\r\n## Version 2.2.24\r\n\r\n### Changes\r\n\r\n - Bug: 153503 - params for statement.exec (and connection.exec) should not include output parameters\r\n - Bug: 153506 - Cannot get value for output parameter if no input param provided\r\n - Bug: 153656 - cannot get value from inout parameter\r\n - Bug: 153683 - setClientInfo() doesn't work as expected\r\n\r\n## Version 2.2.22 (included in 2.00.020)\r\n\r\n### Changes\r\n\r\n - Bug: 152564 -  Error doesn't have stack trace\r\n\r\n## Version 2.2.20 (initial version)\r\n\r\n### Changes\r\n\r\n - Bug: 152218 - wrong number of arguments in callback of connect\r\n - Bug: 150564 - \"No more result\" error\r\n - Bug: 150561 - wrong number of arguments in callback from commit and rollback\r\n - Bug: 150546 - crash in Connection::setClientInfo()\r\n - Bug: 150165 - getParameterValue doesn't work\r\n - Bug: 148776 - node.js client crashes when used in generic-pool with connections in parallel\r\n - Bug: 148128 - Exception from ExecuteReader when executing select with long case block\r\n - Bug: 145975 - warnings are (sometimes) fatal\r\n - Bug: 145953 - APIs are too picky\r\n - Bug: 145974 - Column metadata unavailable outside of the streaming interface\r\n - Bug: 145971 - Need isClosed() function on a streaming ResultSet\r\n - Bug: 145970 - need access to parameter metadata\r\n - Bug: 145976 - data type codes do not align with protocol/node-hdb\r\n"},{"name":"hana-database-explorer","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Database Explorer Integration for Visual Studio Code\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).","changelog":"## 1.7.0\r\n\r\n### New Features\r\n- Database selection in the SQL console is now possible across database connection types (local connections, SAP HANA Database Explorer connections).\r\n- SQL files can be opened directly in the SQL console via \"Open in SAP HANA SQL Console\" from the context menu.\r\n\r\n### Fixes\r\n- Auto-save was not working correctly in the SQL console under certain circumstances.\r\n- When editing a local database connection the database information could be incomplete.\r\n- Connections to SAP HANA Database Explorer databases are kept open to reduce the number of reconnects.\r\n- SAP HANA Data Lake Files connections are displayed correctly in the database list.\r\n\r\n## 1.6.0\r\n\r\n### New Features\r\n- The SQL console can execute statements with parameters. When a statement with parameters is encountered, a new tab is shown that allows the user to enter the parameter values and then execute the parameterized statement.\r\n- The current connection's auto-commit state can be set from the SQL console via an icon in the menu bar.\r\n- The name and full name (schema + object name) of database objects can be copied to the clipboard via the context menu of the database objects in the catalog browser.\r\n- A CREATE statement can be generated for database objects via the context menu of the database objects in the catalog browser. By default the CREATE statement will be opened in a new SQL console. As an additional option the CREATE statement can also be copied to the clipboard.\r\n\r\n### Fixes\r\n- The font size of the SQL console can be set via the setting \"editor.fontSize\"\r\n- Scalar results were not displayed if a statement returned additional result sets\r\n- The database list displays folders defined for SAP HANA Database Explorer connections\r\n- The database list displays SAP HANA Data Lake connections in the SAP HANA Database Explorer connection list\r\n- Performance optimizations for creating database connections\r\n\r\n## 1.5.0\r\n\r\n### New Features\r\n- The extension can now be used with local database connections on ARM platforms. Note that the limitations of the SAP HANA \"hdb\" Node.js client apply, i.e. SAP HANA User Store connections are not available\r\n\r\n### Fixes\r\n- Queries that return multiple result sets are displayed correctly\r\n- The SQL console asks whether to save the current content before opening a file\r\n- The SQL console auto-save behavior can be controlled via the Visual Studio Code setting \"files.autoSave\". Supported modes are \"off\" and \"afterDelay\". All other values default to \"afterDelay\".\r\n- The list of SAP HANA Database Explorer connections more closely reflects the list shown in SAP HANA Database Explorer\r\n- Removed a superflous button in the file overwrite confirmation dialog\r\n- The SQL console respects the setting \"SAP HANA Database Explorer\" > \"Max Sql Result Size\" for local connections\r\n\r\n## 1.4.0\r\n\r\n### New Features\r\n- The catalog browser shows the list of objects. The objects can be filtered by schema. The (filtered) list of objects can be further searched via the standard Visual Studio Code functionality for tree views\r\n- The SAP HANA Database Explorer on the SAP Business Technology Platform can be opened from each SAP HANA Database Explorer connection\r\n- The SQL console can open content from and save content to files\r\n- The list of SAP HANA Database Explorer connections can be hidden via the setting \"SAP HANA Database Explorer\" > \"Show Database Explorer Connections\"\r\n- Local connections can be added using credentials from the SAP HANA User Store, if installed\r\n\r\n### Fixes\r\n- Fixed a warning that could occur when adding a new local database connection\r\n- Fixed an issue that could cause local encrypted connection to fail if no certificate was provided\r\n- The deletion of local database connections has to be confirmed\r\n- The extension loads correctly on ARM platforms including Apple M1; note that local database connections will not be available on these platforms\r\n\r\n## 1.3.4\r\n\r\n### Fixes\r\n- Better error handling if the command \"cf.login\" does not exist\r\n\r\n## 1.3.0\r\n\r\n### New Features\r\n- The extension now provides an SQL console that can be used to execute SQL directly from the IDE\r\n\r\n## 1.2.0\r\n\r\n### Fixes\r\n- Update dependencies\r\n\r\n## 1.1.0\r\n\r\n### Fixes\r\n- Update dependencies\r\n\r\n## 1.0.0\r\n\r\nInitial release"},{"name":"hana-eim-sditools-vscode","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Smart Data Integration Editor\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/cc7ebd3f344a4cdda20966a7617f52d8/latest/en-US) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n"},{"name":"hana-performance-tools","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA SQL Analyzer for Visual Studio Code\r\n\r\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\r\n\r\nHANA SQL Analyzer for Visual Studio Code is a brand new software that we are developing from the scratch to help users analyze the performance of HANA SQL queries. This repository will be the only single source for the development plan, code, development status, release information, downloadable package, analysis know-hows, and bug reporting.\r\n\r\n## Why Another SQL Analysis Tool?\r\n\r\nFirst of all, you might have a question why we are developing another tool in addtion to the existing PlanViz in Studio and SQL Analyzer in HANA Cockpit. Some answers are:\r\n\r\n- Bascially it is to make developers happier (developer experience).\r\n- With the deprecation of Studio, we couldn't bring new features anymore to PlanViz in Studio.\r\n- New WebIDE (official name: [SAP Business Application Studio](https://help.sap.com/viewer/p/SAP%20Business%20Application%20Studio)) is built on [Eclipse Theia](https://theia-ide.org/), which is based on [Visual Studio Code](https://code.visualstudio.com/), which is based on [Electron.js](https://electronjs.org/) new cross platform to build web-based desktop apps, which is based on Google Chrome(actually [Chromium](https://www.chromium.org/)) browser and [Node.js](https://nodejs.org/). So, VSCode extension app can be plugged into new WebIDE, which is aligned with new developer tooling strategy for both cloud and on-prem.\r\n- PlanViz has been built in 2011, and it required big refactoring to accomodate multiple SQL engines. We decided to build from the scratch for this major change.\r\n\r\n## Features\r\n\r\nSQL Analyzer for Visual Studio Code is still under heavy development. Here are some highlighted features:\r\n\r\n- Live connection support (Note: connection details will be stored in [SecretStorage](https://code.visualstudio.com/updates/v1_53#_secrets-api).)\r\n- Load multiple PLV files and keep the history\r\n- Visualize query plans in PLV into plan graph\r\n- Quick analysis support\r\n- Critical path visualization\r\n- Bookmark and sharing (Note: Personal data can be anonymized and the comments can be deleted by users.)\r\n- Recommendations\r\n- SQL Plan Execution Monitor for real-time analysis\r\n- Advanced UX\r\n\r\n## How To Install\r\n\r\n1. Install [Visual Studio Code](https://code.visualstudio.com) if not installed already (>= 1.53.0 is required because the extension is relying on the APIs from that version).\r\n1. Open VSCode and click Extensions tab (puzzle icon) from the left side menu bar\r\n1. Search for 'SAP HANA SQL Analyzer' and install Visual Studio Code Extension file (vsc-extension-sa-<ver>.vsix) of this new SQL Analyzer from [VSCode Marketplace](https://marketplace.visualstudio.com/items?itemName=SAPSE.vsc-extension-sa).\r\n1. Once the installation is completed, the new SQL Analyzer icon will be added in the left side menu.\r\n\r\n## How To Use\r\n\r\n1. Go to SQL Analyzer extension (by clicking the last extension icon from the left side menu)\r\n1. Click (+) icon from the top PLAN GRAPHS section in the left side panel.\r\n1. Select a PLV file from the file open dialog to show the visualized plan.\r\n\r\n## Documentation\r\n\r\n[SQL Analyzer Extension](https://help.sap.com/docs/HANA_SQL_ANALYZER) - SAP Help Portal\r\n\r\n## Feedbacks\r\n\r\nPlease provide your feedbacks thru \"SAP HANA SQL Analyzer <hana_sql_analyzer@sap.com>\"\r\n","changelog":"## 1.3.8\r\n\r\n### Fixes\r\n\r\n- Fixed a SQL Comparison issue of Plan Comparison Report\r\n- Stop/Start automatic data refresh works depends on the status of tab(select/hide/close)\r\n\r\n### 1.3.6\r\n\r\n- Support SQL Plan execution monitor\r\n- Improve planGraph layout\r\n- Enable skipping timeline in configuration\r\n\r\n### 1.3.4\r\n\r\n- Support real-time analysis\r\n- Support plan comparison report\r\n\r\n### 1.3.0\r\n\r\n- Improve layout algorithm\r\n- Upgrade timeline chart library to prevent vulnerability\r\n\r\n### 1.2.20\r\n\r\n- Fix plv parsing pausing issue when it has jeReduction plan\r\n\r\n### 1.2.16\r\n\r\n- Restore badge displaying, file exporting feature\r\n- Fix config panel option selection issue\r\n\r\n### 1.2.12\r\n\r\n- Replace parser from node-expat to sax\r\n- Enable column filter and search feature in operator list\r\n\r\n### 1.2.10\r\n\r\n- Supprot electron v13 for Mac\r\n\r\n### 1.2.8\r\n\r\n- Recover lost edges in specific cases\r\n\r\n### 1.2.4\r\n\r\n- Support electron v13 which is enabled from vscode 1.59\r\n\r\n### 1.2.2\r\n\r\n- Provide CPU Time based analysis for HEX Plan.\r\n- Support side panel to describe node/edge properties. Callout is deprecated\r\n- Auto expanding initial nodes when opening plv file.\r\n- Allow plv extension to export plangraph.\r\n- Support SessionVariable tag parsing. It will be shown in SQL pane.\r\n\r\n### 1.1.9\r\n\r\n- For VScode market place\r\n- -Update TimelineChart to handle multiple compile time that each innper plan has.\r\n- -Support file export of inner plan with communication data.\r\n- -Filter access table which shows outmost operator among same table name\r\n\r\n### 1.0.3\r\n\r\n- First official release\r\n"},{"name":"hana-project-explorer","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Project Explorer for Visual Studio Code\r\n\r\n## Installation\r\n\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\n\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"## 1.5.0\r\n\r\n### New Features\r\n\r\n- A database module can be bound to a user-provided service\r\n- A warning is displayed if services bound to a database modules do not match the current Cloud Foundry space. Users can choose to automatically unbind these services via a setting.\r\n\r\n### Fixes\r\n\r\n- Improved the UI for creating a new database connection\r\n- Improved validation of service instance names when creating a new database connection\r\n- Don't show services that are already bound when creating a new database connection\r\n\r\n## 1.4.0\r\n\r\n### New Features\r\n\r\n- Support Mode Export: for troubleshooting purposes database artifacts can be selectively exported to be analyzed individually\r\n- Create an hdbgrants file when adding a user provided service as a new database connection\r\n\r\n### Fixes\r\n\r\n- Show more information in the warning message when binding a module to a service\r\n- Fix an issue where the SAP HANA Database Explorer could not be opened\r\n\r\n## 1.3.0\r\n\r\n### New Features\r\n\r\n- The bind operation considers the schema name of the service to be bound to determine whether to show the confirmation dialogs\r\n\r\n### Fixes\r\n\r\n- An error message is shown if a service can't be bound because of an invalid MTA configuration\r\n\r\n## 1.2.0\r\n\r\n### New Features\r\n\r\n- Multiple services can be bound or unbound via a single button\r\n- A warning is displayed if .env files are not included in a module's .gitignore file\r\n\r\n## 1.1.0\r\n\r\n### New Features\r\n\r\n- A new option for binding to the default service is shown when binding a module to a service\r\n\r\n### Fixes\r\n\r\n- Binding a module works if the module name is different from the module path\r\n\r\n## 1.0.0\r\n\r\n### New Features\r\n\r\n- Warn when binding a module to an existing service\r\n- Add a setting for clearing the deployment log when a new deployment is started\r\n- The database connection details can be validated when adding a new database connection to a project\r\n- Confirm if auto-undeploy should be disabled when binding to an existing container\r\n- HDI configuration files are shown in the file tree\r\n\r\n### Fixes\r\n\r\n- Improved error message if a service already exists\r\n"},{"name":"hana-sqlscript-lsp","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# HANA SQLScript - Language Services\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).","changelog":"## 1.7.0\r\n\r\n### Fixes\r\n- Validation for hdbgrants files allows multiple grantor services\r\n\r\n## 1.6.0\r\n\r\n### New Features\r\n- JSON artifacts provide tag descriptions\r\n- JSON syntax validation for hdbtabledata and hdblogicalschemaconfig files\r\n\r\n### Fixes\r\n- Adjustments for the changed publisher of the SAP HANA Database Explorer extension\r\n\r\n## 1.5.0\r\n\r\n### Fixes\r\n- Add global object privileges to hdbrole JSON validation\r\n\r\n## 1.4.0\r\n\r\n### Fixes\r\n- Fix JSON validation of hdbgrants files\r\n- Always use the target container for code suggestions and validation if multiple containers are configured\r\n\r\n## 1.3.0\r\n\r\n### Fixes\r\n- Ignore control characters in SQLScript auto-completion\r\n- Improve auto-completion suggestions\r\n\r\n## 1.2.0\r\n\r\n### Fixes\r\n- Change settings section from \"SapHanaSqlScriptLsp\" to \"SAP HANA SQLScript LSP\"\r\n- Fix syntax validation and auto-completion for several JSON-based database artifacts\r\n- Add syntax highlighting for Document Store Collections (hdbcollection)\r\n\r\n## 1.1.0\r\n\r\n### New Features\r\n- JSON schema validation for JSON-based database artifacts\r\n\r\n### Fixes\r\n- Fixed SQLScript auto-completion when using SQLScript variables\r\n- Fix formatting of non-keyword literals\r\n\r\n## 1.0.0\r\n\r\nInitial release"},{"name":"hana-theme-vscode","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Theme for Visual Studio Code\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt)."},{"name":"hana-tooling-feature-toggles","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/hana-tooling-feature-toggles\r\nA node library for checking feature toggles. It gives you the option to create standard feature toggles and also feature toggles for Visual Studio Code commands.\r\n\r\n## Usage\r\n\r\n### Instantiation\r\n\r\nCreate an instance managing your feature toggles. The first parameter has to be either a JSON object or a string. The second parameter is the name of your Visual Studio Code extension (optional) if you want to enable / disable Visual Studio Code commands. The third parameter is a Visual Studio Code API object (optional).\r\nDepending on the type of your first parameter the module will\r\na) directly use the provided feature toggles.\r\nb) check if the string is stringified JSON.\r\nc) try to read the file at the provided path.\r\n\r\nPure Node.js:\r\n\r\n```javascript\r\n    // With JSON parameter.\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const myFeatures = {\r\n        \"featureToggles\": [\r\n            {\r\n                \"name\": \"helloworld\",\r\n                \"status\": \"released\"\r\n            }\r\n        ]\r\n    };\r\n    const FeatureToggleInstance = new FeatureToggles(myFeatures);\r\n```\r\n```javascript\r\n    // With string parameter.\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const FeatureToggleInstance = new FeatureToggles(__dirname + \"/../features.json\");\r\n```\r\n```javascript\r\n    // With stringified JSON parameter.\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const myFeatures = {\r\n        \"featureToggles\": [\r\n            {\r\n                \"name\": \"helloworld\",\r\n                \"status\": \"released\"\r\n            }\r\n        ]\r\n    };\r\n    const featureString = JSON.stringify(myFeatures);\r\n    const FeatureToggleInstance = new FeatureToggles(featureString);\r\n```\r\n\r\n\r\nVisual Studio Code:\r\n\r\n```javascript\r\n    const vscode = require( 'vscode' );\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const FeatureToggleInstance = new FeatureToggles(__dirname + \"/../features.json\", \"featuretoggletest\", vscode);\r\n```\r\n\r\nThe structure of your JSON object / file (first parameter) should be:\r\n\r\n```json\r\n{\r\n    \"featureToggles\": [\r\n        {\r\n            \"name\": \"helloworld\",\r\n            \"status\": \"released\"\r\n        },\r\n        {\r\n            \"name\": \"helloworlddisabled\",\r\n            \"status\": \"dev\"\r\n        },\r\n        {\r\n            \"name\": \"helloworldqa\",\r\n            \"status\": \"candidate\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nThe name is the unique identifier of your feature and the status determines whether it is in development, a candidate for release or a released feature.\r\n\r\n### API\r\n\r\n```javascript\r\n    FeatureToggles.isFeatureEnabled(\"featureToggleName\")\r\n```\r\n\r\nThis function checks if the feature 'featureToggleName' is enabled inside your specified .json file for feature toggles:\r\n- If the feature is enabled (for example 'helloworld' in the code above), it will return true.\r\n- If the feature is disabled (for example 'helloworlddisabled' in the code above), it will call _isFeatureQaEnabled(\"featureToggleName\") and return the internal result.\r\n\r\n```javascript\r\n    FeatureToggles.isCommandEnabled(\"featureToggleName\")\r\n```\r\n\r\nThis function should only be used if you are developing a Visual Studio Code extension and want to set feature toggles for commands. It will work like '.isFeatureEnabled(\"featureToggleName\")' with the difference that it will set a Visual Studio Code context variable which makes the command visible to the user.\r\n\r\nThe set Visual Studio Code context variable will be:\r\n```javascript\r\n    \"extensionName:featureToggleName\"\r\n```\r\n\r\nSo the package.json file of your extension should contain the following structure:\r\n\r\n```javascript\r\n\t\"contributes\": {\r\n\t\t\"commands\": [\r\n\t\t\t{\r\n\t\t\t\t\"command\": \"extensionName.commandName\",\r\n\t\t\t\t\"title\": \"Hello World (enabled)\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"menus\": {\r\n\t\t\t\"commandPalette\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"command\": \"extensionName.commandName\",\r\n\t\t\t\t\t\"when\": \"extensionName:featureToggleName1\"\r\n                }\r\n            ],\r\n            \"editor/context\": [\r\n                {\r\n\t\t\t\t\t\"command\": \"extensionName.commandName\",\r\n\t\t\t\t\t\"when\": \"extensionName:featureToggleName2\"\r\n\t\t\t\t}\r\n            ]\r\n        }\r\n    }\r\n```\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).","changelog":"## 1.1.0\r\n\r\n### New Features\r\n-  Support passing feature toggles as an object\r\n\r\n## 1.0.1\r\n\r\n### Fixes\r\n- Add type declarations\r\n\r\n## 1.0.0\r\n\r\nInitial release\r\n"},{"name":"hdbext","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/hdbext\r\n============\r\n\r\nThis package provides convenient functions on top of the *@sap/hana-client* module.\r\n\r\nThe [change log](CHANGELOG.md) describes notable changes in this package.\r\n\r\n## Usage\r\n\r\n```js\r\nvar hdbext = require('@sap/hdbext');\r\n```\r\n\r\n## API\r\n\r\n### createConnection(hanaConfig, callback)\r\n\r\nCreates a connection to a HANA database:\r\n\r\n```js\r\nvar hanaConfig = {\r\n  host     : 'hostname',\r\n  port     : 30015,\r\n  user     : 'user',\r\n  password : 'secret'\r\n};\r\nhdbext.createConnection(hanaConfig, function(error, client) {\r\n  if (error) {\r\n    return console.error(error);\r\n  }\r\n\r\n  client.exec(...);\r\n});\r\n```\r\n\r\nThe `hanaConfig` argument contains [database connection options](#database-connection-options) and [additional options](#additional-options).\r\nThe callback provides a connected `client` object.\r\n\r\nIf the application will be deployed on Cloud Foundry or XS Advanced, you can use _@sap/xsenv_ package to\r\nlookup the bound HANA service, like this:\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar hanaConfig = xsenv.cfServiceCredentials({ tag: 'hana' });\r\nhdbext.createConnection(hanaConfig, function(error, client) {\r\n  //...\r\n});\r\n```\r\n\r\n#### Database connection options\r\n\r\nThe HANA options provided to *@sap/hdbext* should be in the same format as expected by the *@sap/hana-client* package.\r\n\r\nFor convenience these properties set by the HANA service broker are also accepted:\r\n* `schema` - can be used instead of the `currentSchema` property of *@sap/hana-client*.\r\n* `db_hosts` - can be used instead of the `hosts` property of *@sap/hana-client*.\r\n* `certificate` - can be used instead of `ca` property of *@sap/hana-client*.\r\n__Note:__ `certificate` is a string containing one certificate, while `ca` is an array of certificates.\r\n* `hostname_in_certificate` - can be used instead of `sslHostNameInCertificate` property of *@sap/hana-client*.\r\n* `validate_certificate ` - can be used instead of `sslValidateCertificate` property of *@sap/hana-client*. The default value is `true`.\r\n* `client_authentication_certificate` - can be used instead of `cert` property of *@sap/hana-client*.\r\n* `client_authentication_private_key` - can be used instead of `key` property of *@sap/hana-client*. \r\n\r\n#### Additional options\r\n\r\nA connection created with *@sap/hdbext* can be further configured with the following options:\r\n\r\nOption   | Type | Description\r\n-------- | ---- | -----------\r\n`autoCommit` | boolean | Sets the autoCommit flag. If no option is specified it defaults to `true`.\r\n\r\n**Note**: the *@sap/hana-client* package also accepts other configurations like `isolationLevel` (one can use the isolation level constants in `require('@sap/hana-client/extension/Enums')`), `locale` and `sessionVariable:<name-of-the-session-variable>`.\r\n\r\n##### Special session variables\r\n\r\nSome session variables are handled in a special way.\r\n\r\n* `XS_APPLICATIONUSER` - can be set to a user token (SAML/JWT) to associate the application user with the database connection\r\n* `SAP_PASSPORT` - used to propagate SAP passport to SAP HANA, used for end-to-end tracing\r\n* `APPLICATION` - the name of the application initiating the database connection\r\n\r\n**Note**: If providing the `SAP_PASSPORT` session variable, the SAP Passport in\r\nit should have already been updated with data, specific to the component that consumes *@sap/hdbext*.\r\nFor more information, see the documentation of the *@sap/e2e-trace* package.\r\n\r\n#### Example\r\n\r\nSample configuration with both [database connection options](#database-connection-options) and [additional options](#additional-options):\r\n\r\n```js\r\nvar enums = require('@sap/hana-client/extension/Enums');\r\n\r\n{\r\n  host: 'my.host',\r\n  port: 30015,\r\n  user: 'my_user',\r\n  password: 'secret',\r\n  schema: 'name_of_the_schema',\r\n  isolationLevel: enums.SERIALIZABLE,\r\n  locale: 'en_US',\r\n  autoCommit: false,\r\n  'sessionVariable:APPLICATION': 'myapp',\r\n  'sessionVariable:SAP_PASSPORT': 'passport'\r\n}\r\n```\r\n\r\n### connectionOptions.getGlobalOptions()\r\n\r\nReturns an object with the following properties:\r\n* `sessionVariable:APPLICATION` - extracted from VCAP_APPLICATION, fallbacks to process's pid and machine's hostname.\r\n* `sessionVariable:APPLICATIONVERSION` - extracted from package.json in current directory. May not be present if the file is not present or not in valid JSON format.\r\n\r\n### connectionOptions.getRequestOptions(req)\r\n\r\nReturns an object with the following properties, based on the given HTTP request (_req_):\r\n* `sessionVariable:SAP_PASSPORT` - may not be present if the SAP Passport header is not present. The passport is updated with default component data.\r\n* `sessionVariable:XS_APPLICATIONUSER` - only present for authenticated requests that do not use client credentials token.\r\n* `locale` - only present if _req_ has either a `x-sap-request-language` or `accept-language` header.\r\n\r\n### loadProcedure(client, schemaName, procedureName, callback)\r\n\r\n*@sap/hdbext* provides functionalities to simplify stored procedure calls.\r\n\r\nFor example, if you have the following stored procedure:\r\n\r\n```sql\r\ncreate procedure PROC_DUMMY (in a int, in b int, out c int, out d DUMMY, out e TABLES)\r\n  language sqlscript\r\n  reads sql data as\r\n  begin\r\n    c := :a + :b;\r\n    d = select * from DUMMY;\r\n    e = select TOP 3 * from TABLES;\r\n  end\r\n```\r\n\r\nyou can call it via the *@sap/hana-client* package in the following way:\r\n\r\n```js\r\nvar dbStream = require('@sap/hana-client/extension/Stream');\r\ndbStream.createProcStatement(client, 'CALL PROC_DUMMY (?, ?, ?, ?, ?)', function (err, stmt) {\r\n  if (err) {\r\n    return console.error('createProcStatement error:', err);\r\n  }\r\n\r\n  stmt.exec({ A: 3, B: 4 }, function (err, params, dummyRows, tablesRows) {\r\n    if (err) {\r\n      return console.error('exec error:', err);\r\n    }\r\n\r\n    stmt.drop(function (err) {\r\n      if (err) {\r\n        return console.error('drop error:', err);\r\n      }\r\n\r\n      console.log('C:', params.C);\r\n      console.log('Dummy rows:', dummyRows);\r\n      console.log('Tables rows:', tablesRows);\r\n    });\r\n  });\r\n});\r\n```\r\n\r\nWith *@sap/hdbext* you don't need to construct a `CALL` statement. The procedure can be loaded by its name.\r\nThe code can look like this:\r\n\r\n```js\r\nhdbext.loadProcedure(client, null, 'PROC_DUMMY', function(err, sp) {\r\n  sp({ A: 3, B: 4 }, function(err, parameters, dummyRows, tablesRows) {\r\n    if (err) {\r\n      return console.error(err);\r\n    }\r\n\r\n    console.log('C:', parameters.C);\r\n    console.log('Dummy rows:', dummyRows);\r\n    console.log('Tables rows:', tablesRows);\r\n  });\r\n});\r\n```\r\n\r\nTo use the current schema, pass an empty string `''`, `null` or `undefined` for schema.\r\n\r\n`loadProcedure(client, schemaName, procedureName, callback)` returns a JavaScript function which you can call directly.\r\nThe function has the `paramsMetadata` property containing metadata for all parameters of the stored procedure.\r\nThis could be useful if you need to implement generic stored procedures calling.\r\n\r\nYou can also pass the input parameters directly in the proper order:\r\n\r\n```js\r\nsp(3, 4, function(err, parameters, dummyRows, tableRows) {\r\n  // ...\r\n});\r\n```\r\n\r\nor as an array:\r\n\r\n```js\r\nsp([3, 4], function(err, parameters, dummyRows, tableRows) {\r\n  // ...\r\n});\r\n```\r\n\r\nWhere the big advantage comes in is with table parameters.\r\nYou can pass an array of objects and *@sap/hdbext* will automatically convert it into a table parameter.\r\nSay we have a `customer` table with `ID` and `NAME` columns and a procedure:\r\n\r\n```sql\r\ncreate table \"customer\" (ID integer, NAME VARCHAR(100), primary key (ID));\r\n\r\ncreate procedure \"getCustomers\" (in in_table_1 \"customer\")\r\nlanguage sqlscript reads sql data as begin\r\nselect * from :in_table_1;\r\nend;\r\n```\r\n\r\nYou can call it like this:\r\n\r\n```js\r\nhdbext.loadProcedure(client, null, 'getCustomers', function (err, sp) {\r\n  if (err) {\r\n    return console.error(err);\r\n  }\r\n\r\n  sp([\r\n    { ID: 1, NAME: 'Alex' },\r\n    { ID: 2, NAME: 'Peter' }\r\n  ], function (err, parameters, tableRows) {\r\n    if (err) {\r\n      return console.error(err);\r\n    }\r\n\r\n    console.log(parameters);\r\n    console.log(tableRows);\r\n  });\r\n});\r\n```\r\n\r\nIn this example each array element represents a table row. Property names should case-sensitively match the corresponding column names.\r\n\r\nInternally *@sap/hdbext* creates a local temporary table in the current schema for each table parameter.\r\nThus, the current user needs the respective permissions.\r\n\r\nIt is also possible to explicitly state an existing table to be used as input table parameter:\r\n\r\n```js\r\n  sp({ schema: 'my-schema', table: 'my-table' }, function (err, parameters, tableRows) {\r\n    // ...\r\n  });\r\n```\r\n\r\nThe `schema` property is optional.\r\n\r\nEvery output table has a `columnInfo` property which contains info about each of the table's columns.\r\n\r\nInput arguments for parameters that have default values can be skipped in order to use the defined defaults.\r\nIt is recommended to pass the input as an object in those cases. In this way the application code would be independent\r\nfrom the order in which parameters with default values are defined in the procedure.\r\nWhen the parameters are passed in a sequence (i.e. as an array or are passed directly in the proper order),\r\ninput arguments can be skipped only for the parameters which are after the last mandatory parameter in the procedure's list.\r\n\r\n### Middleware\r\n\r\n*@sap/hdbext* provides a middleware which allows easy database connection creation in a middleware-based application.\r\nThe `close` method of the database client is invoked when the request is closed or finished.\r\n\r\n```js\r\nvar hdbext = require('@sap/hdbext');\r\nvar express = require('express');\r\n\r\nvar app = express();\r\napp.use(hdbext.middleware(hanaConfig));\r\n\r\napp.get('/execute-query', function (req, res) {\r\n  var client = req.db;\r\n\r\n  client.exec('SELECT * FROM DUMMY', function (err, rs) {\r\n    if (err) {\r\n      return res.end('Error: ' + err.message);\r\n    }\r\n\r\n    res.end(JSON.stringify(rs));\r\n  });\r\n});\r\n```\r\n\r\nThe argument `hanaConfig` may contain both [database connection options](#database-connection-options) and [additional options](#additional-options).\r\n\r\nThe middleware uses [connectionOptions.getGlobalOptions()](#connectionoptionsgetglobaloptions) and [connectionOptions.getRequestOptions(req)](#connectionoptionsgetrequestoptionsreq) for extracting options. It is possible for applications to override the default global options by setting them explicitly in `hanaConfig`.\r\n\r\n### SQL Parameter Utilities\r\n\r\nThe `hdbext.sqlInjectionUtils` object contains several synchronous utility functions that can be used to prevent SQL injections.\r\n\r\n#### isAcceptableParameter(value, maxToken)\r\n\r\nReturns true if `value` can be used to construct SQL statements.\r\nThe number of tokens a value is allowed to contain is set via the optional `maxToken` argument. Defaults to 1.\r\n\r\n#### isAcceptableQuotedParameter(value)\r\n\r\nReturns true if the provided `value` is quoted correctly and can be used in an SQL statement.\r\n\r\n#### escapeDoubleQuotes(value)\r\n\r\nReturns the `value` parameter with all double quotation marks escaped (i. e. doubled).\r\n\r\n#### escapeSingleQuotes(value)\r\n\r\nReturns the `value` parameter with all single quotation marks escaped (i. e. doubled).\r\n\r\n## Troubleshooting\r\n\r\nTo enable tracing, you should set the environment variable `DEBUG` to `hdbext:*`.\r\n\r\n## Migration guide\r\n\r\nGuide on how to adopt new major versions of the library can be found [here](./migration.md).\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n<a name=\"7.6.4\"></a>\r\n## 7.6.4 - 2022-05-03\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.12.20\r\n\r\n<a name=\"7.6.3\"></a>\r\n## 7.6.3 - 2022-04-13\r\n\r\n### Fixed\r\n- Update async to v3.2.2\r\n\r\n<a name=\"7.6.2\"></a>\r\n## 7.6.2 - 2022-02-24\r\n\r\n### Fixed\r\n- Update update package.json version\r\n\r\n<a name=\"7.6.1\"></a>\r\n## 7.6.1 - 2022-02-23\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.11.20\r\n\r\n<a name=\"7.6.0\"></a>\r\n## 7.6.0 - 2022-27-01\r\n\r\n### Added\r\n- Node.js 16.x support.\r\n\r\n<a name=\"7.5.0\"></a>\r\n## 7.5.0 - 2021-12-16\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.11.14\r\n\r\n<a name=\"7.4.1\"></a>\r\n## 7.4.1 - 2021-11-23\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.10.20\r\n\r\n<a name=\"7.4.0\"></a>\r\n## 7.4.0 - 2021-10-04\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.10.13\r\n\r\n<a name=\"7.3.1\"></a>\r\n## 7.3.1 - 2021-08-06\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.9.28\r\n\r\n<a name=\"7.3.0\"></a>\r\n## 7.3.0 - 2021-07-19\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.9.23\r\n- Update *debug* to v4.3.1\r\n\r\n<a name=\"7.2.0\"></a>\r\n## 7.2.0 - 2021-05-07\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.8.20\r\n\r\n<a name=\"7.1.4\"></a>\r\n## 7.1.4 - 2021-03-16\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.7.26\r\n\r\n<a name=\"7.1.3\"></a>\r\n## 7.1.3 - 2021-02-22\r\n\r\n### Fixed\r\n- Update *lodash* to v4.17.21\r\n\r\n<a name=\"7.1.2\"></a>\r\n## 7.1.2 - 2021-02-19\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.7.23\r\n\r\n<a name=\"7.1.1\"></a>\r\n## 7.1.1 - 2021-01-28\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.7.21\r\n- In StoredProcedure.js createTempTables, use async.eachLimit to avoid races\r\n\r\n<a name=\"7.1.0\"></a>\r\n## 7.1.0 - 2021-01-05\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.7.16, debug to 4.2.0 and *@sap/e2e-trace* to 3.0.0\r\n\r\n### Added\r\n- Node.js 14.x support.\r\n\r\n<a name=\"7.0.1\"></a>\r\n## 7.0.1 - 2020-10-21\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.6.58, debug to 4.1.1 and lodash to 4.17.20\r\n\r\n<a name=\"7.0.0\"></a>\r\n## 7.0.0 - 2020-07-13\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.5.104, async to 3.2.0 and lodash to 4.17.19\r\n\r\n### Removed\r\n- Node.js 6 support\r\n\r\n<a name=\"6.2.2\"></a>\r\n## 6.2.2 - 2020-04-29\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.4.196\r\n\r\n<a name=\"6.2.1\"></a>\r\n## 6.2.1 - 2020-04-15\r\n\r\n### Fixed\r\n- Do not drop statement objects in the background in order to prevent IsGlobalEmpty crash\r\n\r\n<a name=\"6.2.0\"></a>\r\n## 6.2.0 - 2020-03-06\r\n\r\n### Added\r\n- Node.js 12.x support.\r\n\r\n<a name=\"6.1.1\"></a>\r\n## 6.1.1 - 2019-11-19\r\n\r\n### Fixed\r\n- Update *@sap/hana-client* to v2.4.167\r\n\r\n<a name=\"6.1.0\"></a>\r\n## 6.1.0 - 2019-10-25\r\n\r\n### Added\r\n- Support for synonyms as table parameters in procedures\r\n\r\n<a name=\"6.0.1\"></a>\r\n## 6.0.1 - 2019-07-10\r\n\r\n### Fixed\r\n- Update `lodash` package to 4.17.13\r\n\r\n<a name=\"6.0.0\"></a>\r\n## 6.0.0 - 2019-05-20\r\n\r\n### Removed\r\n- Node 4 support\r\n- Stored procedures: caching of prepared CALL statements for simple procedures\r\n\r\n### Fixed\r\n- Statement leak due to caching of prepared CALL statements for simple procedures\r\n- Update *@sap/hana-client* to v2.4.139\r\n\r\n### Added\r\n- Node.js 10 support\r\n\r\n## 5.1.0 - 2019-01-11\r\n\r\n### Added\r\n- Support for `hostname_in_certificate`, `validate_certificate`, `client_authentication_certificate`, `client_authentication_private_key` properties from HANA service binding\r\n\r\n### Fixed\r\n- Check for non-existing procedure\r\n\r\n## 5.0.0 - 2018-09-27\r\n\r\n### Removed\r\n- Node 0.12 support.\r\n- The `constants` property.\r\n- The `getPool` property.\r\n- The `createPool` property.\r\n- The `updateConnectionOptions` property.\r\n- The `session` property is no longer considered for setting session variables.\r\n\r\n### Changed\r\n- Now the package provides convenient functions on top of the *@sap/hana-client* package instead of the *hdb* package.\r\n- The package expects schema and table names to be provided unescaped everywhere, e.g. `my\"TABLE` instead of `\"my\"\"Table\"`.\r\n- A string containing a table name and optionally a schema name is no longer accepted for input table parameters. An object with `table` property (mandatory) and `schema` property (optional) should be provided instead, e.g. `{ schema: 'my\"Schema', table: 'my\"Table' }`\r\n- `hdbext.createConnection` throws if the input is not an object.\r\n- `hdbext.createConnection` throws if provided value for `autoCommit` is not a boolean.\r\n- Format of the object returned from `hdbext.connectionOptions.getGlobalOptions`, from `{ session: { APPLICATION: '', APPLICATIONVERSION: '' } }` to `{ 'sessionVariable:APPLICATION': '', 'sessionVariable:APPLICATIONVERSION': '' }`\r\n- `hdbext.connectionOptions.getGlobalOptions` may return an object without a `'sessionVariable:APPLICATIONVERSION'` property if an appropriate value cannot be determined.\r\n- Format of the object returned from `hdbext.connectionOptions.getRequestOptions` from `{ session: { XS_APPLICATIONUSER: '', SAP_PASSPORT: '', locale: '' } }` to `{ 'sessionVariable:XS_APPLICATIONUSER': '', 'sessionVariable:SAP_PASSPORT': '', locale: '' }`\r\n- `hdbext.connectionOptions.getRequestOptions` may return an object without a `locale` property if an appropriate value cannot be determined.\r\n- `hdbext.middleware` no longer takes pool options as second argument.\r\n- `hdbext.middleware` does not work with pooled connections by default.\r\n\r\n## 4.7.5 - 2018-09-18\r\n\r\n### Fixed\r\n- Update `lodash` package to 4.17.11\r\n\r\n## 4.7.4 - 2018-07-27\r\n\r\n### Fixed\r\n- Passing a Buffer as a single input argument for a procedure\r\n\r\n## 4.7.3 - 2018-06-29\r\n\r\n### Fixed\r\n- Updated `hdb` package to 0.16.0\r\n\r\n## 4.7.2 - 2018-04-03\r\n\r\n### Fixed\r\n- Do not call `setImmediate` when invoking stored procedures\r\n\r\n## 4.7.1 - 2018-03-30\r\n\r\n### Fixed\r\n- Update dependencies\r\n- Implicit commit when procedure with input table parameters is executed\r\n- Cleanup of global temporary tables when a connection is returned to a pool\r\n- Local temporary tables are now dropped without CASCADE\r\n- Names of temporary tables are now properly escaped during cleanup of connections returned to a pool\r\n- Prepared statement leak when calling a procedure without input table parameters and without parameters having a default value\r\n\r\n## 4.7.0 - 2018-01-19\r\n\r\n### Added\r\n- npm-shrinkwrap.json\r\n\r\n## 4.6.0 - 2018-01-12\r\n\r\n### Added\r\n- Support for `servername` option on connect\r\n\r\n### Fixed\r\n- Error when `authInfo` is missing `getGrantType` property\r\n- Minimum idle connections is now 0\r\n\r\n## 4.5.0 - 2017-11-23\r\n\r\n### Added\r\n- Stored procedures: support for default parameters\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 4.4.3 - 2017-10-12\r\n\r\n### Added\r\n- Support for Node.js 8\r\n\r\n### Fixed\r\n- Prevent using a client object that has been returned to the pool\r\n- Update dependencies\r\n\r\n## 4.4.2 - 2017-07-17\r\n\r\n### Fixed\r\n - Client credentials token now doesn't throw error\r\n\r\n## 4.4.1 - 2017-07-04\r\n\r\n### Fixed\r\n - Allow pool release to be called only once\r\n\r\n## 4.4.0 - 2017-06-30\r\n\r\n### Added\r\n - Support for synonyms for procedures\r\n - Expose generic-pool object\r\n\r\n### Fixed\r\n - Return only non-busy connections to pool\r\n - Additional options leaks in getPool\r\n - Fixes in passing input arguments as Array\r\n - Fixed passing `null` as single input argument\r\n\r\n## 4.3.4 - 2017-05-02\r\n\r\n### Fixed\r\n - Close connection if authentication fails\r\n - Handle `null` for procedures with input table parameters\r\n\r\n## 4.3.3 - 2017-04-04\r\n\r\n### Fixed\r\n - Support for INOUT parameters in stored procedures\r\n\r\n## 4.3.2 - 2017-03-10\r\n\r\n### Fixed\r\n - Report error if temp table delete fails\r\n - Updated hdb module to 0.12.1\r\n\r\n## 4.3.1 - 2017-02-23\r\n\r\n### Fixed\r\n- The `locale` property in the object returned by `connOptions.getRequestOptions` now defaults to undefined instead of to an empty string when there is no language info in the provided request\r\n\r\n## 4.3.0 - 2017-01-26\r\n\r\n### Added\r\n- Introduce pool.drain - a function to dispose of idle connections\r\n\r\n### Fixed\r\n- Log on level 'debug' in case of 'insufficient privilege' error during clean-up of temporary tables\r\n\r\n## 4.2.3 - 2017-01-24\r\n\r\n### Changed\r\n- Rename package to use @sap scope\r\n\r\n## 4.2.2 - 2017-01-24\r\n\r\n### Fixed\r\n- Clean-up temporary tables on connection release\r\n- Fixes in procedures and inplace table parameters\r\n\r\n## 4.2.1 - 2016-12-07\r\n\r\n### Fixed\r\n- `middleware` and `connOptions.getRequestOptions` now update SAP-Passports automatically with default component data\r\n\r\n## 4.2.0 - 2016-11-16\r\n\r\n### Added\r\n- Make options optional in `pool.acquire`\r\n\r\n### Fixed\r\n- Quote name in set schema statement\r\n- Rollback transaction before isolation level restore\r\n- Support for multiple middlewares\r\n- Allow calling a procedure with inplace table parameter\r\n- Fix crash on connect\r\n\r\n## 4.1.3 - 2016-10-14\r\n\r\n### Fixed\r\n- Fixes in database connectivity\r\n\r\n## 4.1.2 - 2016-09-28\r\n\r\n### Fixed\r\n- Handle websocket connection end.\r\n- Set DB connection locale from HTTP request in middleware.\r\n\r\n## 4.1.1 - 2016-09-15\r\n\r\n### Added\r\n- Rollback of uncommitted changes when a connection is returned to a connection pool.\r\n\r\n## 4.1.0 - 2016-09-14\r\n\r\n### Added\r\n- `autoCommit` connection option\r\n- Set APPLICATION and APPLICATIONVERSION session variables in the middleware\r\n- `connectionOptions.getGlobalOptions()` and `connectionOptions.getRequestOptions(req)` functions\r\n\r\n## 4.0.0 - 2016-09-09\r\n\r\n### Added\r\n- `session` property in database connection options\r\n- `certificate` property in database connection options\r\n\r\n### Removed\r\n- `sapPassport` property in database connection options, use `session.SAP_PASSPORT` instead.\r\n- `userTokens` property in database connection options, use `session.XS_APPLICATIONUSER` instead.\r\nNow a single token is expected.\r\n\r\n## 3.0.0 - 2016-08-05\r\n\r\n### Changed\r\n- Removed additional functions attached to the returned HDB connection object (incompatible change).\r\n  In previous versions the returned connection object was enriched with the following functions:\r\n    - setSchema\r\n    - setApplicationUser\r\n    - unsetApplicationUser\r\n\r\n  Those functions have been removed and we have provided a new function `updateConnectionOptions` instead,\r\n  to be used as utility for setting the supported connection options.\r\n\r\n- Read HANA service properties from environment as fallback if no HANA config provided has been removed.\r\n\r\n- HANA config object no longer supports setting `userTokens` as string, it must be an object.\r\n\r\n- Connection pooling API was changed incompatibly to fix issues with connection cleanup.\r\n\r\n"},{"name":"hdi-deploy","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/hdi-deploy\r\n===============\r\n\r\n`@sap/hdi-deploy` is a [Node.js](https://nodejs.org)-based deployment module for SAP HANA DI (HDI)-based persistence models, HDI Deployer for short. The HDI Deployer can be used in XS Advanced (XSA) and in SAP Business Technology Platform (SAP BTP)/Cloud Foundry (CF), and it is also used by the SAP Web IDE for interactive development scenarios. It can also be used in scenarios without XSA (or SAP BTP), e.g. for deploying HDI persistence models into a SAP HANA database where no XSA is installed.\r\n\r\nFor more information about SAP HANA DI, please check the [SAP HANA Developer Guide](https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.03/en-US/eaa4e37394ea4efba8148d595d025261.html) and the [SAP HANA Administration Guide](https://help.sap.com/viewer/6b94445c94ae495c83a19646e7c3fd56/2.0.03/en-US/3ef0ee9da11440e4b01708455b8497a9.html).\r\n\r\nUsually, the HDI Deployer is packaged into a database module, a `db` module, as part of a Multi-Target Application (MTA) and is used to deploy HDI design-time artifacts of the `db` module to the respective HDI container. When an MTA is deployed via the Deploy Service, the `db` module is pushed first so that it can \"prepare\" the SAP HANA persistence; by the time defined services are started, the HDI container is ready for use.\r\n\r\nThe HDI Deployer can also be used without the Deploy Service and MTAs, without XSA, and also for interactive scenarios or automation scripts.\r\n\r\nFor an MTA with different modules, e.g. a `db` module, a Node.js module, etc., this looks as follows:\r\n\r\n```\r\n  +-----------------+    +-----------------+    +-----------------+\r\n  | db module       |    | Node.js module  |    | ... module      |\r\n  | w/ HDI Deployer |    |                 |    |                 |\r\n  +-----------------+    +-----------------+    +-----------------+\r\n\r\n           |                      |                      |\r\n           |                      |                      |\r\n \\/ deploy persistence       \\/ read/write/extend persistence      \r\n           |                      |                      |\r\n           |                      |                      |\r\n\r\n  +---------------------------------------------------------------+\r\n  | HDI container                                                 |\r\n  |                                                               |\r\n  +---------------------------------------------------------------+\r\n```\r\n\r\nIn an SAP HANA-Service-Broker-based HDI setup, each module of the MTA is equipped with it's own technical database user for accessing the runtime schema of the HDI container.\r\n\r\nThe following diagram illustrates the different users who are involved in this setup with regard to privileges: the application users user1 and user2 who are bound to one of the modules each, and the HDI container's object owner (the #OO user) who is the owner of the objects in the database persistence of the MTA which are managed by HDI:\r\n\r\n```\r\n  +-----------------+    +-----------------+    +-----------------+\r\n  | db module       |    | Node.js module  |    | ... module      |\r\n  | w/ HDI Deployer |    |                 |    |                 |\r\n  +-----------------+    +-----------------+    +-----------------+\r\n\r\n                                  |                      |            o\r\n                                  | --------------------------------- X application user user1\r\n                                  |                      |       o\r\n                                  |                      | ----- X application user user2\r\n                                  |                      |\r\n\r\n  +---------------------------------------------------------------+\r\n  | HDI container                                                 |\r\n  |                              db object 1      db object 2     |\r\n  +-------------------------------------\\-------------/-----------+\r\n                                         \\           /\r\n                                      o   \\         /\r\n                                      X object owner (#OO user)\r\n```\r\n\r\nThe HDI Deployer is packaged into the `db` module of the MTA. So, in order to use a new HDI Deployer, you need to reference a new version of the HDI Deployer in the `db` module's `package.json` file.\r\n\r\nThe HDI Deployer supports SAP HANA 1 SPS11/SPS12 and SAP HANA 2. The HDI Deployer assumes that for newer versions of SAP HANA, a corresponding version of the SAP HANA Service Broker is used to create the CF/XSA service bindings.\r\n\r\nNote: The HDI Deployer assumes ownership of the `src/`, `cfg/`, and `lib/` folders in the bound target HDI container. Binding more than 1 instance of the HDI Deployer to the same HDI container as the target container, e.g. the `db` modules of 2 MTAs or 2 applications are bound to the same HDI container as the target container, is not supported and results in undefined behavior.\r\n\r\n## README.md\r\n\r\n**Installation**:\r\n- [Integration into a Database Module](#integration-into-a-database-module)\r\n- [Database Connection Details](#database-connection-details)\r\n- [Deployment via Push and Tasks](#deployment-via-push-and-tasks)\r\n- [Deployment via Local Run](#deployment-via-local-run)\r\n\r\n**The Database Module**:\r\n- [A Database Module's File System Structure](#a-database-modules-file-system-structure)\r\n- [Delta Deployment and Undeploy Allowlist](#delta-deployment-and-undeploy-allowlist)\r\n- [The default_access_role Role](#the-default_access_role-role)\r\n- [The development_debug_role Role](#the-development_debug_role-role)\r\n- [Reusable Database Modules](#reusable-database-modules)\r\n- [Configuration File Templating](#configuration-file-templating)\r\n- [Permissions to Container-External Objects](#permissions-to-container-external-objects)\r\n\r\n**Configuration and Reconfiguration**:\r\n- [Environment Variables for Applications](#environment-variables-for-applications)\r\n- [Environment Variables for Infrastructure / Development Tools](#environment-variables-for-infrastructure--development-tools)\r\n- [Options for Interactive Scenarios](#options-for-interactive-scenarios)\r\n- [Ignore List](#ignore-list)\r\n- [Supported Features](#supported-features)\r\n\r\n**Dynamic Deployment**:\r\n - [Deployment via hdi-dynamic-deploy](#deployment-via-hdi-dynamic-deploy)\r\n \r\n**Library Usage**:\r\n - [Using hdi-deploy as a Node.js library](#using-hdi-deploy-as-a-nodejs-library)\r\n\r\n\r\n## Integration into a Database Module\r\n\r\nUsually, `@sap/hdi-deploy` gets installed via a `package.json`-based dependency inside your application's `db` module:\r\n\r\n`db/package.json`:\r\n\r\n```\r\n{\r\n  \"name\": \"deploy\",\r\n  \"dependencies\": {\r\n    \"@sap/hdi-deploy\": \"4.4.1\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"node node_modules/@sap/hdi-deploy/\"\r\n  }\r\n}\r\n```\r\n## Database Connection Details\r\n\r\nConnection details for the database, e.g. host, port, credentials, certificates, hostname_in_certificate, encrypt and validate_certificate, are looked up by the HDI Deployer from the standard CF/XSA `VCAP_SERVICES` environment variable which contains the bound services.\r\n\r\nSince version 4.3.1 of hdi-deploy supports reading credentials from a secret volume for Kubernetes.\r\n\r\nIn order to use mutual authentication, `client_authentication_private_key` and `client_authentication_certificate` can be supplied via the service binding.\r\n\r\nFor local testing, the HDI Deployer supports default configurations via the following configuration files:\r\n\r\n- `default-env.json`: a JSON file which contains a set of environment variables and their values\r\n- `.env`: a dot env file which contains a set of environment variables and their values. This file is used in the absence of `default-env.json`.   \r\n- `default-services.json`: a JSON file which contains a set of service bindings\r\n\r\nDetails of a bound service from an SAP HANA-Service-Broker-based service binding in CF/XSA usually look as follows:\r\n\r\n``` JSON\r\n{\r\n  \"name\" : \"foo\",\r\n  \"label\" : \"hana\",\r\n  \"tags\" : [ \"hana\", \"database\", \"relational\" ],\r\n  \"plan\" : \"hdi-shared\",\r\n  \"credentials\" : {\r\n    \"schema\" : \"FOO\",\r\n    \"user\" : \"FOO_345999596729_RT\",\r\n    \"password\" : \"<password>\",\r\n    \"hdi_user\" : \"FOO_645927945801_DT\",\r\n    \"hdi_password\" : \"<password>\",\r\n    \"host\" : \"srv1234567.host.name\",\r\n    \"port\" : \"30115\",\r\n    \"db_hosts\" : [ {\r\n      \"port\" : 30115,\r\n      \"host\" : \"srv1234567.host.name\"\r\n    } ],\r\n    \"url\" : \"jdbc:sap://srv1234567.host.name:30115/?currentschema=FOO\",\r\n    \"driver\" : \"com.sap.db.jdbc.Driver\"\r\n  }\r\n}\r\n```\r\n\r\nHere, the credentials section contains all the data which is needed by the HDI Deployer for connecting to the database. The HDI Deployer uses the `hdi_user`/`hdi_password` credentials from a direct service binding. The `hdi_user` should be minimal, i.e. only have the privileges required to fulfill the deployment. In most cases, access to a container FOO's API in the FOO#DI schema is sufficient.\r\n\r\n### Splitting passwords across services\r\n\r\nThe `password` property and the `hdi_password` property can also be specified as a combination of passwords from other bound services. Consider the following service binding:\r\n\r\n``` JSON\r\n{\r\n    \"hana\" : [],\r\n    \"user-provided\" : [ \r\n      {\r\n      \"name\" : \"split_password_service\",\r\n      \"label\" : \"user-provided\",\r\n      \"tags\" : [],\r\n      \"credentials\" : {\r\n        \"user\" : \"user\",\r\n        \"schema\": \"schema\",\r\n        \"password\": [\"password_and_hdi_password_service\", \"password_only_service\"],\r\n        \"hdi_password\": [\"password_and_hdi_password_service\", \"hdi_password_only_service\"],\r\n        \"tags\" : [ \"hana\" ]\r\n      }\r\n    },\r\n    {\r\n      \"name\" : \"password_and_hdi_password_service\",\r\n      \"label\" : \"user-provided\",\r\n      \"tags\" : [],\r\n      \"credentials\" : {\r\n        \"password\" : \"PASSWORD\",\r\n        \"hdi_password\": \"HDI_PASSWORD\",\r\n        \"tags\" : [ \"password\" ]\r\n      }\r\n    },\r\n    {\r\n      \"name\" : \"hdi_password_only_service\",\r\n      \"label\" : \"user-provided\",\r\n      \"tags\" : [],\r\n      \"credentials\" : {\r\n        \"hdi_password\": \"123\",\r\n        \"tags\" : [ \"password\" ]\r\n      }\r\n    },\r\n    {\r\n      \"name\" : \"password_only_service\",\r\n      \"label\" : \"user-provided\",\r\n      \"tags\" : [],\r\n      \"credentials\" : {\r\n        \"password\" : \"456\",\r\n        \"tags\" : [ \"password\" ]\r\n      }\r\n    } ]\r\n  }\r\n```\r\n\r\nWhen the service `shared_password_service` is used, the services specified in `password` and/or `hdi_password` will be checked and their `password` and/or `hdi_password` will be concatenated. The services will be accessed in the order they are defined. The resulting `shared_password_service` would have the `password` \"PASSWORD456\" and the `hdi_password` \"HDI_PASSWORD123\".\r\n\r\n0 to n services can be specified, specifying 0 services results in the `password`/`hdi_password` ''.\r\n\r\n### VCAP_SERVICES\r\n\r\nConnection details for the database are stored in the following format in the [`VCAP_SERVICES`](http://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html#VCAP-SERVICES) environment variable:\r\n\r\n`VCAP_SERVICES`:\r\n```\r\n{\r\n  \"hana\" : [\r\n    <hana-service-binding-1>,\r\n    <hana-service-binding-2>,\r\n    ...\r\n    <hana-service-binding-n>\r\n  ],\r\n  \"user-provided\" : [\r\n    <user-provided-service-binding-1>,\r\n    <user-provided-service-binding-2>,\r\n    ...\r\n    <user-provided-service-binding-m>\r\n  ]\r\n}\r\n'\r\n```\r\n\r\n### default-env.json\r\n\r\nA `default-env.json` file can contain a set of environment variables and their values. The HDI Deployer will pick up these settings on startup:\r\n\r\n`default-env.json:`\r\n```\r\n{\r\n  \"TARGET_CONTAINER\" : \"<name-of-the-service-instance-to-use-as-deployment-target>\",\r\n  \"VCAP_SERVICES\" : {\r\n    \"hana\" : [\r\n      <hana-service-binding-1>,\r\n      <hana-service-binding-2>,\r\n      ...\r\n      <hana-service-binding-n>\r\n    ],\r\n    \"user-provided\" : [\r\n      <user-provided-service-binding-1>,\r\n      <user-provided-service-binding-2>,\r\n      ...\r\n      <user-provided-service-binding-m>\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n`default-env.json` example file with a target container binding and a user-provided service:\r\n\r\n```\r\n{\r\n  \"TARGET_CONTAINER\" : \"target-service\",\r\n  \"VCAP_SERVICES\" : {\r\n    \"hana\" : [ {\r\n     \"name\" : \"target-service\",\r\n      \"label\" : \"hana\",\r\n      \"tags\" : [ \"hana\", \"database\", \"relational\" ],\r\n      \"plan\" : \"hdi-shared\",\r\n      \"credentials\" : {\r\n        \"schema\" : \"SCHEMA\",\r\n        \"hdi_user\" : \"USER_DT\",\r\n        \"hdi_password\" : \"PASSWORD_DT\",\r\n        \"certificate\" : \"-----BEGIN CERTIFICATE-----\\nABCD...1234\\n-----END CERTIFICATE-----\\n\",\r\n        \"host\" : \"host\",\r\n        \"port\" : \"30015\"\r\n      }\r\n    } ],\r\n    \"user-provided\" : [ {\r\n      \"name\" : \"GRANTING_SERVICE\",\r\n      \"label\" : \"user-provided\",\r\n      \"tags\" : [ ],\r\n      \"credentials\" : {\r\n        \"schema\" : \"SYS\",\r\n        \"user\" : \"GRANT_USER\",\r\n        \"password\" : \"PASSWORD\",\r\n        \"procedure_schema\" : \"PRIVILEGE_PROCEDURE_GRANTOR_DEFINER\",\r\n        \"procedure\" : \"GRANT\",\r\n        \"type\" : \"procedure\",\r\n        \"tags\" : [ \"hana\" ]\r\n      }\r\n    } ]\r\n  }\r\n}\r\n```\r\n### .env\r\n\r\nA `.env` file can contain a set of environment variables and their values. The HDI Deployer will pick up these settings on startup:\r\n\r\n\r\n`.env` example file:\r\n\r\n```\r\n\r\n  VCAP_SERVICES={\"hana\" : [ { \"name\" : \"target-service\", \"label\" : \"hana\", \"tags\" : [ \"hana\", \"database\", \"relational\" ], \"plan\" : \"hdi-shared\", \"credentials\" : { \"schema\" : \"SCHEMA\", \"hdi_user\" : \"USER_DT\", \"hdi_password\" : \"PASSWORD_DT\", \"certificate\" : \"-----BEGIN CERTIFICATE-----\\nABCD...1234\\n-----END CERTIFICATE-----\\n\", \"host\" : \"host\", \"port\" : \"30015\" } } ] }\r\n  \r\n```\r\n## Deployment via Push and Tasks\r\n\r\nThere are two ways of using the HDI Deployer as an application:\r\n\r\n- Push the application with one instance. The application will then start and do the HDI deployment of the data model. After a successful deployment, the application will enter an idle loop and can be stopped.\r\n- Push the application with zero instances and then trigger a task on the application which does the HDI deployment of the data model. After deployment of the data model, the task will be completed. An instance of the application is only running while the task is being executed.\r\n\r\nFor both scenarios, ensure that the `health-check-type` in the manifest is set to `process`, instead of the default, `port`-based health check.\r\n\r\nIn order to push the application with zero instances, the application can either be pushed with the `--no-start` option or the number of instances can be set to zero in the `manifest.yml` file via `instances: 0`.\r\n\r\nThe deployment task can be started via `xs run-task <app> deployment-task \"npm run start -- --exit\" --wait-for-completion` on XSA. The task will run and the call will propagate the success/failure of the deployment task. On CF, the `--wait-for-completion` option is not available and the status of the task needs to be checked periodically.\r\n\r\n## Deployment via Local Run\r\n\r\nAn HDI deployment can also be triggered without using an application. In this case, the HDI Deployer will be run locally and directly connects to the database. This is possible in the following scenarios: the database is accessible locally from a network point of view or a network tunnel with a local endpoint was established, e.g. a `cf ssh`-based tunnel is set up in CF.\r\n\r\nApply the following steps to run the HDI Deployer locally: run `npm install` in the db module's folder to install the HDI Deployer module, then create a `default-env.json` file in the db module's folder which contains the required service bindings and the `TARGET_CONTAINER` setting, then run `npm run start -- --exit` in the db module's folder to trigger the deployment of the data model.\r\n\r\nIf the database uses SSL/TLS encryption, please ensure that the `hostname_in_certificate` value is set up correctly in the service bindings, because the network tunnel's local endpoint (e.g. localhost:9000) doesn't match the hostname in the SSL/TLS certificate.\r\n\r\n## A Database Module's File System Structure\r\n\r\nThe HDI Deployer expects the following file system structure for the HDI content in your `db` module:\r\n\r\n- `src/`: folder which contains your HDI source artifacts\r\n- `cfg/`: optional folder with HDI configuration artifacts\r\n- `package.json`: this file is used by npm (the Node.js package manager) to bootstrap and start the application\r\n\r\nOther files in the root directory will be ignored by `@sap/hdi-deploy`.\r\n\r\nPlease note that the `cfg/` folder also might need a `.hdiconfig` file, e.g. in case `.hdbsynonymconfig` files are placed there.\r\n\r\nIn combination with reusable database modules, the HDI Deployer will also consider database modules which are located in the `node_modules/` folder and which will be mapped to a corresponding sub-folder hierarchy in the container's `lib/` folder.\r\n\r\nNote: The design-time files should be protected against unauthorized modifications to guard against unwanted undeployments or deployment of foreign objects. For applications running on XSA or Cloud Foundry, this is taken care of by the platform.\r\n\r\n## Delta Deployment and Undeploy Allowlist\r\n\r\nThe HDI Deployer implements a delta-based deployment strategy:\r\n\r\nOn startup, the HDI Deployer recursively scans the local `src/` and `cfg/` folders, processes config templates, looks at the HDI container at the server-side and calculates the set of added, modified, and deleted files based on the difference between the local file system state and the deployed file system state of the server-side HDI container.\r\n\r\nIn normal operation, the HDI Deployer will schedule only the set of added and modified files for deployment. The set of deleted files is not scheduled for undeployment.\r\n\r\nIn order to undeploy deleted files, an application needs to include an undeploy allowlist via an `undeploy.json` file in the root directory of the `db` module (right beside the `src/` and `cfg/` folders). The undeploy allowlist `undeploy.json` file is a JSON document with a top-level array of file names. \r\n\"real\" paths, path patterns and path negations are supported.\r\n\r\n`undeploy.json`:\r\n\r\n    [\r\n        \"src/Table.hdbcds\",\r\n        \"src/Procedure.hdbprocedure\",\r\n        \"src/*.hdbtable\",\r\n        \"**/*.hdbtable\",\r\n        \"!**/temp/*.hdbtable\"\r\n    ]\r\n\r\nThe file must list all artifacts which should be undeployed. The file path of the artifacts must be relative to the root directory of the `db` module, must use the HDI file path delimiter '/', and must be based on the HDI server-side folder structure. In case of reusable database modules, the server-side top-level folder `lib/` needs to be used instead of the local folder `node_modules/`.\r\n\r\nFor interactive scenarios, it's possible to pass the `auto-undeploy` option to the HDI Deployer, e.g.\r\n\r\n    node deploy --auto-undeploy\r\n\r\nIn this case, the HDI Deployer will ignore the undeploy allowlist `undeploy.json` file and will schedule all deleted files in the `src/` and `cfg/` folders for undeployment.\r\n\r\n## The default_access_role Role\r\n\r\nWhen an HDI container service instance is created by the SAP HANA Service Broker, for example, service instance `foo` with schema name `FOO`, the broker creates an HDI container named `FOO` (consisting of the run-time schema `FOO` , the HDI metadata and API schema `FOO#DI` , and the object owner `FOO#OO`) and, in addition, the following roles, which are assigned to the application user:\r\n\r\n- FOO::access_role\r\n  A global access role for the run-time schema. This access role is assigned a set of default permissions for the run-time schema: SELECT, INSERT, UPDATE, DELETE, EXECUTE, CREATE TEMPORARY TABLE, and SELECT CDS METADATA on the run-time schema `FOO`.\r\n\r\n- FOO::external_privileges_role\r\n  A role that grants the application user the privileges required to enable access to schemas and objects outside the HDI container, for example, the run-time container `BAR`.\r\n\r\nNote : The roles exist as long as the HDI container exists; they are not lost when the application binding user changes. New binding users are automatically assigned these roles by the broker.\r\n\r\nEvery time the service instance is bound to an application, the service broker creates two new users that are specific to this binding. The first user is the application user who is named user in the instance's credentials. This user is used by the application to access the HDI container's run-time schema `FOO`. This user is assigned the service instance's global access role `FOO::access_role` and the role `FOO::external_privileges_role`. The second user is the HDI API user - named `hdi_user` in the credentials. This user is equipped with privileges for the container's APIs in the `FOO#DI` schema.\r\n\r\nThe following diagram illustrates the binding-specific application users and the role of the global access role (the HDI API users and the bindings for the HDI Deployer are not shown for simplicity):\r\n\r\n```\r\n  +-----------------+    +-----------------+    +-----------------+\r\n  | db module       |    | Node.js module  |    | ... module      |\r\n  | w/ HDI Deployer |    |                 |    |                 |\r\n  +-----------------+    +-----------------+    +-----------------+\r\n\r\n                                  |                      |            o\r\n                                  | --------------------------------- X application user user1\r\n                                  |                      |       o                        \\\r\n                                  |                      | ----- X application user user2  \\\r\n                                  |                      |                           \\      \\\r\n                                                                                      \\      \\\r\n  +---------------------------------------------------------------+           role FOO::access_role\r\n  | HDI container FOO                                             |                   /\r\n  |                                                               | SELECT/INSERT/... on schema FOO\r\n  +---------------------------------------------------------------+\r\n```\r\n\r\nExemplary service binding:\r\n\r\n```\r\n{\r\n   \"hana\" : [ {\r\n     \"name\" : \"foo\",\r\n     \"label\" : \"hana\",\r\n     \"tags\" : [ \"hana\", \"database\", \"relational\" ],\r\n     \"plan\" : \"hdi-shared\",\r\n     \"credentials\" : {\r\n       \"schema\" : \"FOO\",\r\n       \"user\" : \"FOO_345999596729_RT\",\r\n       \"password\" : \"<password>\",\r\n       \"hdi_user\" : \"FOO_645927945801_DT,\r\n       \"hdi_password\" : \"<password>\",\r\n       \"host\" : \"srv1234567.host.name\",\r\n       \"port\" : \"30115\",\r\n       \"db_hosts\" : [ {\r\n         \"port\" : 30115,\r\n         \"host\" : \"srv1234567.host.name\"\r\n       } ],\r\n       \"url\" : \"jdbc:sap://srv1234567.host.name:30115/?currentschema=FOO\",\r\n       \"driver\" : \"com.sap.db.jdbc.Driver\"\r\n     }\r\n   } ]\r\n}\r\n```\r\n\r\nIn order to assign roles from the HDI content to the application binding users (the `user` users), the HDI Deployer implements an automatic assignment of the `default_access_role` role if it is present in the deployed content:\r\n\r\nIf a role definition file exists at the path `src/defaults/default_access_role.hdbrole`, and this file defines a role named `default_access_role`, and this file is included in the deployment (e.g. not excluded via `include-filter`), then the HDI Deployer grants the deployed `default_access_role` role to the service instance's global access role (e.g. `FOO::access_role`). In addition, the HDI Deployer revokes all default permissions (e.g. `SELECT`, `INSERT`, `UPDATE`, `DELETE`, `EXECUTE`, `CREATE TEMPORARY TABLE`, and `SELECT CDS METADATA` (not on SAP HANA Cloud) on the runtime schema `FOO`) from the global access role. If the `default_access_role` is undeployed, the default permission set for the runtime schema will be restored.\r\n\r\nNote:  If you use a `.hdinamespace` file in `src/` which defines a real namespace prefix for subfolders, then you need to put a `.hdinamespace` file with the empty namespace `\"name\" : \"\"` at `src/defaults/` to ensure that the role can be named `default_access_role`.\r\n\r\nThe following diagram illustrates the binding-specific application users, the role of the global access role, and the container-specific default access role:\r\n\r\n```\r\n  +-----------------+    +-----------------+    +-----------------+\r\n  | db module       |    | Node.js module  |    | ... module      |\r\n  | w/ HDI Deployer |    |                 |    |                 |\r\n  +-----------------+    +-----------------+    +-----------------+\r\n\r\n                                  |                      |            o\r\n                                  | --------------------------------- X application user user1\r\n                                  |                      |       o                        \\\r\n                                  |                      | ----- X application user user2  \\\r\n                                  |                      |                           \\      \\\r\n                                                                                      \\      \\\r\n  +---------------------------------------------------------------+           role FOO::access_role\r\n  | HDI container FOO                                             |                      /\r\n  |                                role default_access_role ----------------------------+\r\n  |                                       /         \\             |\r\n  |                                role role1     role role2      |\r\n  |                                   /              /   \\        |\r\n  |                 structured privileges       DCL role 1 / 2    |   \r\n  +---------------------------------------------------------------+\r\n```\r\n\r\nNote: The `default_access_role` is assumed to be an \"umbrella\" role which aggregates other roles.\r\n\r\nA role with the default permission set which is granted by the SAP HANA Service Broker on container creation looks as follows:\r\n\r\n`default_permissions_role.hdbrole`:\r\n\r\n```\r\n{\r\n   \"role\":{\r\n      \"name\":\"default_permissions_role\",\r\n      \"schema_privileges\":[\r\n         {\r\n            \"privileges\":[\r\n               \"SELECT\",\r\n               \"INSERT\",\r\n               \"UPDATE\",\r\n               \"DELETE\",\r\n               \"EXECUTE\",\r\n               \"CREATE TEMPORARY TABLE\",\r\n               \"SELECT CDS METADATA\"\r\n            ]\r\n         }\r\n      ]\r\n   }\r\n}\r\n```\r\n\r\nOn SAP HANA Cloud, \"SELECT CDS METADATA\" is not granted.\r\n\r\n## The development_debug_role Role\r\n\r\nSimilarly to the default_access_role, a development_debug_role can be used to add additional privileges to the access role. This is only intended for development and debugging, not for productive use!\r\n\r\nIf a role definition file exists at the path `src/defaults/development_debug_role.hdbrole`, and this file defines a role named `development_debug_role`, and this file is explicitly included in the deployment via the `--deploy` option, then the HDI Deployer grants the deployed `development_debug_role` role to the service instance's global access role (e.g. `FOO::access_role`).\r\n\r\nIn order to remove the privileges granted this way, the file has to be undeployed.\r\n\r\n## Reusable Database Modules\r\n\r\nIn order to allow that an application uses (parts of) the database persistence of a reusable component inside its own persistence model, the HDI Deployer allows to link/include the design-time files of reusable components in a consuming application in an automated way. This mechanism is based on the Node.js package management mechanism for defining, publishing, and consuming reusable database modules which also supports versioning based on the semantic versioning concepts (cf. http://semver.org).\r\n\r\nA reusable database module is considered to have the same `src/` and `cfg/` folder structure as a normal database module. The `src/.hdiconfig` file is mandatory and used by the module mechanism as an indicator that the `src/` and `cfg/` folders belong to a consumable, reusable database module. In addition, the reusable database module needs to have a `package.json` file which defines the module's name, the module's version, etc.\r\n\r\nA complete reusable database module looks as follows:\r\n\r\n```\r\n/\r\n+-- src/\r\n|   +-- .hdiconfig\r\n|   +-- <source files ...>\r\n+-- cfg/\r\n|   +-- <optional configuration files ...>\r\n+-- package.json\r\n```\r\n\r\nThe `package.json` file contains the module’s name, description, version, repository URL, and the set of files which belong to the module:\r\n\r\n`package.json`:\r\n\r\n```\r\n{\r\n  \"name\": \"module1\",\r\n  \"description\": \"A set of reusable database objects\",\r\n  \"version\": \"1.3.1\",\r\n  \"repository\": {\r\n    \"url\": \"git@your.gitserver:modules/module1.git\"\r\n  },\r\n  \"files\": [\r\n    \"src\",\r\n    \"cfg\",\r\n    \"package.json\"\r\n  ]\r\n}\r\n```\r\n\r\nThe reusable database module should be published to a Node.js package management compliant object repository.\r\n\r\nConsumption of a reusable database module is done by adding a dependency in the consuming module's `package.json` file, right beside the dependency to `@sap/hdi-deploy`:\r\n\r\n```\r\n{\r\n  \"name\": \"deploy\",\r\n  \"dependencies\": {\r\n    \"@sap/hdi-deploy\": \"4.4.1\",\r\n    \"module1\": \"1.3.1\",\r\n    \"module2\": \"1.7.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"node node_modules/@sap/hdi-deploy/\"\r\n  }\r\n}\r\n```\r\n\r\nHere, the consuming module requires `module1` in version `1.3.1` and `module2` in version `1.7.0`.\r\n\r\nWhen running `npm install` to download and install the dependencies which are listed in the dependencies section of the `package.json` file, `npm` will also download the reusable database modules and places them into the `node_modules/` folder of the consuming module. For each module a separate subfolder is created with the name of the module.\r\n\r\nWhen the HDI Deployer is triggered to do the actual deployment of the (consuming) database module, it scans the `node_modules/` folder and virtually integrates the `src/` and `cfg/` folders of found reusable database modules into the (consuming) database module’s `lib/` folder. Reusable database modules are identified by the mandatory `src/.hdiconfig` file.\r\n\r\nOn successful deployment, the HDI container will contain the consumed modules below the root-level `lib/` folder, e.g.\r\n\r\n```\r\n/\r\n+-- src/\r\n+-- cfg/\r\n+-- lib/\r\n|   +-- module1/\r\n|   |   +-- src/\r\n|   |   +-- cfg/\r\n|   +-- module2/\r\n|       +-- src/\r\n|       +-- cfg/\r\n```\r\n\r\nFor the time being, it’s not allowed to recursively include reusable database modules.\r\n\r\nThe `cfg/` folders of reusable database modules are also subject to configuration file templating.\r\n\r\n## Configuration File Templating\r\n\r\nThe HDI Deployer implements a templating mechanism for HDI configuration files, e.g. configuration files for synonyms, projection views, etc., based on services which are bound to the `db` module application. By means of this templating mechanism, it is possible to configure synonyms, projection views, etc. to point to the right database schema without knowing the schema name at development time.\r\n\r\nOn startup, the HDI Deployer recursively scans the local `cfg/` folder and picks up all files with a `.*config` suffix, e.g. all `.hdbsynonymconfig`, `.hdbvirtualtableconfig`, etc. files. For all collected files which contain `.configure` markers in their content, it applies the configuration templating and creates transient configuration files which are then deployed to the HDI container.\r\n\r\nFor a synonym configuration file `cfg/LOCAL_TARGET.hdbsynonymconfig`\r\n\r\n    {\r\n        \"LOCAL_TARGET\" : {\r\n            \"target\" : {\r\n                \"schema.configure\"    : \"logical-external-service/schema\",\r\n                \"database.configure\"  : \"logical-external-service/database\",\r\n                \"object\"              : \"TARGET\"\r\n            }\r\n        }\r\n    }\r\n\r\nthe section\r\n\r\n                \"schema.configure\"    : \"logical-external-service/schema\",\r\n                \"database.configure\"  : \"logical-external-service/database\",\r\n                \"object\"              : \"TARGET\"\r\n\r\nwill be transformed by the templating mechanism into\r\n\r\n                \"schema\"              : \"THE_SCHEMA\",\r\n                \"database\"            : \"THE_DATABASE\",\r\n                \"object\"              : \"TARGET\"\r\n\r\nwhere `THE_SCHEMA` and `THE_DATABASE` are the values for the `schema` and `database` fields of the bound service `logical-external-service`, which are denoted by the path expressions`logical-external-service/schema` and `logical-external-service/database`.\r\n\r\nIf a field in the service is missing, it will not be configured and will be removed instead, e.g. `database` might be optional.\r\n\r\nThe names of the services are subject to the service replacements mechanism, which can be used to map a real service, e.g. `real-external-service`, to a logical service name which is used in the configuration files, e.g. `logical-external-service`.\r\n\r\nIt's not always applicable to use `schema.configure`, `database.configure`, etc. in the configuration template files. Therefore, the HDI Deployer provides a generic way of copying a set of properties from the bound service, e.g. schema, database, remote source, etc. if they are present, although the template file doesn't mention them.\r\n\r\nFor the configuration file `cfg/LOCAL_TARGET.hdbsynonymconfig` this could looks as follows:\r\n\r\n    {\r\n        \"LOCAL_TARGET\" : {\r\n            \"target\" : {\r\n                \"*.configure\"         : \"logical-external-service\",\r\n                \"object\"              : \"TARGET\"\r\n            }\r\n        }\r\n    }\r\n\r\nWhen the HDI Deployer encounters a `*.configure` entry, it simply copies all well-known fields which are present in the bound service into the configuration file. The well-known fields are currently `remote`, `database`, and `schema`.\r\n\r\nThe HDI Deployer also supports old-style `.hdbsynonymtemplate` template files: If a `.hdbsynonymtemplate` file is found in the `cfg/` or `src/` folder, then it is processed as a configuration template file and a transient file with the suffix  `.hdbsynonymconfig` is created. A field `grantor` is replaced with the `schema` value from the referenced service; so, a `grantor` field is equivalent to a `\"schema.configure\" : \"the-service/schema\"` entry in a configuration template file.\r\n\r\n## Permissions to Container-External Objects\r\n\r\nAn HDI container is by default equipped with nearly zero database privileges, e.g. the object owner (`#OO` user) is mainly equipped with the `CREATE ANY` privilege on the container's runtime schema (e.g. schema `FOO` for an HDI container `FOO`). Since SAP HANA 2 SPS00, the object owner is equipped with an additional restricted set of privileges for system views in the database's `SYS` schema, e.g. `SYS.VIEWS` or `SYS.TABLES`. These system views apply an additional row-level filter based on the object owner's other privileges, e.g. the object owner can only see metadata in `SYS.VIEWS` for views he has privileges on. So, without additional privileges, the object owner can only see metadata for the objects in his container schema.\r\n\r\nIn order to access database objects inside other database schemata or other HDI containers, and in order to deploy synonyms into the HDI container which point to these container-external objects, at least the object owner needs additional privileges, e.g. for an object `object` in schema `X` `SELECT` privileges on `X.object`:\r\n\r\n```\r\n  +---------------------------------------------------------------+      +------------------------+\r\n  | HDI container FOO                                             |      | other schema X         |\r\n  |                                                synonym ------------------------> object       |\r\n  +---------------------------------------------------/-----------+      +-------------\\----------+\r\n                                                     /                                  \\\r\n                                      o             /                                    \\\r\n                                      X object owner FOO#OO -------------------- SELECT on X.object\r\n```\r\n\r\nPlease also refer to the official [Using Synonyms to Access External Schemas and Objects in XS Advanced](https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.02/en-US/bdc9f7ae66134c279a5f3683bba9b361.html) guide.\r\n\r\n#### .hdbrevokes Files\r\n\r\nStarting with version 3.8, the deployer now allows revoking rights. Anything that can be granted via .hdbgrants can be revoked via .hdbrevokes. Both files, .hdbgrants and .hdbrevokes use the same structure.\r\nFor more information on the structure of these files, see the section about [.hdbgrants Files](#hdbgrants-files).\r\n\r\nThe .hdbrevokes file will be processed before the .hdbgrants file.\r\n\r\n#### .hdbgrants Files\r\n\r\nIn order to automatically assign privileges to the object owner and/or the application binding users, the HDI Deployer provides `.hdbgrants` files with a syntax similar to `.hdbrole` files:\r\n\r\nAn `.hdbgrants` file has the following structure:\r\n\r\n`granting-service.hdbgrants`:\r\n\r\n```\r\n{\r\n  \"granting-service\": {\r\n    \"object_owner\": {\r\n      <privileges>\r\n    },\r\n    \"application_user\": {\r\n      <privileges>\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe top-level keys define the names of the bound services which \"grant\" the privileges, these are the \"grantors\", e.g. `granting-service` in the example. The next level defines to which users the privileges will be granted, these are the \"grantees\": `object_owner` is used for the HDI container's object owner, and `application_user` marks the application users which are bound to the application modules, e.g. the Node.js module. The third level defines the set of privileges in a `.hdbrole`-like structure.\r\n\r\nOn startup, the HDI Deployer looks for `.hdbgrants` files and processes them as follows: For each grantor in the file, the HDI Deployer looks up a bound service with the name (subject to service replacements), connects to the database with the service's credentials, and grants the specified privileges to the grantees. If the `schema` field is omitted for a privilege, then the grantor's `schema` property is used. If the `name` field in a `global_object_privileges` element of type `REMOTE SOURCE` is omitted, then the grantor's `remote` property is used.\r\n\r\nFor backwards compatibility, also the suffix `.hdbsynonymgrantor` is supported.\r\n\r\nExample of a `cfg/external-access.hdbgrants` file with some privileges for the object owner:\r\n\r\n```\r\n{\r\n  \"external-access\": {\r\n    \"object_owner\": {\r\n      \"system_privileges\" : [\r\n        {\r\n          \"privileges\" : [ \"SYSTEM_PRIVILEGE_1\" ],\r\n          \"privileges_with_admin_option\" : [ \"SYSTEM_PRIVILEGE_2\", \"SYSTEM_PRIVILEGE_3\" ]\r\n        }\r\n      ],\r\n      \"global_roles\" : [\r\n        {\r\n          \"roles\" : [ \"GLOBAL_ROLE_1\", \"GLOBAL_ROLE_2\" ],\r\n          \"roles_with_admin_option\" : [ \"GLOBAL_ROLE_3\", \"GLOBAL_ROLE_4\" ]\r\n        }\r\n      ],\r\n      \"schema_privileges\" : [\r\n        {\r\n          \"privileges\" : [ \"INSERT\", \"UPDATE\" ],\r\n          \"privileges_with_grant_option\" : [ \"SELECT\" ]\r\n        }\r\n      ],\r\n      \"schema_roles\" : [\r\n        {\r\n          \"roles\" : [ \"SCHEMA_ROLE_1\", \"SCHEMA_ROLE_2\" ],\r\n          \"roles_with_admin_option\" : [ \"SCHEMA_ROLE_3\", \"SCHEMA_ROLE_4\" ]\r\n        }\r\n      ],\r\n      \"object_privileges\" : [\r\n        {\r\n          \"name\": \"AN_OBJECT\",\r\n          \"privileges\": [ \"INSERT\", \"UPDATE\" ],\r\n          \"privileges_with_grant_option\" : [ \"SELECT\" ]\r\n        }\r\n      ],\r\n      \"global_object_privileges\" : [\r\n        {\r\n          \"name\" : \"A_REMOTE_SOURCE\",\r\n          \"type\" : \"REMOTE SOURCE\",\r\n          \"privileges\" : [ \"CREATE VIRTUAL TABLE\" ],\r\n          \"privileges_with_grant_option\" : [ \"CREATE VIRTUAL PROCEDURE\" ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe following elements and keys are supported for backwards compatibility or for compatibility with `.hdbrole`:\r\n\r\n- `container_roles`: grant roles from an HDI container; superseded by `schema_roles` which works for normal schemas and HDI containers\r\n```\r\n      \"container_roles\" : [ \"SCHEMA_ROLE_1\", \"SCHEMA_ROLE_2\" ]\r\n```\r\n- `roles`: grant global roles; superseded by `global_roles`:\r\n```\r\n      \"roles\" : [ \"GLOBAL_ROLE_1\", \"GLOBAL_ROLE_2\" ]\r\n```\r\n- string-array-style roles and `names` key (maps to the non-grant/admin-option variant):\r\n```\r\n      \"global_roles\" : [\r\n        \"GLOBAL_ROLE_1\",\r\n        {\r\n          \"roles\" : [ \"GLOBAL_ROLE_1\", \"GLOBAL_ROLE_2\" ]\r\n        },\r\n        {\r\n          \"names\" : [ \"GLOBAL_ROLE_1\", \"GLOBAL_ROLE_2\" ]\r\n        },\r\n        {\r\n          \"roles_with_admin_option\" : [ \"GLOBAL_ROLE_3\", \"GLOBAL_ROLE_4\" ]\r\n        },\r\n        \"GLOBAL_ROLE_2\"\r\n      ]\r\n```\r\n\r\nIf any non-container privileges are used, then the object owner (`#OO` user) will need to be given these privileges WITH GRANT option by a user-defined granting-service. Otherwise it won't be able to grant these privileges to e.g. a role in the container.\r\n\r\n#### Creating a Granting Service\r\n\r\nThe HDI Deployer supports the following types of granting-services:\r\n\r\n- `sql`: a technical database user with GRANT privileges for the required object privileges, roles, system privileges, etc.\r\n- `hdi`: an HDI container with access to the container's GRANT APIs. An HDI container can only grant roles from the container, without admin option.\r\n- `procedure`: a technical database user with EXECUTE privileges on a stored procedure which has GRANT privileges for the required object privileges, roles, system privileges, etc.\r\n- `ignore`: grants were already given at the database-level and the HDI Deployer will ignore the content of the `.hdbgrants` file.\r\n\r\nFor the HDI container case, the corresponding service can simply be bound to the db module application. The HDI Deployer recognizes the bound service by its `hdi_user` value in the credentials section and calls the container's API procedures to grant the privileges from the `.hdbgrants` file.\r\n\r\nIn case a technical database user is used, a 'user-defined service' must be created for this purpose in the same space as the container. The service needs to be set up with the permissions of a specified database user to connect to the database and to grant the privileges specified in the `.hdbgrants` files during application deployment.\r\n\r\nSuch a user-provided service can be created as follows:\r\n\r\n- Open a command shell and log on to XSA:\r\n`xs login`\r\n- Change to the target space where you want to create the user-defined service:\r\n`xs target -s <SPACE>`\r\n- Create the user-defined service (e.g. `grantor-service`):\r\n`xs cups grantor-service -p '{ \"host\": \"host.acme.com\", \"port\": \"30015\", \"certificate\": \"<myCertificate>\", \"user\": \"TARGET_USER\", \"password\": \"Grant_123\", \"schema\": \"TARGET_SCHEMA\", \"tags\": [ \"hana\" ] }'`\r\n  - `\"host\"/\"port\"`: Required for the connection to the database: port is the SQL port of the index server.\r\n  - `\"certificate\"`: If the database is configured to only accept secure connections, then the granting-service requires an SSL certificate that must be included in the user-provided service, for example, using the \"certificate\":\"<myCertificate>\" parameter.\r\n  - `\"user\"/\"password\"`: Connection details for a database user that has grant permissions for the objects in the schema.\r\n  - `\"schema\"`: The database schema that contains the objects to which access is to be granted.\r\n  - `\"type\"`: The type of the grantor mechanism; valid values are `\"hdi\"`, `\"sql\"`, or `\"procedure\"`. If the type is not specified, then the type is auto-sensed (see details below).\r\n- Use the command `xs services` to display a list of services available in the current space; the 'grantor-service' service should be visible.\r\n\r\nFor Cloud Foundry, use the corresponding `cf` commands.\r\n\r\nNote: Starting with version 3.0.0 of the HDI Deployer, the `\"host\"`, `\"port\"`, and `\"certificate\"` parameters are no longer required since they can be obtained from the target container binding. In this case, you must only specify the `\"user\"`, `\"password\"`, and `\"schema\"` when creating the user-provided service, e.g. `xs cups grantor-service -p '{ \"user\": \"TARGET_USER\", \"password\": \"Grant_123\", \"schema\": \"TARGET_SCHEMA\", \"tags\": [ \"hana\" ] }'`.\r\n\r\nIf the `\"type\"` is not specified, then the type is selected based on the following rule: if the field `hdi_user` is present, then the type is auto-sensed as `hdi`; otherwise, the type is set to `sql`.\r\n\r\nIf the technical database user does not have GRANT privileges by its own, but only EXECUTE privileges on a stored procedure which can grant the privileges, then the following settings are required:\r\n\r\n- At the database, a GRANT procedure must exist (or be visible) in the schema which is used in the user-provided service; an example is shown below.\r\n- The technical database user must have EXECUTE privileges on the GRANT procedure.\r\n- The name of the GRANT procedure must be specified in the user-provided service in the `\"procedure\"` field, e.g. `\"procedure\": \"GRANT\"`.\r\n- The scheme name of the GRANT procedure can be specified in the user-provided service in the `\"procedure_schema\"` field, e.g. `\"procedure_schema\": \"A_SCHEMA\"`.\r\n- The user-provided service must contain a `\"type\"` field with the value `\"procedure\"`.\r\n\r\nFor the different types of privileges, the following fields are passed to the GRANT procedure:\r\n\r\n| PRIVILEGE_TYPE | PRIVILEGE_NAME | OBJECT_SCHEMA | OBJECT_NAME | OBJECT_TYPE | GRANTEE_SCHEMA | GRANTEE_NAME | GRANTABLE |\r\n| --- | --- | --- | --- | --- | --- | --- | --- |\r\n| SCHEMA_OBJECT_PRIVILEGE | privilege | schema | object | NULL | NULL | grantee | TRUE/FALSE |\r\n| GLOBAL_OBJECT_PRIVILEGE | privilege | NULL | object | type | NULL | grantee | TRUE/FALSE |\r\n| SCHEMA_ROLE | NULL | schema | role | NULL | NULL | grantee | TRUE/FALSE |\r\n| GLOBAL_ROLE | NULL | NULL | role | NULL | NULL | grantee | TRUE/FALSE |\r\n| SCHEMA_PRIVILEGE | privilege | NULL | schema | NULL | NULL | grantee | TRUE/FALSE |\r\n| SYSTEM_PRIVILEGE | privilege | NULL | NULL | NULL | NULL | grantee | TRUE/FALSE |\r\n\r\nNote: This procedure does not work for SAP HANA1 SPS11, since `REPLACE_REGEXPR` is not supported. Please use the sample procedure provided with older releases of the deployer.\r\nThe old sample procedure does not correctly handle component names of system privileges in .hdbgrants files.\r\n\r\nExample of a GRANT procedure:\r\n\r\n```\r\nCREATE PROCEDURE GRANT(\r\n  IN PRIVILEGES TABLE (\r\n    PRIVILEGE_TYPE NVARCHAR(128), -- 'SCHEMA_OBJECT_PRIVILEGE'\r\n                                  -- 'GLOBAL_OBJECT_PRIVILEGE'\r\n                                  -- 'SCHEMA_ROLE'\r\n                                  -- 'GLOBAL_ROLE'\r\n                                  -- 'SCHEMA_PRIVILEGE'\r\n                                  -- 'SYSTEM_PRIVILEGE'\r\n    PRIVILEGE_NAME NVARCHAR(256), -- cf. SYS.PRIVILEGES\r\n    OBJECT_SCHEMA NVARCHAR(256),  -- NULL or schema\r\n    OBJECT_NAME NVARCHAR(256),\r\n    OBJECT_TYPE NVARCHAR(128),    -- NULL or 'REMOTE SOURCE'\r\n    GRANTEE_SCHEMA NVARCHAR(256), -- NULL or schema\r\n    GRANTEE_NAME NVARCHAR(256),\r\n    GRANTABLE NVARCHAR(5)         -- 'TRUE' or 'FALSE'\r\n  )\r\n)\r\nLANGUAGE SQLSCRIPT\r\nSQL SECURITY DEFINER\r\nAS\r\nBEGIN\r\n  DECLARE ERROR CONDITION FOR SQL_ERROR_CODE 10000;\r\n  DECLARE CURSOR PRIVILEGES_CURSOR FOR SELECT * FROM :PRIVILEGES;\r\n\r\n  -- TODO: add checks for valid grantees, e.g. check with _SYS_DI#<group>.M_CONTAINER_SCHEMAS\r\n  --       or with SYS.USERS and creator and grantee like '%#OO'\r\n  -- TODO: keep only functionality that should be allowed, e.g. only allow to grant schema-local\r\n  --       roles, but no object privileges, etc.\r\n\r\n  FOR PRIVILEGE AS PRIVILEGES_CURSOR\r\n  DO\r\n    DECLARE TO_GRANTEE_CLAUSE NVARCHAR(512);\r\n    DECLARE GRANTABLE_CLAUSE NVARCHAR(512) = '';\r\n\r\n    IF PRIVILEGE.GRANTEE_SCHEMA IS NULL THEN\r\n      TO_GRANTEE_CLAUSE = ' TO \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.GRANTEE_NAME) || '\"';\r\n    ELSE\r\n      TO_GRANTEE_CLAUSE = ' TO \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.GRANTEE_SCHEMA)\r\n                                  || '\".\"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.GRANTEE_NAME) || '\"';\r\n    END IF;\r\n\r\n    IF PRIVILEGE.GRANTABLE = 'TRUE' THEN\r\n      IF PRIVILEGE.PRIVILEGE_TYPE = 'SYSTEM_PRIVILEGE' OR\r\n         PRIVILEGE.PRIVILEGE_TYPE = 'GLOBAL_ROLE' OR\r\n         PRIVILEGE.PRIVILEGE_TYPE = 'SCHEMA_ROLE' THEN\r\n        GRANTABLE_CLAUSE = ' WITH ADMIN OPTION';\r\n      ELSE\r\n        GRANTABLE_CLAUSE = ' WITH GRANT OPTION';\r\n      END IF;\r\n    ELSEIF PRIVILEGE.GRANTABLE != 'FALSE' THEN\r\n      SIGNAL ERROR SET MESSAGE_TEXT = 'unsupported value for GRANTABLE: '\r\n                                      || PRIVILEGE.GRANTABLE;\r\n    END IF;\r\n\r\n    IF PRIVILEGE.PRIVILEGE_TYPE = 'SCHEMA_OBJECT_PRIVILEGE' THEN\r\n      EXEC 'GRANT \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.PRIVILEGE_NAME) || '\"'\r\n        || ' ON \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_SCHEMA)\r\n                   || '\".\"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_NAME) || '\" '\r\n        || TO_GRANTEE_CLAUSE\r\n        || GRANTABLE_CLAUSE;\r\n    ELSEIF PRIVILEGE.PRIVILEGE_TYPE = 'GLOBAL_OBJECT_PRIVILEGE' THEN\r\n      IF PRIVILEGE.OBJECT_TYPE = 'REMOTE SOURCE' THEN\r\n        EXEC 'GRANT \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.PRIVILEGE_NAME) || '\"'\r\n          || ' ON ' || PRIVILEGE.OBJECT_TYPE || ' \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_NAME) || '\" '\r\n          || TO_GRANTEE_CLAUSE\r\n          || GRANTABLE_CLAUSE;\r\n      ELSE\r\n        SIGNAL ERROR SET MESSAGE_TEXT = 'unsupported value for OBJECT_TYPE for GLOBAL_OBJECT_PRIVILEGE: '\r\n                                        || PRIVILEGE.OBJECT_TYPE;\r\n      END IF;\r\n    ELSEIF PRIVILEGE.PRIVILEGE_TYPE = 'SCHEMA_ROLE' THEN\r\n      EXEC 'GRANT \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_SCHEMA)\r\n                     || '\".\"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_NAME) || '\" '\r\n        || TO_GRANTEE_CLAUSE\r\n        || GRANTABLE_CLAUSE;\r\n    ELSEIF PRIVILEGE.PRIVILEGE_TYPE = 'GLOBAL_ROLE' THEN\r\n      EXEC 'GRANT \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_NAME) || '\" '\r\n        || TO_GRANTEE_CLAUSE\r\n        || GRANTABLE_CLAUSE;\r\n    ELSEIF PRIVILEGE.PRIVILEGE_TYPE = 'SCHEMA_PRIVILEGE' THEN\r\n      EXEC 'GRANT \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.PRIVILEGE_NAME) || '\"'\r\n        || ' ON SCHEMA \"' || ESCAPE_DOUBLE_QUOTES(PRIVILEGE.OBJECT_NAME) || '\" '\r\n        || TO_GRANTEE_CLAUSE\r\n        || GRANTABLE_CLAUSE;\r\n    ELSEIF PRIVILEGE.PRIVILEGE_TYPE = 'SYSTEM_PRIVILEGE' THEN\r\n      EXEC 'GRANT \"' || REPLACE_REGEXPR('\\.' IN ESCAPE_DOUBLE_QUOTES(PRIVILEGE.PRIVILEGE_NAME) WITH '\".\"') || '\"'\r\n        || TO_GRANTEE_CLAUSE\r\n        || GRANTABLE_CLAUSE;\r\n    ELSE\r\n      SIGNAL ERROR SET MESSAGE_TEXT = 'unsupported value for PRIVILEGE_TYPE: '\r\n                                      || PRIVILEGE.PRIVILEGE_TYPE;\r\n    END IF;\r\n  END FOR;\r\nEND;\r\n```\r\n\r\n#### Defining the Granting Service in the mta[d].yaml\r\n\r\nIf the container needs a granting-service, then besides the service itself, the Application Development Descriptor mta.yaml needs to be adjusted for the deployer to be able to find the service. The mta.yaml must be modified to:\r\n\r\n1. The container of the `db` module needs to get a `TARGET_CONTAINER` property to mark the service that corresponds to the container\r\n2. A new entry in `requires` is added for the granting-service\r\n3. A new entry in `resources` is added for the granting-service\r\n\r\nExample:\r\n`mta.yaml`:\r\n\r\n```\r\nschema-version: '2.0'\r\nID: granting-service-example\r\nversion: 0.0.1\r\n\r\nmodules:\r\n  - name: db\r\n    type: hdb\r\n    path: db\r\n    requires:\r\n      - name: hdi-container\r\n        properties:                                     # 1.\r\n          TARGET_CONTAINER: ~{hdi-container-service}    # 1.\r\n          \r\n      - name: granting-service                          # 2.\r\n          \r\nresources:\r\n  - name: hdi-container\r\n    type: com.sap.xs.hdi-container\r\n    properties:\r\n      hdi-container-service: ${service-name}        \r\n\r\n  - name: granting-service                              # 3.\r\n    type: org.cloudfoundry.existing-service             # 3.\r\n```\r\n\r\n## Environment Variables for Applications\r\n\r\n`@sap/hdi-deploy` supports (re-)configuration via the following environment variables which are exposed to applications, e.g. via the CF/XSA `manifest.yml` or the MTA descriptor `mta.yaml`:\r\n\r\n- `TARGET_CONTAINER`: (optional) service name that specifies the HDI target container (needed, if more than one HDI service is bound to the HDI Deployer)\r\n- `SERVICE_REPLACEMENTS`: (optional) JSON-structured list of service replacements, e.g. `[ { \"key\": \"logical-service-name-1\", \"service\":\"real-service-name-1\"}, { \"key\": \"logical-service-name-2\", \"service\":\"real-service-name-2\"} ]`, where the logical service names refer to the names in the HDI content and the real service names refer to the services which are bound to the HDI Deployer via `VCAP_SERVICES`; if the HDI content references a service name which is not listed in the replacements, then this name is used as a real service name\r\n\r\nThe structure of the `SERVICE_REPLACEMENTS` environment variable is based on the MTA specification in order to enable MTA group assignments.\r\n\r\nExample `manifest.yml`:\r\n\r\n    applications:\r\n    - name: app-db\r\n      path: db\r\n      health-check-type: process\r\n      services:\r\n        - app-database\r\n        - real-grantor-service\r\n        - real-external-service\r\n      env:\r\n        TARGET_CONTAINER: app-database\r\n        SERVICE_REPLACEMENTS: >\r\n        [\r\n          {\r\n            \"key\"     : \"logical-grantor-service\",\r\n            \"service\" : \"real-grantor-service\"\r\n          },\r\n          {\r\n            \"key\"     : \"logical-external-service\",\r\n            \"service\" : \"real-external-service\"\r\n          }\r\n        ]\r\n\r\n## Environment Variables for Infrastructure / Development Tools\r\n\r\n`@sap/hdi-deploy` supports (re-)configuration via the following environment variables for infrastructure / development tools like the Deploy Service or internal build tools of the WEB IDE\r\n\r\n- `EXIT`: (optional) if set, the HDI Deployer will exit when the deployment is done; using the environment variable is equivalent to passing a `--exit` on the command line\r\n- `DEPLOY_ID`: (optional) if set, the given id will be written to the final application log entry (custom id, to support processes in parsing log output\r\n- `HDI_DEPLOY_OPTIONS`: (optional) JSON-structured set of options for the HDI Deployer, e.g. `{ \"auto_undeploy\" : true, \"exit\" : true, \"root\" : \"/volumes/A/workspaces/B/db/\", \"include_filter\" : [ \"src/\", \"cfg/\" ] }`; command line options can be translated to `HDI_DEPLOY_OPTIONS` options by replacing the `-`s in the option names with `_`s; options which can accept multiple values require a JSON array with the values, e.g. path options like the include-filter option.\r\n- `APPLICATION_ID`: (optional, fallback `SAP_HDI`) this will be used, in conjunction with the `space_name` and the `organization_name` of the `VCAP_APPLICATION` to set the session variable `APPLICATION` for all connections to the database. This setting may only be used by applications from SAP.\r\n- `APPLICATION_VERSION_INFO`: (optional) this will be logged to the command line, to allow logging of some additional information about the application.\r\n\r\nOptions from `HDI_DEPLOY_OPTIONS` override options which are passed on the command line.\r\n\r\n## Ignore List\r\nThe hdi deployer supports ignoring certain files via an `.hdiignore` file. The file has to be placed at the root of the project folder, just like the `undeploy.json`.\r\nThe file has a structure similar to a `.gitignore` file, simply lines of texts specifying the paths to exclude. Both \"real\" paths and path patterns are supported.\r\n```\r\nsrc/table_1.hdbtable\r\nsrc/*_2.hdbtable\r\n```\r\n\r\nThe file works just like the `--exclude-filter` option and they can be used at the same time.\r\n\r\n## Options for Interactive Scenarios\r\n\r\n`@sap/hdi-deploy` supports the following options for interactive deployment scenarios, e.g. for orchestration via the WEB IDE or for CI scripts:\r\n\r\n- `--version`: print version and exit\r\n- `-t, --trace`: enable tracing\r\n- `--use-hdb`: enable the \"hdb\" client to connect to the database instead of \"@sap/hana-client\"; by default \"@sap/hana-client\" is used\r\n- `--hana-client-trace`: enable tracing for the SAP HANA client; All interactions with the SAP HANA server will be traced which can lead to a large amount of trace information to be written\r\n- `--hana-client-packet-trace`: enable PACKET tracing for the SAP HANA client; Must only be used in combination with --hana-client-trace\r\n- `--[no-]verbose`: [don't] print detailed log messages to the console\r\n- `--structured-log <file>`: write log messages as JSON objects into the given file; messages are appended if the file already exists\r\n- `--[no-]exit`: [don't] exit after deployment of artifacts\r\n- `--[no-]lock-container`: [don't] acquire the container lock while working with the container\r\n- `--root <path>`: use the given root path for artifacts\r\n- `--working-set [<path> ..]`: define the given paths (directories and files) as the working set; a non-default working set applies additional restrictions, e.g. other options might be disallowed\r\n- `--include-filter [<path> ..]`: only include the given paths (directories and files) during delta detection\r\n- `--deploy [<file> ..]`: explicitly schedule the given files for deploy; extends the `include-filter` for collecting local files. Instead of a real path, a path pattern like src/**/*.hdbtable can be used as well.\r\n- `--[no-]treat-unmodified-as-modified`: [don't] treat unmodified files during delta detection as modified files\r\n- `--undeploy [<file> ..]`: explicitly schedule the given files for undeploy\r\n- `--parameter [<key>=<value> ..]`: pass the given list of key-value parameters to the deployment\r\n- `--path-parameter [<path>:<key>=<value> ..]`: pass the given list of path-key-value parameters to the deployment\r\n- `--[no-]auto-undeploy`: [don't] undeploy artifacts automatically based on delta detection and ignore the `undeploy.json` file\r\n- `--[no-]treat-warnings-as-errors`: [don't] treat warnings as errors\r\n- `--[no-]validate-external-dependencies`: [don't] start a make, even if no files are in the deploy/undeploy sets; all deployed synonyms, projection views, and virtual tables in the container will be checked for changes to referenced objects and redeployed, if a change is detected.\r\n- `--[no-]simulate-make`: [don't] simulate the make and skip post-make activities; pre-make activities still take effect, e.g. grants\r\n- `--connection-timeout <ms>`: number of milliseconds to wait for the database connection(s)\r\n- `--delete-timeout <ms>`: number of milliseconds to wait for the DELETE call\r\n- `--write-timeout <ms>`: number of milliseconds to wait for the WRITE call\r\n- `--lock-container-timeout <ms>`: number of milliseconds to wait for the container lock\r\n- `--exclude-filter [<path> ..]`: exclude the given paths during: file walk, delta detection and when explicitly scheduled via --(un)deploy\r\n- `--[no-]treat-wrong-ownership-as-errors`: [don't] treat wrong ownership of objects as errors, not enabled by default\r\n- `--[no-]migrationtable-development-mode`: [don't] pass the development mode flag for migration tables to HDI, if the parameter is supported by the server, not enabled by default\r\n- `--[no-]liveness-ping`: [don't] send a sign of life from time to time, by default, a sign of life will be sent\r\n- ` --[no-]live-messages`: [don't] display the make messages while the make is still in progress, by default, the messages will be displayed while the make is in progress\r\n\r\nSee `--help` for details and defaults.\r\n\r\nOptions can also be passed to `@sap/hdi-deploy` via the `HDI_DEPLOY_OPTIONS` environment variable.\r\n\r\n## Supported Features\r\n\r\n`@sap/hdi-deploy` exposes its set of features via the `info` option, which can be passed as `--option` or via `HDI_DEPLOY_OPTIONS`, e.g.\r\n\r\n    node deploy --info [<component> [<component> [...]]]\r\n\r\nwhere a list of components can be specified.\r\n\r\nThe `info` option allows to pass multiple components. The `info` request for these components is optional, e.g. if the HDI Deployer doesn't support the component, then it will not throw an error, but simply not return information for that component. The special component `all` will return the information for all known components; `all` is the default if no component is specified. For certain future components, e.g. `server`, the HDI Deployer might need to connect to the HDI container in the database and retrieve feature information from there.\r\n\r\nExamples:\r\n\r\n```\r\nnode deploy --info all\r\nnode deploy --info client server\r\n```\r\n\r\nThe result of an `info` call is a JSON document where the top-level objects correspond to the requested components. Each component should at least report its name, its version, and the set of supported features with name and version number (version numbers are simple numbers (no dots, no double-dots)).\r\n\r\nIf a version number is negative, then the feature is supported by the client, but not supported by the server.\r\n\r\nFor a `--info client` call, the document looks as follows:\r\n\r\n```\r\n{\r\n    \"client\": {\r\n        \"name\": \"@sap/hdi-deploy\",\r\n        \"version\": \"4.4.1\",\r\n        \"features\": {\r\n            \"info\": 2,\r\n            \"verbose\": 1,\r\n            \"structured-log\": 1,\r\n            \"lock-container\": 1,\r\n            \"default-access-role\": 1,\r\n            \"grants\": 4,\r\n            \"working-set\": 1,\r\n            \"include-filter\": 1,\r\n            \"deploy\": 1,\r\n            \"treat-unmodified-as-modified\": 1,\r\n            \"undeploy\": 1,\r\n            \"parameter\": 1,\r\n            \"path-parameter\": 1,\r\n            \"treat-warnings-as-errors\": 1,\r\n            \"validate-external-dependencies\": 1,\r\n            \"simulate-make\": 1,\r\n            \"service-replacements\": 1,\r\n            \"modules\": 2,\r\n            \"config-templates\": 2,\r\n            \"environment-options\": 1,\r\n            \"undeploy-allowlist\": 1\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFor the `server` component, the document would also contain the following data:\r\n\r\n```\r\n{\r\n...\r\n    \"server\": {\r\n        \"name\": \"sap-hana-database\",\r\n        \"version\": \"1.00.120.04.0000000000\",\r\n        \"features\": {}\r\n    }\r\n}\r\n```\r\n\r\n\r\n## Deployment via hdi-dynamic-deploy\r\n\r\nThe standard XSA/CF way for deploying HDI content at runtime is to make use of @sap/hdi-dynamic-deploy instead of @sap/hdi-deploy directly. The @sap/hdi-dynamic-deploy app is an http server that calls @sap/hdi-deploy when it receives a corresponding HTTP POST request. See the @sap/hdi-dynamic-deploy module for more information.\r\n\r\n## Using hdi-deploy as a Node.js library\r\n\r\nSince version 3.3.0 of @sap/hdi-deploy it is also possible to use it as a Node.js library. By requiring the library.js file from the project root it is possible to start the deployer app from within another Node.js app. The module exports the function\r\n\r\n```\r\nfunction deploy(contentDir, deployerEnv, callback, io)\r\n```\r\n\r\nwith the following parameters:\r\n\r\n- `contentDir`: string containing a path pointing to the root of the db module to be deployed\r\n- `deployerEnv`: javascript object containing the OS environment for the call to the deployer (e.g. containing VCAP_SERVICES)\r\n- `callback`: a standard callback of the form (errors, result), where result is the result of the call to the deployer of the form:\r\n\r\n```\r\n{\r\n  messages: [<list of result messages from the di server>],\r\n  exitCode: <exit code of the call to the deployer app, one of -1, 0, 1.>,\r\n  signal: <signal that the child process was closed with>\r\n}\r\n```\r\n  \r\n- `io` (optional): javascript object containing two callback functions `io.stdoutCB` and `io.stderrCB` of the form `function(data)` for streaming stdout and stderr of the call to the deployer, defaults to piping stdout and stderr of the deployer to stdout and stderr of the calling Node.js app\r\n\r\nThe exit codes have different meanings:\r\n\r\n- -1: The child process was most likely killed externally, check the signal property for details.\r\n- 0: Deployment done succesfully.\r\n- 1: Deployment failed, errors occurred.\r\n\r\nThe signal property is only set, if exitCode is -1.\r\n","changelog":"## 4.4.1\r\nFeatures:\r\n- use @sap/hana-client@2.13.13\r\n- use hdb@0.19.3\r\n- use @sap/xsenv@3.3.2\r\n\r\n## 4.4.0\r\nFeatures:\r\n- added option --use-hdb to enable using hdb client instead of @sap/hana-client for connecting to the database\r\n- use @sap/hana-client@2.12.25\r\n\r\n## 4.3.3\r\nFeatures:\r\n- use @sap/hdi@4.3.1\r\n- use @sap/hana-client@2.12.20\r\n- use async@3.2.3\r\n\r\nFixes :\r\n- handle empty user-provided services\r\n\r\n## 4.3.2\r\nFixes:\r\n- maintain shrinkwrap with minimist@1.2.6\r\n\r\n## 4.3.1\r\nFeatures:\r\n- added support for retrieving credentials from kubernetes\r\n- use @sap/hdi@4.3.0\r\n- use @sap/hana-client@2.11.20\r\n\r\nFixes:\r\n- log long lists without truncation\r\n- fixed passing arbitrary parameters to @sap/hana-client\r\n\r\n## 4.3.0\r\nFeatures:\r\n- allow passing arbitrary parameters to @sap/hana-client\r\n- use @sap/hdi@4.2.0\r\n- use @sap/hana-client@2.10.20\r\n\r\n## 4.2.3\r\nFeatures:\r\n- allow pattern negations in the undeploy.json file\r\n\r\n## 4.2.2\r\nFixes:\r\n- removed extraneous packages in shrinkwrap\r\n\r\n## 4.2.1\r\nFeatures:\r\n- added option `--hana-client-trace` to enable tracing for the SAP HANA client interactions with the SAP HANA server\r\n- added option `--hana-client-packet-trace` to enable packet tracing for the SAP HANA client interactions with the SAP HANA server\r\n- added custom listeners to handle SIGBUS errors\r\n\r\nFixes:\r\n- log client messages and errors to structured log\r\n\r\n## 4.2.0\r\nFeatures:\r\n- allow wildcard paths in the undeploy.json file to enable the undeployment of a set of files without having to specify every single file\r\n- added, modified, deleted and \"treated as modified\" files are logged during deployment\r\n- use @sap/hdi@4.1.0\r\n- use @sap/hana-client@2.9.28\r\n- Node 16.x support\r\n\r\nRemoved:\r\n- Node 8.x and 10.x support\r\n\r\n## 4.1.0\r\nFeatures:\r\n- provide `--validate-external-dependencies` option to always start a make, even if no files are in the deploy/undeploy sets\r\n- change wording for `\"whitelist\"` to `\"allowlist\"`\r\n- use @sap/hdi@4.0.2\r\n- use @sap/hana-client@2.8.20\r\n- added support for reading a `.env` file in the absence of `default-env.json` file\r\n\r\nFixes:\r\n- with `--trace`, ensure that the complete VCAP_SERVICES are logged\r\n\r\n## 4.0.6\r\nFeatures:\r\n- with `--trace`, log target credentials before checking server version\r\n\r\n## 4.0.5\r\nFixes:\r\n- updated handlebars to 4.7.7\r\n\r\n## 4.0.4\r\nFeatures:\r\n- use @sap/hdi@4.0.1\r\n- use @sap/hana-client@2.7.26\r\n\r\nFixes:\r\n- corrected improper representation of time in log\r\n\r\n## 4.0.3\r\nFixes:\r\n- ensure all the messages returned by library.js are structured\r\n- stricter tag validation\r\n\r\n## 4.0.2\r\nFeatures:\r\n- use @sap/hdi@3.0.2\r\n- use @sap/hana-client@2.7.21\r\n- log start and end time of deployments\r\n\r\n## 4.0.1\r\nFixes:\r\n- use @sap/xsenv@3.1.0 for full node 14 support\r\n\r\n## 4.0.0\r\nFeatures:\r\n- use @sap/hdi@3.0.1\r\n- use @sap/hana-client@2.7.16\r\n- Node 14.x support\r\n\r\nRemoved:\r\n- Node 6.x support\r\n\r\n## 3.11.15\r\nFixes:\r\n- set default for --delete-timeout and --write-timeout to 15 minutes instead of 15 seconds\r\n\r\n## 3.11.14\r\nFeatures:\r\n- introduce options --delete-timeout and --write-timeout, that can be used to set a timeout for the DELETE and WRITE HDI calls.\r\n\r\n## 3.11.13\r\nFeatures:\r\n- better logging of WRITE/DELETE calls\r\n\r\nFixes:\r\n- update dependencies\r\n- only handle \"CDS METADATA\" on non-HANA Cloud systems\r\n- always log errors to the parent process when using library.js\r\n- gracefully handle \"trace\":false via HDI_DEPLOY_OPTIONS\r\n\r\n## 3.11.12\r\nChanges:\r\n- segfault-handler is no longer installed as a optional dependency - needs to be provided via parallel installation if required\r\n\r\nFixes:\r\n- check the return code of HDI API calls to correctly detect errors\r\n\r\n## 3.11.11\r\nFixes:\r\n- close all connections before calling process.exit() to work around sporadic segmentation fault\r\n\r\n## 3.11.10\r\nFixes:\r\n- fixed a memory leak with `--live-messages`\r\n\r\n## 3.11.9\r\nFeatures:\r\n- node 12 support\r\n\r\nFixes:\r\n- updated dependencies\r\n- gracefully handle a missing grantor service when using library.js\r\n\r\n## 3.11.8\r\nFixes:\r\n- specify segfault-handler as an optional dependency\r\n\r\n## 3.11.7\r\nFixes:\r\n- better debugging capabilities for segmentation faults\r\n\r\n## 3.11.6\r\nFixes:\r\n- remove duplicate messages when using the deployer as a library\r\n- update dependencies\r\n\r\n## 3.11.5\r\nFixes:\r\n- when used as a library, do not exit until all messages have been sent to the parent process\r\n\r\nFeatures:\r\n- use hana-client 2.4.162\r\n\r\n## 3.11.4\r\nFixes:\r\n- update handlebars\r\n\r\n## 3.11.3\r\nFeatures:\r\n- update dependencies\r\n\r\nFixes:\r\n- correctly handle SQL grantors\r\n\r\n## 3.11.2\r\nFeatures:\r\n- update dependencies\r\n\r\n## 3.11.1\r\nFeatures:\r\n- node 10 support\r\n- updated dependencies\r\n\r\n## 3.11.0\r\nFeatures:\r\n- added option `--liveness-ping` to periodically send a signal that notifies the user that the deployer is still working\r\n- added option `--live-messages` to display the make messages while the make is still in progress\r\n- added function `clean-env` to `library.js` to allow cleaning a passed environment of all deployer-related variables\r\n\r\nFixes:\r\n- `library.js` would sometimes return with `exitCode` null because of unexpected closing of the child process\r\n- update dependencies\r\n- add missing options to HDI_DEPLOY_OPTIONS\r\n\r\n## 3.10.0\r\nFeatures:\r\n- passwords can be split over multiple services\r\n\r\n## 3.9.4\r\nFixes:\r\n- update handlebars\r\n\r\n## 3.9.3\r\nFixes:\r\n- add full support for .hdbmigrationtable files by adding the --[no-]migrationtable-development-mode flag\r\n\r\n## 3.9.2\r\nFixes:\r\n- the private key used for mutual authentication was logged if tracing is enabled\r\n- mutual auth was missing on some database connections\r\n- some database connections were not closed correctly\r\n\r\n## 3.9.1\r\nFixes:\r\n- revert changes to hdi actions that could possibly cause a behavior change\r\n\r\n## 3.9.0\r\nFeatures:\r\n- allow passing ssl connection parameters in service binding\r\n- allow mutual auth via parameters in service binding\r\n- set session variable APPLICATION on all HANA connections\r\n- support path parameters for HDI\r\n- allow development debug role similar to the default access role\r\n- update @sap/hdi dependency\r\n- better handling of invalid undeploy.json files\r\n- improved timestamps in logging output\r\n- check ownership of objects in the container via --treat-wrong-ownership-as-errors\r\n- allow logging of additional application data\r\n\r\nFixes:\r\n- issue with schema privileges and global roles in the same .hdbgrants file\r\n\r\n## 3.8.2\r\n\r\nFeatures:\r\n- introduced .hdbrevokes as a counterpart to .hdbgrants\r\n- automatically find target service: if only one HDI service is bound, TARGET_CONTAINER does not have to be set \r\n- print timestamp of HDI messages\r\n- print the status of the last build\r\n- fallback to the .hdiconfig in src/ if it is missing in cfg/\r\n- switch to @sap/hdi 2.1.2\r\n- switch from hdb to @sap/hana-client\r\n- check if the container supports locking and skip it if not\r\n\r\nFixes:\r\n- support \\n and \\r\\n as line endings in .hdiignore files\r\n- correctly process grantor files in ZDM mode\r\n- fix 'Maximum call stack size exceeded' in ZDM mode\r\n- don't escape schema names in .hdbgrants\r\n\r\n## 3.7.0\r\n\r\nFeatures:\r\n- warning messages will now be prepended with \"WARNING:\"\r\n- error messages in case of a bad service binding now offer more detail on what caused the error\r\n- now supports comments in JSON files like default services file\r\n- allow file patterns in --deploy option\r\n- added new options --exclude-filter and .hdiignore file that basically work like .gitignore\r\n- improved error reporting when using the deployer as a library\r\n\r\nFixes:\r\n- correctly handle component names of system privileges in .hdbgrants files\r\n- handle empty privilege objects\r\n- filter client files like .hdbgrants before deploying\r\n\r\n## 3.6.0\r\n\r\nFeatures:\r\n- support ZDM deployment of HDI artifacts modeled in data/ and access/ folders inside db module\r\n- support ZDM deployment of .hdbrole files in access schema\r\n- target service is logged during deployment\r\n\r\n## 3.5.1\r\n\r\nFeatures:\r\n- support ZDM deployment\r\n- added warning message when using .hdbsysnonymtemplate or .hdbsynonymgrantor\r\n\r\n## 3.4.1\r\n\r\nFeatures:\r\n- update dependencies\r\n\r\n## 3.4.0\r\n\r\nFeatures:\r\n- provide `--treat-unmodified-as-modified` option to schedule also unmodified for deploy\r\n- support procedure-type granting services\r\n- improve Readme\r\n\r\nFixes:\r\n- fix handling of grantor services which have a `db_hosts` value, but no `host` value\r\n- fix occasional 'Callback was already called' error in case of deployment failures\r\n\r\n## 3.3.0\r\n\r\nFeatures:\r\n- provide library.js to fork the deployer from a node.js app for a given content directory including support for stdio callbacks\r\n\r\nFixes:\r\n- don't look at server folders outside cfg/, src/, and lib/\r\n\r\n## 3.2.0\r\n\r\nFeatures:\r\n- support for @sap/hdi-dynamic-deploy\r\n\r\n## 3.1.2\r\n\r\nFixes:\r\n- use `db_hosts` from `VCAP_SERVICES` if it exists\r\n- transform paths from `--include-filter`, `--deploy`, `--undeploy`, `--working-set` to the server format where reusable modules are located at `lib/` instead of `node_modules/`\r\n\r\n## 3.1.1\r\n\r\nFixes:\r\n- support @-scoped reusable modules\r\n\r\n## 3.1.0\r\n\r\nFeatures:\r\n- support `--parameter` option to pass key-value parameters to the deployment\r\n\r\nFixes:\r\n- use non-sync write to stdout (and stderr), and on exit, wait until stdout is drained to avoid loss of log output in case of crashes, etc.\r\n- container locking is available since server version 2.0.1.0, not 2.0.0.0\r\n\r\n## 3.0.0\r\n\r\nFeatures:\r\n- check `src/defaults/default_access_role.hdbrole` file against the working set\r\n- check `.hdbgrants` files against the working set\r\n- show the processing of individual `.hdbgrants` files\r\n- on newer server versions, acquire the container lock while working with the container\r\n- support `--lock-container-timeout <ms>` option for setting the number of milliseconds to wait for the container lock, defaults to 120.000 ms\r\n- also support grantor services with only `\"user\"`, `\"password\"`, `\"schema\"`; and take `\"host\"`, `\"port\"`, `\"certificate\"` from the target container\r\n- in `.hdbgrants` files, use the first non-undefined schema value (`\"schema\"`, `\"reference\"`, `\"schema\"` from grantor service); `\"reference\"` is only used for `\"schema_privileges\"`\r\n- support schema roles in `.hdbgrants` files\r\n- reject explicit delta detection of files outside the working set\r\n- switch to Node.js 6.9.1 as minimal Node.js version\r\n- provide `--working-set` option to restrict the set of files which can be modified in the container\r\n- support global roles with admin option in `.hdbgrants` files\r\n- support system privileges with admin option in `.hdbgrants` files\r\n- support `--connection-timeout <ms>` option for setting the number of milliseconds to wait for the database connection(s)\r\n\r\nFixes:\r\n- lock the container before showing the `synchronizing` message\r\n- support `.hdbgrants` files without a name (`folder/.hdbgrants`)\r\n- support the string-array style in schema_roles, too\r\n- support typed global object privileges in `.hdbgrants` files\r\n- correctly pass certificate to hdi client\r\n\r\n## 2.3.0\r\n\r\nFeatures:\r\n- rename module to @sap/hdi-deploy\r\n\r\n## 2.2.0\r\n\r\nFixes:\r\n- fix schema name handling to allow schema names with special characters\r\n- fix handling of more than 1 privilege in a single element in `.hdbgrants` files\r\n- fix trace handling for VCAP_SERVICES and connection data\r\n\r\n## 2.1.0\r\n\r\nFeatures:\r\n- detect server version; provide `--[no-]detect-server-version` option\r\n- invert client feature version numbers if they are not available due to the detected server version\r\n- support `server` in `--info`\r\n- generalize handling of configuration file templating for `cfg/**/*config` files\r\n- provide `--structured-log` option to send messages in a JSON-structured format into a log file\r\n- provide `--[no-]verbose` option to suppress detailed messages at the console output\r\n- allow consumption of reusable database modules via `package.json` and `npm install`\r\n- provide `--simulate-make` option to enable server-side feature for simulating the make activities\r\n- provide `--treat-warnings-as-errors` option to enable server-side feature for treating warnings as errors\r\n- provide `--deploy` option to explicitly include a set of files in the deploy set\r\n- provide `--undeploy` option to explicitly include a set of files in the undeploy set\r\n\r\nFixes:\r\n- reject `--simulate-make` and `--treat-warnings-as-errors` if the server doesn't support these features\r\n- consider the root path when looking for reuse modules\r\n- throw an error if we find a nested node_modules folder inside a reuse module\r\n\r\n## 2.0.1\r\n\r\nFixes:\r\n- pass the certificate from the service binding down to the database (`certificate` field in the binding, `ca` field in the database connection)\r\n- fix handling of file templating in `cfg/` folder and include-filter handling on Windows\r\n- fix handling of multiple roles in `container_roles` elements in `.hdbgrants` files\r\n- fix handling of `.hdbgrants` files with more than 1 grantors inside\r\n\r\n## 2.0.0\r\n\r\nFeatures:\r\n- allow `.hdbgrants` as suffix for privilege grants / grantor mechanism files\r\n- apply consistency check on file `src/defaults/default_access_role.hdbrole`\r\n- show information about used service replacements\r\n- reworked reporting of hdideploy.js errors and HDI errors/warnings\r\n- refactored JSON parser handling\r\n- automatic assignment of the deployed role `default_access_role` if the file `src/defaults/default_access_role.hdbrole` is in the processing file set\r\n- provide `--info` option to show supported features\r\n- provide timing information for certain actions, e.g. time spent for collecting files, time spent for synchronizing files with the server, etc.\r\n- provide `--include-filter` option to define a filter for restricting the set of files which are processed by the deployer app for deploy/undeploy\r\n- allow the indirection of service names via a `SERVICE_REPLACEMENTS` environment variables\r\n- provide a generic templating mechanism for `cfg/**/*config` files, replacing the `hdbsynonymtemplate` files\r\n- support `default-services.json` and `default-env.json` for local development\r\n- show information about the effects of the `undeploy.json` file\r\n- always show application name plus version number; for support cases\r\n- always consider all deploy directories, even if they do not exist locally\r\n- write the log message `Application can be stopped.` only once\r\n- ignore errors when deleting non-existing directories\r\n- show information about the steps that are performed\r\n- provide `--[no-]strip-cr-from-csv` option to [not] strip carriage return characters from CSV files; not enabled by default anymore\r\n\r\nFixes:\r\n- don't report a missing `undeploy.json` file as an error\r\n\r\n## 1.1.0\r\n\r\nFeatures:\r\n- replace `--autoUndeploy` with `--auto-undeploy`; keep `--autoUndeploy` for backwards compatibility\r\n- provide `--no-auto-undeploy` option to revert `--auto-undeploy`\r\n- provide `--root` option\r\n- provide `--exit` and `--no-exit` options\r\n- allow to pass options via JSON structured `HDI_DEPLOY_OPTIONS` environment variable\r\n"},{"name":"hdi-dynamic-deploy","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/hdi-dynamic-deploy\r\n=======================\r\n\r\n`@sap/hdi-dynamic-deploy` is a [Node.js](https://nodejs.org)-based http server for dynamic deployment to SAP HANA DI (HDI) containers, HDI Dynamic Deployer for short. The HDI Dynamic Deployer can be used in XS Advanced (XSA) and in SAP Cloud Platform (SAP CP)/Cloud Foundry (CF) to deploy database content to dynamically created containers (e.g. created via the Instance Manager).\r\n\r\nThe dynamic deployer is built upon `@sap/hdi-deploy` which should be used directly if a static deployment at deploytime is sufficient.\r\n\r\n## README.md\r\n\r\n**Installation**:\r\n- [Integration into a Database Module](#integration-into-a-database-module)\r\n- [Configuration of the dynamic deployer](#configuration-of-the-dynamic-deployer)\r\n\r\n**Dynamic deployment**:\r\n- [Triggering a dynamic deployment by a HTTP POST request](#triggering-a-dynamic-deployment-by-a-http-post-request)\r\n- [How to use it in a multi-target application](#how-to-use-it-in-a-multi-target-application)\r\n- [Accessing the underlying HTTP server](#accessing-the-underlying-http-server)\r\n- [Accessing the underlying HTTP server](#accessing-the-router-functions)\r\n\r\n## Integration into a Database Module\r\n\r\nUsually, `@sap/hdi-dynamic-deploy` gets installed via a `package.json`-based dependency inside your application's `db` module:\r\n\r\n`db/package.json`:\r\n\r\n```\r\n{\r\n  \"name\": \"deploy\",\r\n  \"dependencies\": {\r\n    \"@sap/hdi-dynamic-deploy\": \"2.3.2\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"node node_modules/@sap/hdi-dynamic-deploy/\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n    \r\n## Configuration of the dynamic deployer\r\n\r\nThe dynamic deployer needs to be configured via the following environment variables:\r\n\r\n- `PORT`: port the HTTP server listens to\r\n- `hdi_dynamic_deploy_user`: username for HTTP basic authentication\r\n- `hdi_dynamic_deploy_password`: password for HTTP basic authentication\r\n- `ENFORCE_AUDITING`: force usage of audit logging. If audit logging cannot be enabled, the server will throw an error and stop.\r\n- `ENFORCE_V2`: force usage of the V2 audit logging API. If audit logging V2 cannot be enabled, the server will throw an error and stop.\r\n- `AUDIT_LOG_TENANT`: specifies the tenant to use for audit logging. Likely this will be the [subaccount-id](https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/b43eff2df3f84124995f6acbc9e5c55b.html) where your app is deployed. If this is not specified you may be unable to view the logs.\r\n\r\nNote: Any client that knows the `hdi_dynamic_deploy_user` and the corresponding password will indirectly be able to read the database artifacts contained in the dynamic deploy server.\r\n\r\nIf an auditlog service is bound to the dynamic deployer, invalid authentication attempts will be logger accordingly.\r\n\r\nThe `PORT` variable is automatically set by XSA. `ENFORCE_AUDITING`, `ENFORCE_V2`, username and password have to be given e.g. via the `mta.yaml` file (see example below).\r\nWhen using the XSA deploy-service, a strong generated password will be used. In other use cases, sufficient password strength has to be ensured!\r\n\r\n```\r\nmodules:\r\n  - name: db\r\n    type: com.sap.xs.hdi-dynamic\r\n    path: db\r\n    properties:\r\n      hdi_dynamic_deploy_user: ${generated-user}\r\n      hdi_dynamic_deploy_password: ${generated-password}\r\n    provides:\r\n    - name: db_deployment\r\n      properties:\r\n         url: ${default-url}\r\n         user: ${generated-user}\r\n         password: ${generated-password}\r\n```\r\n\r\n## Triggering a dynamic deployment by a HTTP POST request\r\n\r\nThe dynamic deployer is a http server started for a specific db module. When the module is pushed to XSA or CF, the dynamic deployer starts listening for requests and eventually starts the (non-dynamic) deployer to deploy the content of the db module to a given container.\r\n\r\nTo trigger the deployment one has to send a HTTP POST request with basic authentication and content type `application/json` to the dynamic deployer. The api offers three urls for deployment, `http(s)://<hostname>:<port>/v1/deploy`, `http(s)://<hostname>:<port>/v1/deploy/to/instance` and `http(s)://<hostname>:<port>/v1/deploy/to/instance/async`.\r\n\r\n### Synchronous deployment\r\n\r\n#### Deployment via `http(s)://<hostname>:<port>/v1/deploy` (VCAP_SERVICES style)\r\n\r\nThe first way to trigger a deployment is to send a HTTP POST request to the url `http(s)://<hostname>:<port>/v1/deploy`. The body simply consists of a JSON object containing replacements for several of the HDI deployer's environment variables. Supported are replacements for:\r\n\r\n- `HDI_DEPLOY_OPTIONS`\r\n- `DEPLOY_ID`\r\n- `TARGET_CONTAINER`\r\n- `SERVICE_REPLACEMENTS`\r\n- `VCAP_SERVICES`\r\n\r\nIn addition to providing `VCAP_SERVICES` for replacing the corresponding environment variable it is also possible to provide `ADDITIONAL_VCAP_SERVICES`. The deployer is then called with service bindings created from the `VCAP_SERVICES` of the dynamic deployer by adding the service definitions given by `ADDITIONAL_VCAP_SERVICES`.\r\nThe `ADDITIONAL_VCAP_SERVICES` object has the same structure as the original `VCAP_SERVICES`, i.e. it contains lists of service bindings.\r\nIf the request contains `ADDITIONAL_VCAP_SERVICES`, the server scans through all of its services and either adds the list of bindings to the `VCAP_SERVICES` environment variable or merges the two lists in case bindings for the given service already exist.\r\nExisting bindings with the same name are replaced with the bindings from `ADDITIONAL_VCAP_SERVICES`.\r\n\r\nExample:\r\n```\r\n{\r\n    \"TARGET_CONTAINER\": \"hdi_container_service_name\",\r\n    \"ADDITIONAL_VCAP_SERVICES\": {\r\n        \"hana\" : [ {\r\n            \"name\" : \"hdi_container_service_name\",\r\n            \"label\" : \"hana\",\r\n            \"tags\" : [ \"hana\", \"database\", \"relational\" ],\r\n            \"plan\" : \"hdi-shared\",\r\n            \"credentials\" : {\r\n                \"schema\" : \"DB_EXAMPLE\",\r\n                \"hdi_password\" : \"hdi_password\",\r\n                \"password\" : \"password\",\r\n                \"driver\" : \"com.sap.db.jdbc.Driver\",\r\n                \"port\" : \"30015\",\r\n                \"host\" : \"srv1234567.host.name\",\r\n                \"db_hosts\" : [ {\r\n                 \"port\" : 30015,\r\n                 \"host\" : \"srv7654321.host.name\"\r\n                } ],\r\n                \"hdi_user\" : \"hdi_user\",\r\n                \"user\" : \"user\",\r\n                \"url\" : \"jdbc:sap://srv1234567.host.name:30015/?currentschema=DB_EXAMPLE\"\r\n            }\r\n        } ]\r\n    }\r\n}\r\n```\r\n\r\n#### Deployment via `http(s)://<hostname>:<port>/v1/deploy/to/instance` (Instance Manager style)\r\n\r\nSince version 1.2.0 of the dynamic deployer there is a second way to trigger a deployment by sending a HTTP POST request to the url `http(s)://<hostname>:<port>/v1/deploy/to/instance`. The request body is simply a managed service instance as retrieved from the Instance Manager with a HTTP GET.\r\n\r\nSince version 2.3.2 of the dynamic deployer the request body can be a managed service instance as retrieved from the Instance Manager or Service Manager with a HTTP GET.\r\n\r\nExample: Instance Manager\r\n\r\n```\r\n{\r\n  \"tenant_id\": \"1\",\r\n  \"id\": \"da7ff475-fd3f-4a86-a3e7-cd3e41e3653d\",\r\n  \"binding_id\": \"3bb96cab-0bec-4088-9991-244b750e53b3\",\r\n  \"instance_id\": \"d9cc0aef-16f7-40d2-8e10-1816b9214f2e\",\r\n  \"managed_service_id\": \"79d9e11a-95c2-4771-ae2d-8ba703bd8fda\",\r\n  \"managed_plan_id\": \"bebaad3e-352b-4928-bc6b-8783d754ac3b\",\r\n  \"managed_instance_id\": \"0a4d365a-eec5-4083-85ae-677f77bb6f5d\",\r\n  \"managed_binding_id\": \"a5cba4c8-95a3-42c8-982d-e075d0a6b941\",\r\n  \"status\": \"CREATION_SUCCEEDED\",\r\n  \"updated_on\": 1494322225942,\r\n  \"credentials\": {\r\n    \"host\": \"srv1234567.host.name\",\r\n    \"port\": \"30015\",\r\n    \"driver\": \"com.sap.db.jdbc.Driver\",\r\n    \"url\": \"jdbc:sap://srv1234567.host.name:30015/?currentschema=55D392C7232649E8A2F08993645B28B5\",\r\n    \"schema\": \"55D392C7232649E8A2F08993645B28B5\",\r\n    \"hdi_user\": \"SBSS_78283957013891283645150604040575244555286482237534978212872169092\",\r\n    \"hdi_password\": \"password\",\r\n    \"user\": \"SBSS_92380540949443696814788249184554628165227387555319796659663474608\",\r\n    \"password\": \"password\"\r\n  }\r\n}\r\n```\r\n\r\nExample: Service Manager\r\n\r\n```\r\n{\r\n  \"id\": \"da7ff475-fd3f-4a86-a3e7-cd3e41e3653d\",\r\n  \"ready\": true,\r\n  \"service_instance_id\": \"790e19ae-b9f7-4d80-8e4d-d368d96f79bd\",\r\n  \"last_operation\": {\r\n        \"id\": \"e9061cfe-b70a-405b-a402-084b3ec74711\",\r\n        \"ready\": true,\r\n        \"type\": \"create\",\r\n        \"state\": \"succeeded\",\r\n        \"resource_id\": \"bf24e49c-fd62-4ad4-83fc-6c09132f8cf7\",\r\n        \"resource_type\": \"/v1/service_bindings\",\r\n        \"platform_id\": \"service-manager\",\r\n        \"correlation_id\": \"ec849486-34b3-40ac-71e6-baf91c91cd0b\",\r\n        \"reschedule\": false,\r\n        \"reschedule_timestamp\": \"0001-01-01T00:00:00Z\",\r\n        \"deletion_scheduled\": \"0001-01-01T00:00:00Z\",\r\n        \"created_at\": \"2021-11-02T09:22:47.667677Z\",\r\n        \"updated_at\": \"2021-11-02T09:22:49.288825Z\"\r\n    },\r\n  \"name\": \"91ce8c49-a1c8-4557-8b25-0e2c4034a4cf\",\r\n  \"credentials\": {\r\n    \"host\": \"srv1234567.host.name\",\r\n    \"port\": \"30015\",\r\n    \"driver\": \"com.sap.db.jdbc.Driver\",\r\n    \"url\": \"jdbc:sap://srv1234567.host.name:30015/?currentschema=55D392C7232649E8A2F08993645B28B5\",\r\n    \"schema\": \"55D392C7232649E8A2F08993645B28B5\",\r\n    \"hdi_user\": \"SBSS_78283957013891283645150604040575244555286482237534978212872169092\",\r\n    \"hdi_password\": \"password\",\r\n    \"user\": \"SBSS_92380540949443696814788249184554628165227387555319796659663474608\",\r\n    \"password\": \"password\"\r\n  }\r\n}\r\n```\r\n\r\n#### The response from the dynamic deployer\r\n\r\nIf there was no problem with the basic authentication and the request reaches the dynamic deployer, it usually responds with status code 200 and a json body containing the result of the deployment. The response body has the following form:\r\n\r\n```\r\n{\r\n  messages: [<list of result messages from the di server>],\r\n  exitCode: <exit code of the call to the deployer app>\r\n}\r\n```\r\n\r\n**IMPORTANT:** A status code of 200 does not mean that the deployment was successful. It just means that the dynamic deployer was able to call the (non-dynamic) deployer. If the deployer finished with no errors the `exitCode` attribute of the response is `0`, otherwise it is `1`. More detailed information about the deployment can be retrieved from the `messages` attribute of the response.\r\n\r\n### Asynchronous deployment\r\n\r\nSince version 1.7.0 of the dynamic deployer there is a third way to trigger a deployment by sending a HTTP POST request to the url `http(s)://<hostname>:<port>/v1/deploy/to/instance/async`. The request body is simply a managed service instance as retrieved from the Instance Manager with a HTTP GET, i.e. the same as for `http(s)://<hostname>:<port>/v1/deploy/to/instance`. But instead of waiting until the deployment is done and then returning the results, a GUID is returned.\r\n\r\nSince version 2.3.2 of the dynamic deployer the request body can be a managed service instance as retrieved from the Instance Manager or Service Manager with a HTTP GET.\r\n\r\nThis GUID can be used to query the status of the deployment by sending a GET request to `http(s)://<hostname>:<port>/v1/status/:guid` - if the deployment is still running, the response just contains a `status` property. If the deployment is finished, the usual response is returned - in conjunction with the `status` property.\r\n\r\n\r\n## How to use it in a multi-target application\r\n\r\nA multi-target application (MTA) for multi-tenancy scenarios with the instance manager typically includes multiple db modules:\r\n- N static db modules (`type: com.sap.xs.hdi`), e.g. for configuration or shared data. A static module depends on `@sap/hdi-deploy`; it does not depend on `@sap/hdi-dynamic-deploy`.\r\n- M dynamic db modules (`type: com.sap.xs.hdi-dynamic`) where the business data for a certain type of tenant is contained. A dynamic module depends on `@sap/hdi-dynamic-deploy`, which internally depends on `@sap/hdi-deploy` for deployment to the correct tenant.\r\n \r\nExample:\r\n```\r\nmodules:\r\n  - name: db-static-1\r\n    type: com.sap.xs.hdi\r\n    path: db-static-1\r\n    \r\n  - name: db-static-2\r\n    type: com.sap.xs.hdi\r\n    path: db-static-2\r\n    \r\n  - name: db-dynamic-1\r\n    type: com.sap.xs.hdi-dynamic\r\n    path: db-dynamic-1\r\n    \r\n  - name: db-dynamic-2\r\n    type: com.sap.xs.hdi-dynamic\r\n    path: db-dynamic-2\r\n    \r\n  - name: db-dynamic-3\r\n    type: com.sap.xs.hdi-dynamic\r\n    path: db-dynamic-3\r\n```\r\n\r\n## Accessing the underlying HTTP server\r\nBy requiring the dynamic deploy package, you can access the internal HTTP server. This way, you can decide when to start/stop the server.\r\n\r\nThe exported object offers two methods:\r\n```javascript\r\n    /**\r\n     * Start the HTTP server on this.port.\r\n     *\r\n     * @param {any} cb Callback function (error, result).\r\n     * @returns {undefined}\r\n     */\r\n    function start(cb){\r\n      <..>\r\n    };\r\n\r\n    /**\r\n     * Stop the HTTP server.\r\n     *\r\n     * @param {any} cb Callback function (error, result).\r\n     * @returns {undefined}\r\n     */\r\n    function stop(cb){\r\n      <..>\r\n    };\r\n```\r\nFurthermore, the object has the property `port`. This has to be set to the port that you want the server to listen on.\r\n\r\nExample:\r\n```javascript\r\n'use strict';\r\n\r\nconst {server} = require('@sap/hdi-dynamic-deploy/index');\r\n\r\nserver.port = process.env.PORT;\r\nserver.start(function(){\r\n  console.log(`@sap/hdi-dynamic-deploy HTTP server up and running, listening on port ${  server.port}`);\r\n});\r\n```\r\n## Accessing the router functions\r\nBy requiring the dynamic deploy package, you can access the functions used for the API endpoints and can use them in your own router.\r\nBoth functions expect two parameters: \r\n  - A HTTP request object\r\n  - A HTTP response object\r\n\r\nExample:\r\n```javascript\r\n'use strict';\r\n\r\nconst {deploy_to_instance, deploy} = require('@sap/hdi-dynamic-deploy/index');\r\n\r\n/** \r\n * Now the functions can be added to a router.\r\n * \r\n * deploy_to_instance is the function used for the /v1/deploy/to/instance route\r\n * deploy is the function used for the /v1/deploy route\r\n * \r\n */\r\n```\r\n","changelog":"# 2.3.5\r\nFeatures:\r\n- use @sap/hdi-deploy@4.3.3\r\n\r\n# 2.3.4\r\nFeatures:\r\n- use @sap/hdi-deploy@4.3.2\r\n- use body-parser@1.19.2\r\n- use express@4.17.3\r\n- use express-basic-auth@1.2.1\r\n- use @sap/audit-logging@5.5.2\r\n\r\n# 2.3.3\r\nFeatures:\r\n- use @sap/audit-logging@5.4.1\r\n- use @sap/hdi-deploy@4.3.0\r\n\r\n\r\n# 2.3.2\r\nFeatures:\r\n- use @sap/hdi-deploy@4.2.3\r\n- use @sap/audit-logging@5.3.0\r\n- routes `/v1/deploy/to/instance` and `/v1/deploy/to/instance/async` accept the response of a service manager GET\r\n\r\n# 2.3.1\r\nFeatures:\r\n- use @sap/hdi-deploy@4.2.2\r\n\r\n# 2.3.0\r\nFeatures:\r\n- use @sap/hdi-deploy@4.2.0\r\n- use @sap/audit-logging@5.1.0\r\n- Node 16 support\r\n\r\nRemoved:\r\n- Node 8.x and 10.x support\r\n\r\n# 2.2.0\r\nFeatures:\r\n- use @sap/hdi-deploy@4.1.0\r\n\r\n# 2.1.2\r\nFeatures:\r\n- use @sap/hdi-deploy@4.0.5\r\n\r\n# 2.1.1\r\nFeatures:\r\n- use @sap/hdi-deploy@4.0.4\r\n\r\nFixes :\r\n- overall deployment time calculation\r\n- accepting different alphabetical cases for enforce_auditing\r\n\r\n# 2.1.0\r\nFeatures:\r\n- use @sap/hdi-deploy@4.0.3\r\n- use @sap/audit-logging@4.2.0\r\n- Node 14 support\r\n\r\n\r\n# 2.0.1\r\nFeatures:\r\n- use @sap/hdi-deploy@4.0.2\r\n\r\n# 2.0.0\r\nFeatures.\r\n- use @sap/hdi-deploy@4.0.1\r\n- use @sap/xsenv@3.1.0\r\n\r\nRemoved:\r\n- node 6 support\r\n\r\n# 1.7.5\r\nFeatures:\r\n- use @sap/hdi-deploy@3.11.15\r\n\r\n# 1.7.4\r\nFeatures:\r\n- use @sap/hdi-deploy@3.11.14\r\n\r\n# 1.7.3\r\nFeatures:\r\n- use @sap/hdi-deploy@3.11.13\r\n- use @sap/audit-logging@3.2.0\r\n\r\n# 1.7.2\r\nFeatures:\r\n- use hdi-deploy version 3.11.12\r\n- use @sap/audit-logging 3.1.1\r\n\r\n# 1.7.1\r\nFeatures:\r\n- use hdi-deploy version 3.11.11\r\n- prefix log lines relating to the same deployment with an identifier  \r\n\r\n# 1.7.0\r\nFeatures:\r\n- added a new route `/v1/deploy/to/instance/async` that implements an asynchronous deployment with status polling via `/v1/status/:guid`.\r\n- log the server version on start-up\r\n\r\n# 1.6.0\r\nFeatures:\r\n- node 12 support\r\n- use hdi-deploy version 3.11.9\r\n- updated dependencies\r\n- allow specifying the tenant for audit logging via env variable \"AUDIT_LOG_TENANT\"\r\n\r\nFixes:\r\n- previously, a simple get request (in combination with audit logging) caused an internal server error\r\n\r\n## 1.5.9\r\nFixes:\r\n- use hdi-deploy version 3.11.6\r\n- don't send duplicate messages as part of response\r\n\r\n## 1.5.8\r\nFixes:\r\n- use hdi-deploy version 3.11.5\r\n- send all deployer messages as part of response\r\n\r\n## 1.5.7\r\nFixes:\r\n- use hdi-deploy version 3.11.4\r\n\r\n## 1.5.6\r\nFeatures:\r\n- use hdi-deploy version 3.11.2\r\n- Node 10 support\r\n\r\n## 1.5.5\r\nFeatures:\r\n- use hdi-deploy version 3.11.0\r\n- update dependencies\r\n\r\nFixes:\r\n- fix issue with audit logging: IP determination would sometimes return multiple IPs, causing audit logging to crash\r\n\r\n## 1.5.4\r\nFeatures:\r\n- use hdi-deploy version 3.10.0\r\n\r\n## 1.5.3\r\nFeatures:\r\n- update dependencies\r\n\r\nFixes:\r\n- full support for .hdbmigrationtable files by using hdi-deploy version 3.9.4\r\n\r\n## 1.5.2\r\nFixes:\r\n- solved issue with long running deployments\r\n\r\n## 1.5.1\r\nFeatures:\r\n- use hdi-deploy version 3.9.2\r\n\r\n## 1.5.0\r\nFeatures:\r\n- logging of parameters passed via the request\r\n- optional audit logging of failed login attempts\r\n- export API endpoint functions\r\n- use hdi-deploy version 3.9.1\r\n\r\n## 1.4.2\r\n\r\nFeatures:\r\n- export the internal HTTP server\r\n- use hdi-deploy version 3.8.2\r\n\r\n## 1.2.2\r\n\r\nFixes:\r\n- switch from res.send back to res.end to fix problems with the content type\r\n\r\n## 1.2.1\r\n\r\nFeatures:\r\n- update dependencies\r\n\r\n## 1.2.0\r\n\r\nFeatures:\r\n- additional route /v1/deploy/to/instance accepting the response of a instance manager GET\r\n- use hdi-deploy version 3.4.0\r\n\r\n## 1.1.0\r\n\r\nFeatures:\r\n- use hdi-deploy version 3.3.0\r\n- move forking of hdi-deploy into hdi-deploy itself\r\n\r\n## 1.0.0\r\n\r\ninitial release\r\n"},{"name":"hdi","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/hdi\r\n===============\r\n\r\n`@sap/hdi` is a [Node.js](https://nodejs.org) library that allows access to the SQL based API through Node.js. It provides access to the HDI-, Container-Group- and the Container-API.\r\n\r\n## Table of contents\r\n **Using the library**:\r\n- [General things](#general-things)\r\n- [Using the HDI API](#using-the-hdi-api)\r\n- [Using the Container Group API](#using-the-container-group-api)\r\n- [Using the Container API](#using-the-container-api)\r\n- [Using the API with xsjs](#using-the-api-with-xsjs)\r\n\r\n## General things\r\n\r\nNote: Either [@sap/hana-client](https://www.npmjs.com/package/@sap/hana-client) or [hdb](https://www.npmjs.com/package/hdb) must be installed by yourself. \r\n@sap/hana-client versions ^2 >= 2.5 are currently supported by @sap/hdi 4.3.0.\r\nTo install the latest @sap/hana-client simply run `npm install @sap/hana-client`.\r\n\r\nhdb version ^0 is currently supported by @sap/hdi 4.3.0.\r\nTo install the latest hdb simply run `npm install hdb`.\r\n\r\nRunning `npm install --save @sap/hdi` will install the package and add it as a dependency to your **package.json**.\r\n\r\nWe recommend using version 2.0.0 or higher. >=2.0.0 of the API brings access to the Container Group API, major refactoring of the HDI and Container API into separate components and lots of pre-defined classes to make working with the API easier.\r\n\r\nNote that >=2.0.0 is not backwards compatible to 1.x, code written with the old API will ***NOT*** run with new API. This documentation is for the 3.x API.\r\n\r\nAll APIs require that the connected user has EXECUTE privileges for the corresponding SQL procedures and SELECT for all table types in SYS_DI (TT*).\r\n\r\nAlmost all methods are asynchronous and require a standard node-style callback, where the first parameter is any errors that occurred and the second is the result.\r\nIf no callback is supplied, the arguments will be partially applied and a function will be returned, taking a callback as the first and only parameter. This way, the methods can be easily chained via async.\r\n\r\nIf you are using the methods in the easily chainable way, the error parameter will be supplied if the return code of the HDI call is not equal 0. If you are using the \"normal\" way, the error-parameter is only supplied when a \"technical\" error occurs. To check if the action was successful, you need to check the return code (rc) of the returned result. In order to \"automate\" this, you can wrap your callback with the function below:\r\n\r\n```javascript\r\nfunction wrap (callback) {\r\n  return function (error, result) {\r\n    if (error) {\r\n      return callback(error);\r\n    } else {\r\n      if (result.rc && result.rc !== 0) {\r\n        const e = new Error('HDI call failed!')\r\n        e.result = result\r\n        return callback(e, result);\r\n      } else {\r\n        return callback(null, result);\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n**This document only provides a really high-level and shallow overview of the API. For a more detailed, technical documentation, refer to the JSDoc. To generate the documentation, run `npm install jsdoc`,`npm install ink-docstrap` and then `npm run documentation`. The documentation can then be found in the `docs` folder.**\r\n\r\n## Using the HDI API\r\nAccess to the _SYS_DI API is provided by the `HDI` class. Access to this API requires HANA server version: 1.00.120 or newer. To work with the API, simply construct a new object, as can be seen in the following (ES6-based) example:\r\n\r\n```javascript\r\n'use strict';\r\nconst { HDI } = require('@sap/hdi');\r\n\r\n// This credentials object will be directly passed to the @sap/hana-client or hdb client. Any options accepted by the @sap/hana-client or hdb clients can be passed.\r\nconst credentials = {\r\n    host : <host>,\r\n    port : <port>,\r\n    user : <user>,\r\n    password: <password>\r\n};\r\n\r\nconst hdi = new HDI(credentials, parameterSchema, usehdb);\r\n\r\nhdi.connect((error,result) => {\r\n  if(error){\r\n    throw error;\r\n  }\r\n\r\n  hdi.listLibraries(null,(error,result) => {\r\n    if(error){\r\n      throw error;\r\n    }\r\n\r\n    console.log(result);\r\n  })\r\n})\r\n```\r\n\r\nTo construct an access object, you need the credentials for the HANA system and the `parameterSchema`. This schema will be used to create temporary tables to supply data to the underlying sql procedures.\r\n\r\n## Using the Container Group API\r\nThe Container Group API provides access to an **existing** container group. In order to use the API, you might need to first grant the correct rights by using `grantContainerGroupAPIPrivileges` of the HDI class.\r\n\r\nTo construct an access object, you need the credentials for the HANA system, the `parameterSchema` and the name of the container group.\r\n\r\n## Using the Container API\r\nThe Container API provides access to an **existing** container. In order to use the API, you might need to first grant the correct rights by using `grantContainerAPIPrivileges` of the ContainerGroup class.\r\n\r\nTo construct an access object, you need the credentials for the HANA system, the `parameterSchema` and the name of the container.\r\n\r\nExample: Deploying files to an existing container, assuming that the container exists and has been configured correctly.\r\n\r\n```javascript\r\n'use strict';\r\n\r\nconst fs = require('fs');\r\nconst async = require('async');\r\nconst path = require('path');\r\n\r\nconst {Container, HDI, FileWithContent, FolderWithContent, File, Parameter} = require('@sap/hdi');\r\n\r\n// This credentials object will be directly passed to the @sap/hana-client or hdb client. Any options accepted by the @sap/hana-client or hdb clients can be passed.\r\nconst credentials = {\r\n  host: 'host',\r\n  port: 'port',\r\n  user: 'user',\r\n  password: 'password'\r\n};\r\n\r\nconst containerName = 'container_name';\r\n\r\n\r\nconst container = new Container(containerName, // Name of the container. Does not have to exist yet but has to exist before calling any methods.\r\n  credentials, // Credentials to use for the HANA system.\r\n  credentials.user // Schema where the user used for the connection has privileges to create temporary tables, for example the user's own schema.\r\n);\r\n\r\nconst fPath = 'folder/';\r\n\r\nconst cPath = 'folder/.hdiconfig';\r\nconst cContent = fs.createReadStream(`${__dirname}${path.sep}testdata${path.sep}.hdiconfig`);\r\n\r\nconst tPath = 'folder/table1.hdbtable';\r\nconst tContent = fs.createReadStream(`${__dirname}${path.sep}testdata${path.sep}table1.hdbtable`);\r\n\r\nconst rContent = fs.createReadStream(`${__dirname}${path.sep}testdata${path.sep}role.hdbrole`);\r\nconst rPath = 'folder/role.hdbrole';\r\n\r\nconst filesFoldersContent = [\r\n  new FolderWithContent(fPath),\r\n  new FileWithContent(cPath, cContent),\r\n  new FileWithContent(tPath, tContent),\r\n  new FileWithContent(rPath, rContent)\r\n];\r\n\r\nconst files = [new File(rPath), new File(cPath), new File(tPath)];\r\nconst params = [new Parameter('ignore_work', 'TRUE'), new Parameter('ignore_deployed', 'TRUE')];\r\n\r\n\r\nfunction wrap (callback) {\r\n  return function (error, result) {\r\n    if (error) {\r\n      return callback(error);\r\n    } else {\r\n      if (result.rc && result.rc !== 0) {\r\n        const e = new Error('HDI call failed!')\r\n        e.result = result\r\n        return callback(e, result);\r\n      } else {\r\n        return callback(null, result);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst tasks = [\r\n  (cb) => containerUser.connect(wrap(cb)),\r\n  (cb) => containerUser.lock(0, null, wrap(cb)),\r\n  (cb) => containerUser.write(filesFoldersContent, null, wrap(cb)),\r\n  (cb) => containerUser.status(null, null, wrap(cb)),\r\n  (cb) => containerUser.list(null, null, wrap(cb)),\r\n  (cb) => containerUser.make(files, null, null, null, wrap(cb)),\r\n  (cb) => containerUser.unlock(wrap(cb)),\r\n  (cb) => {\r\n    containerUser.disconnect(); cb(null, 'OK: disconnected.');\r\n  }\r\n];\r\n\r\nasync.series(tasks, (e, results) => {\r\n  if(e){\r\n    console.error(e);\r\n    process.exit(1);\r\n  } else {\r\n    console.log(results);\r\n\r\n    /**\r\n      Work with the results.\r\n    **/\r\n  }\r\n});\r\n```\r\n\r\n## Using the API with xsjs\r\nSince most of the methods of the HDI, ContainerGroup and Container class are asynchronous, you need to use the provided `sync` functionality to use them in xsjs code.\r\nBe aware that this requires a version of xsjs that uses at least `\"@sap/fibrous\": \"0.5.0-0\"` as a dependency. This fixes issues with `sync` in combination with class methods.\r\n\r\nIf your version of xsjs is up to date in that regard, simply add `sync` before your method calls. This\r\n\r\n```javascript\r\nconst { HDI } = require('@sap/hdi');\r\n\r\n// This credentials object will be directly passed to the @sap/hana-client or hdb client. Any options accepted by the @sap/hana-client or hdb clients can be passed.\r\nconst credentials = {\r\n    host : <host>,\r\n    port : <port>,\r\n    user : <user>,\r\n    password: <password>\r\n};\r\n\r\nconst hdi = new HDI(credentials, parameterSchema, usehdb);\r\n\r\nhdi.connect((error,result) => {\r\n  if(error){\r\n    throw error;\r\n  }\r\n\r\n  hdi.listLibraries(null,(error,result) => {\r\n    if(error){\r\n      throw error;\r\n    }\r\n\r\n    console.log(result);\r\n  })\r\n})\r\n```\r\nturns into this:\r\n```javascript\r\nvar { HDI } = $.require('@sap/hdi');\r\n\r\n// This credentials object will be directly passed to the @sap/hana-client or hdb client. Any options accepted by the @sap/hana-client or hdb clients can be passed.\r\nvar credentials = {\r\n    host : <host>,\r\n    port : <port>,\r\n    user : <user>,\r\n    password: <password>\r\n};\r\n\r\nvar hdi = new HDI(credentials, parameterSchema, usehdb);\r\n\r\nhdi.sync.connect();\r\nvar libraries = hdi.sync.listLibraries(null);\r\nconsole.log(libraries);\r\n```\r\n","changelog":"## 4.3.1\r\nFeatures:\r\n- Use async 3.2.3\r\n\r\n## 4.3.0\r\nFeatures:\r\n- Choice of using either hana-client or hdb\r\n- hana-client ^2 >= 2.5 support\r\n- hdb ^0 support\r\n\r\n## 4.2.0\r\nFeatures:\r\n- hana-client 2.10.x support\r\n- added APIs `getDefaultContainerRoleAdminPrivileges`, `getDefaultCommonPrivileges` and `grant/revokeDISupportPrivilege` to HDI-API\r\n- added APIs `import/exportContainerForCopy` and `getDependencies` to Container-API\r\n- added APIs `import/exportContainerForCopy`, `grant/revokeContainerSupportPrivileges`, `getDefaultContainerRoleAdminPrivileges`, `getDefaultCommonPrivileges` and `enable/disableContainerUser` to ContainerGroup-API\r\n\r\n## 4.1.0\r\nFeatures:\r\n- Node 16.x support\r\n- hana-client 2.9.x support\r\n\r\nRemoved:\r\n- Node 8.x and 10.x support\r\n\r\n## 4.0.2\r\nFeatures:\r\n- hana-client 2.8.x support\r\n\r\n## 4.0.1\r\nFixes:\r\n- Cleanup package.json\r\n\r\n## 4.0.0\r\nChanges:\r\n- Moved hana-client from dependencies to peerDependencies, supported are versions 2.7.x\r\n\r\n## 3.0.2\r\nFeatures:\r\n- Use hana-client 2.7.21\r\n\r\n## 3.0.1\r\nFixes:\r\n- Correctly remove devDependencies and integrity hashes from npm-shrinkwrap.json\r\n\r\n## 3.0.0\r\nFeatures:\r\n- Use hana-client 2.7.16\r\n- Node 14.x support\r\n\r\nRemoved:\r\n- Node 6.x support\r\n\r\n## 2.2.7\r\nFixes:\r\n- Renamed developer-license-3.1.txt to LICENSE\r\n\r\n## 2.2.6\r\nFeatures:\r\n- Use hana-client 2.4.202\r\n\r\n## 2.2.5\r\nFeatures:\r\n- Use hana-client 2.4.182\r\n- Node 12.x support\r\n\r\n## 2.2.4\r\nFeatures:\r\n- Use hana-client 2.4.162\r\n\r\n## 2.2.3\r\nFeatures:\r\n- Use async 3.1.0 - removes lodash dependency\r\n\r\n## 2.2.2\r\nFeatures:\r\n- Updated dependencies\r\n- Node 10.x support\r\n\r\n## 2.2.1\r\nFixes:\r\n- Fixed bug that caused errors to be reported, even though only warnings occurred\r\n\r\n## 2.2.0\r\nFeatures:\r\n- Partially apply arguments and return function if no callback is supplied\r\n\r\n## 2.1.2\r\nFeatures:\r\n- Updated dependencies\r\n\r\n## 2.1.1\r\nFixes:\r\n- Error with npm-shrinkwrap.json\r\n\r\n## 2.1.0\r\nFeatures:\r\n- Added quoting of schema names\r\n- Switched from hdb to the official @sap/hana-client\r\n\r\n## 2.0.3\r\nFixes:\r\n- Locking now uses a second connection\r\n- Improved typeCheck to correctly detect arrays when using the API with xsjs\r\n\r\n## 2.0.2\r\nFeatures:\r\n- Passes a complete credentials object to the hdb driver, which allows passing additional parameters to the hdb connection.\r\n- Allows all instances of Readable as content for FileWithContent or FolderWithContent\r\n\r\nFixes:\r\n- Fixed a spelling error in ResultTuple\r\n\r\n## 2.0.1\r\nFixes:\r\n- Fixed a type check error when passing an empty array as parameter\r\n\r\n## 2.0.0\r\nFeatures:\r\n- Provides access to the Container Group API\r\n- Clearer split between the APIs, different classes for SYS_DI, Container and Container Group API\r\n- Removed dependency on async library\r\n"},{"name":"hrtt-core-vscode","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Runtime Tools Front End\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).","changelog":"## 1.13.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 220428-1653894413-d73bc7e\r\n\r\n## 1.12.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 220428-1651590228-5fe506c\r\n\r\n## 1.11.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 220331-1649261773-ef88156\r\n\r\n## 1.10.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 220303-1646922256-cf59d4b\r\n\r\n## 1.9.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 220203-1644367932-ac44420\r\n\r\n## 1.8.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 211209-1639497651-91862bb\r\n\r\n## 1.7.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 211111-1637074547-d32e8c2\r\n\r\n## 1.6.1\r\n\r\n### Fixes\r\n- Updated HRTT to version 211014-1634832500-c496f52\r\n\r\n## 1.6.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 211014-1634232337-4201189\r\n\r\n## 1.5.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 210429-1627484376-9bd9b47\r\n\r\n## 1.4.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 210429-1626886099-973f0ea\r\n\r\n## 1.3.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 210429-1620053493-31b5ee5\r\n\r\n## 1.2.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 210304-1615838386-650a7c4\r\n\r\n## 1.1.0\r\n\r\n### Fixes\r\n- Updated HRTT to version 2.12.21051\r\n\r\n## 1.0.0\r\n\r\nInitial release"},{"name":"html5-app-deployer","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/html5-app-deployer\r\n==============\r\n[![Build Status](https://travis-ci.mo.sap.corp/html5-apps-repo/html5-app-deployer.svg?token=WNUCzC1QGN7ssw8yMAqk&branch=master)](https://travis-ci.mo.sap.corp/html5-apps-repo/html5-app-deployer)\r\n\r\n<!-- toc -->\r\n- [Overview](#overview)\r\n- [Deploying HTML5 Application Deployer App](#deploying-html5-application-deployer-app)\r\n  * [Deploying HTML5 Application Deployer App Using cf push](#deploying-html5-application-deployer-app-using-cf-push)\r\n  * [Deploying HTML5 Application Deployer App using cf deploy](#deploying-html5-application-deployer-app-using-cf-deploy)\r\n- [Undeploy HTML5 Application Deployer Apps](#undeploy-html5-application-deployer-apps)\r\n  * [Delete HTML5 Application Deployer App Using cf delete](#delete-html5-application-deployer-app-using-cf-delete)\r\n  * [Undeploy HTML5 Application Deployer App Using cf undeploy](#undeploy-html5-application-deployer-app-using-cf-undeploy)\r\n- [Redeploy HTML5 Application Deployer App](#redeploy-html5-application-deployer-app)\r\n- [Automatic Creation of Destination Configurations](#automatic-creation-of-destination-configurations)\r\n- [Enable Process Exit After Upload](#enable-process-exit-after-upload)\r\n\r\n\r\n## Overview\r\nHTML5 application deployer handles the upload of the HTML5 applications content to the HTML5 application repository.\r\n\r\nThe @sap/html5-app-deployer module can be consumed as a dependency in a node.js CF application or as a base image in the HTML5 application image.\r\n\r\nHere is an example of the node.js dependency:\r\n ```\r\n {\r\n   \"name\": \"myAppDeployer\",\r\n   \"engines\": {\r\n     \"node\": \">=6.0.0\"\r\n   },\r\n   \"dependencies\": {\r\n     \"@sap/html5-app-deployer\": \"2.0.1\"\r\n   },\r\n   \"scripts\": {\r\n     \"start\": \"node node_modules/@sap/html5-app-deployer/index.js\"\r\n   }\r\n }\r\n ```\r\n\r\nHere is an example of a Dockerfile of a base image:\r\n  ```\r\n  FROM build-milestones.common.repositories.cloud.sap/com.sap.html5.deployer/html5-app-deployer-3.1:3.1.1 \r\n\r\n  RUN sed -i -E 's/(CipherString\\s*=\\s*DEFAULT@SECLEVEL=)2/\\11/' /etc/ssl/openssl.cnf && \\\r\n  mkdir -p /app && \\\r\n  chown node.node /app\r\n\r\n  # Create app directory\r\n  WORKDIR /app\r\n\r\n  # Bundle app source\r\n  COPY . .\r\n\r\n  EXPOSE 5000\r\n  CMD [ \"npm\", \"start\" ]\r\n  ```\r\nTo login to SAP Artifactory you can use the following statement:\r\n  ```\r\n  docker login --username=<techical user> --password=<apiKey> build-milestones.common.repositories.cloud.sap\r\n  ```\r\n\r\nBelow the root folder, the HTML5 applications deployer app can contain a \"resources\" folder for the static files of the HTML5 application.\r\n\r\nIf no \"resources=\" tag is provided HTML5 application deployer will still try to upload files from resources folder. If no resources folder is found,the upload will fail. In the resources folder there should be one folder or one zip archive for each application that should be uploaded. \r\nIn each application folder/zip archive there should be two files at root level: `manifest.json` and `xs-app.json`. \r\n\r\nHere is an example of the HTML5 application deployer application:   \r\n  ```\r\n  myAppsDeployer\r\n    + node_modules\r\n    - resources\r\n      - app1\r\n        index.html\r\n        manifest.json\r\n        xs-app.json\r\n      - app2\r\n        ...\r\n    package.json\r\n    manifest.yaml\r\n   ```\r\nHere is an example of the HTML5 application deployer image:\r\n  ```\r\n  myApp\r\n    - resources\r\n      - app1\r\n        index.html\r\n        manifest.json\r\n        xs-app.json\r\n      - app2\r\n        ...\r\n    Dockerfile\r\n  ```\r\n\r\nThe manifest.json file should contain at least `sap.app.id` and `sap.app.applicationVersion.version`. \r\n\r\nNote that `sap.app.id` and `sap.app.applicationVersion.version` are used in the HTML5 application repository as applicationName and applicationVersion. If `sap.app.id` contains dots or dashes, they will be removed in the applicationName.\r\nThe version format must be xx.xx.xx, whereas x is a digit. For example: 1.0.10\r\n\r\nNote that different app-host service instances cannot be used to upload applications with the same application id/name.\r\n\r\nFor example (`manifest.json`):\r\n```\r\n   {\r\n     \"_version\": \"1.7.0\",\r\n     \"sap.app\": {\r\n       \"id\": \"app1\",\r\n       \"type\": \"application\",\r\n       \"i18n\": \"i18n/i18n.properties\",\r\n       \"applicationVersion\": {\r\n         \"version\": \"1.0.0\"\r\n       }\r\n     }\r\n   }\r\n```\r\n\r\nThe `xs-app.json` file that can be used by the application router to support application routing. \r\nFor example:\r\n   ```\r\n   \"welcomeFile\": \"index.html\",\r\n   \"authenticationMethod\": \"route\",\r\n   \"routes\": [\r\n    {\r\n      \"source\": \"^/be(.*)\",\r\n      \"target\": \"$1\",\r\n      \"destination\": \"mybackend\"\r\n    },\r\n    {\r\n      \"source\": \"^(/.*)\",\r\n      \"target\": \"$1\",\r\n      \"service\": \"html5-apps-repo-rt\"\r\n    }\r\n   ]\r\n   }\r\n   ```\r\n\r\nThe `@sap/html5-app-deployer` consumer application should be bound to a single html5-apps-repo service instance of the app-host service plan. \r\nWhen the `@sap/html5-app-deployer` consumer application is started, the `@sap/html5-app-deployer` module creates a zip archive for each folder in the “resources” folder - if it is not zipped already - and triggers the upload of all zip archives to the HTML5 application repository via multi-part request.\r\n\r\n## Deploying HTML5 Application Deployer App\r\nTo deploy an sap/html5-app-deployer consumer application in the Cloud Foundry environment you can choose one of the following procedures: \r\n\r\n### Deploying HTML5 Application Deployer App Using cf push\r\n\r\n#### 1. Create a `manifest.yaml` file in the following format:\r\n```\r\napplications:\r\n\r\n- name: myAppsDeployer\r\n  no-route: true\r\n  memory: 128M\r\n  services:\r\n    - myApps-app-host\r\n```\r\n\r\n#### 2. Create an html5-apps-repo service instance of the app-host plan using CF CLI\r\n```\r\ncf create-service html5-apps-repo app-host myApps-app-host\r\n```\r\n\r\n#### 3. Push to CF\r\n```\r\ncf push -f manifest.yaml\r\n```\r\n#### 4. Stop sap/html5-app-deployer consumer application\r\nAfter @sap/html5-app-deployer consumer application has uploaded the  content successfully, stop the application to avoid using up CF container resources.\r\n\r\n```\r\ncf stop myAppsDeployer\r\n```\r\n\r\n### Deploying HTML5 Application Deployer App using cf deploy\r\nTo use cf deploy the installation of the deploy plugin is required, see [deploy plugin documentation](https://github.com/SAP/cf-mta-plugin/blob/master/README.md)\r\nIn addition, create an *.mtar archive using WebIDE or MTA Build Tool.\r\n\r\n#### 1. Create an mtad.yaml file.\r\nThe MTA project should have an `mtad.yaml` file in the following format:\r\n```\r\nID: myApps.deployer                  //MTA ID \r\n_schema-version: '2.0'\r\nversion: 0.0.3\r\n \r\nmodules:\r\n - name: myAppsDeployer\r\n   type: com.sap.html5.application-content\r\n   path: deployer/\r\n   requires:\r\n    - name: myApps-app-host\r\n \r\n  \r\nresources:\r\n - name: myApps-app-host                 //Resource name\r\n   type: org.cloudfoundry.managed-service\r\n   parameters:\r\n     service: html5-apps-repo            //Service name\r\n     service-plan: app-host              //Service plan\r\n     service-name: myApps-app-host       //Service instance name\r\n```\r\n#### 2. Generate *.mtar file.\r\nUse the WebIDE build or the [MTA Build Tool](https://sap.github.io/cloud-mta-build-tool/) to generate a valid `myAppDeployer.mtar` file.\r\n\r\n#### 3. Deploy *.mtar file.\r\n```\r\ncf deploy myAppsDeployer.mtar\r\n```\r\nAfter deploying the `*.mtar` file, an application called myAppsDeployer (stopped) is shown in cf apps.\r\n\r\n## Undeploy HTML5 Application Deployer Apps\r\nWhen you undeploy the  HTML5 application deployer app using MTA ID, the related HTML5 application repository content should be deleted too.\r\n\r\n### Delete HTML5 Application Deployer App Using cf delete\r\nIf you have used the cf push command to deploy the app, delete the HTML5 application deployer app manually:\r\n\r\n#### 1. Unbind html5-apps-repo app-host service instance.\r\nFor example:\r\n```\r\ncf unbind-service  myAppsDeployer myApps-app-host\r\n```\r\n\r\n#### 2. Delete html5-apps-repo app-host service instance\r\nThis step deletes the HTML5 application respository content.\r\nFor example:\r\n```\r\ncf delete-service  myApps-app-host\r\n```\r\nThis step deletes the HTML5 application repository content.\r\n\r\n#### 3. Delete the HTML5 application deployer app.\r\nFor example:\r\n```\r\ncf delete  myAppsDeployer\r\n```\r\n\r\n### Undeploy HTML5 Application Deployer App Using cf undeploy\r\nWhen you undeploy the HTML5 application deployer app, the HTML5 application deployer app is deleted and you can - in the same step - delete the app-host service instance of the html5-apps-repo. To delete the app-host service instance of the html5-apps-repo, the  --delete-service parameter should be passed. \r\nNote that the undeploy requires the mta id, which can be obtained by calling cf mtas or from the `mtad.yaml` ID.\r\n\r\n#### 1. Undeploy HTML5 Application Deployer App and delete the service instance\r\nFor example:\r\n```\r\ncf undeploy myApps.deployer --delete-services\r\n```\r\n\r\n## Redeploy HTML5 Application Deployer App\r\nAfter making changes to the static content files of HTML5 applications, the new content can be redeployed to the HTML5 application repository. \r\nAll content referenced by the app-host service instance id is replaced by the new content. \r\n\r\n## Asynchronous Upload\r\nYou can specify that upload content should be performed asynchronously by adding environment variable ASYNC_UPLOAD to manifest.yaml or mta.yaml files.\r\nAsynchronous upload means that the html5 applications content will be handled synchronously to HTML5 Application Repository but the internal file validation and processing will be performed asynchronously.\r\nIn this setup, you will have to check the html5 application deployer logs to verify that the upload was completed successfully. \r\nUsing asynchronous upload is specially important when triggering upload of service instance with large content (more than 10 MB). In such cases synchronous upload might cause health check errors or connection timeout during upload.\r\n\r\n## Automatic Creation of Destination Configurations\r\nWhen using HTML5 Application Deployer in SAP Managed Approuter flows you can configure the automatic creation of the required instance level destination configurations.\r\n\r\nTo enable the automatic creation of destinations, provide the environment variable SAP_CLOUD_SERVICE.\r\n\r\nTo following types of destination configurations can be created:\r\n\r\n- A destination pointing to an xsuaa service instance (optional)\r\n- A destination pointing to an Identity Authentication service instance (optional)\r\n- A destination pointing to an html5-apps-repo/app-host service instance (mandatory)\r\n- A destinations pointing to a business  service instance (optional)\r\n- One or more backend destinations that point to a Cloud or an on- premise backend application. These destinations are modeled using the environment variable BACKEND_DESTINATIONS\r\n\r\nIf the creation of a destination pointing to an xsuaa or an Identity Authentication service instance is required, the xsuaa or the Identity Authentication instances should be bound to the HTML5 application deployer.\r\nIn addition a destination instance should be bound to the HTML5 application deployer.\r\n\r\nThis capability is typically used in Kubernetes where the HTML5 Application Deployer application is previously uploaded as a docker image to Artifactory or dockerhub\r\nFor example (Kubernetes deployment) :\r\n```\r\n---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: html5appdeployer\r\n  namespace: default\r\n  labels:\r\n    app: html5appdeployer\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: html5appdeployer\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: html5appdeployer\r\n    spec:\r\n      containers:\r\n        - image: html5-apps-repo.docker.repositories.sap.ondemand.com/myapp-html5-app-deployer:1.0\r\n          name: html5appdeployer\r\n          volumeMounts:\r\n            - name: html5-repo-app-host-volume\r\n              mountPath: \"/etc/secrets/sapcp/html5-apps-repo/myapp-app-host-instance\"\r\n              readOnly: true\r\n            - name: xsuaa-volume\r\n              mountPath: \"/etc/secrets/sapcp/xsuaa/myapp-xsuaa-instance\"\r\n              readOnly: true\r\n            - name: destination-volume\r\n              mountPath: \"/etc/secrets/sapcp/destination/myapp-destination-instance\"\r\n              readOnly: true\r\n          env:\r\n            - name: PORT\r\n              value: \"5000\"\r\n            - name: SAP_CLOUD_SERVICE\r\n              value: \"com.sap.test.service\"\r\n            - name: BACKEND_DESTINATIONS\r\n              value: \"[{\r\n              \\\"Name\\\":\\\"myapp-backend\\\",\r\n              \\\"Description\\\":\\\"My application backend\\\",\r\n              \\\"Type\\\":\\\"HTTP\\\",\r\n              \\\"ProxyType\\\":\\\"Internet\\\",\r\n              \\\"URL\\\":\\\"https://<backendApplicationHost>/\\\",\r\n              \\\"Authentication\\\":\\\"NoAuthentication\\\",\r\n              \\\"HTML5.ForwardAuthToken\\\": true}]\"\r\n      imagePullSecrets:\r\n        - name: backend-dockersecret\r\n      volumes:\r\n        - name: html5-repo-app-host-volume\r\n          secret:\r\n            secretName: myapp-app-host-binding\r\n        - name: xsuaa-volume\r\n          secret:\r\n            secretName: myapp-xsuaa-binding\r\n        - name: destination-volume\r\n          secret:\r\n            secretName: myapp-destination-binding\r\n\r\n```\r\n## Enable Process Exit After Upload\r\nIn case it is required to automatically exit the html5 application deployer process, you can set the EXIT_PROCESS_AFTER_UPLOAD environment variable.\r\nIf this environment variable is set, after a successful upload the html5 application deployer application will be stopped. \r\nNote that when using deploy service this is no required because deploy service stops the html5 application deployer application automatically.\r\nIf you use native deployment mechanisms such as Cloud Foundry cf push or Kubernetes deployment, you may need to use this capability.\r\n\r\nExample:\r\n```\r\n---\r\napiVersion: batch/v1\r\nkind: Job\r\nmetadata:\r\n  name: html5appdeployer\r\n  namespace: default\r\n  labels:\r\n    app: html5appdeployer\r\nspec:\r\n  ttlSecondsAfterFinished: 0\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: html5appdeployer\r\n      annotations:\r\n        sidecar.istio.io/inject: \"false\"\r\n    spec:\r\n      restartPolicy: OnFailure\r\n      containers:\r\n        - image: html5-apps-repo.docker.repositories.sap.ondemand.com/myapp-html5-app-deployer:1.0\r\n          imagePullPolicy: Always\r\n          name: html5appdeployer\r\n          volumeMounts:\r\n            - name: html5-repo-app-host-volume\r\n              mountPath: \"/etc/secrets/sapcp/html5-apps-repo/myapp-app-host-instance\"\r\n              readOnly: true\r\n            - name: xsuaa-volume\r\n              mountPath: \"/etc/secrets/sapcp/xsuaa/myapp-xsuaa-instance\"\r\n              readOnly: true\r\n            - name: destination-volume\r\n              mountPath: \"/etc/secrets/sapcp/destination/myapp-destination-instance\"\r\n              readOnly: true\r\n          env:\r\n            - name: EXIT_PROCESS_AFTER_UPLOAD\r\n              value: \"true\"\r\n            - name: PORT\r\n              value: \"5000\"\r\n            - name: SAP_CLOUD_SERVICE\r\n              value: \"com.sap.test.service\"\r\n            - name: BACKEND_DESTINATIONS\r\n              value: \"[{\r\n              \\\"Name\\\":\\\"myapp-backend\\\",\r\n              \\\"Description\\\":\\\"My application backend\\\",\r\n              \\\"Type\\\":\\\"HTTP\\\",\r\n              \\\"ProxyType\\\":\\\"Internet\\\",\r\n              \\\"URL\\\":\\\"https://<backendApplicationHost>/\\\",\r\n              \\\"Authentication\\\":\\\"NoAuthentication\\\",\r\n              \\\"HTML5.ForwardAuthToken\\\": true}]\"\r\n      imagePullSecrets:\r\n        - name: backend-dockersecret\r\n      volumes:\r\n        - name: html5-repo-app-host-volume\r\n          secret:\r\n            secretName: myapp-app-host-binding\r\n        - name: xsuaa-volume\r\n          secret:\r\n            secretName: myapp-xsuaa-binding\r\n        - name: destination-volume\r\n          secret:\r\n            secretName: myapp-destination-binding\r\n\r\n```\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 4.1.2 - 2022-06-20\r\n\r\n### Updated dependencies\r\n- deps: xsenv@3.3.2\r\n\r\n\r\n## 4.1.1 - 2022-06-14\r\n\r\n### Updated dependencies\r\n- deps: xsenv@3.3.1\r\n\r\n## 4.1.0 - 2022-05-10\r\n\r\n### Added\r\n- Create business services destinations\r\n\r\n### Updated dependencies\r\n- deps: async@3.2.3\r\n\r\n## 4.0.1 - 2022-03-08\r\n\r\n### Fixed\r\n- Vulnerability issues\r\n\r\n## 4.0.0 - 2022-03-07\r\n\r\n### Updated dependencies\r\n- deps: xsenv@3.1.1\r\n- deps: xssec@3.2.13\r\n- deps: axios@0.26.0\r\n\r\n### Added\r\n- Switched from Request to Axios, used by request-utils\r\n- nodejs versions ^6.0.0 and ^8.0.0 support removed\r\n- nodejs version ^16.0.0 support added\r\n\r\n### Fixed\r\n- increased request options content and body length\r\n\r\n## 3.2.0 - 2021-10-24\r\n\r\n### Added\r\n- Mutual Transport Layer Security (mTLS) handling\r\n\r\n### Fixed\r\n- html5-repo credentials handling\r\n\r\n## 3.1.1 - 2021-07-20\r\n\r\n### Fixed\r\n- Add xsappname in generated destinations\r\n- Add IAS domains in generated destinations\r\n\r\n## 3.1.0 - 2021-05-25\r\n\r\n### Added\r\n- Enable process exit after upload\r\n\r\n## 3.0.1 - 2021-05-09\r\n\r\n### Fixed \r\n- Destination type set to HTTP when creating destination configuration\r\n\r\n## 3.0.0 - 2021-03-11\r\n\r\n### Added\r\n- Asynchroneus upload support\r\n\r\n## 2.3.1 - 2021-02-16\r\n\r\n### Fixed\r\n- Failure when trying to obtain xsuaa token in Kyma flows\r\n\r\n## 2.3.0 - 2020-12-20\r\n\r\n### Added\r\n- Support the automatic creation of destinations that are pointing to xsuaa, app-host, ias service instances or backend applications\r\n\r\n## 2.2.0 - 2020-12-1\r\n\r\n### Added\r\n- Support node version 14\r\n- Use xsenv library to enable accessing credentials in Kyma\r\n\r\n## 2.1.1 - 2020-09-06\r\n\r\n### Updated dependencies\r\n- deps: archiver@5.0.0\r\n- deps: cf-nodejs-logging-support@6.4.3\r\n- deps: request@2.88.2\r\n\r\n## 2.1.0 - 2020-04-21\r\n\r\n### Added\r\n- Support node 8,10,12 versions\r\n\r\n## 2.0.3 - 2019-03-13\r\n\r\n### Fixed\r\n- On failure deploy return the error written to the log\r\n- Return correct error when deploy with empty resources folder\r\n- Support deploy without npm install\r\n\r\n## 2.0.2 - 2018-11-22\r\n\r\n### Fixed\r\n- Vulnerability issues\r\n\r\n\r\n## 2.0.1 - 2018-06-07\r\n\r\n### Fixed\r\n- Validation of binding for app-host\r\n\r\n## 2.0.0 - 2018-03-01\r\n\r\n### Added\r\n- Single Deployer to serve multiple applications\r\n\r\n## 1.1.8 - 2018-02-14\r\n\r\n### Added\r\n- Initial release as NPM\r\n\r\n## 1.1.0 - 2017-11-12\r\n\r\n### Added\r\n- Initial release\r\n"},{"name":"html5-repo-mock","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"HTML5 Repo Mock\r\n===============\r\n\r\nHTML5 Repo Mock is a development web server that allows to run [AppRouter][1] based \r\napplication that intend to serve files from HTML5 Application Repository in non-CF \r\nenvironment (e.g personal workstation, docker or K8S) the very same way as it would\r\nrun in CF.\r\n\r\nForm AppRouter point of view, there is no difference between real HTML5 Repo and\r\nit's mock. Both of them are business services that expose all relevant information\r\nrequired by AppRouter via service binding (available via `VCAP_SERVICES` environment\r\nvariable).\r\n\r\nWith HTML5 Repo Mock it is also possible to serve multiple HTML5 applications and\r\nnavigate between them.\r\n\r\nHTML5 Repo Mock is capable to resolve HTML5 application default version, which allows\r\naccessing HTML5 applications without specifying the version.\r\n\r\n## Getting Started\r\n\r\n1. Download or clone current repository\r\n2. Install dependencies `npm install`\r\n3. Run `MOCK_DIR=test/applications node lib/index.js`\r\n4. Open `http://localhost:5000/app/index.html`\r\n\r\n## Usage\r\n\r\nHTML5 Repo Mock main usage scenario is to enable preview of HTML5 modules of MTA without deploying it.\r\nThere are multiple development flows that HTML5 Repo Mock supports, and they are described in the \r\nfollowing sub-sections. All flows below assume MTA project with at least AppRouter and HTML5 module.\r\n\r\n__package.json of AppRouter application__\r\n```json\r\n{\r\n  ...\r\n  \"devDependencies\": {\r\n    \"html5-repo-mock\": \"*\"    \r\n  },\r\n  \"scripts\": {\r\n    ...\r\n    \"start-local\": \"node node_modules/@sap/html5-repo-mock/index.js\"\r\n  }\r\n}\r\n```\r\n\r\n### Standalone\r\n\r\nDeveloper created MTA project with AppRouter and HTML5 module. There are no provisioned CF\r\nservices available yet. Developer would like to preview the UI only.\r\n\r\nIn this scenario HTML5 Repo Mock serves as both HTML5 Repo and XSUAA. It will start AppRouter\r\nwith `VCAP_SERVICES` described in [Default VCAP_SERVICES](#default-vcap_services) section.\r\nDuring startup, AppRouter will call `http://localhost:5001/oauth/token` to obtain JWT of\r\nHTML5 Repo Mock and will use it with all followup requests.\r\n\r\n__Mock Token__\r\n\r\n```json\r\n{\r\n  \"access_token\": \"MOCK.ACCESS.TOKEN\",\r\n  \"token_type\": \"bearer\",\r\n  \"expires_in\": 43199,\r\n  \"scope\": \"uaa.resource\",\r\n  \"jti\": \"915f7795bf2f4ea5a77b138dc8a50709\"\r\n}\r\n```\r\n\r\nThis scenario is good to start with, since it requires minimum effort, but is not suitable \r\nfor cases where there are scope constraints defined on routes in `xs-app.json` and for \r\ncases where some HTML5 atrifacts are not part of the project (e.g. reuse libraries).\r\nConsumption of business services and destination service subaccount level destinations\r\nis also not possible using this approach.\r\n\r\n### With XSUAA\r\n\r\nIn case developer would like to test behaviour of HTML5 application with real XSUAA, for example\r\nto test error handling for users with not sufficient permissions, it is possible to define \r\n`VCAP_SERVICES` environment variable that contains XSUAA binding information. In this case\r\nHTML5 Repo Mock will merge binding information of HTML5 Repo Mock into provided `VCAP_SERVICES`\r\nand run AppRouter with both of them. This allows to define routes with scope constraints in\r\n`xs-app.json`\r\n\r\n```json\r\n{\r\n  \"routes\": [{\r\n      \"source\": \"^(.*)$\",\r\n      \"target\": \"$1\",\r\n      \"service\": \"html5-apps-repo-rt\",\r\n      \"scope\": [\"$XSAPPNAME.Read\", \"$XSAPPNAME.Write\"]\r\n  }]\r\n}\r\n```\r\n\r\nAlso providing XSUAA credentials allows to consume business services and subaccount level \r\ndestinations, binding information of which should also be passed via `VCAP_SERVICES`.\r\n\r\n```json\r\n{\r\n  \"routes\": [{\r\n      \"source\": \"^/dest/(.*)$\",\r\n      \"target\": \"$1\",\r\n      \"destination\": \"DESTINATION_NAME\"\r\n  }, {\r\n      \"source\": \"^(.*)$\",\r\n      \"target\": \"$1\",\r\n      \"service\": \"some-business-service\",\r\n      \"endpoint\": \"v1\"\r\n  }]\r\n}\r\n```\r\n\r\nDisadvantage of this approach is that it still does not allow to consume HTML5 applications\r\noutside of the project (e.g. business service UIs).\r\n\r\n### With Real HTML5 Repo\r\n\r\nIf HTML5 module depends on some reusable library, which is deployed to real HTML5 Repo, it\r\nis required to use both: real HTML5 Repo and the HTML5 Repo Mock. To enable this scenario,\r\nbinding information of real HTML5 Repo may be defined in `VCAP_SERVICES` environment variable.\r\nHTML5 Repo Mock will replace it with [Default VCAP_SERVICES](#default-vcap_services) before\r\nrunning AppRouter. In addition, it will fallback to real HTML5 Repo in case no matching HTML5 \r\napplication is found in local environment.\r\n\r\nThis approach allows consuming not only applications from current project, but also UIs of\r\nbusiness services and reuse libraries. This scenario may also be mixed with XSUAA.\r\n\r\n### With Mock FLP\r\n\r\nIf there are multiple HTML5 applications it is beneficial to have a dashboard with links\r\npointing to each one of them. In production it is usually done with Portal Service (aka FLP).\r\n\r\nHTML5 Repo Mock may provide similar capabilities by utilizing \"Fiori Sandbox\" environment, which\r\nprovides FLP-like experience and display tiles pointing to applications in local environment.\r\n\r\nTo enable FLP Mock, `--flp` flag should be passed as command line argument to HTML5 Repo Mock.\r\n\r\n### With Relative URIs\r\n\r\nIf target platform to which HTML5 application will be deployed is not Cloud Foundry, it may be\r\nrequired to set absolute paths (e.g. `/sap/opu/odata/snce/PO_S_SRV;v=2/`) in manifest.json data \r\nsource URIs. This makes impossible to test these applications with HTML5 Repo Mock, because it \r\nwill treat first segment of the data source path as application name. To solve the issue,\r\nwithout modifying source code for testing purposes, the `--relative` flag is supported by HTML5\r\nRepo Mock. Once it is set, HTML5 Repo Mock will remove leading slashes from all data source\r\nURIs, when serving manifest.json files.\r\n\r\nTo enable relative URIs, `--relative` flag should be passed as command line argument to \r\nHTML5 Repo Mock.\r\n\r\n### With Custom UI5 Configuration\r\n\r\nIn case some of SAP UI5 bootstrap configuration should be overridden, it is possible to specify\r\n`--ui5` command line argument to the HTML5 Repo Mock in the following format:\r\n\r\n```json\r\n{\"version\": \"1.72.0\", \"theme\": \"sap_belize\"}\r\n```\r\n\r\nThe `version` will be inserted before `/resources` in all URLs appearing in HTML file that have\r\nthe same origin as `<script id=\"sap-ui-bootstrap\" ... >` tag.\r\n\r\nAll other keys of configuration object will be used to set attributes of UI5 bootstrap script,\r\nprefixed with `data-sap-ui-`. For example `{\"theme\":\"sap_hcb\"}` will cause \r\n`<script id=\"sap-ui-bootstrap\" data-sap-ui-theme=\"sap_hcb\" ... >`.\r\n\r\n### With Business Service For Login\r\n\r\nIn case of developing HTML5 applications that will be deployed to and consumed from some business\r\nservice (e.g. ABAP Steampunk), creating XSUAA instance for local development only is an overhead\r\nwhich may be avoided by using `--login` command line argument followed by `sap.cloud.service` value.\r\n\r\nFor example, development of HTML5 application for ABAP Steampunk may be done by setting \r\n`VCAP_SERVICES` environment variable to include service key of the corresponding service\r\n\r\n```javascript\r\n{\r\n  \"abap\": [{\r\n    \"credentials\": { // <- service key goes here\r\n        \"sap.cloud.service\": \"com.sap.cloud.abap\",\r\n        ...\r\n    },\r\n    ...\r\n  }]\r\n }\r\n```\r\n\r\nThen run HTML5 Repo Mock as \r\n\r\n```\r\nnode node_modules/@sap/html5-repo-mock/index.js --login com.sap.cloud.abap\r\n```\r\n\r\n### With Inject\r\n\r\nIf it is required to inject content in `.html` files, it is possible to provide `--inject` command\r\nline argument followed by JSON array of objects or single object. Each object should contain `place`\r\nproperty with one of the following values: `head-start`, `head-end`, `body-start` or  `body-end`.\r\nIn addition, object should have either `script` or `content` property. In case of `script`, the\r\n`<script>` tag with corresponding URL will be injected to the place specified in `place` property.\r\nIn case of `content`, arbitrary content will be injected to the place specified in `place` property.\r\n\r\n```shell script\r\nnode node_modules/@sap/html5-repo-mock/index.js --inject '{\"place\":\"head-start\", \"script\":\"http://test.com/script.js\"}'\r\n```\r\n\r\n```shell script\r\nnode node_modules/@sap/html5-repo-mock/index.js --inject '{\"place\":\"body-end\", \"content\":\"<p>Footer</p>\"}'\r\n```\r\n\r\n### With MIME Types\r\n\r\nIn case HTML5 application contains resource(s) with file extension that is required to be served\r\nwith custom value of `Content-Type` header, it is possible to pass `--mime-types` command line\r\nargument followed with JSON that has file extension (without a dot) as key and corresponding\r\nMIME Type (`Content-Type` header value) as value.\r\n\r\n```shell script\r\nnode node_modules/@sap/html5-repo-mock/index.js --mime-types '{\"my-ext\":\"application/x-my-ext\"}'\r\n```\r\n\r\n### With Additional Headers\r\n\r\nIn case it is desired to send additional headers along with each request to destination target,\r\nit is possible to specify them as additional properties of AppRouter environment variable\r\n`destinations`, following the naming convention `URL.headers.<header_name>`.\r\n\r\n```shell script\r\ndestinations=[{\"URL.headers.APIKey\": \"1111-2222-3333\", \"name\":\"api\", \"url\":\"https://api.sap.com/SOME_SRV\"}]\r\n```\r\n\r\n## Configuration\r\n\r\nHTML5 Repo Mock supports various configuration options via command line arguments and environment variables.\r\nIn case of both environment variable and command line argument for the same configuration option are set,\r\nthe command line argument has higher priority.\r\n\r\n| Command line argument            | Environment variable              | Default value                       | Description                                                                                                 |\r\n|----------------------------------|-----------------------------------|-------------------------------------|-------------------------------------------------------------------------------------------------------------|\r\n| `--APIKey <key>`                 | API_KEY                           | &lt;not set&gt;                     | Override manifest.json OData models to send `APIKey` header with given value                                |\r\n| `--baseURL <url>`                | AR_BASE                           | http://localhost:$PORT              | AppRouter base URL. used for printing application URLs                                                      |\r\n| `--workingDirectory <dir>`       | AR_DIR                            | $PWD                                | The AppRouter working directory                                                                             |\r\n| `--destination`                  | MOCK_DESTINATION                  | &lt;not set&gt;                     | If set, HTML5 Repo Mock will mock destination service                                                       |\r\n| `--mockDir <dir(s)>`             | MOCK_DIR                          | $PWD/..                             | Single or multiple directories in which HTML5 Repo Mock search for HTML5 applications                       |\r\n| `--flp`                          | MOCK_FLP                          | &lt;not set&gt;                     | If set, AppRouter serves Fiori Sandbox at `/cp.portal/site`                                                 |\r\n| `--inject <json>`                | MOCK_INJECT                       | &lt;not set&gt;                     | Inject arbitrary HTML content or script with URL to specified place                                         |\r\n| `--login <sap.cloud.service>`    | MOCK_LOGIN                        | &lt;not set&gt;                     | Use service with specified `sap.cloud.service` as XSUAA (for login)                                         |\r\n| `--lookupDirs <dir(s)>`          | MOCK_LOOKUP_DIRS                  | [\"\", \"dist\", \"webapp\"]              | Folders relative to `xs-app.json` from where to serve HTML5 assets                                          |\r\n| `--mime-types <json>`            | MOCK_MIME_TYPES                   | &lt;not set&gt;                     | JSON mapping file extensions to `Content-Type` values                                                       |\r\n| `--mockPort <port>`              | MOCK_PORT                         | 5001                                | TCP port of HTML5 Repo Mock                                                                                 |\r\n| `--relative`                     | MOCK_RELATIVE                     | &lt;not set&gt;                     | Remove leading slash in data source URIs of manifest.json files                                             |\r\n| `--service-instance-destination` | MOCK_SERVICE_INSTANCE_DESTINATION | &lt;not set&gt;                     | If set, AppRouter sends destinations service instance credentials in `bas-destination-instance-cred` header |\r\n| `--ui5 <json>`                   | MOCK_UI5                          | &lt;not set&gt;                     | Rewrite UI5 bootstrap configuration and version in HTML files                                               |\r\n| `--standalone <url>`             | MOCK_WELCOME                      | &lt;not set&gt;                     | If set, changes welcome file of AppRouter's xs-app.json to provided value                                   |\r\n|                                  | PORT                              | 5000                                | TCP port of AppRouter. Used for printing application URLs                                                   |\r\n| `--sap-ui-bootstrap-url <url>`   | SAP_UI_BOOTSTRAP_URL              | https://sapui5.hana.ondemand.com    | Base URL form which SAP UI5 resources of FLP sandbox will be loaded                                         |\r\n|                                  | VCAP_SERVICES                     | [See below](#default-vcap_services) | Service binding information that will be overridden and passed to AppRouter                                 |\r\n\r\n### Default VCAP_SERVICES\r\n\r\n```json\r\n{\r\n  \"html5-apps-repo\": [\r\n    {\r\n      \"binding_name\": null,\r\n      \"credentials\": {\r\n        \"grant_type\": \"client_credentials\",\r\n        \"sap.cloud.service\": \"html5-apps-repo-rt\",\r\n        \"uaa\": {\r\n          \"clientid\": \"mock_client_id\",\r\n          \"clientsecret\": \"mock_client_secret\",\r\n          \"identityzone\": \"mock_idz\",\r\n          \"identityzoneid\": \"mock_idz_id\",\r\n          \"sburl\": \"http://localhost\",\r\n          \"tenantid\": \"mock_tenant_id\",\r\n          \"tenantmode\": \"dedicated\",\r\n          \"uaadomain\": \"localhost:5001\",\r\n          \"url\": \"http://localhost:5001\",\r\n          \"verificationkey\": \"-----BEGIN PUBLIC KEY-----***-----END PUBLIC KEY-----\",\r\n          \"xsappname\": \"mock_xsappname\"\r\n        },\r\n        \"uri\": \"http://localhost:5001\",\r\n        \"vendor\": \"SAP\"\r\n      },\r\n      \"instance_name\": \"mock-html5-apps-repo\",\r\n      \"label\": \"html5-apps-repo\",\r\n      \"name\": \"mock-html5-apps-repo\",\r\n      \"plan\": \"app-runtime\",\r\n      \"provider\": null,\r\n      \"syslog_drain_url\": null,\r\n      \"tags\": [\r\n        \"html5appsrepo\",\r\n        \"html5-apps-repo-rt\",\r\n        \"html5-apps-rt\",\r\n        \"html5-apps-repo-dt\",\r\n        \"html5-apps-dt\"\r\n      ],\r\n      \"volume_mounts\": []\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n## Troubleshooting\r\n\r\nIf HTML5 Repo Mock running and producing unexpected results, it is possible to see some diagnostic information\r\nby accessing one of the URLs below.\r\n\r\n| URL                     | Description                                                 |\r\n|-------------------------|-------------------------------------------------------------|\r\n| /logs                   | Tracing logs for the bootstrap and each request             |\r\n| /conf                   | HTML5 Repo Mock configuration                               |\r\n| /vcap                   | Value of `VCAP_SERVICES` that AppRouter was configured with |\r\n| /applications/metadata/ | List of metadata for all discovered applications            |\r\n\r\n## Support channel\r\nFor reporting an issue, open a BCP ticket with component CA-BAS-RUN-HTML5 For reporting a feature request,\r\nplease open an influence request (https://influence.sap.com/sap/ino/#campaign/2538)\r\n\r\n[1]: https://www.npmjs.com/package/@sap/AppRouter\r\n"},{"name":"instance-manager","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/instance-manager\r\n\r\nNode.js package for creating and deleting service instances per tenant within an application at runtime.\r\n\r\n## Overview\r\n\r\nThis package provides a client for _Instance Manager_, [_Service Manager_](https://peripli.github.io/) and **Migration Manager** - components that create and delete\r\nservice instances (via REST API) for a specified key. These components can be used in the context\r\nof multitenant applications where the tenant id is the key an instance is associated with.\r\n\r\n_Multitenancy_ is a concept for sharing resources between several different\r\nand unrelated to each other groups of users called _tenants_.\r\nExample: subscriptions to a commercial cloud application can be sold to\r\ntwo different companies each of which should use the application in isolation\r\nfrom the other one. Customizations are also applied (e.g. different branding,\r\nidentity providers, database schemas etc.).\r\n\r\nA typical application has access to external resources (e.g. a database or messaging) via _services_.\r\nIf an application is used by different tenants, then using a separate service instance\r\nfor each one will improve isolation since service binding provides access to a resource.\r\n\r\nWith this package a Node.js application can dynamically create and delete service instances per tenant at runtime.\r\n\r\nTo consume _Instance Manager_, an instance of a _managed service_ of the desired type is created first and is then bound to the application.\r\nTaking HANA database as an example, the _managed service_ is called _'managed-hana'_. Its credentials contain HTTP endpoints and credentials only which can later be used by the application for creating and deleting service instances\r\nof the desired type for each tenant.\r\nAll managed instances are of the same plan - the one used during the _managed service_ instance creation (e.g. creating a _managed-hana_ service of plan _hdi-shared_ would mean managing service instances of this plan only).\r\n\r\nTo consume _Service Manager_, an instance of the _service-manager_ service, _container_ plan should be created. Its credentials contain parameters that are used at runtime to manage service instances.\r\nInstances of any available service and plan can be managed with a single instance of _Service Manager_. The application specifies which service and plan to be used by the library.\r\n\r\n#### Migration Manager\r\n\r\nThe\r\n**Migration Manager** is created to a supply smooth migration from _Instance Manager_ (deprecated) to _Service Manager_. To consume\r\n**Migration Manager**, both _Instance Manager_ and _Service Manager_ credentials have to be passed as input (as imOpts and smOpts).\r\n```js\r\nvar createInstanceManager = require('@sap/instance-manager').create;\r\n\r\nvar options = {\r\n  imOpts: { /* properties from service binding */},\r\n  smOpts: {/* properties from service binding */}\r\n};\r\ncreateInstanceManager(options, function (err, instanceManager) {\r\n  if (err) {\r\n    return console.log('Create migration manager error:', err.message);\r\n  }\r\n\r\n  var optionalParameters = {\r\n    /* Optional JSON object containing service-specific configuration parameters */\r\n    \"provisioning_parameters\": { \"<key>\" : \"<key>\" },\r\n  };\r\n  instanceManager.create('my-tenant', optionalParameters, function (err, instance) {\r\n    if (err) {\r\n      return console.log('Create error:', err.message);\r\n    }\r\n\r\n    // consume instance.credentials\r\n    console.log(instance);\r\n\r\n    instanceManager.get('my-tenant', function (err, instance) {\r\n      if (err) {\r\n        return console.log('Get error:', err.message);\r\n      }\r\n\r\n      // same instance\r\n      console.log(instance);\r\n\r\n      instanceManager.delete('my-tenant', function (err) {\r\n        if (err) {\r\n          return console.log('Delete error:', err.message);\r\n        }\r\n\r\n        console.log('Instance deleted');\r\n      });\r\n    });\r\n  });\r\n});\r\n```\r\n**Migration Manager** is applicable only for CF runtime, as _Service Manager_ is not available for XSA.\r\n\r\n## API\r\n\r\n```js\r\nvar createInstanceManager = require('@sap/instance-manager').create;\r\n\r\nvar options = { /* properties from service binding */ };\r\ncreateInstanceManager(options, function (err, migrationManager) {\r\n  if (err) {\r\n    return console.log('Create instance manager error:', err.message);\r\n  }\r\n\r\n  var optionalParameters = {\r\n    /* Optional JSON object containing service-specific configuration parameters */\r\n    \"provisioning_parameters\": { \"<key>\" : \"<key>\" }\r\n  };\r\n  migrationManager.create('my-tenant', optionalParameters, function (err, instance) {\r\n    if (err) {\r\n      return console.log('Create error:', err.message);\r\n    }\r\n\r\n    // consume instance.credentials\r\n    console.log(instance);\r\n\r\n    migrationManager.get('my-tenant', function (err, instance) {\r\n      if (err) {\r\n        return console.log('Get error:', err.message);\r\n      }\r\n\r\n      // same instance\r\n      console.log(instance);\r\n\r\n      migrationManager.delete('my-tenant', function (err) {\r\n        if (err) {\r\n          return console.log('Delete error:', err.message);\r\n        }\r\n\r\n        console.log('Instance deleted');\r\n      });\r\n    });\r\n  });\r\n});\r\n```\r\n\r\n### Options\r\n\r\n#### Instance Manager parameters\r\n\r\nThe following properties are provided in the credentials of the _Instance Manager_ service binding.\r\n\r\nProperty | Mandatory | Details\r\n-------- | --------- | -------\r\nuser | x | User for authentication.\r\npassword | x | Password for the user.\r\npost_managed_instance_url | x | REST endpoint used for creating a new service instance for a tenant.\r\nget_managed_instance_url | x | REST endpoint used for getting the details about a specific tenant service instance.\r\nget_all_managed_instances_url | x | REST endpoint used for getting the details about all instances (for all tenants).\r\ndelete_managed_instance_url | x | REST endpoint used for deletion of a service instance.\r\n\r\n**Note**: A _managed service_ binding contains all the mandatory properties mentioned above.\r\n\r\n#### Service Manager parameters\r\n\r\nProperty | Mandatory | Details\r\n-------- | --------- | -------\r\nsm_url | x | URL of _Service Manager_.\r\nurl | x | URL of _UAA_ server from which to fetch tokens which will be send to _Service Manager_.\r\nclientid | x | Used when retrieving a token.\r\nclientsecret (not required for mTLS) | x | Used when retrieving a token.\r\ncertificate (only for mTLS) | x | Used when retrieving a token.\r\ncerturl (only for mTLS) | x | Used when retrieving a token.\r\nservice |  | Defaults to 'hana'. Name of the service of which to manage instances.\r\nplan |  | Defaults to 'hdi-shared'. Name of a plan from the selected service of which to manage instances.\r\n\r\n**Note**: A _service-manager_ binding contains all the mandatory properties mentioned above. For non-mTLS authentication *clientsecret* is required, where *certificate* and *certurl* are required for mTLS authentication.\r\n\r\n#### Migration Manager parameters\r\n\r\nThe following properties are provided in the credentials of the **Migration Manager** service binding.\r\n\r\nProperty | Mandatory | Details\r\n---------| --------- | -------\r\n| **imOpts**         |\r\nuser | x | User for authentication.\r\npassword | x | Password for the user.\r\npost_managed_instance_url | x | REST endpoint used for creating a new service instance for a tenant.\r\nget_managed_instance_url | x | REST endpoint used for getting the details about a specific tenant service instance.\r\nget_all_managed_instances_url | x | REST endpoint used for getting the details about all instances (for all tenants).\r\nmigrate_managed_instance_url | x | REST endpoint used for getting the details about all instances (for a specific tenant).\r\ndelete_managed_instance_url | x | REST endpoint used for deletion of a service instance.\r\n| **smOpts**         |\r\nsm_url | x | URL of _Service Manager_.\r\nurl | x | URL of _UAA_ server from which to fetch tokens which will be send to _Service Manager_.\r\nclientid | x | Used when retrieving a token.\r\nclientsecret | x | Used when retrieving a token.\r\nservice |  | Defaults to 'hana'. Name of the service of which to manage instances.\r\nplan |  | Defaults to 'hdi-shared'. Name of a plan from the selected service of which to manage instances.\r\n\r\n**Note**: A _migration-manager_ binding contains all the mandatory properties mentioned above.\r\n\r\n#### Migration Manager parameters\r\n\r\nThe following properties are provided in the credentials of the **Migration Manager** service binding.\r\n\r\nProperty | Mandatory | Details\r\n---------| --------- | -------\r\n| **imOpts**         |\r\nuser | x | User for authentication.\r\npassword | x | Password for the user.\r\npost_managed_instance_url | x | REST endpoint used for creating a new service instance for a tenant.\r\nget_managed_instance_url | x | REST endpoint used for getting the details about a specific tenant service instance.\r\nget_all_managed_instances_url | x | REST endpoint used for getting the details about all instances (for all tenants).\r\nmigrate_managed_instance_url | x | REST endpoint used for getting the details about all instances (for a specific tenant).\r\ndelete_managed_instance_url | x | REST endpoint used for deletion of a service instance.\r\n| **smOpts**         |\r\nsm_url | x | URL of _Service Manager_.\r\nurl | x | URL of _UAA_ server from which to fetch tokens which will be send to _Service Manager_.\r\nclientid | x | Used when retrieving a token.\r\nclientsecret | x | Used when retrieving a token.\r\nservice |  | Defaults to 'hana'. Name of the service of which to manage instances.\r\nplan |  | Defaults to 'hdi-shared'. Name of a plan from the selected service of which to manage instances.\r\n\r\n**Note**: A _migration-manager_ binding contains all the mandatory properties mentioned above.\r\n\r\n#### Optional parameters\r\n\r\nThe create and delete operations are executed asynchronously on server side. To provide an easier interface,\r\nthis library also implements polling until an operation is finished. Developers can tune polling\r\nvia some optional properties.\r\n\r\nSince operations involve network activity (thus, can be considered relatively slow) the package\r\nalso caches the created instances. Cache options can also be provided by developers.\r\n\r\nProperty | Details\r\n-------- | -------\r\npolling_interval_millis | Defaults to 300. States how many milliseconds to wait between requests in the polling phase.\r\npolling_timeout_seconds | Defaults to 120. Sets a limit for time (in seconds) that can be spent in polling.\r\ncache_max_items | Defaults to 500. States the capacity of the cache.\r\ncache_item_expire_seconds | Defaults to 600 (10 minutes). Number of seconds after which a cache entry expires.\r\n\r\n**Note**: It is recommended to have a single instance manager JavaScript object per _managed service_ bound to the application. An exception is **Migration Manager** due to its specific setup, instances for both _instance and service manager_ gets created.\r\n\r\n**Note**: Due to details in regard to consuming _Service Manager_ (more communication with the service is required), applications currently using _Instance Manager_ may need to increase the value of the *polling_timeout_seconds* setting.\r\n\r\n### Methods\r\n- `create(tenant, optionalParameters, callback)` - creates a service instance for the provided tenant.\r\nThe method polls until the instance is successfully created and then invokes the callback.\r\nReports an error having a `statusCode` property with value of `409` if an instance for this tenant already exists.\r\n  - tenant | *String* | Tenant name.\r\n  - optionalParameters | *Object* | (*optional*) JSON object with parameters for provisioning or binding, as would be done with the -c options of the CLI commands `create-service` and `bind-service` for unmanaged services. E.g.\r\n  ```json\r\n  {\r\n    \"provisioning_parameters\": { \"database_id\" : \"<HANA Tenant DB Guid or Name>\" },\r\n    \"binding_parameters\": {\"<key>\" : \"<value>\"}\r\n  }\r\n  ```\r\n  - callback | *function(err, instance)* | Callback function with the newly created instance as second argument.\r\n\r\n**Note**: With _Service Manager_ and **Migration Manager** the properties provided on the managed instance are a subset (`label`, `plan`, `tags`, `credentials`, `tenant_id` and `status`) of the properties provided on it when using _Instance Manager_.\r\n\r\n- `get(tenant, bindingParams, callback)` - gets the corresponding instance for the provided tenant either from cache or from server. Includes a binding creation fallback if instance has no bindings.\r\nValue of `null` means that a service instance for this tenant does not exist.\r\n  - tenant | *String* | Tenant name.\r\n  - optionalParameters | *Object* | **Optional.**  JSON object with parameters for provisioning or binding, as would be done with the -c options of the CLI commands. Used during binding creation fallback.\r\n  - callback | *function(err, instance)* | Callback function with the instance as second argument.\r\n\r\n**Note**: In _Instance Manager_ case this method only polls if the instance is in status `CREATION_IN_PROGRESS`.\r\nIn all other cases it returns the service instance as it is on server.\r\nThus, having the `credentials` property on the `instance` object in the callback is not guaranteed.\r\nIn _Service Manager_ case if the managed instance is not ready to be used, the method returns an error. In **Migration Manager** case it will try to get an instance from _Service Manager_ if nothing found it will then search in _Instance Manager_ and it will return result considered by _Instance Manager_.\r\n\r\n- `getAll(optionalParameters, callback)` - gets the instances for all tenants as an array of objects. This method updates the cache. Includes binding creation fallback for each instance without binding. If binding creation fails it will log an error message and continue processing.\r\n  - optionalParameters | *Object* | **Optional.**  JSON object with parameters for provisioning or binding, as would be done with the -c options of the CLI commands. Used during binding creation fallback.\r\n  - callback | *function(err, instances)* | Callback function with all instances as second argument.\r\n\r\n**Note**: In _Instance Manager_ case filtering of the instances according to their status (e.g. `CREATION_SUCCEEDED`, `CREATION_IN_PROGRESS`) does not take place. Thus, having the `credentials` property on each of the instances provided in the callback is not guaranteed. In _Service Manager_ case only ready to be used managed instances are returned. In **Migration Manager** case it will get instances from both _Service Manager_ and _Instance Manager_ and will return an array of managed instances. If no instaces found and error would be thrown.\r\n\r\n- `delete(tenant, callback)` - deletes service instance for the provided tenant.\r\nThe method polls until the instance is successfully deleted and then invokes the callback.\r\nReports an error having a `statusCode` property with value of `404` if an instance for this tenant does not exist.\r\n  - tenant | *String* | Tenant name.\r\n  - callback | *function(err)* | Callback function called when the instance is deleted or an error has occurred.\r\n\r\nWhen the callback of a method is invoked with an error which is caused by an unexpected HTTP response code\r\nreceived from the server, then this error object will have a `statusCode` property with the value of the HTTP status code.\r\n\r\n**Note**: In **Migration Manager** case it will try to delete service instance for the provided tenant first in _Instance Manager_ then it will continue with _Service Manager_. In case nothing's found an error would be thrown, all other cases it would delete service instances.\r\n\r\n## Debug logs\r\n\r\nOne can enable debug logs of this package via adding _instance-manager_ to the `DEBUG` environment variable.\r\n\r\n\r\n## Binding Labels\r\n\r\n***Note: The @sap/instance-manager will only retrieve bindings that have all three of the below bindings. These labels are automatically assigned and added when creating bindings via this library.***\r\n\r\nLabel Name | Value\r\n-------- | ---------\r\ntenant_id | The tenant for which the binding is created.\r\nservice_plan_id | The ID of the 'hdi-shared' plan of the 'hana' service offering (by default).\r\nmanaging_client_lib | 'instance-manager-client-lib' - this value is used as an additional filter to distinguish instances created and used by this library, and those created by other means and used for other purposes.\r\n\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n\r\n## 3.3.4 - 2022-06-10\r\n\r\n### Updated\r\n- Updated devDep async to 3.2.4\r\n\r\n## 3.3.3 - 2022-05-17\r\n\r\n### Fixed\r\n- **Migration Manager.** Fixed typo in cache_item_expire_seconds.\r\n\r\n### Changed\r\n- Changed istanbul test framework with c8.\r\n\r\n## 3.3.2 - 2022-03-14\r\n\r\n### Fixed\r\n- **Service Manager.** Bindings will no longer attempt to be created for non-ready instances.\r\n\r\n## 3.3.1 - 2022-02-16\r\n\r\n### Updated\r\n- Updated xssec to v3.2.13\r\n\r\n## 3.3.0 - 2022-02-04\r\n\r\n### Added\r\n- Support for Node.js v16.x\r\n\r\n### Fixed\r\n- Updated debug package to v4.3.3\r\n\r\n## 3.2.1 - 2022-01-20\r\n\r\n### Added\r\n- **Service Manager.** Added token caching.\r\n\r\n### Updated\r\n- `node-fetch` version updated to v2.6.7.\r\n\r\n## 3.2.0 - 2022-01-12\r\n\r\n### Added\r\n- **Migration Manager.** Implement Migration Manager to help with transition from Instance to Service Manager on Cloud Foundry.\r\n\r\n### Fixed\r\n- **Service Manager.** Fixed Token retrieval max timeout.\r\n\r\n## 3.1.1 - 2022-01-04\r\n\r\n### Fixed\r\n- **Service Manager.** Fixed a bug where if binding creation (fallback) failed it will call callback twice.\r\n\r\n## 3.1.0 - 2021-12-13\r\n\r\n### Added\r\n- **Service Manager.** Support for mTLS authentication\r\n- **Service Manager.** Retrieving an instance will create a binding if no binding exists for that instance.\r\n- **Service Manager.** Creating a new instance will now also put the *tenant_id* as label.\r\n- **Service Manager.** Optional parameters supported for get and getAll to support fallback for mTLS.\r\n\r\n## 3.0.0 - 2021-05-05\r\n\r\n### Fixed\r\n- Replaced dependency request with node-fetch\r\n- Updated debug package to v4.2.0\r\n\r\n### Removed\r\n- Support for Node.js 6\r\n\r\n### Added\r\n- Support for Node.js 14\r\n\r\n## 2.2.0 - 2020-07-24\r\n\r\n### Added\r\n- Integration with Service Manager\r\n\r\n### Fixed\r\n- Update dependencies\r\n- Update license\r\n\r\n## 2.1.0 - 2019-12-10\r\n\r\n### Added\r\n- Support for Node.js v12.x\r\n\r\n## 2.0.0 - 2019-04-24\r\n\r\n### Removed\r\n- Support for Node.js v0.12\r\n- Support for Node.js v4\r\n\r\n## 1.4.0 - 2018-12-18\r\n\r\n### Added\r\n- Node.js version 10 support\r\n\r\n## 1.3.4 - 2018-08-14\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 1.3.3 - 2018-07-17\r\n\r\n### Fixed\r\n- Update request package to v2.87.0\r\n\r\n## 1.3.2 - 2018-05-28\r\n\r\n### Fixed\r\n- Update request package to v2.86.0\r\n\r\n## 1.3.1 - 2018-04-05\r\n\r\n### Fixed\r\n- Update npm-shrinkwrap.json\r\n\r\n## 1.3.0 - 2018-01-19\r\n\r\n### Added\r\n- npm-shrinkwrap.json\r\n\r\n## 1.2.0 - 2017-10-13\r\n\r\n### Added\r\n- Support for Node.js 8\r\n- Optional argument to `instanceManager.create` - an object with parameters for provisioning or binding\r\n\r\n### Changed\r\n- Dependencies' versions\r\n\r\n## 1.1.0 - 2017-06-01\r\n\r\n### Added\r\n- `instanceManager.getAll` function\r\n\r\n## 1.0.1 - 2017-02-10\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 1.0.0 - 2017-02-02\r\n\r\n### Added\r\n- Initial implementation\r\n"},{"name":"jobs-client","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/jobs-client\r\n================\r\n\r\nNode.js client for XS Advanced Job Scheduler service.\r\n\r\nThis is a small Node.js module to integrate jobs in your Node.js application.\r\nThe module contains utilities to create REST calls in the request format\r\nexpected by the job scheduler service to register/unregister jobs in\r\njob scheduler service, update job schedules and job status.\r\n\r\n## Usage\r\n\r\n### General\r\n\r\nThis module works with job descriptor objects, having the properties as\r\nexpected by the respective service in JobScheduler.\r\n\r\n### Constructor\r\n\r\nThe constructor instantiates a job scheduler client object.\r\n\r\nIf there is exactly one service binding to the job scheduler service,\r\nall necessary information is read from the binding information:\r\nif OAuth is configured, the client requests an access token from the\r\nbound identity provider; otherwise, user name and password are taken\r\nfrom the cloud environment.\r\n\r\nIn other cases, the constructor requires an options object that must\r\nat least contain the base URL of the job scheduler service and the\r\nnecessary authentication information, either an OAuth token or\r\nuser name and password.\r\n\r\nThe following properties can be set in the constructor options:\r\n\r\nname     | description\r\n----     | -----------\r\nbaseURL  | the base URL of the job scheduler service\r\ntimeout  | HTTP request timeout in milliseconds, default 15000\r\ntoken    | OAuth access token for the job scheduler service\r\nuser     | user name for the job scheduler service (if basic authentication is used)\r\npassword | password for the job scheduler service (if basic authentication is used)\r\n\r\n\r\nExample usage with bound job scheduler service:\r\n\r\n```js\r\n  const JobSchedulerClient = require('@sap/jobs-client');\r\n  const scheduler = new JobSchedulerClient.Scheduler();\r\n```\r\n\r\nExample usage with Basic Authentication:\r\n\r\n```js\r\n  const JobSchedulerClient = require('@sap/jobs-client');\r\n\r\n  const options = {\r\n    baseURL: 'https://apphost:port/',\r\n    user: '<username>',\r\n    password: '<password>'\r\n  };\r\n  const scheduler = new JobSchedulerClient.Scheduler(options);\r\n```\r\n\r\nExample usage with OAuth:\r\n\r\n```js\r\n  const JobSchedulerClient = require('@sap/jobs-client');\r\n\r\n  const options = {\r\n    baseURL: 'https://apphost:port/',\r\n    token: '<token>'\r\n  };\r\n  const scheduler = new JobSchedulerClient.Scheduler(options);\r\n```\r\n\r\n### Create job\r\n\r\n```js\r\n  var myJob = { /* according to job scheduler documentation */ };\r\n  var scJob = { job: myJob };\r\n\r\n  scheduler.createJob(scJob, function (error, body) {\r\n    if (error) {\r\n      return console.log('Error registering new job %s', error);\r\n    }\r\n    // job was created successfully\r\n    job.id = body._id;\r\n  });\r\n```\r\n\r\n### Update job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33,\r\n    job: {\r\n      user : 'John',\r\n      password : 'secret',\r\n      active : 1\r\n    }\r\n  };\r\n  scheduler.updateJob(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error updating job: %s', err);\r\n    }\r\n    //job was updated successfully\r\n  });\r\n```\r\n\r\n### Delete job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33\r\n  };\r\n  scheduler.deleteJob(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error deleting job: %s', err);\r\n    }\r\n    //job was deleted successfully\r\n  });\r\n```\r\n\r\n### Get job Details\r\n\r\n```js\r\n  var req = {\r\n    //by Id\r\n    jobId: 33\r\n  };\r\n  scheduler.fetchJob(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving job: %s', err);\r\n    }\r\n    //job details retrieved successfully\r\n  });\r\n  var req = {\r\n    //by name\r\n    name: 'my job'\r\n  };\r\n  scheduler.fetchJob(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving job: %s', err);\r\n    }\r\n    //job details retrieved successfully\r\n  });\r\n```\r\n\r\n### Create job schedule\r\n\r\n```js\r\n  var mySchedule = { /* according to job scheduler documentation */ }\r\n  var req = {\r\n    jobId: 33,\r\n    schedule: mySchedule\r\n  };\r\n  scheduler.createJobSchedule(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error creating job schedule: %s', err);\r\n    }\r\n    //Schedule created successfully\r\n  });\r\n```\r\n\r\n### Update job schedule\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33,\r\n    scheduleId: 'ABC-DEF',\r\n    schedule: {\r\n      cron: \"* * * * 4\"\r\n    }\r\n  };\r\n  scheduler.updateJobSchedule(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error updating job schedule: %s', err);\r\n    }\r\n    //Schedule updated successfully\r\n  });\r\n```\r\n\r\n###Delete job schedule\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33,\r\n    scheduleId: 'ABC-DEF'\r\n  };\r\n  scheduler.deleteJobSchedule(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error deleting schedule: %s', err);\r\n    }\r\n    //Schedule deleted successfully\r\n  });\r\n```\r\n\r\n### Get all jobs\r\n\r\n```js\r\n  var req = {};\r\n  scheduler.fetchAllJobs(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving jobs: %s', err);\r\n    }\r\n    //Jobs retrieved successfully\r\n  });\r\n```\r\n\r\n### Get job schedule details\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33,\r\n    scheduleId: 'ABC-DEF',\r\n    displayLogs: false\r\n  };\r\n  scheduler.fetchJobSchedule(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving schedule: %s', err);\r\n    }\r\n    //Schedule retrieved successfully\r\n  });\r\n```\r\n\r\n### Get schedules of job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33\r\n  };\r\n  scheduler.fetchJobSchedules(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving all schedules: %s', err);\r\n    }\r\n    //All schedules retrieved successfully\r\n  });\r\n```\r\n\r\n### Update run log of schedule\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33,\r\n    scheduleId: 'ABC-DEF',\r\n    runId: 1,\r\n    data: data\r\n  };\r\n  scheduler.updateJobRunLog(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error updating run log: %s', err);\r\n    }\r\n    //Run log updated successfully\r\n  });\r\n```\r\n\r\n### Get run logs of schedule\r\n\r\n```js\r\n  var req = {\r\n    jobId: 33,\r\n    scheduleId: 'ABC-DEF',\r\n    page_size: 15,\r\n    offset: 0\r\n  };\r\n  scheduler.getRunLogs(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving run logs: %s', err);\r\n    }\r\n    //Run log retrieved successfully\r\n  });\r\n```\r\n\r\n### Delete all schedules of job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 3\r\n  };\r\n  scheduler.deleteAllJobSchedules(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error deleting schedules: %s', err);\r\n    }\r\n    //All schedules deleted successfully\r\n  });\r\n```\r\n\r\n### Bulk activation of schedules of job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 3\r\n  };\r\n  scheduler.activateAllSchedules(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error activating bulk schedules: %s', err);\r\n    }\r\n    //All schedules activated successfully\r\n  });\r\n```\r\n\r\n### Bulk deactivation of schedules of job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 3\r\n  };\r\n  scheduler.deactivateAllSchedules(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error deactivating bulk schedules: %s', err);\r\n    }\r\n    //All schedules deactivated successfully\r\n  });\r\n```\r\n\r\n### Get action logs of job\r\n\r\n```js\r\n  var req = {\r\n    jobId: 3\r\n  };\r\n  scheduler.getJobActionLogs(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving action logs: %s', err);\r\n    }\r\n    //All actionlogs logs retrieved successfully\r\n  });\r\n```\r\n\r\n### Get action logs of schedule\r\n\r\n```js\r\n  var req = {\r\n    jobId: 3,\r\n    scheduleId: \"ABC-DEF\"\r\n  };\r\n  scheduler.getScheduleActionLogs(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving action logs: %s', err);\r\n    }\r\n    //All actionlogs logs retrieved successfully\r\n  });\r\n```\r\n\r\n### Get active and inactive jobcount\r\n\r\n```js\r\n  var req = {\r\n    activeStatus: true // true- for getting active number of jobs and false- for getting inactive number of jobs\r\n  };\r\n  scheduler.getJobCount(req, function(err, result) {\r\n    if (err) {\r\n      return console.log('Error retrieving jobcount: %s', err);\r\n    }\r\n    //Active Job count retrieved successfully\r\n  });\r\n```\r\n\r\n### Search API\r\n\r\nSearch can be done in both job and schedule entities.\r\nHere in the client 'q' contains the query parameter,\r\nyou need to provide the query in decoded format,\r\nthe client will decode the query.\r\nAnd filtering parameters can be provided as shown below:\r\n\r\n```js\r\nvar searchToken = {\r\n    q : 'job startTime:>2011-02-18 active:false',\r\n    displaySchedules : 'false',\r\n    offset : 0,\r\n    page_size : 5\r\n  };\r\n\r\n  scheduler.searchJobs(searchToken,function(error,result) {\r\n      if (error) {\r\n        return console.log('Error during Job search: %s',error);\r\n      }\r\n      console.log(JSON.stringify(result));\r\n  });\r\n  ```\r\n\r\n  For schedule search:\r\n\r\n  ```js\r\n  var searchScheduleToken = {\r\n    q : 'startTime:>2011-02-18 active:false',\r\n    offset : 0,\r\n    page_size : 5\r\n  };\r\n\r\n  scheduler.searchSchedules(searchScheduleToken,function(error,result) {\r\n      if (error) {\r\n        return console.log('Error during Schedule search %s',error);\r\n      }\r\n      console.log(JSON.stringify(result));\r\n  });\r\n  ```\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 1.7.30 - 2022-05-11\r\n\r\n### Added\r\n\r\n- Resolve issue with request dependency\r\n\r\n## 1.7.20 - 2022-05-06\r\n\r\n### Added\r\n\r\n- Removed deprecated npm module request\r\n- Dependency updates\r\n\r\n## 1.7.0 - 2022-04-26\r\n\r\n### Added\r\n\r\n- Support for node.js versions 12, 14 and 16\r\n\r\n## 1.6.3 - 2021-10-19\r\n\r\n### Added\r\n\r\n- Support for token fetching via mTLS if certificates are present in the jobscheduler binding credentials\r\n- Dependency update\r\n\r\n## 1.6.1 - 2020-10-29\r\n\r\n### Added\r\n\r\n- Dependency upgrade: \"request\": \"2.88.2\"\r\n\r\n## 1.6.0 - 2020-10-22\r\n\r\n### Added\r\n\r\n- Support for Node 14\r\n- Dependency update\r\n\r\n## 1.5.3 - 2020-06-17\r\n\r\n### Added\r\n\r\n- license file: developer-license-3.1.txt\r\n\r\n## 1.5.2 - 2020-05-08\r\n\r\n### Added\r\n\r\n- Dependency update\r\n\r\n## 1.5.1 - 2020-02-13\r\n\r\n### Fixed\r\n\r\n- Missing changelog\r\n\r\n## 1.5.0 - 2020-02-10\r\n\r\n### Added\r\n\r\n- Support for node 10 and node 12\r\n\r\n## 1.4.1 - 2019-12-10\r\n\r\n### Fixed\r\n\r\n- Integrate npm-shrinkwrap.json file without integrity checksums.\r\n\r\n## 1.4.0 - 2019-11-19\r\n\r\n### Added\r\n\r\n- Fetch OAuth token from XSUAA or username/password from environment if not passed in constructor.\r\n- Retrieve baseURL from environment if not passed in constructor.\r\n\r\n## 1.3.6 - 2018-12-11\r\n\r\n### Added\r\n\r\n- Added optional query parameters for fetchAllJobs method.\r\n- Added multitenancy support\r\n\r\n## 1.3.4 - 2018-08-14\r\n\r\n### Fixed\r\n\r\n- Update request package to v2.88.0\r\n\r\n## 1.3.3 - 2018-08-08\r\n\r\n### Fixed\r\n\r\n- Update request package to v2.87.0\r\n\r\n## 1.3.2 - 2018-05-18\r\n\r\n### Fixed\r\n\r\n- Update request package to v2.86.0\r\n\r\n## 1.3.1 - 2018-04-05\r\n\r\n### Fixed\r\n\r\n- Update npm-shrikwrap.json\r\n\r\n## 1.3.0 - 2018-01-19\r\n\r\n### Added\r\n\r\n- npm-shrikwrap.json\r\n\r\n### Fixed\r\n\r\n- Update _request_ to 2.83.0\r\n\r\n## 1.2.0 - 2017-11-16\r\n\r\n### Added\r\n\r\n- Node.js 8 support\r\n- Improvements in the input validation messages\r\n- Support for `page_size` and `offset` parameters in `getRunLogs`\r\n\r\n## 1.1.1 - 2017-05-30\r\n\r\n### Fixed\r\n\r\n- Dependencies updates\r\n\r\n## 1.1.0 - 2017-03-30\r\n\r\n### Added\r\n\r\n- Delete Job\r\n- Bulk schedule activation/deactivation\r\n- Get active/inactive job count\r\n- Get job/schedule action logs\r\n- Bulk schedule deletion\r\n- Fetch all jobs\r\n- Search API\r\n"},{"name":"logger-for-bas-extensions","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\r\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\r\n\r\n# logger-for-bas-extensions\r\n\r\nLogger Library For Business Application Studio Extensions.\r\n\r\nThis performs logging to the workspace container in SAP Business Application Studio in JSON format\r\nwith the intent for the logs to be collected, saved, and processed by a separate service.\r\n\r\n## Installation\r\n\r\nEnter the following command to install the library using npm install:\r\n\r\n- `npm install @sap/logger-for-bas-extensions --save`\r\n\r\n## Usage\r\n\r\nHere is a sample of how to use the library:\r\n\r\n```typescript\r\nimport { getLogger, logLevelsKeys } from \"@sap/logger-for-bas-extensions\";\r\n\r\nlogger = await getLogger({\r\n  level: logLevelsKeys.error,\r\n  // Supply your package's name here.\r\n  label: \"<ExtensionName>\",\r\n  // Supply your package's version\r\n  version: \"1.2.3\",\r\n});\r\n\r\nif (logger !== undefined) {\r\n  // NOOP because the log level is `error` and `warn` < `error``\r\n  logger.warn(\"oops I did it again!\");\r\n\r\n  logger.fatal(\"Oy Vey!\");\r\n  // -> {\"label\":\"myLabel\",\"version\":\"1.2.3\",\"level\":\"fatal\",\"message\":\"Oy Vey!\",\"time\":\"2019-10-31T13:24:26.740Z\"}\r\n\r\n  // With Custom Payload Properties\r\n  logger.fatal(\"Input size out of bounds!\", { size: \"10000000B\" });\r\n  // ->\r\n  // {\r\n  //   label: \"myLabel\",\r\n  //   version: \"1.2.3\",\r\n  //   level: \"fatal\",\r\n  //   message: \"Input size out of bounds!\",\r\n  //   size: \"10000000B\",\r\n  //   time: \"2019-10-31T13:24:26.740Z\"\r\n  // }\r\n}\r\n```\r\n"},{"name":"logging","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/logging\r\n===========\r\n\r\nA package that provides logging and tracing functionalities for Node.js applications.\r\n\r\n<!-- toc -->\r\n\r\n- [Example](#example)\r\n- [Logging & Tracing](#logging--tracing)\r\n- [Categories & Locations](#categories--locations)\r\n- [Location values](#location-values)\r\n- [Wildcard support](#wildcard-support)\r\n- [Formats](#formats)\r\n- [Severity Levels](#severity-levels)\r\n- [*XS_APP_LOG_LEVEL* environment variable](#xs_app_log_level-environment-variable)\r\n- [Changing severity levels for an application](#changing-severity-levels-for-an-application)\r\n  * [XS Advanced](#xs-advanced)\r\n  * [Cloud Foundry](#cloud-foundry)\r\n- [Logging sensitive data](#logging-sensitive-data)\r\n- [API](#api)\r\n  * [Application context](#application-context)\r\n  * [Log context](#log-context)\r\n  * [Log context id](#log-context-id)\r\n  * [Middleware](#middleware)\r\n  * [Loggers](#loggers)\r\n  * [Tracers](#tracers)\r\n  * [Custom fields (in CF)](#custom-fields)\r\n  * [Convenient tracing methods](#convenient-tracing-methods)\r\n  * [Other](#other)\r\n- [Migration guide](#migration-guide)\r\n\r\n<!-- tocstop -->\r\n\r\n### Example\r\n\r\nFollowing is an example of how to consume the package using [express](https://www.npmjs.com/package/express):\r\n\r\n```js\r\nvar logging = require('@sap/logging');\r\nvar express = require('express');\r\n\r\nvar app = express();\r\n\r\nvar appContext = logging.createAppContext();\r\n\r\napp.use(logging.middleware({ appContext: appContext, logNetwork: true }));\r\n\r\napp.get('/demo', function (req, res) {\r\n  var logger = req.loggingContext.getLogger('/Application/Network');\r\n  var tracer = req.loggingContext.getTracer(__filename);\r\n\r\n  logger.info('Retrieving demo greeting ...');\r\n  tracer.info('Processing GET request to /demo');\r\n\r\n  res.send('Hello World!');\r\n});\r\n\r\napp.listen(3000, function() {\r\n  console.log('Server started');\r\n});\r\n```\r\n\r\nIn general, you just need to:\r\n- Initialize the logging library with some application-wide options.\r\n- Use the provided middleware that will extract request specific information.\r\nIt is recommended that this middleware is the first one to be called in order to have the logging context available as early as possible.\r\nIt is also recommended to have the middleware that sets the user of the request (if the application intends to log the current user)\r\nright after the one provided by this library.\r\n- Instantiate a logger and a tracer via the _loggingContext_ property of the request.\r\n- Log and trace whatever you need.\r\n\r\nSee more details below.\r\n\r\n### Logging & Tracing\r\n\r\nLogs are addressed to an administrator of an application. Traces - to a developer or support staff.\r\n- Events that need to be logged are related to how the app operates - e.g. the app cannot display some results taken from a remote HTTP service because the remote server is down.\r\nAn administrator of an app does not need to know how it is implemented, he/she should just be able to determine the state of the app itself.\r\n- Traces are mainly used when a problem has occurred and further investigation on code level has to take place.\r\n\r\nThe logging library writes log entries to standard output and trace entries - to standard error.\r\n\r\n### Categories & Locations\r\n\r\n- Categories - represent a feature area in an application. For example, different layers - Network layer, Database layer etc.\r\nThe concept of categories is used in logging.\r\n- Locations - represent a location in the source code - e.g. a path to a file. Used in the context of tracing. Getting a tracer object requires explicitly providing a location. It is recommended to pass as argument the location of the current script - `__filename`.\r\n\r\n### Location values\r\n\r\nThe path to the application root is removed from the source file paths in the trace output to reduce duplication.\r\nThe application root directory is taken from the _HOME_ environment variable. If it is not defined, absolute file paths are used in the trace output.\r\nExample:\r\n\r\nLet's assume the structure of your application looks like the following:\r\n\r\n<pre>\r\n+-- demo-app\r\n|   +-- package.json\r\n|   +-- lib\r\n|   |   +-- index.js\r\n|   |   +-- services\r\n|   |   |   +-- customer-service.js\r\n|   |   |   +-- sales-service.js\r\n</pre>\r\n\r\nHere is how the location of a script (path to a file) will look like in the trace entries (having in mind `__filename` has been passed as location to the tracer):\r\n\r\n| Script | _HOME_ environment variable is set  | _HOME_ environment variable is not set |\r\n| ------ | ----------------------------------- | -------------------------------------- |\r\n| index.js | /lib/index.js | /path/from/root/demo-app/lib/index.js |\r\n| customer-service.js | /lib/services/customer-service.js | /path/from/root/demo-app/lib/services/customer-service.js |\r\n\r\nThe same applies to Windows systems as well.\r\n\r\n**Note**: The path separator in the trace entries is always a forward slash, no matter the platform.\r\n\r\n### Wildcard support\r\n\r\nThe asterisk (*) is the only wildcard character supported by the library.\r\nIt corresponds to zero or more characters (no matter what they are).\r\nLet's illustrate the wildcard usage using the example application structure from the\r\nprevious section,\r\nassuming the _HOME_ environment variable is set to the root of the application (as it would be on XS Advanced or Cloud Foundry):\r\n\r\n| Pattern | Result |\r\n| ------- | ------ |\r\n| /Application/Network | Match a certain Category |\r\n| /Application/Network/* | Match all subcategories |\r\n| /lib/services/users-service.js | Match a specific file |\r\n| /lib/services/* | Match all files in all subdirectories of _services_ |\r\n\r\n### Formats\r\n\r\n- [ListLog](http://help.sap.com/saphelp_nw73ehp1/helpdata/en/53/82dae7c2f5439a8afd1b0ee95c2e45/content.htm) format is used for logs in XS Advanced and during local development\r\n- [Trace](http://help.sap.com/saphelp_nw74/helpdata/en/48/4f3966e39472d2e10000000a42189c/content.htm) format is used for traces in XS Advanced and during local development\r\n- [CF Log](https://github.com/SAP/cf-java-logging-support/blob/master/cf-java-logging-support-core/beats/request-metrics/docs/fields.asciidoc) format is used for logs and traces in Cloud Foundry\r\n\r\n**Note**: Instead of thread-name (in ListLog and Trace formats), a context id is used. This is an identifier that helps to distinguish which entries are logged/traced because of which requests/events.\r\nMore info on that is available in [this section](#log-context-id).\r\n\r\n### Severity Levels\r\n\r\nThe following table shows which severity levels are available for loggers and tracers:\r\n\r\n| Logging | Tracing |\r\n| ------- | ------- |\r\n|         | debug   |\r\n|         | path    |\r\n| info    | info    |\r\n| warning | warning |\r\n| error   | error   |\r\n| fatal   | fatal   |\r\n\r\nHere you can find when to use which level:\r\n\r\n| Level   | When to use |\r\n| -----   | ----------- |\r\n| debug   | Used to output the internal status of a program. |\r\n| path    | Used to analyze the execution flow of a program. |\r\n| info    | Used for events that do not need any follow up activity. They show the normal operations within an app. |\r\n| warning | Used for events that need follow up activity in order to prevent errors in the future. |\r\n| error   | Used when the desired tasks cannot be completed and the application is still usable. |\r\n| fatal   | Used in case of errors, because of which the application is no longer usable. |\r\n\r\nThe default severity level for loggers is _info_ and the default one for tracers is _error_.\r\n\r\n### *XS_APP_LOG_LEVEL* environment variable\r\n\r\nThe `XS_APP_LOG_LEVEL` environment variable can be used to configure severity levels for logging and tracing.\r\nValid values are severity levels from `debug` to `fatal`. The level specified in this environment variable\r\nwill be used instead of all already set levels.\r\n`none` is also a valid value for `XS_APP_LOG_LEVEL`. In that case all logging and tracing is disabled (useful for automated tests).\r\nThe library throws an error if the value of `XS_APP_LOG_LEVEL` is not a valid severity level or `none`.\r\n\r\n### Changing severity levels for an application\r\n\r\n#### XS Advanced\r\n\r\nYou can enable debug logs and traces for an application deployed on XS Advanced via the command:\r\n\r\n```sh\r\nxs set-logging-level <application-name> \"*\" debug\r\n```\r\n\r\nThis can be reverted via the command:\r\n\r\n```sh\r\nxs unset-logging-level <application-name> \"*\"\r\n```\r\n\r\nRestart of the application is not required for those commands to take effect.\r\n\r\nThe example above shows how to enable _debug_ level for all loggers and tracers.\r\nIt is possible to use the command for setting levels for a single category or location\r\n(e.g. `xs set-logging-level <application-name> \"/index.js\" debug`),\r\nor multiple by using the asterisk wildcard (e.g. `xs set-logging-level <application-name> \"/Application/Network/*\" debug`).\r\nThe comparison with the actual category/location of a logger/tracer is executed in a case insensitive manner.\r\n\r\n#### Cloud Foundry\r\n\r\nYou can enable debug logs and traces for an application deployed on Cloud Foundry via setting the environment variable `XS_APP_LOG_LEVEL`:\r\n\r\n```sh\r\ncf set-env <application-name> XS_APP_LOG_LEVEL debug\r\n```\r\n\r\nThis can be reverted via the command:\r\n\r\n```sh\r\ncf unset-env <application-name> XS_APP_LOG_LEVEL\r\n```\r\n\r\n**Note**: Application restart is required after each of the commands above in order the changes to the environment to take effect.\r\n\r\n### Logging sensitive data\r\n\r\nLogging sensitive data is not enabled by default. The following table shows which environment variable enables (when set to `true`) which fields and for which formats:\r\n\r\n| Environment Variable     | Field   | Taken from               | Format           |\r\n| ------------------------ | ------- | -----------------------  | ---------------  |\r\n| `XS_LOG_USER`            | user/remote_user    | `req.user.id` property   | ListLog, CF Log  |\r\n| `XS_LOG_REFERER`         | referer | `referer` request header | CF Log           |\r\n| `XS_LOG_CONNECTION_DATA` | remote_ip, remote_host, remote_port, x_forwarded_for | `req.connection.remoteAddress` property, `req.connection.remotePort` property, `x-forwarded-for` header | CF Log           |\r\n\r\n### API\r\n\r\nTo consume the logging package, an [application context](#application-context) needs to be created.\r\nIt contains information that is valid for the whole application.\r\nNext a [log context](#log-context) needs to be created.\r\nIt contains information that is valid for the current context.\r\nA separate log context should be created for each new event (HTTP request received, job execution started, message from messaging service received).\r\nBecause of the asynchronous nature of Node.js, entries produced during the processing of different events can be mixed.\r\nAll entries contain information specific to the log context they are associated with,\r\nwhich helps to distinguish between entries produced during the processing of different events.\r\n[Loggers](#loggers) and [tracers](#tracers) are obtained from the log context.\r\n\r\n\r\n#### Application context\r\n\r\n```js\r\nvar logging = require('@sap/logging');\r\n\r\nvar appContext = logging.createAppContext({\r\n  // options\r\n});\r\n```\r\n\r\nTo create the application context, pass some application-wide options.\r\nHere is a list of the properties you may optionally pass:\r\n\r\n| Property      | Description |\r\n| ------------- | ----------- |\r\n| csnComponent  | *String* Only applicable to SAP applications. |\r\n\r\nYou may use the application context to change severity levels (with [wildcards](#wildcard-support) for flexibility):\r\n```js\r\nappContext.setLevel('/Application/*', 'warning'); // for a logger\r\nappContext.setLevel(pathToFile, 'debug'); // for a tracer\r\n```\r\n\r\nThe method throws an error in case of an incorrect level.\r\n\r\nSeverity levels can be unset with:\r\n```js\r\nappContext.unsetLevel('/Application/*'); // for a logger\r\nappContext.unsetLevel(pathToFile); // for a tracer\r\n```\r\n\r\nTo set custom fields, you could do:\r\n```js\r\nappContext.setCustomFields([\"abc\"]);\r\n```\r\n\r\n\r\n#### Log context\r\n\r\n```js\r\nappContext.createLogContext({\r\n  // options\r\n});\r\n```\r\n\r\nA log context needs to be created in order to obtain a logger or a tracer.\r\n\r\nHere is a list of the options that can be provided to the log context (all are optional):\r\n\r\n| Option        | Description |\r\n| ------------- | ----------- |\r\n| id            | *String* Included in all logs and traces, should be unique. Used to distinguish entries from different log contexts. Defaults to an auto-generated value. If `req` is provided, the value is taken from the request headers `x-request-id` and `x-vcap-request-id` if present. It is recommended to explicitly pass an empty string for log contexts used during application startup. If `req` is present, then this id can be thought of as a request id, because all log/trace entries for that request will have the same id. See [this section](#log-context-id) for more information. |\r\n| correlationId | *String* Used to correlate entries for a logical transaction which involves processing within different applications. If the value is not set explicitly, then it is taken from the `x-correlationid` header (if `req` is provided and the header is present) or from the `id` of the log context. |\r\n| req           | *Object* Represents an HTTP request. |\r\n\r\nThe log context exposes the following functions:\r\n\r\n| Function        | Description |\r\n| --------------- | ----------- |\r\n| getAppContext   | AppConext object associated with this log context |\r\n\r\n\r\nThe log context exposes the following read-only properties:\r\n\r\n| Property      | Description |\r\n| ------------- | ----------- |\r\n| id            | The id of the log context. |\r\n| correlationId | The correlation id of the log context. This property is useful when the value needs to be sent to another application. |\r\n\r\nLoggers and tracers can be obtained from the log context as follows:\r\n\r\n```js\r\nlet logger = logContext.getLogger('/Application/Network');\r\nlet tracer = logContext.getTracer(__filename);\r\n```\r\n\r\nIt is possible to log request metrics for an HTTP request using the `enableNetworkLog` method:\r\n\r\n```js\r\nlogContext.enableNetworkLog(res);\r\n```\r\n\r\nIt takes a response object as argument.\r\nA `req` object needs to be passed in advance as option when creating the log context.\r\nThis method registers a handler for the `finish` event of the HTTP response.\r\nAn entry (of `info` severity level), containing request metrics will be logged when the event is emitted.\r\n`enableNetworkLog` should be called once for a request-response pair:\r\n\r\n```js\r\nhttp.createServer(function (req, res) {\r\n  var reqContext = appContext.createLogContext({ req: req });\r\n  reqContext.enableNetworkLog(res);\r\n\r\n  res.end('Hello World');\r\n});\r\n```\r\n\r\nThe log entry uses category `/LoggingLibrary/NetworkLog`.\r\nIt can be used to turn off the network log at runtime with [xs set-logging-level](#xs-advanced) or with [appContext.setLevel](#application-context).\r\n\r\n#### Log context id\r\n\r\nLet's take HTTP requests as an example: Because of the single-threaded nature and the event loop mechanism in Node.js, you may:\r\n- receive a request\r\n- start some async I/O operation\r\n- in the meantime start processing another request before returning a response to the first one\r\n\r\nThis means that the log entries for the two requests will be mixed a bit. To overcome this issue, each request (and the corresponding log context) is\r\nassociated with a unique id which is present in the logs and traces for that request.\r\nIn that way one can distinguish between the logs from the first request and the logs from the second request.\r\n\r\nThe same concept applies to messages received from a messaging service and to job runs triggered according to a schedule.\r\n\r\n#### Middleware\r\n\r\nThere is a utility middleware that can be used (see [this example](#example)).\r\nIt automatically attaches a property named _\"loggingContext\"_ to the request object.\r\nIt accepts an object with properties:\r\n\r\n| Property      | Description |\r\n| ------------- | ----------- |\r\n| appContext    | *Mandatory* An application context object. |\r\n| logNetwork    | *Optional* Defaults to `false`, boolean specifying whether an entry containing request metrics will be logged for every finished HTTP request. |\r\n\r\nThe middleware sets the _x-request-id_ response header to the context id for the current request,\r\nso in case of any troubles you may see the value in the response header and then filter the logs to see what the entries for that request are.\r\n\r\n#### Loggers\r\n\r\nYou may create a logger in the following way:\r\n\r\n```js\r\nvar logger = req.loggingContext.getLogger('/Application/Network');\r\n```\r\n\r\nThe log context has got the _\"getLogger\"_ function that takes 1 string argument - the category. Categories are names of functional areas in an application.\r\nWe recommend your categories to always begin with _\"/Application\"_. The categories form a hierarchy with forward slash as a separator. Using back slashes in categories is not allowed.\r\n\r\nYou may always get the severity level (a string) of a logger with such code:\r\n```js\r\nvar level = logger.getLevel();\r\n```\r\n\r\nIt is also possible to check whether an entry with a specific severity level will be logged with the current level configuration:\r\n\r\n```js\r\nvar willItBeLogged = logger.isEnabled('info');\r\n```\r\n\r\nLogging entries:\r\n\r\n```js\r\nlogger.info('Successful login of user %s - ', user, new Date());\r\nlogger.warning('Job could not finish successfully. An app admin should retrigger it.');\r\nlogger.error(new Error('Uups, an error has occurred'));\r\nlogger.fatal('We are in trouble');\r\n```\r\n\r\nYou may use the same string interpolation mechanism as with [util.format](https://nodejs.org/api/util.html#util_util_format_format_args)\r\n\r\nLogging errors:\r\n```js\r\nfunction callback(err, result) {\r\n  if (err) {\r\n    logger.error(err, 'Error during operation X');\r\n  }\r\n  // ...\r\n}\r\n```\r\nIf the first argument is an error, its message is appended to the log message.\r\nAlso, the error stack is written to the trace.\r\nThis works for all severity levels and also with tracers.\r\n\r\n#### Tracers\r\n\r\nAll you need to do to obtain a tracer instance is:\r\n\r\n```js\r\nvar tracer = req.loggingContext.getTracer(__filename);\r\n```\r\n\r\nMethods regarding level getting and checking are provided (similarly to loggers):\r\n\r\n```js\r\nvar level = tracer.getLevel();\r\nvar willItBeTraced = tracer.isEnabled('path');\r\n// etc.\r\n```\r\n\r\n#### Custom Fields\r\n\r\n##### Note: This feature is available in Cloud Foundry and not in XS Advanced.\r\n\r\nIf you want to use custom fields, you need to set them to the application context. The expected format is a string based array:\r\n\r\n```js\r\n      appContext.setCustomFields([\"custom1\", \"custom2\"]);\r\n```\r\n\r\nWhen logging, if the last argument is an object with a custom field, the custom field will be included in the log output as a custom field and not as part of the message:\r\n\r\n```js\r\napp.get('/', function (req, res) {\r\n  logger.info('Let me say hi ...' ,{\r\n    \"abc\": \"data\"\r\n  });\r\n  // ... \"custom_fields\": {\"abc\": \"data\"} ...\r\n```\r\n\r\n\r\n#### Convenient tracing methods\r\n\r\n**Note**: The first argument to all of these methods should be a string with the name of the function in which entries are being traced.\r\n\r\nThere are several methods that the API provides for convenience (they use severity level _path_):\r\n- entering - used to record that a function has been entered in the program flow. You may pass all of the arguments of your function to the _entering_ function and they will be traced.\r\n- exiting - typically used in pair with the _entering_ method. You may pass the return value of your function to the _exiting_ function.\r\n\r\n```js\r\nfunction myFunction(tracer, a, b ,c) {\r\n  tracer.entering('myFunction', a, b, c);\r\n\r\n  var result = // some logic here ...\r\n\r\n  tracer.exiting('myFunction', result);\r\n  return result;\r\n}\r\n```\r\n\r\n- throwing - used when you would like to trace when the code is about to throw an error. You may pass the error that is about to be thrown as an argument.\r\n- catching - used in catch blocks. You may pass the caught error as an argument.\r\n\r\n```js\r\nfunction func1(tracer) {\r\n  var error = new Error('An error has occurred');\r\n  tracer.throwing('func1', error);\r\n  throw err;\r\n}\r\n\r\nfunction func2(tracer) {\r\n  try {\r\n    func1(tracer);\r\n  } catch (err) {\r\n    tracer.catching('func2', err);\r\n    // logic for processing the error\r\n  }\r\n}\r\n```\r\n\r\n#### Other\r\n\r\nThe library supports SAP Passports. When a log context is created with a request object that has the `sap-passport` header,\r\nthe unique identifiers of the received SAP Passport will be part of the log entries for ListLog format.\r\n\r\n### Migration guide\r\n\r\nGuide on how to adopt new major versions of the library can be found [here](./migration.md).\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 6.1.2 - 2022-06-10\r\n\r\n### Updated\r\n- Updated devDep async to 3.2.4\r\n\r\n## 6.1.1 - 2022-04-08\r\n\r\n### Updated\r\n- Update moment to version 2.29.2\r\n\r\n### Removed\r\n- Node.js 8.x support\r\n\r\n### Changed\r\n- Changed istanbul test framework with c8\r\n\r\n## 6.1.0 - 2022-01-24\r\n\r\n### Added\r\n- Node.js 16.x support.\r\n\r\n### Fixed\r\n- Update *@sap/e2e-trace* dependency to v3.1.0\r\n\r\n\r\n## 6.0.3 - 2021-02-22\r\n\r\n### Fixed\r\n- Update _lodash_ to v4.17.21\r\n- Update _moment_ to v2.29.1\r\n\r\n## 6.0.2 - 2020-12-15\r\n\r\n### Fixed\r\n- Fixed the custom field logging format on the Cloud Foundry platform\r\n\r\n## 6.0.1 - 2020-12-08\r\n\r\n### Fixed\r\n- Update *@sap/e2e-trace* dependency to v3.0.0\r\n- Added null/undefined check to `_containsCustomField` in `lib/contexts/AppContext.js`\r\n\r\n## 6.0.0 - 2020-11-11\r\n\r\n### Added\r\n- Node.js 14.x support.\r\n\r\n### Removed\r\n- Node.js 6.x support\r\n\r\n### Fixed\r\n- Update _lodash_ to v4.17.20\r\n- Update _moment_ to 2.29.0\r\n\r\n## 5.3.1 - 2020-07-28\r\n\r\n### Fixed\r\n- Update *lodash* dependency to v4.17.19.\r\n\r\n## 5.3.0 - 2020-04-14\r\n\r\n### Added\r\n- Support for custom fields on Cloud Foundry platform\r\n\r\n## 5.2.0 - 2020-01-08\r\n\r\n### Added\r\n- Added `organization_id` and `organization_name` to the log output\r\n\r\n## 5.1.0 - 2019-12-02\r\n\r\n### Added\r\n- Node.js 12.x support.\r\n\r\n## 5.0.2 - 2019-07-10\r\n\r\n### Fixed\r\n- Update *lodash* dependency to v4.17.13.\r\n\r\n## 5.0.1 - 2019-05-13\r\n\r\n### Fixed\r\n- Update *@sap/e2e-trace* dependency to v2.0.0.\r\n\r\n## 5.0.0 - 2019-05-02\r\n\r\n### Removed\r\n- Node.js v4 support\r\n\r\n## 4.1.0 - 2019-01-16\r\n\r\n### Added\r\n- Support for Node.js 10\r\n\r\n## 4.0.2 - 2018-09-16\r\n\r\n### Fixed\r\n- Update *lodash* dependency to v4.17.11.\r\n\r\n## 4.0.1 - 2018-09-04\r\n\r\n### Fixed\r\n- `logContext.id` is used as a fallback value for correlation id if no other value is available.\r\n\r\n## 4.0.0 - 2018-08-20\r\n\r\n### Removed\r\n- Support for writing entries to files (the `logLocation` and `traceLocation` options are no longer taken into account).\r\n- The `STORAGE` property exposed by the library.\r\n- Node 0.12 support.\r\n- Coloring when writing to console.\r\n- `ApplicationContext.prototype.createRequestContext`.\r\n\r\n### Changed\r\n- The exposed middleware can be consumed via the `middleware` property instead of `expressMiddleware`.\r\n- Back slashes cannot be used in category names.\r\n- middleware does not take an application context, but an object with an `appContext` property\r\nand optionally - a `logNetwork` property.\r\n- _x-correlationid_ header is no longer taken into account when resolving request id.\r\n- An error is thrown if the level set through the `XS_APP_LOG_LEVEL` environment variable is not valid.\r\n\r\n### Added\r\n- Performance improvements.\r\n- Support for CF Log format.\r\n- Possibility to explicitly set correlation id via JavaScript API.\r\n- Correlation id (if present) will be set to ListLog entries as well.\r\n- `AppContext.prototype.createLogContext`.\r\n- `LogContext.prototype.enableNetworkLog`.\r\n\r\n## 3.4.0 - 2018-04-26\r\n\r\n### Added\r\n- Possibility to enable logging of the current user via the `XS_LOG_USER` environment variable.\r\nFrom this version onwards the user is not being logged by default.\r\n\r\n## 3.3.2 - 2018-04-05\r\n\r\n### Fixed\r\n- Update dependencies.\r\n- Unsetting tracer locations.\r\n- `tracer.exiting` when the argument for the return value of the function is falsy.\r\n\r\n## 3.3.1 - 2018-02-05\r\n\r\n### Fixed\r\n - Replace new lines in traces when running on XS Advanced.\r\n - Replace new lines in logs when running on XS Advanced.\r\n\r\n## 3.3.0 - 2018-01-19\r\n\r\n### Added\r\n- npm-shrinkwrap.json\r\n\r\n## 3.2.1 - 2017-12-01\r\n\r\n### Fixed\r\n- Update momentjs to 2.19.3\r\n\r\n## 3.2.0 - 2017-11-23\r\n\r\n### Added\r\n- The request id can be taken from the request headers 'x-request-id', 'x-correlationid', 'x-vcap-request-id' (if available).\r\n- The request id is exposed through the `requestId` property of the request context.\r\n- Improvements to the documentation.\r\n\r\n### Fixed\r\n- Handling of tracer locations.\r\n- Process does not exit even if there is no other activity keeping the event loop running.\r\n\r\n## 3.1.0 - 2017-08-14\r\n\r\n### Added\r\n- Support for Node.js v8.\r\n- Performance improvements in tracing.\r\n\r\n## 3.0.0 - 2017-04-12\r\n\r\n### Changed\r\n- Automatic location tracking for tracers has been removed due to severe performance impact. This affects application code as follows:\r\n  * A location (path to a file) needs to be explicitly passed to the `getTracer` functions as first argument. Passing `__filename` as a location is recommended.\r\n  * A tracer is no longer associated with the script it is currently being used in, but with the location provided for its instantiation.\r\n  * A function name (a string) should be passed as a first argument to the `entering`, `exiting`, `throwing` and `catching` methods of tracers.\r\n\r\n## 2.2.0 - 2017-02-07\r\n\r\n### Fixed\r\n- support for the 'xs unset-logging-level' command\r\n\r\n### Added\r\n- 'unsetLevel' method on application level contexts\r\n\r\n## 2.1.2 - 2017-01-24\r\n\r\n### Fixed\r\n- Minor improvements\r\n\r\n## 2.1.1 - 2017-01-24\r\n\r\n### Changed\r\n- Rename package to use @sap scope\r\n\r\n## 2.1.0 - 2017-01-09\r\n\r\n### Added\r\n- Log session id when available.\r\n\r\n## 2.0.3 - 2016-12-01\r\n\r\n### Fixed\r\n- Minor fixes.\r\n\r\n## 2.0.2 - 2016-11-08\r\n\r\n### Fixed\r\n- Minor fixes.\r\n\r\n## 2.0.1 - 2016-11-08\r\n\r\n### Fixed\r\n- Minor fixes.\r\n\r\n## 2.0.0 - 2016-10-25\r\n\r\n### Changed\r\n- By default logs and traces are written to standard output and standard error respectively.\r\n\r\n### Fixed\r\n - Replace new lines in logs.\r\n\r\n### Removed\r\n- The package no longer fallbacks to the environment variables  _XS_APPLICATION_LOG_FILE_ and _XS_TRACE_FILE_.\r\n"},{"name":"low-code-event-handler","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/low-code-event-handler\r\nThe code repository for low code event handler.\r\n\r\n## Introduction\r\nAs of now, there are two kinds of event handlers are attached to the CAP entity within every LCAP application, one is for workflow service, another is for external service.\r\n\r\n## Usage\r\nIt could be used as the `cds` require for `app-service` directly in the LCAP / CAP `package.json` file.","changelog":"# Change Log\r\n\r\n## 1.0.1\r\n### Updated\r\n- Reuse @sap/external-service-mashup\r\n## 1.0.0\r\n### Added\r\n- Support external service handler\r\n- Support workflow service handler\r\n"},{"name":"mdk-tools","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# MDK Tools\r\nIt provides the CLI to assist Mobile Development Kit (MDK) application developers throughout the development lifecycle to:\r\n- deploy MDK metadata project to SAP Business Technology Platform (BTP) Cloud Foundry environment,\r\n    - Mobile Services to run as mobile application\r\n    - HTML5 repository to run as web application\r\n\r\n## Setup\r\n\r\n- Prerequisites\r\n    - Node 12 or higher version\r\n    - [Space Developer role]( https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/09076385086b4da3bd1808d5ef572862.html) assigned to your user\r\n    - [Cloud Foundry CLI](https://docs.cloudfoundry.org/cf-cli/install-go-cli.html)\r\n    - Logon to Cloud Foundry by 'cf login'\r\n    - MDK metadata project\r\n    - [MTA Build Tool](https://sap.github.io/cloud-mta-build-tool/) (required for MDK web deployment)\r\n    - MultiApps CF CLI Plugin (required for MDK web deployment)\r\n        ```bash\r\n        cf install-plugin -r CF-Community \"multiapps\"\r\n        ```\r\n    - CF HTML5 Applications Repository CLI Plugin (required for MDK web deployment)\r\n        ```bash\r\n        cf install-plugin -r CF-Community \"html5-plugin\"\r\n        ```\r\n- Install\r\n    ```bash\r\n    npm install @sap/mdk-tools -g\r\n    ```\r\n## Features\r\n\r\n- Builder\r\n\r\n    You can build metadata project into js or zip file.\r\n    - target\r\n\r\n        Target 'js' can build to bundle.js and bundle.js.map, you can use it to update your local run project.   \r\n        Target 'zip' can build to uploadBundle.zip, you can uploaded it to Mobile Services.\r\n        \r\n        The build results are generated in .build folder under project.\r\n    - project\r\n\r\n        Metadata project, it's current folder if not provided.\r\n\r\n    - externals\r\n\r\n        Libs need to be ignored in webpack bundle process. The built-in externals are:\r\n        - @nativescript/core\r\n        - mdk-core\r\n\r\n        ```bash\r\n        mdk build --target zip --externals \"@nativescript/geolocation\" \"external2\"\r\n        ```\r\n\r\n    - filters\r\n\r\n        Project folders/files need to be filtered in bundle procees. The built-in filters are:\r\n        - /Web/\r\n\r\n        ```bash\r\n        mdk build --target zip --filters \"/FolderA/\" \"/FolderB/readme.txt\"\r\n        ```\r\n\r\n    ```bash\r\n    mdk build --target js\r\n    mdk build --target js  --project /path/to/Your-MDK-metadata-project \r\n    mdk build --target zip --project /path/to/Your-MDK-metadata-project\r\n    ```\r\n    \r\n\r\n- Deployer\r\n\r\n    You can deploy MDK metadata project directly to SAP Business Technology Platform (BTP) Cloud Foundry and NEO environment.\r\n    - Deploy to Mobile Services on Cloud Foundry to run it as a mobile application\r\n\r\n        It bundles MDK metadata project, uploads to Mobile Services and publishes it.\r\n        The name option is the application id in Mobile Services. If there's no *name* argument, it reads *MobileService:AppId* from *\\.project.json* file (applicable to MDK metadata project exported from SAP Business Application Studio). If there's no *project* argument, it reads *current folder* as *MDK metadata folder*.\r\n\r\n        >In case of MDK metadata project exported from SAP Web IDE, *name* argument is mandatory.\r\n\r\n        ```bash\r\n        mdk deploy --target mobile --name \"com.mdk.myapp\" \r\n        mdk deploy --target mobile --name \"com.mdk.myapp\" --project /path/to/Your-MDK-metadata-project\r\n        mdk deploy --target mobile --name \"com.mdk.myapp\" --project /path/to/Your-MDK-metadata-project --showqr\r\n        ```\r\n\r\n        If your Mobile Services is Preview version, you can add *--preview* option.\r\n        ```bash\r\n        mdk deploy --target mobile --name \"com.mdk.myapp\" --preview\r\n        ```\r\n        In case of deploying MDK bundle zip exproted from SAP Web IDE or Business Application Studio.\r\n        ```\r\n        mdk deploy --target mobile --name \"com.mdk.myapp\" --zip Your-MDK-bundle-zip-file\r\n        ```\r\n\r\n    - Deploy to Mobile Services on NEO to run it as a mobile application    \r\n        - Prerequisites\r\n            - NEO Mobile Services Admin API URL\r\n            - Admin user name and password\r\n        ```bash\r\n            mdk deploy --target mobile --name \"com.mdk.myapp\" --project /path/to/Your-MDK-metadata-project --neo \r\n        ```\r\n        The above example prompts user password input, reads adminApi and user from .project.json, if can't find them, then prompts user input. \r\n\r\n        ```bash\r\n            mdk deploy --target mobile --name \"com.mdk.myapp\" --neo --adminApi YourAdminAPI --user YourUserName --pwd YourPassword\r\n        ```\r\n        The above example starts deploy without prompts.\r\n\r\n    - Deploy to HTML5 repository on Cloud Foundry to run it as web application\r\n\r\n        It bundles MDK metadata project, builds it to MTA project and deploys to HTML5 repository.\r\n        The name option is the application name in SAP BTP cockpit. If there is no *name* argument, it reads *CF:Deploy:Name* from *\\.project.json* file (applicable to MDK metadata project exported from SAP Business Application Studio). If there's no *project* argument, it reads *current folder* as *MDK metadata folder*.\r\n\r\n        >In case of MDK metadata project exported from SAP Web IDE, *name* argument is mandatory.\r\n\r\n        ```bash\r\n        mdk deploy --target cf --name \"MyWebApplication\"\r\n        mdk deploy --target cf --name \"MyWebApplication\" --project /path/to/Your-MDK-metadata-project \r\n        ```\r\n        \r\n- Migrator\r\n\r\n    Migrate the MDK project to the latest schema version.\r\n\r\n    The option '--preview' is only used to list all files that need to be migrated but not to do a real migration.\r\n    ```bash\r\n    mdk migrate --project /path/to/Your-MDK-metadata-project \r\n    mdk migrate --project /path/to/Your-MDK-metadata-project --preview\r\n    ```\r\n\r\n    Use 'log-file' option output the logs to a file (no need to create the log file firstly, it will be generated automatically):\r\n    ```bash\r\n    mdk migrate --project /path/to/Your-MDK-metadata-project --log-file /path/to/log-file.txt\r\n    ```"},{"name":"modules-exploration","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"\r\n# @sap/modules-exploration\r\n\r\nThis is an npm package which provides the ability to explore the available modules/generators installed in a specific predefined folder at runtime.\r\nIt provides two main APIs. One to get a list of explored modules and API to display the explored modules to the user in a yeoman-base prompt. <br>\r\n\r\nExplored Modules should follow the following guidelines: <br>\r\n\r\n1. Installed in /extbin/[MODULES-TYPE] specific folder (e.g generators will be installed in /extbin/generators)\r\n2. Include metadata file: modules.json\r\n   The modules.json for generators should include the following parameters:\r\n\r\n```javascript\r\n{\r\n  templates: [\r\n      \"name\": string, //This name will be displayed in the yeoman-base prompt as part of templates option list. (e.g \"SAPUI5 Application\")\r\n      \"path\": string, //Relative path to the template's package. (e.g. \"/generators/\")\r\n      \"features\" : [{name : string, values :string[]}], // an array of key-value objects. declares the generator supported features in which this generator can be filtered (e.g [{name:\"protocol\" : value : [\"odataV4\"]}])\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThe modules.json for service-provider should include the following parameters:\r\n\r\n```javascript\r\n{\r\n  \"serviceProviders\":[\r\n    {\r\n      \"name\": string,//This name will be displayed in the yeoman-base prompt as part of service providers option list. (e.g \"Steam Punk\")\r\n      \"path\": string, //Path to the service providers package. (e.g. \"/extbin/serviceProviders/OdataProviders/SteamPunk-service-provider\",\r\n      \"features\" : [{name : string, values :string[]}], //an array of key-value objects. declares the service-provider supported features in which this module can be filtered (e.g [{name:\"protocol\" : value : [\"odataV4\"]}])\r\n      \"entryPoint\" :{ //The main entry point to trigger the specific service provider logic\r\n         \"class\" : \"ServiceProviderExample \", //The main object\r\n         \"method\" : \"dummyServiceProviderPrompt\" //The main method\r\n      }\r\n   }\r\n  ]\r\n}\r\n```\r\n\r\n\r\n# API\r\n\r\n**getExploredModules** <br>\r\nReturns an array of explored modules metadata <br> <br>\r\nthe return metatadata is of type ''IModuleInfo[]\r\n**promptExploredModules** <br>\r\nExplores installed modules and prompt their metadata (name) to the user using the given generator. The prompt question can be passed as an input.\r\nIf not passed, a generic question will be displayed <br>\r\n"},{"name":"mta-lib","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/mta-lib\r\n\r\nJavascript wrapper library for creating, reading and modifying multi-target application development descriptor files.\r\n\r\n## Requirements\r\n\r\nThis library uses [Cloud MTA](https://github.com/SAP/cloud-mta) version [1.0.0](https://github.com/SAP/cloud-mta/releases/tag/v1.0.0).\r\nIt is not required to install it to use the library, but if it is found in the path in the correct version, it will be used.\r\nOtherwise, this library will download it.\r\n\r\n## Sample usage\r\n\r\nAdding a new module:\r\n\r\n```typescript\r\nimport { Mta, mta } from \"@sap/mta-lib\";\r\nimport * as path from \"path\";\r\n\r\nlet projectPath; // = ...\r\n\r\nconst mtaObj = new Mta(projectPath);\r\n\r\nconst mtaModule: mta.Module = {\r\n  name: this.appName,\r\n  type: \"my-type\",\r\n  path: path.relative(this.appOptions.projectPath, this.appPath),\r\n  parameters: {\r\n    \"disk-quota\": \"DISK_QUOTA\",\r\n    memory: \"MEMORY\",\r\n  },\r\n  requires: [\r\n    {\r\n      name: this.appOptions.projectName + \"suffix\",\r\n    },\r\n  ],\r\n};\r\n\r\nawait mtaObj.addModule(mtaModule);\r\n\r\n// ...\r\n\r\ntry {\r\n  await mtaObj.save();\r\n} catch (e) {\r\n  console.log(e);\r\n}\r\n```\r\n\r\n## Packaging with webpack\r\n\r\nTo use this library from an application packaged with webpack, you have to follow the [instructions for packaging the `mta-local` package](https://github.com/SAP/cloud-mta#packaging-with-webpack).\r\n"},{"name":"node-jwt","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/node-jwt\r\n=============\r\n\r\nJSON Web Token (JWT) offline validation for Node with current binaries\r\n\r\nThis project contains the JWT binding for Node.js. It also includes the native libraries to run on Windows/Linux.\r\nIf you need another platforms, please write to the author.\r\n\r\n# Platforms\r\n\r\nSupported platforms: **Windows** | **Linux** | **MacOS**\r\nSupported architectures: x64 on supported platforms.\r\nPlease see also section dependencies for Node.js version.\r\n\r\n#### Hello world\r\n\r\nThis standard example is from http://jwt.io \r\n\r\n```javascript\r\n// you can either load a HMAC key for signatures with HSxxx\r\nv.setSecret(\"secret\"); // load HMAC key\r\nv.setBase64Secret(\"c2VjcmV0\"); // load a Base64 encoded HMAC key\r\n// or you can load a PEM encoded X509 certificate for signatures with RSxxx\r\nv.loadPEM(\"MIICozCCAYsCCAogFQcmCUcJMA0GCSqGSIb3DQEBCwUAMBQ....\"); // load X509 public certificate OR public key for RSA signature validation\r\n// check the token signature and validity\r\nv.checkToken(\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ\");\r\nconsole.log(\"Test JWT for Node.js\");\r\nif (v.getErrorDescription() !== \"\") {\r\n   // error handling\r\n   console.log(\"Error in JWT: \" + v.getErrorDescription());\r\n} else {\r\n   // in case of success, retrieve the payload\r\n   console.log(\"JWT Payload : \" + v.getPayload());\r\n}\r\n```\r\n\r\n# Getting started\r\n\r\nFrom your project directory, run (see below for requirements):\r\n\r\n```\r\n$ var jwt = require('@sap/node-jwt');\r\n```\r\n\r\nReleased versions\r\n```\r\nnpm install @sap/node-jwt\r\n```\r\n\r\n\r\n# Dependencies\r\n\r\n* NodeJS v0.10.x is the minimum version. The maximum version is always the last LTS (long term support, https://nodejs.org/en/about/releases/) , however due to missing binaries, there might be errors in using this project\r\n* You dont need `node-gyp` or any compiler (e.g. Visual Studio on Windows). The source code and binding.gyp is part of this project in case of errors.\r\n* If you run in error with generic node exceptions, please inform the author. The root cause can be missing jwt.node modules.\r\n\r\n\r\n# Error situations\r\n\r\nThe standard error for signature operations is the situation, that the signature is not valid. This error is typical and you should handle\r\nit carefully! and not as fatal error or assert.\r\nIf you think, it must work, but it does not, then you can trace the native functions.\r\nSAPSSOEXT library allows you to set the environment variables:\r\n* SAP_EXT_TRC to define a trace file in your file system\r\n* SAP_EXT_TRL an integer 0 to 3\r\n\r\n```\r\nset SAP_EXT_TRC=stdout\r\nset SAP_EXT_TRL=3\r\n```\r\n\r\nIf you run your application in CloudFoundry or XSA then you can define environment variables with client command tool cf / xs, see\r\nhttps://docs.run.pivotal.io/devguide/deploy-apps/manifest.html#env-block \r\n\r\nIn cf landscapes you can then cf logs <your-app> and you will see trace from JWT validation\r\n\r\n# Install via NPM\r\n\r\nIn order to configure the sap NPM registry you need to issue the following command:\r\n\r\n```\r\nnpm install @sap/node-jwt\r\n```\r\n"},{"name":"node-vsi","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/node-vsi\r\n=============\r\n\r\nThis project contains the VSI binding for node.js. It also includes the native libraries to run on Windows/Linux.\r\nIf you need another platforms, please create a SAP support ticket to BC-CP-CF-SEC-IAM.\r\n\r\n## Installation\r\nThe module has moved to npmjs.org npm registry. Ultimately all SAP modules will be there soon. \r\n\r\nIn order to configure the sap-internal registry you need to issue the following command:\r\n\r\n```\r\nnpm install @sap/node-vsi\r\n```\r\n\r\nAfterwards you can add the module \"sap-node-vsi\" to the dependencies section of your package.json.\r\n\r\n# Platforms\r\n\r\nSupported platforms: **Windows** | **Linux** | **MacOS**\r\n\r\n#### Hello world\r\n\r\nThis standard example uses the eicar from www.eicar.org which all AV scanners has to find and detect as test virus.\r\n\r\n```javascript\r\nvar vsi = require('@sap/node-vsi');\r\nvar vsiProfile = vsi.vsiProfile;\r\nvar v = new vsiProfile(\"\");\r\nv.scanBytes(\"eicar.txt\",\"X5O!P%@AP[4\\\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*\", 68);\r\nconsole.log(\"\\nResult of eicar scan is rc \" + v.getLastErrorCode() + \" (\" + v.getScanErrorName() + \") with error message: \\n\" + v.getLastError() + \"\\n\" );\r\n```\r\n\r\n# Getting started\r\n\r\nFrom your project directory, run (see below for requirements):\r\n\r\n```\r\n$ var vsi = require('@sap/node-vsi');\r\n```\r\n\r\n\r\n"},{"name":"odata-commons","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# odata-commons\r\n\r\nThe commons module is used from the odata-server and odata-client modules and\r\nshall not be used by service developers directly.\r\n\r\n## Table of Contents\r\n\r\n- [Releases and Milestones](#releases-and-milestones)\r\n\r\n## Releases and Milestones\r\n\r\n[Changelog](./CHANGELOG.md)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](https://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/).\r\n\r\n## [2.4.2] - 2020-06-17\r\n\r\n### Added\r\n- license file: developer-license-3.1.txt\r\n\r\n## [2.4.1] - 2020-05-27\r\n\r\n### Fixed\r\n- handling of escaped backslashed and doublequotes in search phrases\r\n- parsing of aliases in paths of expressions\r\n\r\n## [2.4.0] - 2020-04-15\r\n\r\n### Added\r\n- support for navigation properties in complex properties\r\n\r\n## [2.3.2] - 2020-03-06\r\n\r\n### Fixed\r\n- stricter determination of related entity set\r\n\r\n## [2.3.1] - 2020-02-21\r\n\r\n### Fixed\r\n- handling of Path for navigation-property binding and EntitySetPath for bound actions and functions\r\n\r\n## [2.3.0] - 2020-02-11\r\n\r\n### Added\r\n- support for node.js version 12\r\n- complete support of specified Unicode range in URI parsing of identifiers\r\n- URI parsing of search words according to OData 4.01 CS02\r\n\r\n### Removed\r\n- support for node.js version 8 due to its end of life\r\n\r\n## [2.2.0] - 2020-01-14\r\n\r\n### Added\r\n- support for EDM singletons\r\n\r\n## [2.1.3] - 2019-09-19\r\n\r\n### Fixed\r\n- npm-shrinkwrap.json remains unchanged during xmake build\r\n\r\n## [2.1.2] - 2019-09-17\r\n\r\n### Fixed\r\n- result type of $apply with aliases for custom aggregates\r\n\r\n## [2.1.1] - 2019-06-18\r\n\r\n### Fixed\r\n- URI parsing of identifiers starting with null, INF, NaN, true, false \r\n\r\n## [2.1.0] - 2019-05-08\r\n\r\n### Added\r\n- support in URI resource-path parsing for key-as-segment convention\r\n\r\n## [2.0.1] - 2019-04-09\r\n\r\n## [2.0.0] - 2019-03-15\r\n\r\n### Changed\r\n- PrimitiveValue(En|De)coder replace ValueText(S|Des)erializer and ValueConverter in API\r\n\r\n## [1.2.0] - 2019-03-08\r\n\r\n## [1.1.0] - 2019-02-25\r\n\r\n### Changed\r\n- Adapt to OASIS Issue 1221:\r\n    - All $...Path Expressions except $Path are now wrapped with Csdl-/EdmUnkwownExpression\r\n    - All string-based expressions are now Csdl-/EdmUnknownExpressions\r\n    - All type-based ConstantExpressions are now treated as UnknownExpressions\r\n\r\n## [1.0.5] - 2019-02-08\r\n\r\n## [1.0.4] - 2019-01-18\r\n\r\n## [1.0.3] - 2019-01-17\r\n\r\n## [1.0.2] - 2019-01-17\r\n\r\n## [1.0.1] - 2019-01-17\r\n\r\n### Added\r\n- OnDelete support for EdmNavigationProperty\r\n\r\n## [1.0.0] - 2019-01-15\r\n\r\nInitial delivery for @sap/odata-server module\r\n"},{"name":"odata-server","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"OData V4.0 Server Library\r\n=========================\r\n\r\n**Library is deprecated and will not be further developed and maintained.\r\nWe recommend to use the [SAP Cloud application programming model](https://cap.cloud.sap/docs/) to build OData Services instead of the library.**\r\n\r\n## Table of Contents\r\n\r\n- [Overview](#overview)\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n- [Supported Requests](#supported-requests)\r\n- [Releases and Milestones](#releases-and-milestones)\r\n\r\n## Overview\r\n\r\nWith the OData server library OData V4.0 services can be implemented based on the\r\n[OASIS OData standard](https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=odata).\r\nThe library can be directly used to build OData services and is also part of\r\nthe SAP Fiori programming model as well the SAP Cloud Platform programming\r\nmodel, where the data model can be defined in CDS (Core data services) and\r\nthe OData service be generated out of the model.\r\n\r\nThe library leaves the freedom to build OData services with any database or\r\npersistence layer. It is also possible to create services that are calling\r\nexternal REST/OData services and mix up the data with your application data.\r\n\r\nThe library is modular and consists of the following main components:\r\n\r\n* EntityDataModel - Define your EDM in JSON format. Our provider creates the\r\n  EDM out of your model and caches EDM model elements\r\n* Handler Dispatcher - Maps requests to handler functions for CRUD operations\r\n* URI parsers - Parse the request URI including the OData system query options\r\n  (like $format, $select, $expand, ...) and validates each URI segment against\r\n  the EDM model and the OData ABNF\r\n* Serializers and Deserializers for the request and response payload.\r\n  The deserializers validate the request payload and support type mapping between\r\n  OData EDM types and JavaScript Types\r\n* Automatic OData Reponse generation based on provided data\r\n* ServiceFactory to create the OData service along with the CRUD handler registration\r\n* Conditional request handling for optimistic concurrency control via ETags\r\n* Batch handling - Batch request parsing, dispatching to single batch requests,\r\n  Content-ID referencing and batch response generation\r\n* Flexible API to support all backends - The service developer has the free\r\n  choice of his backend system (e.g., databases, frameworks, calling additional\r\n  external OData services).\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install @sap/odata-server\r\n```\r\n\r\n## Usage\r\n\r\nLoad the library:\r\n\r\n```javascript\r\nconst odata = require('@sap/odata-server');\r\n```\r\n\r\nLoad your EDM model:\r\n\r\n```javascript\r\nconst edmModel = require('./<your_edm_model>.json');\r\n```\r\n\r\nCreate the service, set the base path, and register request handlers for\r\nCRUD operations:\r\n\r\n```javascript\r\nconst service = odata.ServiceFactory.createService(edmModel)\r\n    .setBasePath('/serviceroot.svc/')\r\n    .on('create', function create(request, response, next) {...})\r\n    .on('update', function update(request, response, next) {...})\r\n    .on('delete', function delete(request, response, next) {...})\r\n    .on('read', function read(request, response, next) {...});\r\n```\r\n\r\nYou can create an HTTP server locally to test your service:\r\n\r\n```javascript\r\nconst http = require('http');\r\nconst port = 9000;\r\nconst server = http.createServer((req, res) => service.process(req, res))\r\n    .listen(port,\r\n        () => console.log('Server listens on port ' + port + ' - '\r\n            + 'Service URL: http://localhost:' + port + '/serviceroot.svc/'));\r\n```\r\n\r\n## Supported Requests\r\n\r\n### Read Requests Using HTTP GET\r\n\r\n| Resource                      | Request                                                                      |\r\n|:------------------------------|:-----------------------------------------------------------------------------|\r\n| Service root                  | GET http&#58;//host/serviceRoot/                                             |\r\n| Metadata                      | GET http&#58;//host/serviceRoot/metadata                                     |\r\n| EntitySet                     | GET http&#58;//host/serviceRoot/EntitySet                                    |\r\n| EntitySet                     | GET http&#58;//host/serviceRoot/EntitySet/$count                             |\r\n| Entity                        | GET http&#58;//host/serviceRoot/EntitySet(Key)                               |\r\n| References                    | GET http&#58;//host/serviceRoot/EntitySet/$ref                               |\r\n| Reference                     | GET http&#58;//host/serviceRoot/EntitySet(Key)/$ref                          |\r\n| References (related)          | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany/$ref |\r\n| Reference (related)           | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany/$ref |\r\n| Related entity                | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToOne       |\r\n| Related entities              | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany      |\r\n| Complex property              | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty               |\r\n| Complex property collection   | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection     |\r\n| Primitive property            | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty             |\r\n| Primitive property value      | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/$value      |\r\n| Primitive property collection | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection   |\r\n\r\n### Create/Insert Requests Using HTTP POST\r\n\r\n| Resource                    | Request                                                                       |\r\n|:----------------------------|:------------------------------------------------------------------------------|\r\n| Entity                      | POST http&#58;//host/serviceRoot/EntitySet                                    |\r\n| Deep insert                 | POST http&#58;//host/serviceRoot/EntitySet                                    |\r\n| Entity with bind operations | POST http&#58;//host/serviceRoot/EntitySet                                    |\r\n| Reference                   | POST http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany/$ref |\r\n\r\n### Update Requests Using HTTP PUT/PATCH\r\n\r\n| Resource                      | Request                                                                     |\r\n|:------------------------------|:----------------------------------------------------------------------------|\r\n| Entity                        | PUT/PATCH http&#58;//host/serviceRoot/EntitySet(Key)                        |\r\n| Deep update                   | PUT/PATCH http&#58;//host/serviceRoot/EntitySet(Key)                        |\r\n| Reference                     | PUT http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToOne/$ref |\r\n| Complex property              | PUT/PATCH http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty        |\r\n| Complex property collection   | PUT http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection    |\r\n| Primitive property            | PUT http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty            |\r\n| Primitive property value      | PUT http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/$value     |\r\n| Primitive property collection | PUT http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection  |\r\n\r\n### Delete Requests Using HTTP DELETE\r\n\r\n| Resource                      | Request                                                                              |\r\n|:------------------------------|:-------------------------------------------------------------------------------------|\r\n| Entity                        | DELETE http&#58;//host/serviceRoot/EntitySet(Key)                                    |\r\n| Reference                     | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToOne/$ref       |\r\n| Reference (to many)           | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany(Key)/$ref |\r\n| Complex property              | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty                    |\r\n| Complex property collection   | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection          |\r\n| Primitive property            | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty                  |\r\n| Primitive property value      | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/$value           |\r\n| Primitive property collection | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection        |\r\n\r\n### Functions Using HTTP GET\r\n\r\n| Resource        | Request                                                                                  |\r\n|:----------------|:-----------------------------------------------------------------------------------------|\r\n| Function import | GET http&#58;//host/serviceRoot/FunctionImport/[Navigation-or-Property-Path]             |\r\n| boundFunction   | GET http&#58;//host/serviceRoot/EntitySet/boundFunction                                  |\r\n| boundFunction   | GET http&#58;//host/serviceRoot/EntitySet(Key)/boundFunction                             |\r\n| boundFunction   | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty/boundFunction             |\r\n| boundFunction   | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection/boundFunction   |\r\n| boundFunction   | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/boundFunction           |\r\n| boundFunction   | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection/boundFunction |\r\n\r\n### Actions Using HTTP POST\r\n\r\n| Resource      | Request                                                                                 |\r\n|:--------------|:----------------------------------------------------------------------------------------|\r\n| Action import | POST http&#58;//host/serviceRoot/ActionImport                                           |\r\n| boundAction   | POST http&#58;//host/serviceRoot/EntitySet/boundAction                                  |\r\n| boundAction   | POST http&#58;//host/serviceRoot/EntitySet(Key)/boundAction                             |\r\n| boundAction   | POST http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty/boundAction             |\r\n| boundAction   | POST http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection/boundAction   |\r\n| boundAction   | POST http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/boundAction           |\r\n| boundAction   | POST http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection/boundAction |\r\n\r\n### Supported System Query Options\r\n\r\n| System Query Option| OASIS OData V4.0 Errata 3 - Query Option Description |\r\n|:-------------------|:-----------------------------------------------------|\r\n| `$filter`          | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752358)|\r\n| `$expand`          | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752359)|\r\n| `$select`          | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752360)|\r\n| `$orderby`         | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752361)|\r\n| `$top` and `$skip` | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752362)|\r\n| `$count`           | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752363)|\r\n| `$search`          | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752364)|\r\n| `$format`          | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752365)|\r\n\r\n### Analytical Queries\r\n\r\nAnalytical queries with `$apply` are described in the\r\n[specification](http://docs.oasis-open.org/odata/odata-data-aggregation-ext/v4.0/cs01/odata-data-aggregation-ext-v4.0-cs01.html)\r\nfor the OData data aggregration extension.\r\n\r\n| Transformation  | Sample                                                          | Limitations     |\r\n|:----------------|:----------------------------------------------------------------| :---------------|\r\n| `aggregate`     | GET ~/Sales?$apply=aggregate(Amount with sum as Total)          | Keyword 'from' is not supported |\r\n| `topcount`      | GET ~/Sales?$apply=topcount(2,Amount)                           |\r\n| `topsum`        | GET ~/Sales?$apply=topsum(15,Amount)                            |\r\n| `toppercent`    | GET ~/Sales?$apply=toppercent(50,Amount)                        |\r\n| `bottomcount`   | GET ~/Sales?$apply=bottomcount(2,Amount)                        |\r\n| `bottomsum`     | GET ~/Sales?$apply=bottomsum(7,Amount)                          |\r\n| `bottompercent` | GET ~/Sales?$apply=bottompercent(50,Amount)                     |\r\n| `identity`      | GET ~/Sales?$apply=identity                                     |\r\n| `concat`        | GET ~/Sales?$apply=concat(topcount(2,Amount),aggregate(Amount)) |\r\n| `groupby`       | GET ~/Sales?$apply=groupby((Customer/Country,Product/Name), aggregate(Amount with sum as Total)) | rollup and `$all` is not supported |\r\n| `compute`       | GET ~/Customers?$apply=compute(length(Country) as Length)       |\r\n| `filter`        | GET ~/Sales?$apply=filter(Amount gt 3)                          |\r\n| `orderby`       | GET ~/Sales?$apply=orderby(Customer/Name)                       |\r\n| `expand`        | Not supported                                                   |\r\n| `search`        | GET ~/Sales?$apply=search(coffee)                               |\r\n| `skip`          | GET ~/Sales?$apply=skip(5)                                      |\r\n| `top`           | GET ~/Sales?$apply=top(4)                                       |\r\n\r\n\r\n## Releases and Milestones\r\n\r\n[Changelog](./CHANGELOG.md)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](https://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/).\r\n\r\n## [1.8.3] - 2020-09-23\r\n\r\n## [1.8.2] - 2020-06-17\r\n\r\n### Fixed\r\n- added license file to \"files\" in package.json\r\n\r\n## [1.8.1] - 2020-06-17\r\n\r\n### Added\r\n- license file: developer-license-3.1.txt\r\n\r\n## [1.8.0] - 2020-05-29\r\n\r\n### Added\r\n- support for server-driven paging and next links in expanded navigation properties\r\n- support for $count option in $expand\r\n- allow doublequotes around * in If-Match and If-None-Match headers\r\n\r\n### Changed\r\n- log stacktrace for server errors with level error (#107)\r\n\r\n### Fixed\r\n- status code 200 OK instead of 304 Not Modified for GET requests without If-None-Match header (#106)\r\n- $expand with complex-property path\r\n\r\n## [1.7.1] - 2020-04-21\r\n\r\n### Fixed\r\n- ETags are never required for transient entities from $apply queries\r\n\r\n## [1.7.0] - 2020-04-16\r\n\r\n### Added\r\n- support for navigation properties in complex properties\r\n\r\n### Fixed\r\n- context URL in some edge cases with keys\r\n\r\n## [1.6.1] - 2020-03-31\r\n\r\n### Fixed\r\n- support for JSON content in type-definition properties with underlying type Edm.Stream (#97)\r\n\r\n## [1.6.0] - 2020-03-25\r\n\r\n### Added\r\n- limited support for JSON content in stream properties as described in OASIS issue 1177\r\n\r\n## [1.5.5] - 2020-03-11\r\n\r\n### Added\r\n- If-Match and If-None-Match headers are allowed with value * on POST requests (#86)\r\n\r\n## [1.5.4] - 2020-03-06\r\n\r\n### Fixed\r\n- stricter determination of related entity set\r\n\r\n## [1.5.3] - 2020-03-04\r\n\r\n### Added\r\n- If-Match and If-None-Match headers are allowed with value * on non-conditional DELETE requests (#86)\r\n\r\n## [1.5.2] - 2020-02-21\r\n\r\n### Fixed\r\n- handling of Path for navigation-property binding and EntitySetPath for bound actions and functions (#84)\r\n\r\n## [1.5.1] - 2020-02-12\r\n\r\n### Fixed\r\n- ensure fixed version numbers of dependencies (#79)\r\n\r\n## [1.5.0] - 2020-02-11\r\n\r\n### Added\r\n- support for node.js version 12\r\n- complete support of specified Unicode range in URI parsing of identifiers\r\n- URI parsing of search words according to OData 4.01 CS02\r\n\r\n### Fixed\r\n- ensure non-null field `code` in error responses\r\n\r\n### Removed\r\n- support for node.js version 8 due to its end of life\r\n\r\n## [1.4.1] - 2020-01-31\r\n\r\n### Fixed\r\n- If-Match and If-None-Match headers are allowed with value * on non-conditional PUT/PATCH requests (for upsert) (#50)\r\n- If-Match header with value * is allowed for all GET requests\r\n- allow annotations `@odata.type` in requests if they match the types specified in the metadata\r\n\r\n## [1.4.0] - 2020-01-14\r\n\r\n### Added\r\n- support for EDM singletons\r\n\r\n### Fixed\r\n- documentation: actions and functions are supported (#68)\r\n\r\n## [1.3.9] - 2019-10-28\r\n\r\n### Fixed\r\n- removed @odata.metadataEtag annotation in JSON responses (with exception of the service-document)\r\n- additional notice regarding IEEE754Compatible content-type parameter in error messages if necessary\r\n\r\n## [1.3.8] - 2019-10-01\r\n\r\n### Added\r\n- support for annotations `@odata.mediaEditLink` and `@odata.mediaReadLink` in entity serialization\r\n\r\n## [1.3.7] - 2019-09-19\r\n\r\n### Fixed\r\n- npm-shrinkwrap.json remains unchanged during xmake build\r\n\r\n## [1.3.6] - 2019-09-18\r\n\r\n### Fixed\r\n- result type of $apply with aliases for custom aggregates (#49)\r\n\r\n## [1.3.5] - 2019-09-02\r\n\r\n### Fixed\r\n- serialization of navigation properties for concat transformations in $apply\r\n- HEAD requests with valid if-none-match header on the ServiceDocument return 304 Not Modified\r\n\r\n## [1.3.4] - 2019-06-18\r\n\r\n## [1.3.3] - 2019-05-08\r\n\r\n### Added\r\n- support in URI resource-path parsing for key-as-segment convention\r\n\r\n## [1.3.2] - 2019-04-26\r\n\r\n## [1.3.1] - 2019-04-23\r\n\r\n## [1.3.0] - 2019-04-23\r\n\r\n### Added\r\n- preliminary optional switch to use non-validating serializer (not yet stable API)\r\n\r\n### Fixed\r\n- context URL for $select with same property more than once\r\n\r\n## [1.2.1] - 2019-04-12\r\n\r\n### Added\r\n- support for batch requests and responses in JSON format as defined in OData version 4.01\r\n- parallel processing of batch requests\r\n- encoder for primitive values used in serializing made a component that can be overridden\r\n\r\n### Fixed\r\n- improved serializing performance\r\n\r\n## [1.2.0] - 2019-03-29\r\n\r\n### Added\r\n- advertisement for operations\r\n\r\n## [1.1.0] - 2019-03-15\r\n\r\n### Added\r\n- Deserialization of delta payloads and deep updates\r\n- Adaption of Oasis Issue 1221: If Oasis CSDL JSON Specification version 4.01-CS02 is found,\r\n  all annotations expressions based on string values will lead to an error\r\n\r\n## [1.0.1] - 2019-01-21\r\n\r\n## [1.0.0] - 2019-01-15\r\n\r\n- first release version of the new odata-server module\r\n- CSDL provider to provide your OData EDM model via the JSON format\r\n- annotations in metadata\r\n- basic cross service referencing\r\n- content negotiation\r\n- support for request Prefer header and response Preference-Applied header\r\n- support for request Accept-Charset header\r\n- URI resource-path parser\r\n- parsers for the system query options $filter, $orderby,\r\n  $expand (also in combination with query options for expanded entities), $select,\r\n  $search, $format, and $apply\r\n- dispatching of requests to handler methods\r\n- support for metadata requests with automatic metadata ETag and the possibility to\r\n  use a custom metadata handler for locale-specific metadata\r\n- read scenarios like read EntityCollection, read Entity, read navigation between entities\r\n  (including containment navigation), read EntitySet(Key)/property\r\n  (primitive property, complex property, and their collections), read function imports,\r\n  and read bound functions\r\n- CRUD entity and property requests (primitive, complex, and collection properties),\r\n  including linking with existing entities via bind operations and deep inserts\r\n- upsert requests (PUT/PATCH on entity set with key and navigation to many with key)\r\n- server-driven paging\r\n- CRUD operations for references (also for references reached via navigation)\r\n- ActionImports and bound actions\r\n- $batch requests (including retrying requests for ChangeSets)\r\n- HEAD requests on the service document\r\n- conditional request handling with ETags\r\n- $apply support for simple aggregate, groupby, filter, compute, identity,\r\n  concat, bottomcount, topcount, orderby, skip, and top transformations\r\n- JSON serialization and deserialization of entities, entity collections, and properties,\r\n  including support for JSON format parameters IEEE754Compatible and ExponentialDecimals,\r\n  built-in Context URI Builder, and automatic odata.metadataEtag annotation\r\n- metadata/annotations in data structure\r\n- instance annotations in JSON serializer\r\n- serialization of primitive-property raw values\r\n- node.js 8.x and 10.x support\r\n- debug view in JSON and HTML formats\r\n- logging/tracing facade\r\n"},{"name":"odata-v4","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"OData V4.0 Server Library\r\n=========================\r\n\r\n# Deprecated\r\n## This library will not receive feature and bugfix releases in the future. Please use the successor `@sap/odata-server`\r\n\r\n## Table of Contents\r\n\r\n- [Overview](#overview)\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n- [Releases and Milestones](#releases-and-milestones)\r\n\r\n# Overview\r\n\r\nWith the OData server library OData V4.0 services can be implemented based on the [OASIS OData standard](https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=odata).\r\nThe library can be directly used to build OData services and is also part of the SAP Fiori programming model as well the SAP Cloud Platform programming model, where the data model can be defined in CDS (Core data services) and the OData service be generated out of the model.\r\n\r\nThe library leaves the freedom to build OData services with any db or persistence layer. It is also possible\r\nto create services, that are calling external REST/OData services and mix up the data with your application data.\r\n\r\nThe library is modular and consists of the following main components:\r\n\r\n* EntityDataModel - Define your EDM in JSON format. Our provider creates the\r\n  EDM out of your model and caches EDM model elements\r\n* Handler Dispatcher - Maps requests to handler functions for CRUD operations\r\n* URI parsers - Parse the request URI including the OData system query options\r\n  (like $format, $select, $expand,...) and validates each URI segment against\r\n  the EDM model and the OData ABNF\r\n* Serializers and Deserializers for the request and response payload.\r\n  The deserializers validate the request payload and support type mapping between\r\n  OData EDM types and JavaScript Types\r\n* Automatic OData Reponse generation based on provided data\r\n* ServiceFactory to create the OData service along with the CRUD handler registration\r\n* Conditional request handling for optimistic concurrency control via ETAGs\r\n* Batch handling - Batch request parsing, dispatching to single batch requests,\r\n  Content-ID referencing and batch response generation\r\n* Flexible API to support all backends - The service developer has the free\r\n  choice of his backend system (e.g., databases, frameworks, calling additional\r\n  external OData services).\r\n\r\n# Installation\r\n```npm install @sap/odata-v4```\r\n\r\n# Usage\r\n\r\n```javascript\r\nconst odata = require('@sap/odata-v4');\r\n// Load your edm model.\r\nconst edmModel = require('./<your_edm_model>.json');\r\n\r\n// Create the service\r\nconst service = odata.ServiceFactory.createService(edmModel)\r\n\r\n    // Register the request handler for CRUD operations\r\n    .on('create', function create(request, response, next){...})\r\n    .on('update', function update(request, response, next){...})\r\n    .on('delete', function delete(request, response, next){...})\r\n    .on('read', function read(request, response, next){...})\r\n\r\n//Create the server\r\nconst port = 9000;\r\nconst server = http.createServer((req, res) => service.process(req, res))\r\n    .listen(port,\r\n        () => console.log(`Server listens on port ${port} - Service URL: http://localhost:${port}/serviceroot.svc/`)\r\n    );\r\n```\r\n\r\n# Supported Requests\r\n\r\n| Resource                      | Request                                                                                  | \r\n|:------------------------------|:-----------------------------------------------------------------------------------------|\r\n| **Read Request**              | **GET**                                                                                  | \r\n| Serviceoot                    | GET http&#58;//host/serviceRoot/                                                         | \r\n| Metadata                      | GET http&#58;//host/serviceRoot/$metadata                                                | \r\n| EntitySet                     | GET http&#58;//host/serviceRoot/EntitySet                                                |\r\n| EntitySet                     | GET http&#58;//host/serviceRoot/EntitySet/$count                                         |\r\n| Entity                        | GET http&#58;//host/serviceRoot/EntitySet(Key)                                           |\r\n| References                    | GET http&#58;//host/serviceRoot/EntitySet/$ref                                           | \r\n| Reference                     | GET http&#58;//host/serviceRoot/EntitySet(Key)/$ref                                      | \r\n| References(related)           | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany/$ref             | \r\n| Reference(related)            | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany/$ref             |  \r\n| Related Entity                | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToOne                   |\r\n| Related Entities              | GET http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany                  |\r\n| Complex Property              | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty                           |\r\n| Complex Property Collection   | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection                 |\r\n| Primitive Property            | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty                         |\r\n| Primitive Property Value      | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/$value                  |\r\n| Primitive Property Collection | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection               |\r\n| **Create/Insert Requests**    | **POST**                                                                                 | \r\n| Entity                        | POST http&#58;//host/serviceRoot/EntitySet                                               | \r\n| Deep Insert                   | POST http&#58;//host/serviceRoot/EntitySet                                               | \r\n| Entity with bind operations   | POST http&#58;//host/serviceRoot/EntitySet                                               | \r\n| Reference                     | POST http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany/$ref            | \r\n| *Update Requests*             | *PUT/PATCH*                                                                              | \r\n| Entity                        | PUT/PATCH http&#58;//host/serviceRoot/EntitySet(Key)                                     |\r\n| Reference                     | PUT http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToOne/$ref              | \r\n| Complex Property              | PUT/PATCH http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty                     |\r\n| Complex Property Collection   | PUT http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection                 |\r\n| Primitive Property            | PUT http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty                         |\r\n| Primitive Property Value      | PUT http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/$value                  |\r\n| Primitive Property Collection | PUT http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection               |\r\n| **Delete Requests**           | **DELETE**                                                                               | \r\n| Entity                        | DELETE http&#58;//host/serviceRoot/EntitySet(Key)                                        |\r\n| Reference                     | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToOne/$ref           | \r\n| Reference(To Many)            | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/NavigationPropertyToMany(Key)/$ref     | \r\n| Complex Property              | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty                        |\r\n| Complex Property Collection   | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection              |\r\n| Primitive Property            | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty                      |\r\n| Primitive Property Value      | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/$value               |\r\n| Primitive Property Collection | DELETE http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection            |\r\n| **Actions and Functions**     | **GET/POST**                                                                             |\r\n| Function Import               | GET http&#58;//host/serviceRoot/FunctionImports/[Navigation- or PropertyPath]            |\r\n| boundFunction                 | GET http&#58;//host/serviceRoot/EntitySet/boundFunction                                  |\r\n| boundFunction                 | GET http&#58;//host/serviceRoot/EntitySet(Key)/boundFunction                             |\r\n| boundFunction                 | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty/boundFunction             |\r\n| boundFunction                 | GET http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection/boundFunction   |\r\n| boundFunction                 | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/boundFunction           |\r\n| boundFunction                 | GET http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection/boundFunction |\r\n| ActionImport                  | POST http&#58;//host/serviceRoot/ActionImport                                            | \r\n| boundAction                   | POST http&#58;//host/serviceRoot/EntitySet/boundAction                                   |\r\n| boundAction                   | POST http&#58;//host/serviceRoot/EntitySet(Key)/boundAction                              |\r\n| boundAction                   | POST http&#58;//host/serviceRoot/EntitySet(Key)/ComplexProperty/boundAction              |\r\n| boundAction                   | POST http&#58;//host/serviceRoot/EntitySet(Key)/ComplexPropertyCollection/boundAction    |\r\n| boundAction                   | POST http&#58;//host/serviceRoot/EntitySet(Key)/PrimitiveProperty/boundAction            |\r\n| boundAction                   | POST http&#58;//host/serviceRoot/EntitySet(Key)/PrimitivePropertyCollection/boundAction  |\r\n\r\n# Supported System Query Options\r\n\r\n| System Query Option           | OASIS OData V4.0 Errata 3 - Query Option Description    | \r\n|:----------------|:-------------------------------------------------------------------------------------|\r\n| **$filter**              | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752358)   |                                                                       | \r\n| **$expand**              | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752359)  |                                                                        | \r\n| **$select**              | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752360) |                                                                         | \r\n| **$orderby**              | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752361)|\r\n| **$top and $skip**        | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752362)|\r\n| **$count**            | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752363)|\r\n| **$search**            | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752364)|\r\n| **$format**            | [Supported values see OASIS specification](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752365)|\r\n\r\n# [Analytical Queries - $apply](http://docs.oasis-open.org/odata/odata-data-aggregation-ext/v4.0/cs01/odata-data-aggregation-ext-v4.0-cs01.html)\r\n\r\n| Transformation      | Sample                                                          | Limitations     |\r\n|:--------------------|:----------------------------------------------------------------| :---------------|\r\n| **aggregate**       | GET ~/Sales?$apply=aggregate(Amount with sum as Total)          | Keyword 'from' is not supported |\r\n| **topcount**        | GET ~/Sales?$apply=topcount(2,Amount)                           |       |\r\n| **topsum**          | GET ~/Sales?$apply=topsum(15,Amount)                            |       |\r\n| **toppercent**      | GET ~/Sales?$apply=toppercent(50,Amount)                        |       |\r\n| **bottomcount**     | GET ~/Sales?$apply=bottomcount(2,Amount)                        |       |\r\n| **bottomsum**       | GET ~/Sales?$apply=bottomsum(7,Amount)                          |       |\r\n| **bottompercent**   | GET ~/Sales?$apply=bottompercent(50,Amount)                     |       |\r\n| **identity**        | GET ~/Sales?$apply=identity                                     |       |\r\n| **concat**          | GET ~/Sales?$apply=concat(topcount(2,Amount),aggregate(Amount)) |       |\r\n| **groupby**         | GET ~/Sales?$apply=groupby((Customer/Country,Product/Name), aggregate(Amount with sum as Total)) | rollup and $all is not supported      |\r\n| **filter**          | GET ~/Sales?$apply=filter(Amount gt 3)                          | \r\n| **expand**          | Not supported                                                   | \r\n| **search**          | GET ~/Sales?$apply=search(coffee)                               | \r\n\r\n\r\n# Releases and Milestones\r\n\r\n[Changelog](./CHANGELOG.md)\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Unreleased\r\n\r\n## [1.9.0] - 2019-01-16\r\n\r\n### Please note: This library will not receive feature and bugfix releases in the future. Please use the successor `@sap/odata-server`\r\n\r\n### Added\r\n- Support for geo types and geo functions\r\n\r\n### Changed\r\n- Errors with status codes 4xx are logged with log level WARNING instead of ERROR\r\n- Remove $Kind from EntitySets,Singletons, FunctionImports, ActionImports and add $Collection to EntitySets (Compatible change)\r\n    - See OASIS Issue: https://issues.oasis-open.org/browse/ODATA-1231\r\n\r\n## [1.8.0] - 2018-10-26\r\n### Added\r\n- Support for Upsert requests (PUT/PATCH on entity set with key and navigation to many with key)\r\n\r\n### Fixed\r\n- base64 encoding uses \"URL and Filename Safe Alphabet\" as required by the specification (#480)\r\n\r\n## [1.7.0] - 2018-09-19\r\n### Added\r\n- Support for EDM type Edm.Stream\r\n- It is now possible to create, update, and delete entities and references reached via navigation.\r\n\r\n## [1.6.1] - 2018-08-07\r\n\r\n### Changed\r\n- an empty JSON object is allowed as input for a create operation\r\n\r\n## [1.6.0] - 2018-08-02\r\n### Added\r\n- $apply support for accessing related entities in aggregation and grouping\r\n- Implemented the odata.metadataEtag annotation\r\n- Metadata-Etag changes, if the metadata document changes via a custom metadata handler\r\n- Support for function imports and bound functions\r\n- new method in ApplicationError to add an annotation \r\n\r\n### Changed\r\n- Definition of search words for $search in anticipation of OData version 4.01\r\n- Changed next() interface of ServiceHandler, MetadataHandler and localeNegotiator to behave like\r\n  the other data handlers -> next (error, { value: data })\r\n\r\n### Fixed\r\n- Context URL in case of deep inserts\r\n- the check which key properties can be omitted in case of referential constraints (#426)\r\n- serialization of annotations in XML error messages\r\n\r\n## [1.5.0] - 2018-06-13\r\n\r\n### Added\r\n\r\n- Retry Requests for ChangeSets\r\n- Support for locale specific metadata-requests\r\n- Support for $count as a pathsegment on expanded navigation properties\r\n- Support for containment navigation\r\n- Support for instance annotations in JSON serializer\r\n- $apply support for orderby, skip, and top transformations\r\n- Support for $expand=*, but not with the $levels option\r\n\r\n### Changed\r\n\r\n- Null property values can be omitted\r\n- Updated dependencies\r\n\r\n### Fixed\r\n- Canonical URL and context URL in case of omitted key values due to referential constraints\r\n- Context URL in case of bound actions that return an entityset\r\n- Support for ETags in expanded entities\r\n- Support for ETags in a Deep-Insert response\r\n\r\n## [1.4.1] - 2018-05-03\r\n\r\n### Fixed\r\n- Corrected behaviour when debug mode is not activated but requested by client\r\n\r\n## [1.4.0] - 2018-04-27\r\n### Added\r\n\r\n- Metadata serialization of EnumMember can use odata.type annotation if enum type is not available\r\n- Support for HEAD requests on the service document\r\n\r\n### Fixed\r\n\r\n- Default status code set to 200 OK for responses to action requests\r\n- Switched to more robust method of calling hasOwnProperty (#384)\r\n- Added format-parameter odata.metadata to the content-type header of json responses (#351)\r\n\r\n## [1.3.0] - 2018-04-04\r\n### Added\r\n- Support for request Prefer header and response Preference-Applied header\r\n\r\n\r\n## [1.2.0] - 2018-03-19\r\n\r\n### Added\r\n\r\n- Support for Accept-Charset and the charset format-parameter in Accept and $format \r\n\r\n### Changed\r\n\r\n### Fixed\r\n\r\n## 1.1.1 - 2018-03-12 [Test]\r\n\r\n## 1.1.0 - 2018-03-12 [Okra Release for productive usage on XSA CF]\r\n### Added\r\n\r\n- $apply support for concat transformation\r\n\r\n### Changed\r\n\r\n### Fixed\r\n\r\n- Context-Url for expanded entities/entity sets #366\r\n\r\n## 1.0.0 - 2018-03-01 [Okra Release for productive usage on XSA/CF]\r\n\r\n### Added\r\n\r\n- Enumeration types\r\n- Enhanced Debug HTML View\r\n- $apply support for simple aggregate, groupby, filter, compute, identity, bottomcount, and topcount transformations\r\n- Server-driven paging\r\n- Create/Update entity and link with existing entity via bind operations\r\n- CRUD operations for references\r\n- ActionImports and Bound Action support\r\n- Deep insert support\r\n- Metadata/Annotations in data structure\r\n- Annotations in expanded entities (Etags)\r\n\r\n### Changed\r\n\r\n- Refactoring of `next(error, data, options)` interface. Data structure of `data` has changed\r\n\r\n### Fixed\r\n\r\n- Debug output for batch requests #337\r\n\r\n## 0.5.0 - 2017-10-18 [First Okra Release for productive usage on XSA/CF]\r\n### Added\r\n\r\n- Basic Cross Service Referencing\r\n- Node.js 6.X and 8.X support\r\n- CRUD Entity Requests\r\n- CUD Property Requests (Primitive-, Complex- and Collection Properties) \r\n- $batch requests\r\n- EnumMemberExpression in metadata\r\n- Conditional Request handling with ETAGs\r\n- Logging Facade\r\n- Documentation \r\n\r\n### Changed\r\n\r\n- CRUD handlers have to be registered with service.on() instead of service.use()\r\n\r\n## 0.0.1-alpha.4 - 2017-05-30 [Milestone]\r\n### Added\r\n\r\n- Create Entity Requests\r\n- Adapt JSON CSDL provider to preliminary OASIS CSDL version\r\n- Adapt samples to new CSDL format\r\n- Performance Test Cases\r\n\r\n## 0.0.1-alpha.3 - 2017-04-24 [Milestone]\r\n### Added\r\n\r\n- Read EntitySet(Key)/property (Primitive Property, Complex Property and their collections)\r\n- Delete Entity requests\r\n- New Dispatching architecture - Usage of handlers instead of processor interfaces\r\n- OData Version 4.0 in request and response\r\n- Annotations in metadata\r\n- Context URI Builder\r\n- Enhanced Debug View support\r\n- Content Negotiation\r\n- $filter parser\r\n- $orderby parser\r\n- $expand parser\r\n- $select parser\r\n- $search parser\r\n- $format validation\r\n- $expand in combination with query options for expanded entities\r\n- support for JSON format parameters IEEE754Compatible and ExponentialDecimals\r\n- standalone JSON serialization of properties\r\n- serialization of primitive-property raw values\r\n- JSON deserialization of entities and properties\r\n\r\n## 0.0.1-alpha.1 - 2016-10-28 [Milestone]\r\n\r\n### Added\r\n\r\n- First milestone version of the OData V4 library, that can be used for PoC's.\r\n- Library supports creating your OData EDM modell as well Read scenarios like\r\n  read EntityCollection, read Entity and Navigation between entities like:\r\n  - GET http://serviceRoot/EntitySet\r\n  - GET http://serviceRoot/EntitySet(key)\r\n  - GET http://serviceRoot/EntitySet(key)/NavigationProperty/..\r\n- The library supports the json format only.\r\n- CSDL providers to provide your OData EDM model via the sap-json format or programmatically\r\n- JSON Serializers for Entity and EntityCollection Serialization\r\n- Dispatching of request to processor methods\r\n- node.js 6.X support\r\n- debug view in json and html format\r\n"},{"name":"odm","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP One Domain Model\r\n\r\nPlease refer to the documentation on https://help.sap.com/odm.\r\n","changelog":"# 2.0.0 (2020-09-04)\r\n\r\n\r\n### Features\r\n\r\n* descriptions moved from @description to doc comments\r\n* improved descriptions comments\r\n* **bpm:** sap.odm.bpm.Task: added root entity 'sap.odm.bpm.Task'\r\n* **bpm:** sap.odm.bpm.TaskDefinition: added root entity 'sap.odm.bpm.TaskDefinition'\r\n* **common:** sap.odm.common.CurrencyCodes: new element 'minorUnit'\r\n* **common:** sap.odm.common.TimeZoneCodes: added code list 'sap.odm.common.TimeZoneCodes'\r\n* **common:** sap.odm.common.address.PostalAddress: new element 'coordinates'\r\n* **common:** sap.odm.common.address.PostalAddress: new element 'timeZone'\r\n* **common:** sap.odm.common.address.Street: added type 'sap.odm.common.address.Street'\r\n* **common:** sap.odm.common.address.SecondaryRegion: added type 'sap.odm.common.address.SecondaryRegion'\r\n* **common:** sap.odm.common.address.TertiaryRegion: added type 'sap.odm.common.address.TertiaryRegion'\r\n* **common:** sap.odm.common.address.Town: added type 'sap.odm.common.address.Town'\r\n* **common:** sap.odm.common.address.District: added type 'sap.odm.common.address.District'\r\n* **common:** sap.odm.common.GeoCoordinates: added type 'sap.odm.common.GeoCoordinates'\r\n* **common:** sap.odm.common.URL: added type 'sap.odm.common.URL'\r\n* **common:** sap.odm.common.URI: added type 'sap.odm.common.URI'\r\n* **dpp:** sap.odm.dpp.DataController: added root entity 'sap.odm.dpp.DataController'\r\n* **dpp:** sap.odm.dpp.Purpose: added root entity 'sap.odm.dpp.Purpose'\r\n* **dpp:** sap.odm.dpp.Purpose2DataController: added root entity 'sap.odm.dpp.Purpose2DataController'\r\n* **dpp:** sap.odm.dpp.TrackPurpose: added aspect 'sap.odm.dpp.TrackPurpose'\r\n* **dpp:** sap.odm.dpp.PurposeReference: added type 'sap.odm.dpp.PurposeReference'\r\n* **finance:** sap.odm.finance.ControllingAreaId: added type 'sap.odm.finance.ControllingAreaId'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New element 'purposes'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New element 'privateAddresses'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New element 'emails'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New element 'phones'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New element 'systemOfRecordKeys'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: annotation '@odm.arrayOf' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New element 'photos'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: New element 'scriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: new element 'coordinates'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: new element 'timeZone'\r\n* **workforce:** sap.odm.workforce.Email: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.Phone: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.JobDetails: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.JobDetails: annotation '@odm.association' changed from 'sap.odm.orgunit.CompanyCode' to 'undefined's\r\n* **workforce:** sap.odm.workforce.JobDetails: type has changed to 'sap.odm.workforce.JobClassificationAssociation' at element job\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'ref'\r\n* **workforce:** sap.odm.workforce.JobDetails: type has changed to 'sap.odm.workforce.WorkAssignmentRef' at element supervisorWorkAssignment\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'id'\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'workforcePerson'\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'position'\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'location'\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'employeeClass'\r\n* **workforce:** sap.odm.workforce.JobDetails: annotation '@odm.association' changed from 'sap.odm.humanresources.OrganizationalUnit' to 'undefined'\r\n* **workforce:** sap.odm.workforce.JobDetails: type has changed to 'sap.odm.workforce.OrganizationalUnitAssociation' at element orgUnit\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'ref'\r\n* **workforce:** sap.odm.workforce.JobDetails: annotation '@odm.association' changed from 'sap.odm.humanresources.OrganizationalUnit' to 'undefined'\r\n* **workforce:** sap.odm.workforce.JobDetails: type has changed to 'sap.odm.workforce.OrganizationalUnitAssociation' at element superOrdinateOrgUnit1\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'ref'\r\n* **workforce:** sap.odm.workforce.JobDetails: annotation '@odm.association' changed from 'sap.odm.humanresources.OrganizationalUnit' to 'undefined'\r\n* **workforce:** sap.odm.workforce.JobDetails: type has changed to 'sap.odm.workforce.OrganizationalUnitAssociation' at element superOrdinateOrgUnit2\r\n* **workforce:** sap.odm.workforce.JobDetails: new element 'ref'\r\n* **workforce:** sap.odm.workforce.CompanyCode: annotation '@odm.association' changed from 'sap.odm.orgunit.CompanyCode' to 'undefined'\r\n* **workforce:** sap.odm.workforce.JobClassificationAssociation: added type 'sap.odm.workforce.JobClassificationAssociation'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentRef: added type 'sap.odm.workforce.WorkAssignmentRef'\r\n* **workforce:** sap.odm.workforce.Position: added type 'sap.odm.workforce.Position'\r\n* **workforce:** sap.odm.workforce.Location: added type 'sap.odm.workforce.Location'\r\n* **workforce:** sap.odm.workforce.OrganizationalUnitAssociation: added type 'sap.odm.workforce.OrganizationalUnitAssociation'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: annotation '@odm.entityAsType' changed from 'true' to 'undefined'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: new element 'coordinates'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: new element 'timeZone'\r\n* **workforce:** sap.odm.workforce.Photo: added type 'sap.odm.workforce.Photo'\r\n* **workforce:** sap.odm.workforce.common.EmployeeClassCodes: added code list 'sap.odm.workforce.common.EmployeeClassCodes'\r\n* **workforce:** sap.odm.workforce.common.WorkforcePersonPhotoTypeCodes: added code list 'sap.odm.workforce.common.WorkforcePersonPhotoTypeCodes'\r\n* **workforce:** sap.odm.workforce.foundation.JobClassification: added root entity 'sap.odm.workforce.foundation.JobClassification'\r\n* **workforce:** sap.odm.workforce.foundation.OrganizationalUnit: added root entity 'sap.odm.workforce.foundation.OrganizationalUnit'\r\n* **workforce:** sap.odm.workforce.foundation.OrganizationalUnitCategoryCodes: added code list 'sap.odm.workforce.foundation.OrganizationalUnitCategoryCodes'\r\n\r\n\r\n### BREAKING CHANGES\r\n\r\n* **common:** sap.odm.common.CountryCodes: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at currency\r\n* **common:** sap.odm.common.CountryCodes: element property 'target' changed from 'undefined' to 'sap.odm.common.CurrencyCodes' at currency\r\n* **common:** sap.odm.common.CountryCodes: New foreign key 'code' for association at element 'currency'\r\n* **common:** sap.odm.common.address.CountrySubdivisionCodes: element/property 'changeType' removed from 'sap.odm.common.address.CountrySubdivisionCodes'\r\n* **common:** sap.odm.common.ScriptedObject: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at scriptCode\r\n* **common:** sap.odm.common.ScriptedObject: element property 'target' changed from 'undefined' to 'sap.odm.common.ScriptCodes' at scriptCode\r\n* **common:** sap.odm.common.ScriptedObject: New foreign key 'code' for association at element 'scriptCode'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.StreetCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'country'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'country'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **common:** sap.odm.common.address.PostalAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.StreetCodes' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **common:** sap.odm.common.address.PhysicalDeliveryAddress: New foreign key 'code' for association at element 'country'\r\n* **common:** sap.odm.common.address.StreetInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.StreetInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.StreetCodes' at ref\r\n* **common:** sap.odm.common.address.StreetInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **common:** sap.odm.common.address.LocalityInfo: New foreign key 'code' for association at element 'primaryRegion'\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **common:** sap.odm.common.address.LocalityInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.RegionInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **common:** sap.odm.common.address.RegionInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **common:** sap.odm.common.address.RegionInfo: New foreign key 'code' for association at element 'primaryRegion'\r\n* **common:** sap.odm.common.address.RegionInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.RegionInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.RegionInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.RegionInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.RegionInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.RegionInfo: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.CountryLevelInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **common:** sap.odm.common.address.CountryLevelInfo: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **common:** sap.odm.common.address.CountryLevelInfo: New foreign key 'code' for association at element 'country'\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: New foreign key 'code' for association at element 'country'\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **common:** sap.odm.common.address.AlternativeDeliveryAddress: New foreign key 'code' for association at element 'ref'\r\n* **common:** sap.odm.common.managed: element/property 'createdBy' removed from 'sap.odm.common.managed'\r\n* **common:** sap.odm.common.managed: element/property 'modifiedBy' removed from 'sap.odm.common.managed'\r\n* **common:** sap.odm.common.managed: element/property 'createdByUuid' removed from 'sap.odm.common.managed'\r\n* **common:** sap.odm.common.managed: element/property 'modifiedByUuid' removed from 'sap.odm.common.managed'\r\n* **common:** sap.odm.common.address.DistrictNameCode: type 'sap.odm.common.address.DistrictNameCode' removed\r\n* **common:** sap.odm.common.address.SecondaryRegionNameCode: type 'sap.odm.common.address.SecondaryRegionNameCode' removed\r\n* **common:** sap.odm.common.address.StreetNameCode: type 'sap.odm.common.address.StreetNameCode' removed\r\n* **common:** sap.odm.common.address.TertiaryRegionNameCode: type 'sap.odm.common.address.TertiaryRegionNameCode' removed\r\n* **common:** sap.odm.common.address.TownNameCode: type 'sap.odm.common.address.TownNameCode' removed\r\n* **finance:** sap.odm.finance.costobject.CostCenter: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at responsible\r\n* **finance:** sap.odm.finance.costobject.CostCenter: element property 'target' changed from 'undefined' to 'sap.odm.workforce.WorkforcePerson' at responsible\r\n* **finance:** sap.odm.finance.costobject.CostCenter: type has changed to 'cds.Association' at element responsible\r\n* **finance:** sap.odm.finance.costobject.CostCenter: New foreign key 'id' for association at element 'responsible'\r\n* **finance:** sap.odm.finance.costobject.Attributes: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at responsible\r\n* **finance:** sap.odm.finance.costobject.Attributes: element property 'target' changed from 'undefined' to 'sap.odm.workforce.WorkforcePerson' at responsible\r\n* **finance:** sap.odm.finance.costobject.Attributes: type has changed to 'cds.Association' at element responsible\r\n* **finance:** sap.odm.finance.costobject.Attributes: New foreign key 'id' for association at element 'responsible'\r\n* **finance:** sap.odm.finance.costobject.ProjectControllingObject: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at objectType\r\n* **finance:** sap.odm.finance.costobject.ProjectControllingObject: element property 'target' changed from 'undefined' to 'sap.odm.finance.costobject.ProjectControllingObjectTypeCodes' at objectType\r\n* **finance:** sap.odm.finance.costobject.ProjectControllingObject: New foreign key 'code' for association at element 'objectType'\r\n* **finance:** sap.odm.finance.costobject.ProjectControllingObjectSourceId: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at objectType\r\n* **finance:** sap.odm.finance.costobject.ProjectControllingObjectSourceId: element property 'target' changed from 'undefined' to 'sap.odm.finance.costobject.ProjectControllingObjectTypeCodes' at objectType\r\n* **finance:** sap.odm.finance.costobject.ProjectControllingObjectSourceId: New foreign key 'code' for association at element 'objectType'\r\n* **finance:** sap.odm.finance.costobject.ProjectBusinessActionInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at businessAction\r\n* **finance:** sap.odm.finance.costobject.ProjectBusinessActionInfo: element property 'target' changed from 'undefined' to 'sap.odm.finance.costobject.ProjectBusinessActionCodes' at businessAction\r\n* **finance:** sap.odm.finance.costobject.ProjectBusinessActionInfo: New foreign key 'code' for association at element 'businessAction'\r\n* **finance:** sap.odm.finance.costobject.ProjectBusinessActionInfo: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at blockIndicator\r\n* **finance:** sap.odm.finance.costobject.ProjectBusinessActionInfo: element property 'target' changed from 'undefined' to 'sap.odm.finance.costobject.BlockIndicatorCodes' at blockIndicator\r\n* **finance:** sap.odm.finance.costobject.ProjectBusinessActionInfo: New foreign key 'code' for association at element 'blockIndicator'\r\n* **finance:** sap.odm.finance.publicsector.BudgetPeriod: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at frequency\r\n* **finance:** sap.odm.finance.publicsector.BudgetPeriod: element property 'target' changed from 'undefined' to 'sap.odm.finance.publicsector.FundFrequencyCodes' at frequency\r\n* **finance:** sap.odm.finance.publicsector.BudgetPeriod: New foreign key 'code' for association at element 'frequency'\r\n* **finance:** sap.odm.finance.publicsector.FunctionalArea: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at base\r\n* **finance:** sap.odm.finance.publicsector.FunctionalArea: element property 'target' changed from 'undefined' to 'sap.odm.finance.accounting.FunctionalAreaCodes' at base\r\n* **finance:** sap.odm.finance.publicsector.FunctionalArea: New foreign key 'code' for association at element 'base'\r\n* **finance:** sap.odm.finance.publicsector.Fund: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at financialManagementArea\r\n* **finance:** sap.odm.finance.publicsector.Fund: element property 'target' changed from 'undefined' to 'sap.odm.finance.publicsector.FinancialManagementAreaCodes' at financialManagementArea\r\n* **finance:** sap.odm.finance.publicsector.Fund: New foreign key 'code' for association at element 'financialManagementArea'\r\n* **finance:** sap.odm.finance.publicsector.Fund: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at frequency\r\n* **finance:** sap.odm.finance.publicsector.Fund: element property 'target' changed from 'undefined' to 'sap.odm.finance.publicsector.FundFrequencyCodes' at frequency\r\n* **finance:** sap.odm.finance.publicsector.Fund: New foreign key 'code' for association at element 'frequency'\r\n* **finance:** sap.odm.finance.publicsector.FundsCenter: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at financialManagementArea\r\n* **finance:** sap.odm.finance.publicsector.FundsCenter: element property 'target' changed from 'undefined' to 'sap.odm.finance.publicsector.FinancialManagementAreaCodes' at financialManagementArea\r\n* **finance:** sap.odm.finance.publicsector.FundsCenter: New foreign key 'code' for association at element 'financialManagementArea'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedAt' removed from 'sap.odm.workforce.WorkforcePerson'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdAt' removed from 'sap.odm.workforce.WorkforcePerson'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdBy' removed from 'sap.odm.workforce.WorkforcePerson'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedBy' removed from 'sap.odm.workforce.WorkforcePerson'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdByUuid' removed from 'sap.odm.workforce.WorkforcePerson'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.WorkforcePerson'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedAt' removed from 'userAccount'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdAt' removed from 'userAccount'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdBy' removed from 'userAccount'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedBy' removed from 'userAccount'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdByUuid' removed from 'userAccount'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedByUuid' removed from 'userAccount'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedAt' removed from 'personalDetail'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdAt' removed from 'personalDetail'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdBy' removed from 'personalDetail'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedBy' removed from 'personalDetail'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'createdByUuid' removed from 'personalDetail'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element/property 'modifiedByUuid' removed from 'personalDetail'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at formOfAddress\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element property 'target' changed from 'undefined' to 'sap.odm.common.address.FormOfAddressCodes' at formOfAddress\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: New foreign key 'code' for association at element 'formOfAddress'\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element 'profileDetail' changed from flat to nested\r\n* **workforce:** sap.odm.workforce.WorkforcePerson: element 'workAssignments' changed to composition of aspect\r\n* **workforce:** sap.odm.workforce.SourceUserAccount: element/property 'modifiedAt' removed from 'sap.odm.workforce.SourceUserAccount'\r\n* **workforce:** sap.odm.workforce.SourceUserAccount: element/property 'createdAt' removed from 'sap.odm.workforce.SourceUserAccount'\r\n* **workforce:** sap.odm.workforce.SourceUserAccount: element/property 'createdBy' removed from 'sap.odm.workforce.SourceUserAccount'\r\n* **workforce:** sap.odm.workforce.SourceUserAccount: element/property 'modifiedBy' removed from 'sap.odm.workforce.SourceUserAccount'\r\n* **workforce:** sap.odm.workforce.SourceUserAccount: element/property 'createdByUuid' removed from 'sap.odm.workforce.SourceUserAccount'\r\n* **workforce:** sap.odm.workforce.SourceUserAccount: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.SourceUserAccount'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.PersonalDetails'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element/property 'createdAt' removed from 'sap.odm.workforce.PersonalDetails'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element/property 'createdBy' removed from 'sap.odm.workforce.PersonalDetails'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.PersonalDetails'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.PersonalDetails'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.PersonalDetails'\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at formOfAddress\r\n* **workforce:** sap.odm.workforce.PersonalDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.address.FormOfAddressCodes' at formOfAddress\r\n* **workforce:** sap.odm.workforce.PersonalDetails: New foreign key 'code' for association at element 'formOfAddress'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.ProfileDetails\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'createdAt' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'createdBy' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element/property 'id' removed from 'sap.odm.workforce.ProfileDetails'\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at nativePreferredLanguage\r\n* **workforce:** sap.odm.workforce.ProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.LanguageCodes' at nativePreferredLanguage\r\n* **workforce:** sap.odm.workforce.ProfileDetails: New foreign key 'code' for association at element 'nativePreferredLanguage'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.ScriptedProfileDetails\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'createdAt' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'createdBy' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element/property 'id' removed from 'sap.odm.workforce.ScriptedProfileDetails'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at scriptCode\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.ScriptCodes' at scriptCode\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: New foreign key 'code' for association at element 'scriptCode'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at academicTitle\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.address.AcademicTitleCodes' at academicTitle\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: New foreign key 'code' for association at element 'academicTitle'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at additionalAcademicTitle\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.address.AcademicTitleCodes' at additionalAcademicTitle\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: New foreign key 'code' for association at element 'additionalAcademicTitle'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at nameSuffix\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.address.FamilyNameSuffixCodes' at nameSuffix\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: New foreign key 'code' for association at element 'nameSuffix'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at namePrefix\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.address.FamilyNamePrefixCodes' at namePrefix\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: New foreign key 'code' for association at element 'namePrefix'\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at partnerNamePrefix\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.address.FamilyNamePrefixCodes' at partnerNamePrefix\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: New foreign key 'code' for association at element 'partnerNamePrefix'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.PrivateAddress\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'modifiedAt' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'createdAt' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'createdBy' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'modifiedBy' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'createdByUuid' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element/property 'id' removed from 'sap.odm.workforce.PrivateAddress'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at scriptCode\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.ScriptCodes' at scriptCode\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'scriptCode'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.StreetCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at usage\r\n* **workforce:** sap.odm.workforce.PrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.AddressUsageCodes' at usage\r\n* **workforce:** sap.odm.workforce.PrivateAddress: New foreign key 'code' for association at element 'usage'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at scriptCode\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.ScriptCodes' at scriptCode\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'scriptCode'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.StreetCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **workforce:** sap.odm.workforce.ScriptedPersonAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.Email: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.Email\r\n* **workforce:** sap.odm.workforce.Email: element/property 'modifiedAt' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element/property 'createdAt' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element/property 'createdBy' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element/property 'modifiedBy' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element/property 'createdByUuid' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element/property 'id' removed from 'sap.odm.workforce.Email'\r\n* **workforce:** sap.odm.workforce.Email: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at usage\r\n* **workforce:** sap.odm.workforce.Email: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.EmailUsageCodes' at usage\r\n* **workforce:** sap.odm.workforce.Email: New foreign key 'code' for association at element 'usage'\r\n* **workforce:** sap.odm.workforce.Phone: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.Phone\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'modifiedAt' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'createdAt' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'createdBy' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'modifiedBy' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'createdByUuid' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element/property 'id' removed from 'sap.odm.workforce.Phone'\r\n* **workforce:** sap.odm.workforce.Phone: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.Phone: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.Phone: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.Phone: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at usage\r\n* **workforce:** sap.odm.workforce.Phone: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.PhoneUsageCodes' at usage\r\n* **workforce:** sap.odm.workforce.Phone: New foreign key 'code' for association at element 'usage'\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.SystemOfRecordKey\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: element/property 'createdBy' removed from 'sap.odm.workforce.SystemOfRecordKey'\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: element/property 'modifiedBy' removed from 'sap.odm.workforce.SystemOfRecordKey'\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: element/property 'createdByUuid' removed from 'sap.odm.workforce.SystemOfRecordKey'\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.SystemOfRecordKey'\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: element/property 'id' removed from 'sap.odm.workforce.SystemOfRecordKey'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.WorkAssignmentDetails'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentDetails: element/property 'createdAt' removed from 'sap.odm.workforce.WorkAssignmentDetails'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentDetails: element/property 'createdBy' removed from 'sap.odm.workforce.WorkAssignmentDetails'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.WorkAssignmentDetails'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.WorkAssignmentDetails'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.WorkAssignmentDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.JobDetails\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'createdAt' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'createdBy' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element/property 'id' removed from 'sap.odm.workforce.JobDetails'\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at status\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.JobDetailStatusCodes' at status\r\n* **workforce:** sap.odm.workforce.JobDetails: New foreign key 'code' for association at element 'status'\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.JobDetails: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at event\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.EventCodes' at event\r\n* **workforce:** sap.odm.workforce.JobDetails: New foreign key 'code' for association at element 'event'\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at eventReason\r\n* **workforce:** sap.odm.workforce.JobDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.EventReasonCodes' at eventReason\r\n* **workforce:** sap.odm.workforce.JobDetails: New foreign key 'code' for association at element 'eventReason'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.PaymentDetails\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'createdAt' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'createdBy' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element/property 'id' removed from 'sap.odm.workforce.PaymentDetails'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at paymentType\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.PaymentTypeCodes' at paymentType\r\n* **workforce:** sap.odm.workforce.PaymentDetails: New foreign key 'code' for association at element 'paymentType'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at paymentMethod\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.PaymentMethodCodes' at paymentMethod\r\n* **workforce:** sap.odm.workforce.PaymentDetails: New foreign key 'code' for association at element 'paymentMethod'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at bankAccountType\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.BankAccountTypeCodes' at bankAccountType\r\n* **workforce:** sap.odm.workforce.PaymentDetails: New foreign key 'code' for association at element 'bankAccountType'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at bankControlKey\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.BankControlKeyCodes' at bankControlKey\r\n* **workforce:** sap.odm.workforce.PaymentDetails: New foreign key 'code' for association at element 'bankControlKey'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at bankAccountCurrency\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.CurrencyCodes' at bankAccountCurrency\r\n* **workforce:** sap.odm.workforce.PaymentDetails: New foreign key 'code' for association at element 'bankAccountCurrency'\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at bankCountry\r\n* **workforce:** sap.odm.workforce.PaymentDetails: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at bankCountry\r\n* **workforce:** sap.odm.workforce.PaymentDetails: New foreign key 'code' for association at element 'bankCountry'\r\n* **workforce:** sap.odm.workforce.WorkOrderDetails: element/property 'modifiedAt' removed from 'sap.odm.workforce.WorkOrderDetails'\r\n* **workforce:** sap.odm.workforce.WorkOrderDetails: element/property 'createdAt' removed from 'sap.odm.workforce.WorkOrderDetails'\r\n* **workforce:** sap.odm.workforce.WorkOrderDetails: element/property 'createdBy' removed from 'sap.odm.workforce.WorkOrderDetails'\r\n* **workforce:** sap.odm.workforce.WorkOrderDetails: element/property 'modifiedBy' removed from 'sap.odm.workforce.WorkOrderDetails'\r\n* **workforce:** sap.odm.workforce.WorkOrderDetails: element/property 'createdByUuid' removed from 'sap.odm.workforce.WorkOrderDetails'\r\n* **workforce:** sap.odm.workforce.WorkOrderDetails: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.WorkOrderDetails'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'kind' changed from 'entity' to 'type' at sap.odm.workforce.WorkAssignmentPrivateAddress\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'modifiedAt' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'createdAt' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'createdBy' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'modifiedBy' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'createdByUuid' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'modifiedByUuid' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element/property 'id' removed from 'sap.odm.workforce.WorkAssignmentPrivateAddress'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at scriptCode\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.ScriptCodes' at scriptCode\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'scriptCode'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.StreetCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at country\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.CountryCodes' at country\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'country'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at primaryRegion\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.CountrySubdivisionCodes' at primaryRegion\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'primaryRegion'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.SecondaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TertiaryRegionCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.TownCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.common.address.DistrictCodes' at ref\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'ref'\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'cardinality' changed from 'undefined' to '{\"max\":1}' at usage\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: element property 'target' changed from 'undefined' to 'sap.odm.workforce.common.AddressUsageCodes' at usage\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: New foreign key 'code' for association at element 'usage'\r\n* **workforce:** sap.odm.workforce.Job: type 'sap.odm.workforce.Job' removed\r\n* **workforce:** sap.odm.workforce.OrganizationalUnit: type 'sap.odm.workforce.OrganizationalUnit' removed\r\n* **workforce:** sap.odm.workforce.SupervisorWorkAssignment: type 'sap.odm.workforce.SupervisorWorkAssignment' removed\r\n* **workforce:** sap.odm.workforce.common.composite: entity 'sap.odm.workforce.common.composite' removed\r\n* **workforce:** sap.odm.workforce.common.trackParent: aspect 'sap.odm.workforce.common.trackParent' removed\r\n\r\n\r\n\r\n# 1.1.0 (2020-06-16)\r\n\r\n### Features\r\n\r\n* **common:** sap.odm.common.address.CountrySubdivisionCodes: new element changeType\r\n* **common:** new type sap.odm.common.LicensedCodeListChangeTypeEnum\r\n* **finance:** new root entity sap.odm.finance.costobject.ProjectControllingObject\r\n* **finance:** new root entity sap.odm.finance.publicsector.BudgetPeriod\r\n* **finance:** new root entity sap.odm.finance.publicsector.FunctionalArea\r\n* **finance:** new root entity sap.odm.finance.publicsector.Fund\r\n* **finance:** new root entity sap.odm.finance.publicsector.FundsCenter\r\n* **finance:** new root entity sap.odm.finance.publicsector.Grant\r\n* **finance:** sap.odm.finance.costobject.CostCenter: Added @description annotation\r\n* **finance:** sap.odm.finance.costobject.Attributes: Added @description annotation\r\n* **finance:** sap.odm.finance.costobject.CostCenter: replaced anonymous structured element at companyCode with sap.odm.orgunit.CompanyCodeId\r\n* **finance:** sap.odm.finance.costobject.LocalIdS4: replaced anonymous structured element at companyCode with sap.odm.orgunit.CompanyCodeId\r\n* **orgunit:** new type sap.odm.orgunit.CompanyCodeId\r\n* **workforce:** new type sap.odm.workforce.CompanyCode\r\n* **workforce:** sap.odm.workforce.JobDetails: replaced anonymous structured element at legalEntity with sap.odm.workforce.CompanyCode\r\n\r\n### Bug Fixes\r\n\r\n* **common:** sap.odm.common.address.CountrySubdivisionCodes: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.ProfileDetails: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.composite: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.ScriptedProfileDetails: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.PrivateAddress: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.AddressUsageCodes: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.AddressUsageCode: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.Email: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.EmailUsageCodes: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.EmailUsageCode: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.Phone: annotation Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.PhoneUsageCodes: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.PhoneUsageCode: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.SystemOfRecordKey: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.WorkAssignment: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.JobDetails: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.JobDetailStatusCodes: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.JobDetailStatusCode: Fixed typos in description annotations\r\n* **workforce:** sap.odm.workforce.common.EventCodes: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.EventCode: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.EventReasonCodes: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.EventReasonCode: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.PaymentDetails: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.PaymentTypeCodes: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.PaymentTypeCode: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.PaymentMethodCodes: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.PaymentMethodCode: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.BankAccountTypeCodes: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.BankAccountTypeCode: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.common.BankControlKeyCode: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.WorkAssignmentPrivateAddress: Fixed typos in descriptions\r\n* **workforce:** sap.odm.workforce.WorkAssignment: fix on-condition\r\n\r\n# 1.0.2 (2020-05-05)\r\n\r\n### Features\r\n\r\n* **common:** Added abstract entity cuid\r\n* **common:** Added aspect ScriptedObject\r\n* **common:** Added aspect codeList\r\n* **common:** Added aspect licensedCodeList\r\n* **common:** Added aspect managed\r\n* **common:** Added code list AcademicTitleCodes\r\n* **common:** Added code list CountryCodes\r\n* **common:** Added code list CountrySubdivisionCodes\r\n* **common:** Added code list CurrencyCodes\r\n* **common:** Added code list DistrictCodes\r\n* **common:** Added code list FamilyNameSuffixCodes\r\n* **common:** Added code list FormOfAddressCodes\r\n* **common:** Added code list LanguageCodes\r\n* **common:** Added code list ScriptCodes\r\n* **common:** Added code list SecondaryRegionCodes\r\n* **common:** Added code list StreetCodes\r\n* **common:** Added code list TertiaryRegionCodes\r\n* **common:** Added code list TownCodes\r\n* **common:** Added type AddressedObjectInfo\r\n* **common:** Added type AlternativeDeliveryAddress\r\n* **common:** Added type CountryLevelInfo\r\n* **common:** Added type DeliveryServiceEnum\r\n* **common:** Added type DistrictNameCode\r\n* **common:** Added type EmailAddress\r\n* **common:** Added type LocalUserId\r\n* **common:** Added type LocalityInfo\r\n* **common:** Added type PhysicalDeliveryAddress\r\n* **common:** Added type PostalAddress\r\n* **common:** Added type PostalCode\r\n* **common:** Added type PremisesInfo\r\n* **common:** Added type RegionInfo\r\n* **common:** Added type SecondaryRegionNameCode\r\n* **common:** Added type ShortString\r\n* **common:** Added type StreetInfo\r\n* **common:** Added type StreetNameCode\r\n* **common:** Added type TertiaryRegionNameCode\r\n* **common:** Added type TownNameCode\r\n* **finance:** Added root entity CostCenter\r\n* **finance:** Added type Attributes\r\n* **finance:** Added type LocalIdS4\r\n* **workforce:** Added abstract entity composite\r\n* **workforce:** Added aspect trackParent\r\n* **workforce:** Added code list AddressUsageCodes\r\n* **workforce:** Added code list BankAccountTypeCodes\r\n* **workforce:** Added code list BankControlKeyCodes\r\n* **workforce:** Added code list EmailUsageCodes\r\n* **workforce:** Added code list EventCodes\r\n* **workforce:** Added code list EventReasonCodes\r\n* **workforce:** Added code list JobDetailStatusCodes\r\n* **workforce:** Added code list PaymentMethodCodes\r\n* **workforce:** Added code list PaymentTypeCodes\r\n* **workforce:** Added code list PhoneUsageCodes\r\n* **workforce:** Added entity Email\r\n* **workforce:** Added entity JobDetails\r\n* **workforce:** Added entity PaymentDetails\r\n* **workforce:** Added entity Phone\r\n* **workforce:** Added entity PrivateAddress\r\n* **workforce:** Added entity ProfileDetails\r\n* **workforce:** Added entity ScriptedProfileDetails\r\n* **workforce:** Added entity SystemOfRecordKey\r\n* **workforce:** Added entity WorkAssignment\r\n* **workforce:** Added entity WorkAssignmentPrivateAddress\r\n* **workforce:** Added root entity WorkforcePerson\r\n* **workforce:** Added type Job\r\n* **workforce:** Added type LegalEntity\r\n* **workforce:** Added type OrganizationalUnit\r\n* **workforce:** Added type PersonalDetails\r\n* **workforce:** Added type ScriptedPersonAddress\r\n* **workforce:** Added type SourceUserAccount\r\n* **workforce:** Added type SupervisorWorkAssignment\r\n* **workforce:** Added type Supplier\r\n* **workforce:** Added type WorkAssignmentDetails\r\n* **workforce:** Added type WorkOrderDetails\r\n"},{"name":"open.fe","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"[OpenUI5](http://openui5.org/images/OpenUI5_new_big_side.png)\r\n\r\n# @sap/open.fe\r\n[SAP Fiori elements](https://sapui5.hana.ondemand.com/#/topic/03265b0408e2432c9571d6b3feb6b1fd) uses open.fe as an add-on to [OpenUI5 Framework]( https://github.com/SAP/openui5). Application developers can use the package open.fe to build applications based on SAP Fiori elements with OData V4 services. Applications that are based on the package open.fe can only consume the control libraries delivered as part of the OpenUI5 Framework. For more information about SAP Fiori elements, see [SAP Fiori elements](https://sapui5.hana.ondemand.com/sdk/#/topic/03265b0408e2432c9571d6b3feb6b1fd). Please note that some features, such as unified shell or navigation support, are restricted as they are used with the OpenUI5 Framework.\r\n\r\n## Usage\r\nYou must maintain the dependency to the package @sap/open.fe package in the package.json, as it is not part of OpenUI5 framework. SAP Fiori elements recommends that you use the [UI5 Tooling]( https://sap.github.io/ui5-tooling) to install the libraries that are part of the OpenUI5 framework. For further details, please see [OpenUI5 Framework using UI5 Tooling]( https://sap.github.io/ui5-tooling/pages/Configuration/#framework-configuration).\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP FREEWARE LICENSE AGREEMENT](https://tools.hana.ondemand.com/sap-freeware-license.txt)\r\n"},{"name":"pdms-sdk","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/pdms-sdk\r\n==============\r\n\r\n<!-- toc -->\r\n\r\n- [Overview](#overview)\r\n- [Variant API](#variant-api)\r\n- [Config db](#config-db-module)\r\n\r\n<!-- tocstop -->\r\n\r\n## Overview\r\n\r\nThis library is intended for enabling the development of custom features and extensions to SAP Predictive Maintenance and Service (PdMS).\r\n\r\n### Installation\r\n\r\nMake sure that the @sap registry points to `https://npm.sap.com` in your .npmrc or in your npm config settings. Then run:\r\n```\r\nnpm install @sap/pdms-variant-api --save\r\n```\r\n\r\n\r\n## Variant API\r\n\r\n\r\nThis is the node.js based implementation of the pdms variant API.\r\nIt is implemented as an express middleware that is easy to consume in the node-based backend of an Analysis Tool.\r\n\r\n### Usage\r\n\r\nThe node-variant-api relies on a security context being present in req.authInfo so that the tenant\r\ninformation of the HTTP request can be parsed. The easiest way to achieve this is to use the @sap/xssec library (see below). If this is not provided, the API will attempt to create a security context out of the JWT token in the \"Authorization\" header of the request.\r\n\r\nHere is the sample code example in a simple server.js to consume node-variant-api:\r\n\r\n```js\r\nconst express = require('express');\r\nconst xsenv = require('@sap/xsenv');\r\nconst passport = require('passport');\r\nconst JWTStrategy = require('@sap/xssec').JWTStrategy;\r\n\r\n\r\n// import the library\r\nconst sdk = require('@sap/pdms-sdk');\r\n\r\n// get from somewhere the hana credentials, ideally via `xsenv` module (but can also be a json file or whatever).\r\nconst configHanaCredentials = xsenv.cfServiceCredentials('myipro-config-hdi');\r\n\r\nconst app = express();\r\n\r\n// Use passport to parse the JWT token from the request and enrich the request object with the authInfo information\r\npassport.use(new JWTStrategy(xsenv.getServices({uaa:{tag:'xsuaa'}}).uaa));\r\napp.use(passport.initialize());\r\napp.use(passport.authenticate('JWT', { session: false }));\r\n\r\n// mount the variant api middleware into /api/v1 and pass the db credentials to it.\r\napp.use('/api/v1', sdk.middleware(configHanaCredentials));\r\n\r\n// optionally, default variants can be passed to the middleware. It can be one variant or an array of variants. variantId is created by variantAPI.\r\napp.use('/api/v1', sdk.middleware(configHanaCredentials, <default-variant>));\r\n\r\napp.listen(1337, function () {\r\n  console.log(`\r\n    app running on port: 1337.\r\n    Go to http://hostname:1337/api/v1/variants to use the variant API\r\n  `);\r\n});\r\n```\r\n\r\n\r\n> IMPORTANT NOTE: A pre-requisite for using the node variant API is the use of the [config db module](#config-db-module) to create the necessary database artifacts  used by the variant API.\r\n\r\n\r\n## Config DB Module\r\n\r\nThe config-db module is a node module to provide the CDS artifacts for variant configuration tables, which will work out of the box with the variant API (node or java).\r\nThis removes the burden on the developer to write or maintain the CDS files for variant configuration tables and also, removes code-redundancy.\r\n\r\nIt contains the following tables and functions:\r\n\r\n- com.sap.pdms.ipro::variants.Config\r\n- com.sap.pdms.ipro::variants.I18n\r\n- com.sap.pdms.ipro::variants.PreConfiguredConfig\r\n- com.sap.pdms.ipro::variants.PreConfiguredI18n\r\n- com.sap.pdms.ipro::variants.OptOutOfPreConfigured\r\n- com.sap.pdms.ipro::variants.GET_CONFIG_FOR_TENANT(tenant VARCHAR(36))\r\n- com.sap.pdms.ipro::variants.GET_I18N_FOR_TENANT(tenant VARCHAR(36))\r\n\r\n### Usage\r\n\r\nThe usage is automatically done by the HDI deployer of a database MTA module. If the @sap/pdms-sdk the is included in the package.json\r\nof the module, the HDI Deployer will pick up all necessary CDS artifact from the module when it is triggered. The HDB Deployer scans\r\nthe node_modules/ folder and virtually integrates the src/ and cfg/ folders of the found reusable database module - config-db module into \r\nthe (consuming) database module’s lib/ folder. Reusable database modules are identified by the mandatory src/.hdiconfig file.\r\n\r\n```JSON\r\n{\r\n\t\"name\": \"db\",\r\n\t\"dependencies\": {\r\n\t\t\"@sap/hdi-deploy\": \"3.1.2\",\r\n\t\t\"@sap/pdms-sdk\": \"0.0.1\"\r\n\t},\r\n\t\"scripts\": {\r\n\t\t\"start\": \"node node_modules/@sap/hdi-deploy/deploy.js\"\r\n\t}\r\n}\r\n```\r\n\r\nIt is likely that an `.hdiignore` file will be needed to ignore additional files found by HDI Deploy that should\r\nnot be deployed to the database. The `.hdiignore` file works just like `.gitignore` and should be located in the \r\nroot of you db module.\r\n","changelog":"# Changelog\r\n\r\n## 1.0.0\r\n\r\n### Features\r\n\r\n- Add restore default variants REST API\r\n- Removed service-catalog client\r\n\r\n### Bugfixes\r\n\r\n- None\r\n\r\n## 0.0.3\r\n\r\n### Features\r\n\r\n- None\r\n\r\n### Bugfixes\r\n\r\n- Update dependencies\r\n\r\n\r\n## 0.0.2\r\n\r\n### Features\r\n\r\n- Updated readme\r\n\r\n### Bugfixes\r\n\r\n- Removed reliance on unavailable dependencies\r\n- Removed variant migration API\r\n\r\n## 0.0.1\r\n\r\n### Features\r\n\r\n- The config-db module contains the cds files that should be deployed to enable the functionality of the variant API\r\n- The variant-api module contains a mountable express middleware that provides the full variant REST API\r\n- The service-catalog-client module provides functionality for de-/registering Analysis Tools in the PdMS service catalog\r\n\r\n### Bugfixes\r\n\r\n- None"},{"name":"portal-cf-content-deployer","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# DEPRECATION MESSAGE\r\n\r\nDeployment is now supported with Generic Application Content Deployer (GACD).\r\nThis means that after the implementation of the changes below, there will be no need for the content deployer.\r\n\r\n\r\n**Why are we moving to GACD?**\r\n\r\n- Faster deployment\r\n- No need for the content-deployer\r\n- The flp and ui-deployer applications, which are only used for the deployment, will no longer be part of the space\r\n \r\n **How to move to GACD?**\r\n \r\n**Add the following to your FLP module**: \r\n\r\n1. Delete the package.json, package-lock.json, node-modules, and .npmrc in your FLP module directory, as there is no need to use the content deployer.\r\n\r\n2. Change the module's type to `com.sap.application.content`. If using WEB-IDE, use the type `com.sap.application.portal.content`\r\n\r\n3. Once the type has changed, memory, stack, and buildpack parameters, under the 'parameters' section, can be removed:\r\n\r\n```\r\n  parameters:\t\r\n    memory: 128M\t\r\n    stack: cflinuxfs3\t\r\n    buildpack: https://github.com/cloudfoundry/nodejs-buildpack.git#v1.7.19\r\n```     \r\n\r\n4. Add the following parameters to your portal instance, for example:\r\n```\r\n- name: testContent-portal #The content will be deployed to the endpoint defined by this key\r\n  parameters:\r\n    content-target: true\r\n    service-key:\r\n      name: content-deploy-key #any valid name can be specified, will be used to create the service key for content deployment\r\n      config: # the service key configs can be defined inline\r\n        content-endpoint: developer\r\n```     \r\n5. If you have environment variables, they now appear under parameters -> config and not parameters -> properties.\r\n\r\n### Full migration from content-deployer to GACD example in SAP Business Application Studio & manually (If using WEB-IDE need to switch the type to `com.sap.application.portal.content`):\r\n\r\nFLP Module - Content Deployer (Before):\r\n\r\n\r\n```\r\n- name: flp\t\r\n  type: com.sap.portal.content\t\r\n  parameters:\t\r\n    memory: 128M\t\r\n    stack: cflinuxfs3\t\r\n    buildpack: https://github.com/cloudfoundry/nodejs-buildpack.git#v1.7.19\t\r\n  properties:\t\r\n    TENANT_HOST_PATTERN: ^(.*)-${space}-testcontent-ar.${default-domain}\t\r\n  requires:\t\r\n  - name: testContent-portal\t\r\n```\r\n\r\nFLP Module GACD (After):\r\n\r\n```\r\n  - name: flp\r\n    type: com.sap.application.content\r\n    parameters:\r\n      config:\r\n        TENANT_HOST_PATTERN: ^(.*)-${space}-testcontent-ar.${default-domain}\r\n    requires:\r\n      - name: testContent-portal #The content will be deployed to the endpoint defined by this key\r\n        parameters:\r\n          content-target: true\r\n          service-key:\r\n            name: content-deploy-key #any valid name can be specified, will be used to create the service key for content deployment\r\n            config: # the service key configs can be defined inline\r\n              content-endpoint: developer\r\n\r\n```\r\n## Description\r\n \r\n# portal-cf-content-deployer\r\n\r\nPortal CF Content Deployer\r\nThis component is used to deploy the Fiori Launchpad portal site configuration (configuration of tiles, groups and catalogs) into the Cloud Foundry Environment.\r\nThis component interacts with the portal service and the approuter, which in turn acts as the web entry server of the Fiori Launchpad portal site.\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [4.17.0]\r\n### Changed\r\n- Changed jszip to version 3.7.0\r\n\r\n## [4.10.0]\r\n### Changed\r\n- Setting Header to lowercase - EUXTEAMNADAV-690\r\n\r\n## [4.9.0]\r\n### Fixed\r\n- ESLINT fixes\r\n\r\n## [4.5.0]\r\n### Added\r\n- Add developer license file\r\n\r\n## [4.5.0]\r\n### Changed\r\n- Updated scenarios names\r\n\r\n## [4.2.0]\r\n### Changed\r\n- Changed jszip to version 3.4.0\r\n- Changed rimraf to version 3.0.2\r\n- Node.js engine supports only ^12.0.0\r\n\r\n### Fixed\r\n- eslint ci support\r\n\r\n## [4.1.0]\r\n### Added\r\n- Added PROVIDER_INFORMATION for future feature\r\n\r\n## [3.32.0]\r\n### Changed\r\n- For external content provider take xsappname from binded uaa or from env variable SAP_CONTENT_PROVIDER_XSAPPNAME\r\n\r\n## [3.30.0]\r\n### Changed\r\n- Add portal service data in external provider scenario\r\n\r\n## [3.29.0]\r\n### Changed\r\n- Changed @sap/xsenv to version 2.2.0\r\n- Changed glob to version 7.1.6\r\n- Changed jszip to version 3.2.2\r\n- Changed rimraf to version 3.0.0\r\n\r\n## [3.28.0]\r\n### Added\r\n- Added Support of federating shell plugins in cFlp\r\n- Added Support of SAP Content Provider \r\n\r\n## [3.27.0]\r\n### Changed\r\n- Changed form-data to version 3.0.0\r\n\r\n## [3.24.0]\r\n### Changed\r\n- Change ID for federation, after redeployment need to add again the apps in CFLP \r\n\r\n## [3.15.0]\r\n#### Added\r\n- Added BlueBoxMetaData in deploy process\r\n\r\n## [3.14.0]\r\n### Changed\r\n- Update to Node10\r\n- Changed axios to version 0.18.1\r\n\r\n## [3.11.0]\r\n### Changed\r\n- Changed axios to version 0.19.0\r\n\r\n## [3.10.0]\r\n#### Changed\r\n- Changed buildpacks to version 1.6.50\r\n- Change @sap/xsenv version to 2.0.0\r\n- Change form-data version to 2.3.3\r\n- Change glob version to 7.1.4\r\n- Change jszip version to 3.2.1\r\n\r\n## [3.6.0]\r\n#### Added\r\n- Added business app support\r\n\r\n## [3.2.0]\r\n#### Added\r\n- Support for one off task\r\n\r\n#### Changed\r\n- Deploy message for deploy service\r\n- Changed rimraf to version 2.6.3\r\n\r\n## [3.0.0]\r\n#### Changed\r\n- Deploy CDM3 compatible site \r\n\r\n## [2.11.0]\r\n#### Added\r\n- Added shrinkwrap\r\n\r\n## [2.8.0]\r\n### Changed\r\n- Support for multiple app host ids\r\n\r\n## [2.6.0] - 2018-08-02\r\n### Fixed\r\n- Show deployment errors in log when deploying from WEB-IDE\r\n \r\n## [2.1.0] - 2018-06-07\r\n### Changed\r\n- Expose DTS/FDC deployment errors to content deployer traces\r\n\r\n## [2.0.0] - 2018-05-31\r\n#### Added\r\n- Initial delivery\r\n"},{"name":"sbf","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/sbf\r\nA Node.js framework to create a service broker in SAP Business Technology Platform (SAP BTP)\r\n\r\nThe Service Broker Framework (SBF) implements the [Open Service Broker API](https://www.openservicebrokerapi.org/).\r\nIt can be used in the Cloud Foundry environment of SAP Cloud Platform or on-premise in SAP HANA XS advanced model.\r\n\r\n**Note**: SBF rejects requests for which the `X-Broker-API-Version` header is not set or its value is outside the supported interval [2.4, 3).\r\n\r\nSBF can generate service credentials for the following authentication mechanisms:\r\n* Basic authentication for technical users (via SBSS)\r\n* OAuth2 authentication with JSON Web Tokens (JWT) (via XSUAA _broker_ plan)\r\n  * Named user via *user_token* flow\r\n  * Technical user via *client_credentials* flow\r\n\r\nAfter adding the necessary configuration, the SBF can be started directly as a service broker.\r\nIf necessary, it can be extended with custom JavaScript code.\r\n\r\nAll the information here is valid also for XS advanced, unless explicitly stated otherwise.\r\nIn the shell commands below replace `cf` with `xs` when working on XS advanced.\r\n\r\n**Table of contents**\r\n\r\n<!-- toc -->\r\n\r\n- [Usage](#usage)\r\n  * [Create a simple service broker](#create-a-simple-service-broker)\r\n    + [Prerequisites](#prerequisites)\r\n    + [Create a Node.js application](#create-a-nodejs-application)\r\n    + [Add the Service Broker Framework](#add-the-service-broker-framework)\r\n    + [Add the start command](#add-the-start-command)\r\n    + [Create the service catalog](#create-the-service-catalog)\r\n    + [Create XSUAA service instance](#create-xsuaa-service-instance)\r\n    + [Create an instance of the Audit Log service](#create-an-instance-of-the-audit-log-service)\r\n    + [Generate a secure broker password](#generate-a-secure-broker-password)\r\n    + [Create an application manifest](#create-an-application-manifest)\r\n    + [Push the broker application](#push-the-broker-application)\r\n    + [Register the service broker](#register-the-service-broker)\r\n    + [Use the service broker](#use-the-service-broker)\r\n  * [Extend the service broker](#extend-the-service-broker)\r\n  * [Asynchronous broker operations](#asynchronous-broker-operations)\r\n  * [Service broker as middleware](#service-broker-as-middleware)\r\n  * [Health HTTP endpoint](#health-http-endpoint)\r\n  * [Custom parameters](#custom-parameters)\r\n    + [Create service with custom parameters](#create-service-with-custom-parameters)\r\n    + [Update service with custom parameters](#update-service-with-custom-parameters)\r\n    + [Bind service with custom parameters](#bind-service-with-custom-parameters)\r\n  * [Credentials providers](#credentials-providers)\r\n    + [SBSS](#sbss)\r\n      - [SBSS on SAP HANA](#sbss-on-sap-hana)\r\n      - [SBSS on PostgreSQL](#sbss-on-postgresql)\r\n    + [XSUAA](#xsuaa)\r\n      - [Creating reuse service instances](#creating-reuse-service-instances)\r\n      - [Updating reuse service instances](#updating-reuse-service-instances)\r\n      - [Authentication with X.509 client certificates](#authentication-with-x509-client-certificates)\r\n        * [XSUAA managed certificates](#xsuaa-managed-certificates)\r\n        * [Externally managed certificates](#externally-managed-certificates)\r\n            * [XSUAA broker instance](#1-xsuaa-broker-instance)\r\n            * [Reuse service instance](#2-reuse-service-instance)\r\n    + [IAS](#ias)\r\n      - [Prerequisites](#prerequisites-1)\r\n      - [Creating an IAS instance](#creating-an-ias-instance)\r\n      - [Binding an IAS instance to the broker application](#binding-an-IAS-instance-to-the-broker-application)\r\n      - [Unsupported Features](#unsupported-features)\r\n  * [Unique service broker](#unique-service-broker)\r\n  * [Secure outgoing connections](#secure-outgoing-connections)\r\n  * [Stateless](#stateless)\r\n  * [Memory usage](#memory-usage)\r\n  * [User Interface](#user-interface)\r\n  * [Security](#security)\r\n    + [HTTPS](#https)\r\n    + [Authentication](#authentication)\r\n    \t- [Basic Authentication](#basic-authentication)\r\n    \t\t* [Service Broker Plain-Text Credentials](#service-broker-credentials)\r\n    \t\t* [Service Broker Hashed Credentials](#service-broker-hashed-credentials)\r\n    \t- [mTLS Authentication](#mtls-authentication)\r\n    \t\t* [Out-of-the-Box mTLS](#out-of-the-box-mtls)\r\n    \t\t* [Customized mTLS](#customized-mtls)\r\n    + [Password rotation](#password-rotation)\r\n  * [Audit logging](#audit-logging)\r\n    + [Auditlog Viewer](#auditlog-viewer)\r\n      - [Running on XSA](#running-on-xsa)\r\n      - [Providing the tenant ID](#providing-the-tenant-id)\r\n- [Reference](#reference)\r\n  * [Class: ServiceBroker](#class-servicebroker)\r\n    + [new ServiceBroker([options])](#new-servicebrokeroptions)\r\n    + [ServiceBroker.start()](#servicebrokerstart)\r\n    + [ServiceBroker.app](#servicebrokerapp)\r\n    + [ServiceBroker.callXsuaa(req, options, callback)](#servicebrokercallxsuaareq-options-callback)\r\n    + [(static) ServiceBroker.createCredentialsProvider(credentials)](#static-servicebrokercreatecredentialsprovidercredentials)\r\n  * [Service Catalog](#service-catalog)\r\n  * [Additional Service Configuration](#additional-service-configuration)\r\n  * [Automatic Credentials Generation](#automatic-credentials-generation)\r\n  * [Credentials Provider Service](#credentials-provider-service)\r\n  * [Business Service Support](#business-service-support)\r\n  * [Hooks](#hooks)\r\n    + [`verifyClientCertificate(params, callback)`](#verifyclientcertificateparams-callback)\r\n    + [`onProvision(params, callback)`](#onprovisionparams-callback)\r\n    + [`onUpdate(params, callback)`](#onupdateparams-callback)\r\n    + [`onDeprovision(params, callback)`](#ondeprovisionparams-callback)\r\n    + [`onLastOperation(params, callback)`](#onlastoperationparams-callback)\r\n    + [`onBindLastOperation(params, callback)`](#onbindlastoperationparams-callback)\r\n    + [`onFetchInstanceParams(params, callback)`](#onfetchinstanceparamsparams-callback)\r\n    + [`onBind(params, callback)`](#onbindparams-callback)\r\n    + [`onUnbind(params, callback)`](#onunbindparams-callback)\r\n    + [`params` details](#params-details)\r\n      - [`req`](#req)\r\n      - [`XSUAA clone info`](#xsuaa-clone-info)\r\n    + [Error handling](#error-handling)\r\n  * [Environment variables](#environment-variables)\r\n  * [`gen-catalog-ids`](#gen-catalog-ids)\r\n  * [`hash-broker-password`](#hash-broker-password)\r\n- [Troubleshooting](#troubleshooting)\r\n  * [Increase the log level](#increase-the-log-level)\r\n  * [@sap/sbf not found](#sapsbf-not-found)\r\n  * [Cannot execute start-broker script](#cannot-execute-start-broker-script)\r\n  * [Create service fails with \"Client already exists\"](#create-service-fails-with-client-already-exists)\r\n\r\n<!-- tocstop -->\r\n\r\n## Usage\r\n\r\nYou can find the examples that demonstrate the usage and consumption of the service broker framework in the [examples](https://github.wdf.sap.corp/xs2/node-sbf-examples) directory.\r\n\r\n### Create a simple service broker\r\nFor simple use cases, you don't need to write any JavaScript code. You can start this package directly by providing it with the necessary configuration.\r\n\r\nThe following sections describe the steps to create a simple service broker application by using this framework.\r\n\r\n#### Prerequisites\r\nYou need the following:\r\n- [Node.js](https://nodejs.org) v10 or later\r\n- Cloud Foundry [CLI](https://github.com/cloudfoundry/cli#downloads)\r\n- Access to a Cloud Foundry installation where you can log in via CLI and push applications\r\n\r\n#### Create a Node.js application\r\nCreate a new directory and run the following command in it:\r\n```sh\r\nnpm init\r\n```\r\nYou are prompted to answer several questions. Upon completion, this command creates a _package.json_ file in the current directory. The presence of this file, tells Cloud Foundry that this is a Node.js application.\r\n\r\n#### Add the Service Broker Framework\r\nDownload the _@sap/sbf_ package and add it to your service broker by executing the following command:\r\n```sh\r\nnpm install @sap/sbf\r\n```\r\n\r\n#### Add the start command\r\nEdit the _package.json_ file and add the `start` command in section `scripts`:\r\n```json\r\n{\r\n  \"scripts\": {\r\n    \"start\": \"start-broker\"\r\n  }\r\n}\r\n```\r\n\r\n#### Specify a required Node.js version\r\nAdd the following property in the _package.json_ file to inform Cloud Foundry that the service broker requires Node.js v10:\r\n```json\r\n  \"engines\": {\r\n    \"node\": \"^10\"\r\n  }\r\n```\r\n\r\n#### Create the service catalog\r\nThe service catalog describes the services offered by this service broker.\r\nIt is defined in a JSON format as described in [Cloud Foundry documentation](https://docs.cloudfoundry.org/services/api.html#catalog-management).\r\n\r\nCreate a file called _catalog.json_ in the current directory and describe in it the service catalog.\r\nFor example:\r\n```json\r\n{\r\n  \"services\": [{\r\n    \"name\": \"my-service\",\r\n    \"description\": \"A simple service\",\r\n    \"bindable\": true,\r\n    \"plans\": [{\r\n      \"name\": \"my-plan\",\r\n      \"description\": \"The only plan\"\r\n    }]\r\n  }]\r\n}\r\n```\r\n\r\nExecute the following command to generate unique IDs for the services and their plans in the _catalog.json_ file:\r\n```sh\r\nnpx gen-catalog-ids\r\n```\r\n\r\n#### Create XSUAA service instance\r\nThe service broker can use different services to generate and store credentials needed later on by applications to access your reusable service. In this example we use the XSUAA service as a credentials provider.\r\n\r\nCreate an XSUAA service instance of plan _broker_:\r\n```sh\r\ncf create-service xsuaa broker xsuaa-broker\r\n```\r\nHere `xsuaa-broker` is the service instance name. You can use an arbitrary name here. Make sure to use the same name in the subsequent commands.\r\n\r\n#### Create an instance of the Audit Log service\r\nThe service broker is configured by default to audit log every operation. It needs information to connect to the Audit log service.\r\n\r\nCreate Audit log service with the following command:\r\n```sh\r\ncf create-service auditlog oauth2 broker-audit\r\n```\r\nYou can also use the standard plan. It was deprecated, however still supported:\r\n```sh\r\ncf create-service auditlog standard broker-audit\r\n```\r\n\r\n#### Generate a secure broker password\r\n```sh\r\nnpx hash-broker-password -b\r\n```\r\nThis command generates a random password and hashes it.\r\n\r\n#### Create an application manifest\r\nYou can deploy the service broker in Cloud Foundry as a regular application.\r\nAn easy way to do that is via an [application manifest](https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html).\r\nCreate a _manifest.yml_ file in the current directory with the following content:\r\n```yaml\r\n---\r\napplications:\r\n  - name: my-broker\r\n    memory: 128M\r\n    services:\r\n      - xsuaa-broker\r\n      - broker-audit\r\n    health-check-type: http\r\n    health-check-http-endpoint: /health\r\n    env:\r\n      SBF_BROKER_CREDENTIALS_HASH: >\r\n        {\r\n          \"broker-user\": \"<broker-password-hash>\"\r\n        }\r\n      SBF_SERVICE_CONFIG: >\r\n        {\r\n          \"my-service\": {\r\n            \"extend_credentials\": {\r\n              \"shared\": {\r\n                \"uri\": \"https://my-service.example.com\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n```\r\n\r\n`my-broker` is the name of the broker application. You can use an arbitrary name.\r\n\r\nSome configurations are not known in advance and they need to be set at the time of deployment via the environment variables.\r\n\r\nOne such configuration is the credentials configuration used to call the service broker.\r\nThis configuration is provided via the environment variable *SBF_BROKER_CREDENTIALS_HASH*.\r\nHere you can use arbitrary credentials.\r\nReplace `<broker-password-hash>` with the hashed credentials from the previous step.\r\nJust make sure to use matching credentials when you register the broker and don't commit these in source control.\r\n\r\nAnother configuration done during the deployment is the service URL. You can provide it via the environment variable *SBF_SERVICE_CONFIG*.<br/> See [Additional Service Configuration](#additional-service-configuration) for details.\r\n\r\n#### Push the broker application\r\nPush the broker application to Cloud Foundry by running the following command:\r\n```sh\r\ncf push\r\n```\r\nBy default, Cloud Foundry uses the name of the application as the host name.<br/> If this name is already taken, you can specify a different host via the `host` property in the manifest. Alternatively you can use a random host with the following command:\r\n```sh\r\ncf push --random-route\r\n```\r\n\r\n#### Register the service broker\r\nFor productive use a service broker is [registered globally](https://docs.cloudfoundry.org/services/managing-service-brokers.html#register-broker) so you can use it throughout Cloud Foundry, but this requires administrative permissions.<br/> During development and testing you can register the service broker only in your space. You do this with the following command:\r\n```sh\r\ncf create-service-broker my-broker-name broker-user <plain-broker-password> <broker-url> --space-scoped\r\n```\r\nReplace here `<plain-broker-password>` with the plaintext password generated by _hash-broker-password_ script.\r\n\r\nYou can get the broker URL via the command `cf apps`.\r\n\r\nHere `my-broker-name` is an arbitrary name used to distinguish this service broker from the rest.\r\nIt is independent from the broker application name.\r\n\r\n#### Use the service broker\r\nNow you can use your service broker within the same space.\r\nFor example, you can now see its services and plans via the `cf marketplace` command.\r\nYou can use the new services as regular [services](https://docs.cloudfoundry.org/devguide/services/) in Cloud Foundry.\r\n\r\nYou can also create a service instance via `cf create-service`.\r\nThen you can bind it to your application via `cf bind-service`.<br/> After that the application gets the URL and the credentials for your service from the environment variable [VCAP_SERVICES](https://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html).\r\nYou can see them via the `cf env` command.\r\n\r\nYou can also create a service key (`cf create-service-key`) and print its content (`cf service-key`) to see the credentials to access the service instance.\r\n\r\nYou can also register the service broker in another space and use it there.\r\nTo do that append a unique suffix to the broker URL:\r\n```sh\r\ncf create-service-broker my-broker-name broker-user broker-password <broker-url>/<unique-suffix> --space-scoped\r\n```\r\nUse a different suffix for each broker registration.\r\n\r\n### Extend the service broker\r\n\r\nSome service brokers need to perform custom actions during standard broker operations.\r\nFor example, special actions might be necessary to provision a new service instance.\r\nTo do that, you can create a custom Node.js application for your service broker.\r\nThis application can use the service broker framework as a normal Node.js package.\r\nThen you can register [custom callbacks](#hooks) to be invoked during each broker operation.\r\n\r\nCreate a Node.js application and add a _@sap/sbf_ dependency as described [above](#create-a-nodejs-application). \r\n\r\nCreate the start script of your broker application, e.g. _start.js_:\r\n```js\r\nconst Broker = require('@sap/sbf');\r\n\r\nlet broker = new Broker({\r\n  hooks: {\r\n    onProvision: (params, callback) => {\r\n      console.log('Provision service %s with plan %s', params.service_id, params.plan_id);\r\n      // custom provision actions\r\n      callback();\r\n    },\r\n    onDeprovision: (params, callback) => {\r\n      console.log('Deprovision service instance %s', params.instance_id);\r\n      // custom deprovision actions\r\n      callback();\r\n    }\r\n  }\r\n});\r\nlet server = broker.start();\r\n```\r\n\r\nEdit the _package.json_ file and set the `start` command to execute your start script:\r\n```json\r\n  \"scripts\": {\r\n    \"start\": \"node start.js\"\r\n  }\r\n```\r\n\r\nSee [examples/node.js/custom-hooks](https://github.wdf.sap.corp/xs2/node-sbf-examples/tree/master/node.js/custom-hooks) for a complete example.\r\n\r\n### Asynchronous broker operations\r\n\r\nBy default, service broker operations like provisioning and deprovisioning are synchronous,\r\ni.e. HTTP response is returned when the operation is complete.\r\nSo that long-running operations are also supported, some platforms, like Cloud Foundry, support also asynchronous operations.\r\nSee [Synchronous and Asynchronous Operations](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#synchronous-and-asynchronous-operations)\r\nin the Open Service Broker API specifications.\r\n\r\n**Note:** currently the XS advanced runtime does not support asynchronous operations.\r\n\r\nTo perform an asynchronous operation you implement several [hooks](#hooks).\r\nFirst, check if your platform supports asynchronous operations.\r\nIf it does, start the operation in the background and return `async: true` in the `reply`:\r\n```js\r\nfunction onProvision(params, callback) {\r\n  if (params.accepts_incomplete !== 'true') {\r\n    let error = new Error('Cannot provision service instance synchronously');\r\n    error.statusCode = 422; // Unprocessable Entity\r\n    return callback(error);\r\n  }\r\n  let operationId;\r\n  // start the operation in the background ...\r\n  // and assign operationId ...\r\n  callback(null, {\r\n    async: true, // indicate that operation was started asynchronously\r\n    operation: operationId // later the same operationId will be passed to onLastOperation\r\n  });\r\n}\r\n```\r\nThe same applies also to `onUpdate` and `onDeprovision` hooks.\r\n\r\nNext, the platform polls in regular intervals for the status of the operation.\r\nEach time it sends the same `operation` string to identify the operation.\r\nThis is useful if multiple asynchronous operations are running in parallel, e.g. multiple service instances are created at the same time.\r\nTo provide the current status of the operation, you implement the [`onLastOperation`](#onlastoperationparams-callback) hook:\r\n```js\r\nfunction onLastOperation(params, callback) {\r\n  let operationId = params.operation; // for which operation to return status\r\n  // get operation status ...\r\n  callback(null, {\r\n    state: 'in progress', // or 'succeeded' or 'failed'\r\n    description: 'progress 50%' // Some user-facing message, what is going on\r\n  });\r\n}\r\n```\r\n\r\n**Note:** With [IAS as a credentials provider](#ias) all requests are proxied to the IAS Broker, which manages the statuses of last operations. If you choose to implement a hook, do it with caution because you could override the original status received from the IAS Broker.  \r\n\r\n**Note:** If several instances of the service broker are running, it is very likely that the start of an asynchronous operation and subsequent polling via [onLastOperation](#onlastoperationparams-callback) will be handled by different broker instances.\r\nSo make sure that all broker instances see the same state.\r\n\r\n### Service broker as middleware\r\nYou can create a custom Node.js application and add the service broker as a middleware. The *Broker* class has property `app` which is an express application.\r\nExample:\r\n```javascript\r\nconst express = require('express');\r\nconst Broker = require('@sap/sbf');\r\n\r\nlet app = express();\r\nlet broker = new Broker();\r\n\r\napp.get('/custom-endpoint', (req, res) => {\r\n  res.send('custom-response');\r\n});\r\napp.use('/broker', broker.app);\r\n\r\napp.listen(process.env.PORT);\r\n```\r\n\r\nThen to register the broker use url: `https://<app-url>/broker`.\r\n\r\n### Health HTTP endpoint\r\n\r\nSBF provides an HTTP endpoint (on path `/health`) whose purpose is to serve as a health check endpoint.\r\nIt does not require authentication and can process HTTP GET requests only.\r\nCurrently, it returns a static response with the status `200` and body `OK`.\r\n\r\nBy default, Cloud Foundry uses `port` as a health check type ([documentation for health check types](https://docs.cloudfoundry.org/devguide/deploy-apps/healthchecks.html#types)). To use the health endpoint provided by SBF:\r\n- Configure the health check type to `http`. In `manifest.yml`, you do this via the property `health-check-type`.\r\n- Configure the path of the health endpoint, by default it's `/`. In `manifest.yml`, you do this via the property `health-check-http-endpoint`.\r\n\r\nSee an example [here](#create-application-manifest).\r\n\r\n### Custom parameters\r\n\r\nCustom parameters can be passed to the service broker in several locations.\r\nThe parameters are passed as a JSON object. It can have arbitrary content and is not interpreted by Cloud Foundry.\r\n\r\n#### Create service with custom parameters\r\n\r\n```sh\r\ncf create-service <service> <plan> <service-instance> -c parameters.json\r\n```\r\nThe content of _parameters.json_ is passed to the service broker and can be accessed in the [`onProvision`](#onprovisionparams-callback) hook via the `params.parameters` argument.\r\n\r\n**Note**: When using XSUAA for authentication, the parameters JSON should contain `xs-security` property to avoid confusion with custom parameters.\r\nSee [XSUAA](#xsuaa) for details.\r\n\r\n#### Update service with custom parameters\r\n\r\n```sh\r\ncf update-service <service-instance> -c parameters.json\r\n```\r\nThe content of _parameters.json_ is passed to the service broker and can be accessed in [`onUpdate`](#onupdateparams-callback) hook via `params.parameters` argument.\r\n\r\n#### Bind service with custom parameters\r\n\r\n```sh\r\ncf bind-service <application> <service-instance> -c parameters.json\r\n```\r\nThe content of _parameters.json_ is passed to the service broker and can be accessed in [`onBind`](#onbindparams-callback) hook via `params.parameters` argument.\r\n\r\nThe same goes for CF service-keys:\r\n```sh\r\ncf create-service-key <service-instance> <key-name> -c parameters.json\r\n```\r\n\r\n**Note**: Binding for reuse service instace when XSUAA is the credentials' provider, allows for specific configuration in order to support certificate credentials, as specified here: [Authentication with X.509 client certificates](#authentication-with-x509-client-certificates)\r\n\r\n### Credentials providers\r\n\r\nBy default, this modul searches for a bound service instance which is responsible for generating credentials for the services offered by a service broker. The framework attempts to find a suitable service with the following properties in the following order:\r\n1. SAP HANA Service Instance (A service with label `hana` and plan `sbss`)\r\n2. PostgreSQL Service Instance (A service with label `postgresql` and tag `sbss`)\r\n3. XSUAA Service Instance (A service with label `xsuaa` and plan `broker`)\r\n4. IAS Service Instance (A service with the label `identity` and plan `application`)\r\n\r\nIf no such service is found in the environment of the broker, an error is returned.\r\n\r\nYou can disable this behavior by [setting the credentials provider service explicitly](#credentials-provider-service). When running on K8S you must always set the credentials provider service explicitly.\r\n\r\n\r\nDepending on the type of the service that provides credentials: SBSS (for SAP HANA and PostgreSQL), XSUAA, or IAS, this module generates credentials and merges them to the `credentials` object received in the response to *bind* operation.\r\nThe same object will appear also in the `credentials` section for the respective service in the `VCAP_SERVICES` environment variable in bound applications. You can find some examples below.\r\n\r\n#### SBSS\r\n\r\nSBSS (Service Broker Security Support) can generate, store, and verify usernames and passwords in a secure way. It is accessed via the SQL API.\r\n\r\n##### SBSS on SAP HANA\r\n\r\nCreate SBSS service instance (example):\r\n```sh\r\ncf create-service hana sbss hana-sbss\r\n```\r\nHere `hana-sbss` is an arbitrary service instance name.\r\n\r\nGenerated credentials example:\r\n```json\r\n{\r\n  \"username\": \"SBSS_00536748842276225491856140796794258250872406624126918117591330539\",\r\n  \"password\": \"Aa_12905484905134285946159829260519429913717511989397057274381675342\",\r\n}\r\n```\r\n\r\n**Note**: Since version 4 of _@sap/sbf_, broker applications that use SBSS on HANA need to explicitly specify\r\na dependency to the _@sap/hdbext_ package.\r\n\r\n##### SBSS on PostgreSQL\r\n\r\nSBSS on PostgreSQL credentials provider requires 2 services to be bound to the service broker application. One is the actual PostrgeSQL service instance and additional user-provided service containing restricted DB user to be used for credentials generation.\r\n\r\nCreate SBSS service instance (example):\r\n```sh\r\ncf create-service postgresql v9.4-dev pg-sbss -t sbss\r\n```\r\nHere `pg-sbss` is an arbitrary service instance name. Notice that the command attaches the tag `sbss` to the service instance. **This tag is mandatory.** It can also be set after the service instance has been created like this:\r\n```sh\r\ncf update-service pg-sbss -t sbss\r\n```\r\n\r\nCreate restricted DB user service (example):\r\n```sh\r\ncf create-user-provided-service sbss-configuration -p \"{\\\"tag\\\":\\\"sbss-config\\\",\\\"restricted-dbuser-name\\\":\\\"<dbuser>\\\",\\\"restricted-dbuser-password\\\":\\\"<dbpassword>\\\"}\"\r\n```\r\nHere you can use arbitrary values for `restricted-dbuser-name` and `restricted-dbuser-password`.\r\nYou should bind the same service instance to SBSS installer application when deploying SBSS on Postgres.\r\nFor details see the SBSS documentation.\r\n\r\n**Note:** You should bind _both_ service instances to the service broker application.\r\n\r\n#### XSUAA\r\n\r\nCreate XSUAA instance of plan _broker_ (example):\r\n```sh\r\ncf create-service xsuaa broker <service-instance> -c xs-security.json\r\n```\r\n\r\n##### Creating reuse service instances\r\n\r\nLater on, you can create instances of the reuse service:\r\n```sh\r\ncf create-service my-service my-plan <service-instance> -c parameters.json\r\n```\r\nHere we assume that service `my-service` with plan `my-plan` is defined in the service catalog of the broker.\r\n\r\n*parameters.json*:\r\n```\r\n{\r\n  \"xs-security\": {\r\n    \"xsappname\": \"my-app\",\r\n    ...\r\n  },\r\n  \"customProperty1\": 1,\r\n  \"customProperty2\": \"2\",\r\n  ...\r\n}\r\n```\r\n\r\n`xs-security` object in *parameters.json* has the same structure as [xs-security.json] file.\r\nIt is sent to XSUAA to create an OAuth client for each instance of the reuse service.\r\n\r\n`xs-security` properties will be overwritten by any additional service configuration defined in the environment variable `SBF_SERVICE_CONFIG`.\r\nSee [Additional Service Configuration](#additional-service-configuration).\r\n\r\nOther top level properties are optional (e.g. `customProperty1` and `customProperty2`) and can be used to pass arbitrary parameters.\r\nThe whole *parameters.json* file is accessible via `params.parameters` in [`onProvision(params, callback)`](#onprovisionparams-callback) hook.\r\n\r\n**Note**: Custom parameters can be defined as root-level properties. If `xs-security` is not defined, the SBF generates a default value, where `xsappname` is set to the service instance id.\r\n\r\n**Note**: During reuse instance create/update, an `authorities` array can be passed to XSUAA. It is recommended to provide `extend_xssecurity` from the [Additional Service Configuration](#additional-service-configuration) and set `authorities` explicitly, to control the scopes exposed for the reuse instance. If no `authorities` section was provided in [Additional service configuration](#additional-service-configuration) (`extend_xssecurity`), by default SBF will pass an empty `authorities` array in create/update requests to XSUAA, and`authorities` provided by consumers are ignored. <br/>\r\nSet the secureUAAScopes option (or environment variable `SBF_SECURE_UAA_SCOPES`) **explicitly** to `false`, in order to pass the authorities array provided by the consumer as is.<br/>\r\n**This behavior and environment variable form an incompatible change from release v6.4.9**.\r\n\r\nGenerated credentials example:\r\n```json\r\n{\r\n  \"uaa\": {\r\n    \"clientid\": \"sb-my-app!b27|reuse-service!b27\",\r\n    \"clientsecret\": \"o7M5UE0S+Q498j9zNmAlAKdYrSo=\",\r\n    \"identityzone\": \"cc-sap\",\r\n    \"tenantid\": \"cc-sap\",\r\n    \"tenantmode\": \"dedicated\",\r\n    \"uaadomain\": \"authentication.sap.hana.ondemand.com\",\r\n    \"url\": \"https://cc-sap.authentication.sap.hana.ondemand.com\",\r\n    \"verificationkey\": \"-----BEGIN PUBLIC KEY----- ... -----END PUBLIC KEY-----\",\r\n    \"xsappname\": \"my-app!b27|reuse-service!b27\"\r\n  }\r\n}\r\n```\r\nAn application can use these credentials to call the UAA to fetch a proper JWT token. Then the application can call the reuse service using this token as authentication.\r\n\r\nAs it's seen the `clientid` and the `xsappname` properties hold some specific information. Here the string \"my-app\" corresponds to the _xsappname_ from the _security.json_ which was provided when creating the service instance which the service broker offers. The string \"reuse-service\" corresponds to the _xsappname_ in the _security.json_ which was used to create the XSUAA service instance with plan broker. More information can be found in the examples.\r\n\r\n##### Updating reuse service instances\r\n\r\nThe instance of the reuse service can be updated as follows:\r\n\r\n```\r\ncf update-service <service-instance> -p <new-plan> -c parameters.json\r\n```\r\n\r\nThe plan of the service instance can be optionally changed with the `-p` option.\r\nUpdating the plan of an instance to a different one from the catalog is possible only if the service is configured with `plan_updateable`.\r\nRefer to [the description of services](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#service-objects) in the catalog in the OSB specification.\r\n\r\nParameters are provided in the same manner as they are during service instance creation -\r\nXSUAA parameters are passed in the `xs-security` property.\r\nService specific parameters are provided on root level.\r\n`xs-security` properties will be overwritten by any additional service configuration defined in `extend_xssecurity` from the [Additional Service Configuration](#additional-service-configuration).\r\nThe whole *parameters.json* file is accessible via `params.parameters` in [`onUpdate(params, callback)`](#onupdateparams-callback) hook.\r\n\r\n**Note**: It is recommended to provide explicitly `xsappname` in `xs-security` when creating a service instance\r\ninstead of letting SBF set it automatically to the service instance id,\r\nbecause `xsappname` needs to be provided in every update operation on XSUAA clones.\r\nIn case the service instance id should be provided in the update operation,\r\nit can be retrieved for an instance with the following command: `cf service <name> --guid`.\r\n\r\n**Note**: If `xsappname` is provided in `xs-security` when creating a service instance,\r\nthe same `xsappname` should be provided in `xs-security` when updating a service instance.\r\nIf `xsappname` is not provided on provision, SBF by default will use the service instance id.\r\nThe same service instance id will also be used during instance update as value for `xsappname`.\r\n\r\n**Note**: If `xs-security` is not provided in *parameters.json* then no update of the XSUAA options will take place. If only `extend_xssecurity` from the [Additional Service Configuration](#additional-service-configuration) needs to be taken into account, `xs-security` can be provided as an empty object.\r\n\r\n**Note**: To enable SBF to use per plan `extend_xssecurity` from the [Additional Service Configuration](#additional-service-configuration),\r\nthe platform requesting the broker should provide a plan id.\r\nThe [OSB specification](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#body-4) does not mark any `plan_id` field as mandatory\r\n(neither on root level, nor in `previous_values`).\r\nSBF first checks the `plan_id` property on root level and if it is not available fallbacks to `previous_values.plan_id`.\r\nIf no plan id information is provided, and there is a `per_plan` configuration in `extend_xssecurity` from the [Additional Service Configuration](#additional-service-configuration), SBF will return an error.\r\nCloud Foundry provides both `plan_id` and `previous_values.plan_id`.\r\nAt the moment Service Catalog on Kubernetes does not support service instance update. Refer to the [CLI documentation](https://github.com/kubernetes-sigs/service-catalog/blob/master/docs/cli.md) for changes.\r\n\r\n##### Authentication with X.509 client certificates\r\n\r\nAuthentication with X.509 client certificates can be enabled with the following configuration provided in the _xs-security_ options:\r\n\r\n```json\r\n{ \r\n  \"xsappname\": \"...\", \r\n  \"oauth2-configuration\": {\r\n    \"credential-types\": [\"x509\"]\r\n  } \r\n}\r\n```\r\n\r\n`credential-types` is an array of allowed credential types, where allowed values are `instance-secret`, `binding-secret`, `x509`. <br><br>\r\nIf `x509` is not the only type in the array AND not the first item (e.g `\"credential-types\": [\"binding-secret\", x509\"]`), in order to enable X.509 authentication, you MUST specify it explicitly during bind (see below). \r\n\r\n**Note**: the old json format is deprecated, but still accepted by XSUAA:\r\n```json\r\n{\r\n  \"xsappname\": \"...\",\r\n  \"oauth2-configuration\": { \"grant-types\": [\"client_x509\"] }\r\n}\r\n```\r\n<br>\r\n\r\nX.509 client certificate authentication can be separately configured on **3 levels**:\r\n\r\n1. XSUAA instance of plan _broker_. This enables X.509 authentication between the **SBF based broker application** and XSUAA. <br>\r\n   * If `x509` is not the default `credential-type` that was configured during the XSUAA instance creation, it must be explicitly requested during bind: <br>\r\n    ```sh\r\n        cf bind-service <broker-application> <xsuaa-instance> -c parameters.json\r\n    ```\r\n    Where the relevant parameters.json format is:\r\n     ```json\r\n        {\r\n           \"credential-type\": \"x509\", \r\n           \"x509\": { \r\n               ...\r\n           } \r\n       }\r\n    ```\r\n   \r\n   * If you have created the instance using the **old json format**, there are no special bind instructions.\r\n\r\n2. Reuse service instance. The required configuration can be provided either via SBF's [additional service configuration](#additional-service-configuration) (property `extend_xssecurity`) or via the parameters during reuse service instance creation (_[parameters.json](#create-service-with-custom-parameters)_, property `xs-security`).\r\n\r\n3. Reuse service instance binding. The required configuration should be provided via the parameters during reuse service instance binding creation:\r\n   * If `x509` is not the default `credential-type` that was configured during the reuse instance creation, it must be explicitly requested during bind: <br> \r\n   ```sh\r\n    cf bind-service <application> <service-instance> -c parameters.json\r\n    ```\r\n   Where the relevant configuration must be wrapped with `xsuaa`. The exact format in which the configuration should be provided is:\r\n    ```json\r\n    {\r\n      \"xsuaa\": { \r\n           \"credential-type\": \"x509\", \r\n           \"x509\": { \r\n               ...\r\n           } \r\n       }\r\n   }\r\n   ```\r\n   The same goes for CF service-keys:\r\n   ```sh\r\n   cf create-service-key <service-instance> <key-name> -c parameters.json\r\n   ```\r\n   **Note**: currently only `credential-type` and `x509` (and `X.509` for [Externally managed certificates](#externally-managed-certificates)) fields are supported under `xsuaa`.\r\n    \r\n   * If you have created the instance using the **old json format**, there are no special bind instructions. <br>\r\n\r\n##### Certificate types:\r\nThe certificate-key pairs that will be used can either be automatically generated by XSUAA (_XSUAA managed certificates_) or\r\nexplicitly provided custom ones (_externally managed certificates_).\r\n\r\n##### XSUAA managed certificates\r\n\r\nThe configuration above is sufficient to use XSUAA managed certificates.\r\nThe credentials of the XSUAA _broker_ instance or/and the credentials of the reuse service instance will contain `certificate` and `key` properties that can be used for X.509 client certificate authentication.\r\n\r\n##### Externally managed certificates\r\n\r\nIn this case, the certificate should be provided in the parameters **during bind** of the XSUAA instnace.\r\n \r\n###### 1. XSUAA broker instance\r\nThe format in which the certificate should be provided is:\r\n\r\n```json\r\n{\r\n  \"credential-type\": \"x509\",\r\n  \"x509\": {\r\n    \"certificate\": \"-----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----\",\r\n    \"ensure-uniqueness\": false,\r\n    \"certificate-pinning\": true\r\n  }\r\n}\r\n```\r\n\r\nIf you have created the instance using the old json format:\r\n```json\r\n{\r\n  \"xsappname\": \"...\",\r\n  \"oauth2-configuration\": { \"grant-types\": [\"client_x509\"] }\r\n}\r\n```\r\nThen pass the following bind parameters:\r\n```json\r\n{\r\n   \"X.509\": \"-----BEGIN CERTIFICATE-----\\nMIID1j ...\"\r\n}\r\n```\r\n\r\nThe resulting credentials will contain a `certificate` property.\r\nThe key should be provided to the broker application, so that it can be used in combination with the `certificate` from the binding. This is done through the `SBF_CLIENT_CERTIFICATE_KEY` environment variable or through the `clientCertificateKey` option. Format should be:\r\n\r\n```\r\nSBF_CLIENT_CERTIFICATE_KEY: -----BEGIN RSA PRIVATE KEY-----\r\nMIIEpA ...\r\n```\r\n\r\nIn order to set SBF_CLIENT_CERTIFICATE_KEY properly, linebreaks needs to be preserved as `\\n`. <br>\r\nThe following 2 options demonstrates how to configure this key in the **broker's `manifest.yaml`**:\r\n\r\n* Use the `pipe` charachter (`|`):\r\n```yaml\r\nSBF_CLIENT_CERTIFICATE_KEY: |\r\n        -----BEGIN RSA PRIVATE KEY-----\r\n        MIIEpAIBAAKCABCD+59YBTqEOvQaYWvc/hg+ixznh59qVBXxJKLH0jw85RSlGp\r\n        ...\r\n        asBsdfNfWvdf1FPf6QV+VWaRdQ6zneimsbkxjIg/cdfpW2HmVyTSnqw==\r\n        -----END RSA PRIVATE KEY-----\r\n```\r\n\r\n* Keep the `\\n` and wrap with quotation marks (\"...\"):\r\n```yaml\r\nSBF_CLIENT_CERTIFICATE_KEY: \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEpAIBA ... VyTSnqw==\\n-----END RSA PRIVATE KEY-----\\n\"\r\n```\r\n\r\nWhen enabled, SBF uses X.509 certificates authentication with precedence over `clientid` and `clientsecret`.\r\n\r\n###### 2. Reuse service instance\r\nThe relevant configuration must be wrapped with `xsuaa`, that is:\r\n```json\r\n{\r\n  \"xsuaa\": {\r\n      \"credential-type\": \"x509\",\r\n      \"x509\": {\r\n        \"certificate\": \"-----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----\",\r\n        \"ensure-uniqueness\": false,\r\n        \"certificate-pinning\": true\r\n      }\r\n  }\r\n}\r\n```\r\n\r\nIf you have created the instance using the old json format:\r\n```json\r\n{\r\n  \"xsuaa\" : {\r\n    \"X.509\": \"-----BEGIN CERTIFICATE-----\\nMIID1j ...\"\r\n  }\r\n}\r\n```\r\n**Note**: currently only `credential-type`, `x509` and `X.509` fields are supported under `xsuaa`.\r\n\r\nThe key should be provided (in the environment, for example) to the consumer application so that it can be used in combination with the `certificate` from the binding.\r\n\r\n#### IAS\r\n\r\nIAS (Identity and Authentication Service) is enabling service owners to maintain a service broker within IAS. \r\nTherefore, SBF with IAS as credentials provider acts as a proxy to the IAS Broker, while still allowing you to extend functionalities by using custom hooks (an ability IAS Broker doesn't support).\r\n\r\n##### Prerequisites\r\n\r\nYou can find the complete IAS Broker documentation [here](https://github.wdf.sap.corp/CPSecurity/Knowledge-Base/tree/master/08_Tutorials/iasbroker), along with prerequisites and procedures. \r\n\r\n##### Creating an IAS instance\r\nCreate an IAS instance of the plan _application_ (example):\r\n```sh\r\ncf create-service identity application <service-instance> -c catalog.json\r\n```\r\nHere, the catalog.json is passed to the IAS instance, as this instance represents a IAS Broker. Therefore, a file that contains the catalog should not be provided to the application (see [Service Catalog](#service-catalog)). \r\n\r\n##### Binding an IAS instance to the broker application\r\nBind an IAS instance (example):\r\n```sh\r\ncf bind-service <broker-app> <service-instance> -c '{\"credential-type\": \"X509_GENERATED\"}'\r\n```\r\nHere we use the IAS ability to generate X.509 client certificates for us. Refer to the [documentation](https://github.wdf.sap.corp/CPSecurity/Knowledge-Base/tree/master/08_Tutorials/iasbroker#service-binding-creation) for alternatives. \r\n\r\n**Note:** communication between the SBF-based broker application and the IAS broker is based on TLS authentication (X.509 client certificates). Make sure you create the binding properly by passing the parameters correctly. \r\nIn addition, arbitrary parameters are not supported in app manifests in cf CLI v6.x (see [here](https://docs.cloudfoundry.org/devguide/services/application-binding.html#bind-with-manifest)), therefore the binding cannot be declared in the manifest.yml file.\r\n\r\n#### Unsupported Features\r\nThe following [Additional Service Configuration](#additional-service-configuration) are not yet supported with IAS as credentials provider:\r\n1.  `extend_credentials`\r\n2. The following properties from the [Business Service Support](#business-service-support) section:\r\n    * `sap.cloud.service`\r\n    * `sap.cloud.service.alias`\r\n    * `saasregistryenabled`\r\n    \r\nYou can still choose to extend the response with these parameters within the [onBind hook](#onbindparams-callback).\r\n\r\n### Unique service broker\r\n\r\nSometimes for testing it is useful to register the same broker multiple times as if it were multiple different brokers.\r\n\r\nThe service broker framework can append a suffix to each service name, ID and plan ID to make them unique.\r\nThere are 3 options to provide this suffix (taken in the following order):\r\n1. append the suffix in the broker URL\r\n```sh\r\ncf create-service-broker broker-name user password https://broker.domain/suffix --space-scoped\r\n```\r\n2. broker's constructor option `catalogSuffix` (requires separate broker deployment)\r\n3. environment variable `SBF_CATALOG_SUFFIX` (requires separate broker deployment)\r\n\r\nIf this suffix is specified, it is used only in the communication with service broker clients like Cloud Controller.\r\nInternally this suffix is removed, so all hook functions will get IDs without the suffix, just like in the service catalog.\r\nStill in the marketplace the services will be visible with the suffix. So you will have to use the suffix in commands like `cf create-service`.\r\n\r\nThe URL suffix should not contain URL special characters (`/`, `?`, etc.).\r\n\r\nAssume you have pushed a service broker application and its URL is https://my-broker.domain.com/.\r\nThen you can register this broker using suffix `abc` in the URL:\r\n```sh\r\ncf create-service-broker my-broker-abc user password https://my-broker.domain.com/abc --space-scoped\r\n```\r\nThis will append the suffix \"abc\" to each service name, ID and plan ID in the catalog in this space.\r\n\r\nYou can also register the same broker with another suffix:\r\n```sh\r\ncf create-service-broker my-broker-xyz user password https://my-broker.domain.com/xyz --space-scoped\r\n```\r\nThis will append the suffix \"xyz\" to each service name, ID and plan ID in the catalog in that space.\r\n\r\n\r\n### Secure outgoing connections\r\n\r\nBy default all outgoing connections from the service broker must be encrypted or the broker will fail to start (this is not the case with SBSS connections).\r\nThis behavior can be changed using the `secureOutgoingConnections` option or the environment variable `SBF_SECURE_OUTGOING_CONNECTIONS`.\r\nIf one of them is set to *false*, unencrypted connections will be allowed.\r\n\r\n**Note:** This option does not apply for connections made by custom code (for example: [`hooks`](#hooks)).\r\n\r\n### Stateless\r\n\r\nA service broker can and should be scaled to run with several instances to achieve high availability and if necessary handle more load.\r\nFor this reason the service broker framework is designed to be stateless.\r\nSo it maintains no state between broker requests and provides no communication among broker instances.\r\nIf custom hooks introduce some state, they should take care to synchronize it across multiple broker instances.\r\n\r\nSpecial care should be taken for asynchronous operations which have inherent state.\r\nIt is very likely that the start of an asynchronous operation and subsequent polling via [onLastOperation](#onlastoperationparams-callback) will be handled by different broker instances.\r\n\r\n### Memory usage\r\n\r\nA non customized SBF application (without custom code) consumes around 52MB of memory in idle state.\r\nDuring light load (less then 10 concurrent requests) the memory consumption is around 110MB (depending on the requests type).\r\nDuring heavy load (100+ concurrent requests) the memory could reach 160MB.\r\nRecommendations:\r\n * For light load scenarios, deploy with memory limit at least 128MB.\r\n * For heavy load scenarios, deploy with memory limit at least 256MB.\r\n\r\nAlso, consider scaling out the broker application with multiple instances.\r\nThis will increase both the throughput and the fault tolerance (against app crashes).\r\n\r\nIf custom code is used (e.g. hooks or middleware), its memory usage should be taken into account when calculating the overall memory consumption.\r\n\r\nIn addition you should limit the Node.js heap size accordingly.\r\nThe general recommendation is to set it to 75% of the application memory limit.\r\nFor example (in manifest.yml):\r\n```\r\n  memory: 128M\r\n  env:\r\n    NODE_OPTIONS: --max-old-space-size=96\r\n```\r\n\r\n### User Interface\r\n\r\nThe service broker framework provides no user interface.\r\nIt implements only the standard [Service Broker API](https://docs.cloudfoundry.org/services/api.html).\r\n\r\nStill if your services provide a web-based management user interface, you can expose it via the `reply.dashboard_url` property in [`onProvision`](#onprovisionparams-callback) hook.\r\n\r\n### Security\r\nTo ensure ISO/SOC compliance, certain security requirements should be fulfilled:\r\n* Minimum password length of 15 characters (fulfilled by passwords generated by SBSS, XSUAA and deploy service)\r\n* Regular password rotation\r\n\r\n#### Password rotation\r\nYou can use this procedure to update the broker password without downtime.\r\n1. Deploy the broker with the new password as a new application\r\n2. Update the broker registration with the new password and URL\r\n```sh\r\ncf update-service-broker <broker-name> <broker-username> <broker-password> <broker-url>\r\n```\r\n3. Delete the old broker application\r\n\r\n#### HTTPS\r\nSince different credentials are transferred between the service broker and its client (Cloud Controller),\r\nthe communication should be encrypted. If the broker is deployed as an application in Cloud Foundry,\r\nno special configuration is required as the platform provides HTTPS support.\r\nIf the broker is deployed outside the platform then HTTPS should be enabled.\r\nThis section describes how to do that.\r\n\r\nCreate a custom start script, for example _broker.js_:\r\n```javascript\r\nconst https = require('https');\r\nconst fs = require('fs');\r\nconst Broker = require('@sap/sbf');\r\n\r\nconst broker = new Broker();\r\n\r\n// this is an example, you should provide your own key and certificate\r\nconst options = {\r\n  key: fs.readFileSync('server-key.pem'),\r\n  cert: fs.readFileSync('server-cert.pem')\r\n};\r\n\r\nhttps.createServer(options, broker.app).listen(process.env.PORT);\r\n```\r\nFor details how to configure HTTPS see [https.createServer](https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener).\r\n\r\nUse your start script in the `start` command in _package.json_\r\n```json\r\n  \"scripts\": {\r\n    \"start\": \"node broker.js\"\r\n  }\r\n```\r\n\r\n### Authentication\r\nSBF supports Basic and mTLS authentication. Below you can find information about how to configure each type of authentication. \r\n#### Basic Authentication\r\nYou can configure SBF to use basic authentication. You need to configure username and password. You set the credentials either in plain text\r\nor hashed format.\r\n##### Service Broker Credentials\r\nCredentials in plain text format used by the Cloud Controller and other clients to call the service broker.\r\nIt is an object where each key is a user name and the value is the respective password. It may contain multiple credentials but at least one is required.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"user1\": \"password1\",\r\n  \"user2\": \"password2\"\r\n}\r\n```\r\n\r\nThese credentials can be provided via the option `brokerCredentials` or the environment variable `SBF_BROKER_CREDENTIALS`.\r\n\r\n**Note:** Service broker credentials must be provided either in plain text or [hashed](#service-broker-hashed-credentials) format.\r\n\r\n##### Service Broker Hashed Credentials\r\nCredentials in hashed format used by the Cloud Controller and other clients to call the service broker.\r\nIt is an object where each key is a user name and the value is the respective password in format `sha256:<salt>:<hash-digest-of-salt+password>`.\r\nHere `<salt>` and `<hash-digest-of-salt+password>` are _base64_-encoded strings.\r\nIt may contain multiple credentials but at least one is required.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"user1\": \"sha256:gVJILqx/97j4aWVQas5RbSUFpWzu7OpaHOt0O29CJOc=:4klnhxFY2YYwzHO7unYu7jc+HuikQLhF7Ebk8tjOJ9c=\",\r\n  \"user2\": \"sha256:0NRIb4Gzx1zFRTTs6qpElujmHuUE1TAIg3NbES219f0=:Gv1NMeIzxlbmOCLvY3q4DMbiDXamqF3xRfFivUdligo=\"\r\n}\r\n```\r\n\r\nThese credentials can be provided via the option `brokerCredentialsHash` or the environment variable `SBF_BROKER_CREDENTIALS_HASH`.\r\n\r\n**Note:** Service broker credentials must be provided either in [plain text](#servic-broker-plain-text-credentials) or hashed format. \r\n\r\n**Note:** To generate such hashed credentials, you can use the [hash-broker-password](#hash-broker-password) script.\r\n#### mTLS Authentication\r\n##### Out-of-the-Box mTLS\r\n***Note:*** Only available on public PaaS.\r\n\r\n\r\nYou can configure SBF broker to verify the Service Manager-issued client certificate each time the Service Manager communicates with the broker. \r\n\r\nFor that, you need to create your broker with the `secureIncomingConnections` option set to true, or set the environment variable `SBF_SECURE_INCOMING_CONNECTIONS` to true.\r\n\r\nYou also have to specify the Service Manager certificate's subject so that its identity can be verified.\r\nIf you don't specify the Service Manager certificate's subject the out-of-box validation is not performed. \r\n\r\n***Note:***\r\nIn such case, the only validation performed is the one that your provided with the implementation of the  [verifyClientCertificate](#verifyclientcertificateparams-callback) hook. \r\n\r\nIf the hook is also not implemented, the validation fails.  \r\n\r\nTo set the Service Manager certificate's subject, create the broker with the `serviceManagerCertificateSubject` parameter or set the `SBF_SERVICE_MANAGER_CERTIFICATE_SUBJECT` environment variable.\r\nYou can retrieve the Service Manager certificate's subject at `https://service-manager.cfapps.{landscape-domain}/v1/info` from the `service_manager_certificate_subject` field, where `{landscape-domain}` is the landscape in which you registered your broker. \r\n\r\nFor example, calling https://service-manager.cfapps.stagingaws.hanavlab.ondemand.com/v1/info, returns \r\n```\r\n{\r\n  \"token_issuer_url\": \"https://svcmgr.authentication.stagingaws.hanavlab.ondemand.com\",\r\n  \"token_basic_auth\": false,\r\n  \"service_manager_tenant_id\": \"svcmgr-cf-us10-staging\",\r\n  \"service_manager_subaccount_id\": \"svcmgr-cf-us10-staging\",\r\n  \"service_manager_certificate_subject\":\"/C=DE/O=SAP SE/OU=SAP Cloud Platform Clients/OU=Staging/OU=svcmgr-cf-us10-staging/L=service-manager/CN=service-manager\"\r\n}\r\n```\r\n\r\n\r\n You can enhance the out-of-box client certificate verification by implementing the [verifyClientCertificate](#verifyclientcertificateparams-callback) hook. \r\n \r\n With this hook, you can perform your own validations.\r\n\r\n##### Customized mTLS\r\nAlternatively, you can register your broker with your own certificate. \r\n\r\nOnce the service broker has been registered, it will send the client certificate you configured each time it communicates with SBF. \r\n\r\nTo enable this verification, make sure to create your broker with  the `secureIncomingConnections` option set to true, or set the `SBF_SECURE_INCOMING_CONNECTIONS` environment variable to true.\r\nYou have to implement  [verifyClientCertificate](#verifyclientcertificateparams-callback) hook to verify the received certificate.\r\n\r\n### Audit logging\r\n\r\n_@sap/sbf_ writes to audit log for every operation except for _catalog_\r\n(an instance of the Audit log service should be bound to the broker).\r\nThe user is taken from the first of the following that contains a valid value:\r\n- `X-Broker-API-Originating-Identity` header (if provided), property `user_id` (in case running on Cloud Foundry).\r\n- `X-Broker-API-Originating-Identity` header (if provided), property `uid` (in case running on Kubernetes).\r\n- `X-Broker-API-Originating-Identity` header (if provided), property `username` (in case running on Kubernetes).\r\n- The authenticated user that calls the service broker.\r\n\r\nIt is recommended to use the same user in hooks that also write audit messages.\r\nWhat the `X-Broker-API-Originating-Identity` header contains (if present) can be found\r\nin the `originating_identity` property of the `params` object passed to the hook.\r\nIf `originating_identity` is not available, then the `user_id` property can be used.\r\nIt contains the authenticated user that called the broker.\r\n\r\n#### Auditlog Viewer\r\n\r\nIn Cloud Foundry environment the [Auditlog Viewer](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/e3baa5f1a0c64c44aac8ab3ea3d1b500.html) is the tool used for retrieving audit logs. The tool shows logs for concrete subaccount. In order for the SBF application to write auditlog messages properly it needs **tenant ID**.\r\n\r\n##### Running on XSA\r\nIn XSA environment the tenant ID can be provided but **it is not mandatory**, since the audit logs are viewed in the *SAP HANA Studio* and not in Auditlog viewer (it is deprecated).\r\n\r\n##### Providing the tenant ID\r\nThe value of the tenant ID can be taken from the *SAP CP Cockpit*. It is listed as `ID` in the Subaccount details for the subaccount that will deploy the SBF application.\r\nThen it can be provided to the SBF application:\r\n- manually by setting [`tenantId`](#new-servicebrokeroptions) in SBF options.\r\n- manually by setting [`SBF_TENANT_ID`](#environment-variables) environment variable.\r\n- automatically if XSUAA is used as credentials provider. It is part of the service instance binding.\r\n\r\nThe priority of the above settings is as follows:\r\n`tenantId` > `SBF_TENANT_ID` > *XSUAA service instance binding: credentials.tenantid*\r\n\r\nPlease be aware that if you are running in Cloud Foundry and Audit logging is ***enabled*** you **must provide *tenant ID*** for the broker application. Otherwise it will fail to start with error: `Audit logging is enabled and \"tenantId\" option or \"SBF_TENANT_ID\" environment variable must be provided for successful writing of audit log messages.`.\r\n\r\n## Reference\r\n\r\n### Class: ServiceBroker\r\nService broker class.\r\n\r\n#### new ServiceBroker([options])\r\nCreates a new ServiceBroker instance.\r\n\r\n* `options` *Object* Optional parameter containing the following properties:\r\n  * [`brokerCredentials`](#service-broker-credentials) *Object* The credentials for calling the service broker, if using the plain text format.\r\n  * [`brokerCredentialsHash`](#service-broker-hashed-credentials) *Object* The credentials for calling the service broker, if using the hashed format.\r\n  * [`catalog`](#service-catalog) *String|Object* This property holds the service catalog. If it is a *String*, it should be a path to a JSON file which contains the catalog information.\r\n  * [`serviceConfig`](#additional-service-configuration) *Object* Provides additional deploy-time configuration to extend the service catalog.\r\n  * [`hooks`](#hooks) *Object* Contains callback functions that can extend or customize service broker operations.\r\n  * [`autoCredentials`](#automatic-credentials-generation) *Boolean* Enable automatic credentials generation.\r\n  * [`credentialsProviderService`](#credentials-provider-service) *String* The name of the credentials provider service instance.\r\n  * [`sbssRestrictedUserService`](#credentials-provider-service) *String* The name of the service containing SBSS restricted user credentials.\r\n  * [`catalogSuffix`](#unique-service-broker) *String* Suffix which will be appended to each service name, ID and plan ID in the service catalog to make them unique across Cloud Foundry.\r\n  * [`enableAuditLog`](#audit-logging) *Boolean* Enable/Disable audit logging. Defaults to **true**.\r\n  * [`tenantId`](#auditlog-viewer) *String* Tenant ID of the broker application. It is used for audit logging. Mandatory if the broker is running on CF and audit logging is enabled.\r\n  * [`secureOutgoingConnections`](#secure-outgoing-connections) *Boolean* If *false*, unencrypted outgoing connections will be allowed. Default value is **true**.\r\n  * [`secureIncomingConnections`](#mtls-authentication) *Boolean* If set to *true*, secure connection is established and the custom hook [verifyClientCertificate](#verifyclientcertificateparams-callback) is called . For the automatic verification of the Service Manager certificate's subject, you also have to configure the `serviceManagerCertificateSubject`. Default value is **false**.\r\n  * [`serviceManagerCertificateSubject`](#out-of-the-box-mtls) *String* If `secureIncomingConnections` is set to true and `serviceManagerCertificateSubject` is configured to the Service Manager certificate's subject in the broker's landscape, the Service Manager [client certificate](#out-of-the-box-mtls) is verified in each public landscape.\r\n  * [`clientCertificateKey`](#authentication-using-x509-client-certificates) *String* the private key corresponding to the client certificate used for authentication with XSUAA.\r\n  * [`secureUAAScopes`](#xsuaa) *Boolean* Relevant for [XSUAA as a credentials provider](#xsuaa). When set to `true` and no `authorities` section was provided in [Additional service configuration](#additional-service-configuration) (`extend_xssecurity`), SBF will pass an empty `authorities` array in create/update requests to XSUAA, regardless of the `authorities` provided by the consumer. Default: `true`.<br/> **Note: This behavior and environment variable form an incompatible change from release v6.4.9**.\r\n  * [`k8sSecretsPath`](#credentials-providers) *String* the path to the mounted volume containing service secrets when running on K8S. Default is '/etc/secrets/sapcp/'.\r\n\r\n#### ServiceBroker.start()\r\nStarts the service broker.\r\n\r\n* _returns_ the [http.Server](https://nodejs.org/api/http.html#http_class_http_server) used by the service broker\r\n\r\nYou can attach handlers for 'error' and 'listening' events like this:\r\n```js\r\nlet broker = new ServiceBroker(options);\r\nlet server = broker.start();\r\nserver.on('error', err => console.error(err));\r\nserver.on('listening', () => console.log('Listening'));\r\n```\r\n\r\n#### ServiceBroker.app\r\nExpress application which you can use as a middleware. See [Service broker as middleware](#service-broker-as-middleware).\r\n\r\n#### ServiceBroker.callXsuaa(req, options, callback)\r\nUtility function to easily make HTTP calls to XSUAA. Authentication to XSUAA is performed internally.\r\n\r\n* `req` *Object* Details can be found [here](#req).\r\n* `options` *Object* Parameter containing the following properties:\r\n  * `baseUrlProperty` *String* Name of a property from the XSUAA credentials to be used as base URL. Defaults to `url`.\r\n  * `path` *String* XSUAA REST API endpoint. This path will be appended to the XSUAA base URL internally.\r\n  * The [options](https://github.com/request/request#requestoptions-callback) described in the documentation of the [request](https://www.npmjs.com/package/request) package.\r\n* `callback` *function(error, res, body)*\r\n  * The [parameters](https://github.com/request/request#requestoptions-callback) described in the documentation of the [request](https://www.npmjs.com/package/request) package.\r\n\r\nExample:\r\n```js\r\nconst Broker = require('@sap/sbf');\r\n\r\nlet broker = new Broker({\r\n  hooks: {\r\n    onProvision: (params, callback) => {\r\n      const encodedInstanceId = encodeURIComponent(params['instance_id']);\r\n      let options = {\r\n        path: `/sap/rest/broker/clones/${encodedInstanceId}`,\r\n        method: 'GET'\r\n      };\r\n      broker.callXsuaa(params.req, options, (err, res, body) => {\r\n        if (err) { return callback(err); }\r\n\r\n        if (res.statusCode !== 200) {\r\n          return callback(new Error(`Status code: ${res.statusCode}. Body: ${body}`));\r\n        }\r\n\r\n        try {\r\n          const cloneInfo = JSON.parse(body);\r\n          console.log('XSUAA clone info:', cloneInfo);\r\n          callback();\r\n        } catch (err) {\r\n          callback(new Error(`Failed to parse UAA response with status code ${res.statusCode} and body ${body}`));\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\nlet server = broker.start();\r\n```\r\n\r\n#### (static) ServiceBroker.createCredentialsProvider(credentials)\r\n\r\nCreates a suitable [credentials provider](#credentials-providers) instance according to the passed `credentials`.\r\nDisabling [automatic credentials generation](#automatic-credentials-generation) and manually creating a credentials provider allows using multiple providers in the same broker and brings more flexibility when extending the broker with custom code.\r\n\r\n**Note**: This approach requires implementing the relevant hooks (`onProvision`, `onBind`, `onUnbind` and `onDeprovision`) and calling the respective method on the created provider.\r\n\r\n* `credentials` *Object* Credentials for a UAA or an SBSS service.\r\n\r\n**Note**: If using SBSS on PostgreSQL, the restricted user properties should be provided in the `restrictedUser` property of `credentials`. Example:\r\n\r\n```js\r\nconst credentials = xsenv.cfServiceCredentials('postgre-service-name');\r\ncredentials.restrictedUser = xsenv.cfServiceCredentials('restricted-user-service-name');\r\nconst provider = Broker.createCredentialsProvider(credentials);\r\n```\r\n\r\n* Returns a [credentials provider](#credentials-providers) instance.\r\n\r\nA credentials provider has the following methods:\r\n\r\n* `provision(req, callback)`\r\nPerforms operations associated with service provisioning.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `callback` *function(error, operationData)* An error is received in the callback in case of operations' failure. `operationData` (optional) *Object* Contains operation data provided by the credentials provider. In case XSUAA is used as a credentials provider `operationData` contains a property `xsuaa` which is an *Object* described [here](#xsuaa-clone-info).\r\n\r\n* `update(req, callback)`\r\nPerforms operations associated with service updating.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `callback` *function(error, operationData)* An error is received in the callback in case of operations' failure. `operationData` (optional) *Object* Contains operation data provided by the credentials provider. In case XSUAA is used as a credentials provider `operationData` contains a property `xsuaa` which is an *Object* described [here](#xsuaa-clone-info).\r\n\r\n* `bind(req, callback)`\r\nPerforms operations associated with service binding.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `callback` *function(error, credentials)* An error is received in the callback in case of operations' failure. `credentials` is an object containing the generated credentials.\r\n\r\n* `unbind(req, callback)`\r\nPerforms operations associated with service unbinding.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `callback` *function(error)* An error is received in the callback in case of operations' failure.\r\n\r\n* `deprovision(req, callback)`\r\nPerforms operations associated with service deprovisioning.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `callback` *function(error)* An error is received in the callback in case of operations' failure.\r\n\r\nIn addition, a UAA credentials provider has the following method:\r\n\r\n* `callXsuaa(req, options, callback)`\r\nSee [this section](#servicebrokercallxsuaareq-options-callback) for more information.\r\n\r\nExample:\r\n\r\n```js\r\nconst Broker = require('@sap/sbf');\r\n\r\n// Applications can have a single provider:\r\n// const provider = Broker.createCredentialsProvider({ /* ... */ })\r\n\r\n// or multiple providers, shown below\r\n\r\nlet broker = new Broker({\r\n  autoCredentials: false,\r\n  hooks: {\r\n    onProvision: (params, callback) => {\r\n      // validate request's params\r\n      const provider = Broker.createCredentialsProvider({ /* ... */ });\r\n      provider.provision(params.req, callback);\r\n    },\r\n    onBind: (params, callback) => {\r\n      const provider = Broker.createCredentialsProvider({ /* ... */ });\r\n      provider.bind(params.req, (err, credentials) => {\r\n        if (err) { return callback(err); }\r\n        credentials.url = '...';\r\n        callback(null, { credentials });\r\n      });\r\n    },\r\n    onUnbind: (params, callback) => {\r\n      const provider = Broker.createCredentialsProvider({ /* ... */ });\r\n      provider.unbind(params.req, callback);\r\n    },\r\n    onDeprovision: (params, callback) => {\r\n      const provider = Broker.createCredentialsProvider({ /* ... */ });\r\n      provider.deprovision(params.req, callback);\r\n    }\r\n  }\r\n});\r\nlet server = broker.start();\r\n```\r\n\r\n**Note**: Provision and bind are operations associated with creating a resource in the service used for credentials generation. If an error has occurred in a hook after the respective provider method has been called (i.e. `provider.provision` and `provider.bind`), it is recommended that hooks also call the opposite method (i.e. `provider.deprovision` and `provider.unbind`) to clean up the already created resources.\r\n\r\n### Service Broker Credentials\r\nCredentials in plain text format used by the Cloud Controller and other clients to call the service broker.\r\nIt is an object where each key is a user name and the value is the respective password. It may contain multiple credentials but at least one is required.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"user1\": \"password1\",\r\n  \"user2\": \"password2\"\r\n}\r\n```\r\n\r\nThese credentials can be provided via the option `brokerCredentials` or the environment variable `SBF_BROKER_CREDENTIALS`.\r\n\r\n**Note:** Service broker credentials must be provided either in plain text or [hashed](#service-broker-hashed-credentials) format. The service broker will not work if credentials in neither or both formats are present.\r\n\r\n### Service Broker Hashed Credentials\r\nCredentials in hashed format used by the Cloud Controller and other clients to call the service broker.\r\nIt is an object where each key is a user name and the value is the respective password in format `sha256:<salt>:<hash-digest-of-salt+password>`.\r\nHere `<salt>` and `<hash-digest-of-salt+password>` are _base64_-encoded strings.\r\nIt may contain multiple credentials but at least one is required.\r\n\r\nExample:\r\n```json\r\n{\r\n  \"user1\": \"sha256:gVJILqx/97j4aWVQas5RbSUFpWzu7OpaHOt0O29CJOc=:4klnhxFY2YYwzHO7unYu7jc+HuikQLhF7Ebk8tjOJ9c=\",\r\n  \"user2\": \"sha256:0NRIb4Gzx1zFRTTs6qpElujmHuUE1TAIg3NbES219f0=:Gv1NMeIzxlbmOCLvY3q4DMbiDXamqF3xRfFivUdligo=\"\r\n}\r\n```\r\n\r\nThese credentials can be provided via the option `brokerCredentialsHash` or the environment variable `SBF_BROKER_CREDENTIALS_HASH`.\r\n\r\n**Note:** Service broker credentials must be provided either in [plain text](#service-broker-credentials) or hashed format. The service broker will not work if credentials in neither or both formats are present.\r\n\r\n**Note:** To generate such hashed credentials, you can use the [hash-broker-password](#hash-broker-password) script.\r\n\r\n### Service Catalog\r\nThis is a JSON object describing all services and plans offered by this service broker. Its structure is described in [Catalog Management](https://docs.cloudfoundry.org/services/api.html#catalog-management) in Cloud Foundry documentation.\r\n\r\nBy default the service catalog is loaded from *./catalog.json* file. Alternatively, the catalog file could be explicitly set via the `SBF_CATALOG_FILE` environment variable.\r\n\r\n**Note:** In case of IAS as a credentials provider, the catalog is provided to the IAS instance. Do not provide the *./catalog.json* file. See more in the [IAS](#ias) section.\r\n\r\n**Note:** Each service name, ID and plan ID in the catalog must be unique across Cloud Foundry.\r\nGUIDs are recommended for service ID and plan ID.\r\nSee [Unique service broker](#unique-service-broker).\r\n\r\n**Warnings for broker authors:**\r\n- Be cautious when removing services and plans from their catalogs, as platform marketplaces might have provisioned service instances of these plans. Consider your deprecation strategy.\r\n- Do not change the IDs of services and plans. This action is likely to be evaluated by a platform marketplace as a removal of one plan and addition of another. See above warning about removal of plans.\r\n\r\n**Note:** For the service image to display correctly in the cockpit it should be encoded as Base64 in the property `metadata.imageUrl` instead of a URL.\r\n\r\nService catalog example:\r\n```json\r\n{\r\n  \"services\": [{\r\n    \"name\": \"not-real-service\",\r\n    \"id\": \"acb56d7c-XXXX-XXXX-XXXX-feb140a59a66\",\r\n    \"description\": \"Just an example service\",\r\n    \"tags\": [\"no-sql\", \"relational\"],\r\n    \"requires\": [\"route_forwarding\"],\r\n    \"bindable\": true,\r\n    \"metadata\": {\r\n      \"provider\": {\r\n        \"name\": \"The name\"\r\n      },\r\n      \"listing\": {\r\n        \"imageUrl\": \"http://example.com/cat.gif\",\r\n        \"blurb\": \"Add a blurb here\",\r\n        \"longDescription\": \"A long time ago, in a galaxy far far away...\"\r\n      },\r\n      \"displayName\": \"The Fake Broker\"\r\n    },\r\n    \"dashboard_client\": {\r\n      \"id\": \"398e2f8e-XXXX-XXXX-XXXX-19a71ecbcf64\",\r\n      \"secret\": \"277cabb0-XXXX-XXXX-XXXX-7822c0a90e5d\",\r\n      \"redirect_uri\": \"http://localhost:1234\"\r\n    },\r\n    \"plan_updateable\": true,\r\n    \"plans\": [{\r\n      \"name\": \"fake-plan-1\",\r\n      \"id\": \"d3031751-XXXX-XXXX-XXXX-a42377d3320e\",\r\n      \"description\": \"Shared fake Server, 5tb persistent disk, 40 max concurrent connections\",\r\n      \"max_storage_tb\": 5,\r\n      \"metadata\": {\r\n        \"costs\":[\r\n            {\r\n               \"amount\":{\r\n                  \"usd\":99.0\r\n               },\r\n               \"unit\":\"MONTHLY\"\r\n            },\r\n            {\r\n               \"amount\":{\r\n                  \"usd\":0.99\r\n               },\r\n               \"unit\":\"1GB of messages over 20GB\"\r\n            }\r\n         ],\r\n        \"bullets\": [\r\n            \"Shared fake server\",\r\n            \"5 TB storage\",\r\n            \"40 concurrent connections\"\r\n        ],\r\n      }\r\n    }, {\r\n      \"name\": \"fake-plan-2\",\r\n      \"id\": \"0f4008b5-XXXX-XXXX-XXXX-dace631cd648\",\r\n      \"description\": \"Shared fake Server, 5tb persistent disk, 40 max concurrent connections. 100 async\",\r\n      \"max_storage_tb\": 5,\r\n      \"metadata\": {\r\n        \"costs\":[\r\n            {\r\n               \"amount\":{\r\n                  \"usd\":199.0\r\n               },\r\n               \"unit\":\"MONTHLY\"\r\n            },\r\n            {\r\n               \"amount\":{\r\n                  \"usd\":0.99\r\n               },\r\n               \"unit\":\"1GB of messages over 20GB\"\r\n            }\r\n         ],\r\n        \"bullets\": [\r\n          \"40 concurrent connections\"\r\n        ]\r\n      }\r\n    }]\r\n  }]\r\n}\r\n```\r\n\r\n### Additional Service Configuration\r\nThis is a JSON object that provides additional deploy-time configuration.\r\nUsually this is used for configurations which are not known in advance like URLs.\r\nEach key in this object should match a service `name` in the catalog. Its value should be an object with the following optional properties:\r\n* `extend_credentials` An object, containing these optional properties.\r\n  * `shared` An object that is merged with the `credentials` object returned by the *bind* operation for this service.\r\n  * `per_plan` An object where each key should match a plan of this service. The value is an object that is merged with the `credentials` object returned by the *bind* operation for this service and plan.\r\n  Overrides any common properties in `shared` object.\r\n* `extend_xssecurity` An object, containing these optional properties.\r\n  * `shared` An object that will overwrite the properties that are sent to the XSUAA on service instance creation. It should have the same structure as [xs-security.json].\r\n  * `per_plan` An object where each key should match a plan of this service. The value is an object that overwrites the properties that are sent to XSUAA when a service instance of this plan is created. This object should have the same structure as [xs-security.json].\r\n  Overrides any common properties in `shared` object.\r\n* `extend_catalog` An object that is merged with the object describing this service in the catalog.\r\n\r\nAll of these properties are optional.\r\n\r\nThis configuration can be provided via the option `serviceConfig` or the environment variable `SBF_SERVICE_CONFIG`.\r\n\r\nExample:\r\n```js\r\n{\r\n  \"service1\": {\r\n    \"extend_credentials\": {\r\n      \"shared\": {\r\n        // This will go into credentials when binding\r\n        // Common properties for all plans\r\n      },\r\n      \"per_plan\": {\r\n        \"plan1\": {\r\n          // Properties specific to this plan\r\n          // This will be merged with \"shared\" and will go to credentials when binding\r\n        },\r\n        \"plan2\": {\r\n          \"uri\": \"http://some.host/plan2\"\r\n        }\r\n      }\r\n    },\r\n    \"extend_xssecurity\": {\r\n      \"shared\": {\r\n        // This object will extend the properties that are sent to the XSUAA on service instance creation\r\n        // Common properties for all plans\r\n        \"authorities\": [\"$XSMASTERAPPNAME.shared_limited_scope\"]\r\n      },\r\n      \"per_plan\": {\r\n        \"plan1\": {\r\n          // This object will extend the properties that are sent to the XSUAA on service instance creation\r\n          // This will overwrite \"shared\" properties\r\n          \"authorities\": [\"$XSMASTERAPPNAME.plan_limited_scope\"]\r\n        }\r\n      }\r\n    },\r\n    \"extend_catalog\": {\r\n      // Will hold free-form JSON that will be merged with the catalog description for service \"service1\"\r\n      \"dashboard_client\": {\r\n        \"id\": \"133423\",\r\n        \"secret\": \"secret\",\r\n        \"redirect_uri\": \"http://some.host/dashboard\"\r\n      },\r\n      \"metadata\": {\r\n        \"documentationUrl\": \"http://vendor.com/docs\",\r\n        \"supportUrl\": \"http://vendor.com/support\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Automatic Credentials Generation\r\nBy default this module will try to find a suitable credentials provider service using the strategies described [here](#credentials-providers).\r\n\r\nThis behavior can be disabled via the `autoCredentials` option so you can take full control of credentials generation in your code.\r\nIn this case the `onBind` hook must be implemented as it is responsible for providing the credentials in the reply.\r\n\r\n**Note:** To ensure consistent security, it is highly recommended that applications and services use security features provided by the platform instead of implementing their own.\r\n\r\n### Credentials Provider Service\r\n\r\nIt is possible to explicitly specify the credentials provider service name when [automatic credentials generation](#automatic-credentials-generation) is enabled. This could be achieved via the `credentialsProviderService` option or via the environment variable `SBF_CREDENTIALS_PROVIDER_SERVICE`.\r\n\r\nThe same applies for providing restricted user credentials (SBSS on PostgreSQL case) where the service name can be provided via the `sbssRestrictedUserService` option or via the environment variable `SBF_SBSS_RESTRICTED_USER_SERVICE`.\r\n\r\nNotice that when running on K8S you should also provide a path to the volume where you have mounted those credentials unless you're relying on the default one. See k8sSecretsPath option [here](#new-servicebrokeroptions).\r\n\r\n### Business Service Support\r\n\r\nSBF will automatically add the following properties to the credentials returned in the response to a bind request:\r\n* `html5-apps-repo` - object containing `app_host_id` property\r\n* `sap.cloud.service`\r\n* `sap.cloud.service.alias`\r\n* `saasregistryenabled`\r\n\r\n**Note:** In case of IAS as a credentials provider, properties `sap.cloud.service`, `sap.cloud.service.alias` and `saasregistryenabled` will not be automatically returned. See more in the [IAS](#ias) section.\r\n\r\n**Note:** In order to provide the `html5-apps-repo` automatically as part of the service credentials, the service broker must be bound to at least one *html5-apps-repo* service instance (*app-host* plan). In the case of K8S the service instance will be looked up by label *html5-apps-repo*.\r\n\r\nIt is also possible to dynamically provide `app_host_id` in the [`onBind`](#onbindparams-callback) hook which will be merged with the `app_host_id`(s) of the already bound *html5-apps-repo* service instance(s) (if any). This can be achieved via the `reply.credentials` object returned by the `onBind` hook:\r\n\r\n```js\r\nfunction onBind(params, callback) {\r\n  // obtain 'app_host_id'\r\n  const appHostId = 'dynamic_app_host_id';\r\n\r\n  const reply = {\r\n    credentials = {\r\n      'html5-apps-repo': {\r\n        'app_host_id': appHostId // Multiple `app_host_id`s can be provided in a comma-separated list without spaces (e.g. 'app-host-1,app-host-2').\r\n      }\r\n    }\r\n  }\r\n\r\n  callback(null, reply);\r\n}\r\n```\r\n\r\n**Note:** It is expected that the `sap.cloud.service`, `sap.cloud.service.alias` and the `saasregistryenabled` properties are defined in the service catalog, under the `sapservice` property of the service metadata, for example:\r\n```json\r\n{\r\n  \"services\": [{\r\n    \"name\": \"fake-service\",\r\n    \"id\": \"acb56d7c-XXXX-XXXX-XXXX-feb140a59a66\",\r\n    \"description\": \"fake service\",\r\n    \"tags\": [\"no-sql\", \"relational\"],\r\n    \"bindable\": true,\r\n    \"metadata\": {\r\n      \"sapservice\": {\r\n        \"sap.cloud.service\": \"com.sap.sbf.testservice\",\r\n        \"sap.cloud.service.alias\": \"country\",\r\n        \"saasregistryenabled\": true\r\n      }\r\n    },\r\n    \"plan_updateable\": true,\r\n    \"plans\": [{\r\n      \"name\": \"fake-plan-1\",\r\n      \"id\": \"d3031751-XXXX-XXXX-XXXX-a42377d3320e\",\r\n      \"description\": \"Shared fake Server, 5tb persistent disk, 40 max concurrent connections\",\r\n      \"max_storage_tb\": 5,\r\n    }]\r\n  }]\r\n}\r\n```\r\n\r\n### Hooks\r\nHooks are custom callback functions that allow you to extend and even replace default service broker functionality.\r\n\r\n\r\n#### `verifyClientCertificate(params, callback)`\r\nThis hook is called on each received request in SBF if the service broker was configured with the `SBF_SECURE_INCOMING_CONNECTIONS` parameter (See [Environment variables](#environment-variables)) set to true.\r\n\r\n* `params` *Object*\r\n  * `clientCertificate` *String*  Service Manager certificate.  \r\n  * `req` *Object* See [here](#req) for more details.\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error Handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to each request.\r\n  \r\n```js\r\n  const broker = new Broker({\r\n    autoCredentials: true,\r\n  \thooks: {\r\n      verifyClientCertificate:(params, callback) =>{\r\n          console.log(params.clientCertificate);\r\n          //do you validations here\r\n          //in case of failed verification pass Forbidden\r\n           callback(new Forbidden());\r\n                              \r\n      }\r\n    }});\r\n  broker.start();\r\n```\r\n\r\nSBF performs no additional processing for this operation.\r\n\r\n**Note:** Implementing `verifyClientCertificate` is not mandatory.\r\n\r\n#### `onProvision(params, callback)`\r\nCalled when the broker receives a *provision* request.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (more information about the structure can be found [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `xsuaa` *Object* (Optional) Details can be found [here](#xsuaa-clone-info).\r\n  * The parameters described in the OSB API specification under [Provisioning, Parameters](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#parameters-1)\r\n  * The fields described in the OSB API specification under [Provisioning, Body](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#body-2)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *provision* request.\r\n    * `async` *Boolean* (Optional) Specifies whether the provision operation is started asynchronously. Default is `false`. It will not be included in the response.\r\n    * `dashboard_url` *String* (Optional) The URL of a web-based management user interface for the service instance; we refer to this as a service dashboard. The URL MUST contain enough information for the dashboard to identify the resource being accessed. **Note:** a broker that wishes to return *dashboard_url* for a service instance MUST return it with the initial response to the provision request, even if the service is provisioned asynchronously.\r\n    * `operation` *String* (Optional) For asynchronous responses, service brokers MAY return an identifier representing the operation. The value of this field SHOULD be provided by the broker client with requests to the Last Operation endpoint in a URL encoded query parameter.\r\n\r\n**Note:** The default SBF operation is executed _before_ this hook is called. For example, if XSUAA is used, the OAuth client clone is already created.\r\n\r\n#### `onUpdate(params, callback)`\r\nCalled when the broker receives an *update* request.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (more information about the structure can be found [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * `xsuaa` *Object* (Optional) Details can be found [here](#xsuaa-clone-info).\r\n  * The parameters described in the OSB API specification under [Updating a Service Instance, Parameters](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#parameters-2)\r\n  * The fields described in the OSB API specification under [Updating a Service Instance, Body](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#body-4)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *update* request.\r\n    * `async` *Boolean* (Optional) Specifies whether the update operation is started asynchronously. Default is `false`. It will not be included in the response.\r\n    * `operation` *String* (Optional) For asynchronous responses, service brokers MAY return an identifier representing the operation. The value of this field SHOULD be provided by the broker client with requests to the Last Operation endpoint in a URL encoded query parameter.\r\n\r\n**Note:** The default SBF operation is executed _before_ this hook is called. For example, if XSUAA is used, the OAuth client clone is already updated.\r\n\r\n#### `onDeprovision(params, callback)`\r\nCalled when the broker receives a *deprovision* request.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (more information about the structure can be found [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * The parameters described in the OSB API specification under [Deprovisioning, Parameters](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#parameters-4)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *deprovision* request.\r\n    * `async` *Boolean* (Optional) Specifies whether the deprovision operation is started asynchronously. Default is `false`. It will not be included in the response.\r\n    * `operation` *String* (Optional) For asynchronous responses, service brokers MAY return an identifier representing the operation. The value of this field SHOULD be provided by the broker client with requests to the Last Operation endpoint in a URL encoded query parameter.\r\n\r\n**Note:** The default SBF operation is executed right _after_ this hook and before the HTTP response is returned.\r\nFor example, if XSUAA is used, the OAuth client clone will be deleted right after this hook, even in case of an async operation (`reply.async == true`).\r\n\r\n**Note:** This hook should be repeatable (idempotent), i.e. if it completes successfully once, any subsequent invocations with the same parameters should be successful too. This is necessary in case the default SBF operation fails. Then it should be possible to repeat the whole operation to complete the cleanup. Also the platform may execute _deprovision_ after a failed _provision_ operation as part of [orphan mitigation](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#orphans). So `onDeprovision` hook may be called even when the service instance and associated resources do not exist.\r\n\r\n#### `onLastOperation(params, callback)`\r\nCalled when the broker receives a *last operation* request for an **instance**.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (more information about the structure can be found [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * The parameters described in the OSB API specification under [Polling Last Operation, Parameters](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#parameters)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *last operation* request.\r\n    * `state` *String* Valid values are \"in progress\", \"succeeded\", and \"failed\". While \"state\": \"in progress\", the platform SHOULD continue polling. A response with \"state\": \"succeeded\" or \"state\": \"failed\" MUST cause the platform to cease polling.\r\n    * `description` *String* (Optional) A user-facing message displayed to the platform API client. Can be used to tell the user details about the status of the operation.\r\n\r\n\r\nSBF performs no additional processing for this operation, except for [IAS as credentials provider](#ias), where the request is proxied to the IAS Broker.\r\n\r\n**Note:** Implementing `onLastOperation` is mandatory, if any other instance operation hook returns `reply.async = true` (apart from IAS flow). If this hook is not implemented, SBF returns status 501 (Not Implemented). If IAS is the credentials provider, the hook is optional.\r\n\r\nSee [Asynchronous broker operations](#asynchronous-broker-operations) for more information.\r\n\r\n#### `onBindLastOperation(params, callback)`\r\nCalled when the broker receives a *last operation* request for **binding**.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `binding_id` *String* Service binding ID\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (You can find more information about the structure [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* You can find the details [here](#req).\r\n  * The parameters described in the OSB API specification under [Polling Last Operation, Parameters](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#parameters)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *last operation* request.\r\n    * `state` *String* Valid values are \"in progress\", \"succeeded\", and \"failed\". While \"state\": \"in progress\", the platform SHOULD continue polling. A response with \"state\": \"succeeded\" or \"state\": \"failed\" MUST cause the platform to cease polling.\r\n    * `description` *String* (Optional) A user-facing message displayed to the platform API client. Can be used to tell the user details about the status of the operation.\r\n\r\nSBF performs no additional processing for this operation, except for [IAS as credentials provider](#ias), where the request is proxied to the IAS Broker.\r\n\r\n**Note:** Implementing `onBindLastOperation` is mandatory, if any other binding operation hook returns `reply.async = true` (apart from IAS flow). If this hook is not implemented, SBF returns status 501 (Not Implemented). If IAS is the credentials provider, the hook is optional.\r\n\r\nSee [Asynchronous broker operations](#asynchronous-broker-operations) for more information.\r\n\r\n#### `onFetchInstanceParams(params, callback)`\r\nCalled when the broker receives an *instance parameters* request.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (you can find more information about the structure [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* See [here](#req) for more details.\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *instance parameters* request.\r\n\r\nSBF performs no additional processing for this operation.\r\n\r\n**Note:** Make sure to set the `instances_retrievable` property in the broker catalog to `true`.\r\n\r\n**Note:** Implementing `onFetchInstanceParams` is not mandatory, but we recommend that you implement it together with the [onProvision hook](#onprovisionparams-callback),which is used to store parameters (SBF doesn't handle parameters' storage). If this hook isn't implemented, SBF returns status 501 (Not Implemented).\r\n\r\n**Note:** The OSB specification defines the expected response body for this request. Please review it [here](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#fetching-a-service-instance). For instance, the response body expects a `parameters` object, which is what CF is looking for as an OSB platform.\r\n\r\n#### `onBind(params, callback)`\r\nCalled when the broker receives a *bind* request.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `binding_id` *String* Service binding ID. It will be used for future unbind requests, so the broker will use it to correlate the resource it creates.\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (more information about the structure can be found [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `generatedCredentials` *Object* (Optional) The credentials object generated by the [credentials provider](#credentials-providers). It is not provided if the `autoCredentials` option is `false`.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * The fields described in the OSB API specification under [Binding, Body](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#body-6)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *bind* request.\r\n    * `credentials` *Object* A free-form object of credentials that can be used by applications or users to access the service.\r\n\r\nThe `credentials` object in the response will be produced by merging:\r\n1. `reply.credentials` returned from `onBind`\r\n2. Credentials generated by the [Credentials Provider Service](#credentials-provider-service), unless [disabled](#automatic-credentials-generation)\r\n3. The properties described in the [Business Service Support](#business-service-support) section\r\n4. Binding properties for the given service and plan from [Additional Service Configuration](#additional-service-configuration)\r\n\r\nHere each object overwrites common properties in the next one.\r\n\r\n**Note:** The default SBF operation is executed _before_ this hook is called. For example, if SBSS is used, the binding credentials are already created.\r\n\r\n**Note:** Implementing `onBind` hook is mandatory, if `autoCredentials` option is `false`.\r\nIn this case `onBind` must provide the necessary credentials in `reply.credentials`.\r\n\r\n#### `onUnbind(params, callback)`\r\nCalled when the broker receives an *unbind* request.\r\n\r\n* `params` *Object*\r\n  * `instance_id` *String* Service instance ID\r\n  * `binding_id` *String* Service binding ID. It will be used for future unbind requests, so the broker will use it to correlate the resource it creates.\r\n  * `originating_identity` *Object* Only available if the `X-Broker-API-Originating-Identity` header is provided in the request.\r\n  Contains the parsed data from the header (more information about the structure can be found [here](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/profile.md#originating-identity-header)).\r\n  * `user_id` *String* The authenticated user that called the broker.\r\n  * `req` *Object* Details can be found [here](#req).\r\n  * The parameters described in the OSB API specification under [Unbinding, Parameters](https://github.com/openservicebrokerapi/servicebroker/blob/v2.13/spec.md#parameters-3)\r\n* `callback` *function(error, reply)*\r\n  * `error` *Object* See [Error handling](#error-handling).\r\n  * `reply` *Object* An object returned as a response to the *unbind* request.\r\n\r\n**Note:** The default SBF operation is executed right _after_ this hook and before the HTTP response is returned.\r\nFor example, if SBSS is used, the binding credentials will be deleted right after this hook.\r\n\r\n**Note:** This hook should be repeatable (idempotent), i.e. if it completes successfully once, any subsequent invocations with the same parameters should be successful too. This is necessary in case the default SBF operation fails. Then it should be possible to repeat the whole operation to complete the cleanup. Also the platform may execute _unbind_ after a failed _bind_ operation as part of [orphan mitigation](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#orphans). So `onUnbind` hook may be called even when the service binding and associated resources do not exist.\r\n\r\n#### `params` details\r\n\r\n##### `req`\r\n\r\nAn [IncommingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage) instance with additional properties:\r\n- `loggingContext` - attached to the request object by the _@sap/logging_ library, provides means of getting loggers and tracers. The `correlationId` property provided by the `loggingContext` can be used to correlate log entries from different components involved in a broker operation. More information is available in the documentation of the _@sap/logging_ package.\r\n\r\n##### `XSUAA clone info`\r\n\r\nAn *Object*, currently only provided in case XSUAA is used as a credentials provider. It contains OAuth client clone information. Available properties:\r\n- `tenantId` *String*\r\n\r\n#### Error handling\r\nThe `callback` function passed to each hook takes an `error` as its first argument.\r\nThis is the standard conventions for callback functions in Node.js.\r\n\r\n**Note:** The hook must call the `callback` _exactly_ once.\r\n\r\nIn case of success, the hook should pass `null` or `undefined` as `error` argument to the `callback`.\r\n\r\nIn case of error, the hook should pass an [Error](https://nodejs.org/api/errors.html#errors_class_error) object as `error` argument to the `callback`. In this case any subsequent arguments will be ignored.\r\n\r\nIf the `error.statusCode` is set, it will be returned as HTTP status code in the response.\r\nIn this case the error message will be sent to the broker client.\r\nOtherwise the broker will return HTTP status code 500 with a generic error message.\r\n\r\n### Environment variables\r\n\r\n- `SBF_CATALOG_FILE` - path to a catalog file, the default is *./catalog.json*, see [Service Catalog](#service-catalog)\r\n- `SBF_CATALOG_SUFFIX` - suffix to append to all service names, service IDs and plan IDs in the catalog, see [Unique service broker](#unique-service-broker)\r\n- `SBF_BROKER_CREDENTIALS` - JSON object with credentials in plain text format for calling the service broker, see [Service Broker Credentials](#service-broker-credentials)\r\n- `SBF_CLIENT_CERTIFICATE_KEY` - a string that represents the private key corresponding to the client certificate used for authentication with XSUAA, see [Authentication using X.509 client certificates](#authentication-using-x509-client-certificates)\r\n- `SBF_BROKER_CREDENTIALS_HASH` - JSON object with credentials in hashed format for calling the service broker, see [Service Broker Hashed Credentials](#service-broker-hashed-credentials)\r\n- `SBF_SERVICE_CONFIG` - provides additional deploy-time configuration, see [Additional service configuration](#additional-service-configuration)\r\n- `SBF_CREDENTIALS_PROVIDER_SERVICE` - the name of the credentials provider service instance, see [Credentials provider service](#credentials-provider-service)\r\n- `SBF_SBSS_RESTRICTED_USER_SERVICE` - the name of the service containing restricted user credentials (SBSS on PostgreSQL case), see [Credentials provider service](#credentials-provider-service)\r\n- `SBF_UAA_TIMEOUT` - timeout in milliseconds for requests to XSUAA, default is 20 seconds.\r\n- `SBF_SECURE_OUTGOING_CONNECTIONS` - if set to false `false`, unencrypted outgoing connections will be allowed, see [Secure outgoing connections](#secure-outgoing-connections)\r\n- `SBF_SECURE_INCOMING_CONNECTIONS` - if set to true `true`, a [secured connection](#mtls-authentication) is established and the custom hook [verifyClientCertificate](#verifyclientcertificateparams-callback) is called . For the automatic verification of the Service Manager certificate, you also have to configure the `SBF_SERVICE_MANAGER_CERTIFICATE_SUBJECT` environment variable.\r\n- `SBF_SERVICE_MANAGER_CERTIFICATE_SUBJECT` - the Service Manager client certificate's subject. This variable has to be configured so that the Service Manager [client certificate](#out-of-the-box-mtls) is verified. Also, set `SBF_SECURE_INCOMING_CONNECTIONS` to true. You can retrieve the Service Manager certificate's subject at `https://service-manager.cfapps.<landscape domain>/v1/info` from the `service_manager_certificate_subject` field. The URL changes depending on your landscape domains. For example, https://service-manager.cfapps.eu10.hana.ondemand.com/v1/info.\r\n- `SBF_ENABLE_AUDITLOG` - if `false` disable audit logging, otherwise it is enabled.\r\n- `SBF_TENANT_ID` - Mandatory if the broker application is running on Cloud Foundry and audit logging is *enabled*.\r\n- `SBF_SECURE_UAA_SCOPES` - Relevant for [XSUAA as a credentials provider](#xsuaa). When set to `true` and no `authorities` section was provided in [Additional service configuration](#additional-service-configuration) (`extend_xssecurity`), SBF will pass an empty `authorities` array in create/update requests to XSUAA, regardless of the `authorities` provided by the consumer. Default: `true`.<br/> **Note: This behavior and environment variable form an incompatible change from release v6.4.9**.\r\n- `PORT` - the port on which the service broker will listen for requests, default is 8080.\r\n\r\n### `gen-catalog-ids`\r\n\r\nEach service object and each service plan object has a mandatory _id_ field. Its value must be a non-empty string, globally unique within the platform marketplace. Using a GUID is recommended.\r\n\r\nThe _@sap/sbf_ package provides the `gen-catalog-ids` script which generates such GUIDs for you.\r\n\r\n```sh\r\nnpx gen-catalog-ids [<path-to-catalog.json>]\r\n```\r\nHere the file path argument is optional. If not provided, the command will use _catalog.json_ in the current directory.\r\nThis command will insert a new GUID as _id_ property for each service and each plan in the catalog.\r\nIt will not change any existing IDs - only the id properties with empty string for their value and the ones not provided at all.\r\nYou can run it after creating a new catalog or after adding more services or plans.\r\n\r\n**Note:** In the command above you may need to replace the forward slashes with backslashes, depending on your platform.\r\n\r\n### `hash-broker-password`\r\n\r\nIf you use service broker credentials in [hashed format](#service-broker-hashed-credentials), you will need to hash your plain text password. For this purpose the _@sap/sbf_ package provides the `hash-broker-passsword` script which does that for you.\r\n\r\nIf you want to use some password of your own, run:\r\n\r\n```sh\r\nnpx hash-broker-password\r\n```\r\n\r\nYou will be prompted to enter the plaintext password and will be given its hash in format `sha256:<salt>:<hash-digest-of-salt+password>`.\r\nHere `<salt>` is also generated by the script.\r\n\r\nOtherwise you can use the command in _batch_ mode:\r\n\r\n```sh\r\nnpx hash-broker-password -b\r\n```\r\n\r\nThat will generate a random 32-character plaintext password, random 32-byte salt and print them along with the hash.\r\nTake note of the generated password and hash as they will not be persisted.\r\n\r\nWhen you have your service broker hashed credentials generated, you should:\r\n* provide hashed credentials via the option `brokerCredentialsHash` or the environment variable `SBF_BROKER_CREDENTIALS_HASH`\r\n* provide the user and plaintext password when [registering the service broker](#register-the-service-broker).\r\n\r\n## Troubleshooting\r\n\r\n### Increase the log level\r\n\r\nThe service broker framework uses _@sap/logging_ package so all of its features are available to control logging.\r\nFor example to set all logging and tracing to finest level set `XS_APP_LOG_LEVEL` environment variable to `debug`.\r\nSee _@sap/logging_ documentation for details.\r\n\r\nSome of the libraries used by this package employ other tracing mechanisms. For example many use the popular [debug](https://www.npmjs.com/package/debug) package. This means that by setting `DEBUG` environment variable, you can enable additional traces. Set it to `*` to enable all of them, but be careful as the output may be overwhelming.\r\nIn addition, internal Node.js traces can be enabled via `NODE_DEBUG` environment variable.\r\n\r\n**Warning:** Enabling some of these options may trace security sensitive data, so use with caution.\r\n\r\n### @sap/sbf not found\r\n\r\nIf you get the following error during deployment\r\n```\r\n       npm ERR! 404 Not found : @sap/sbf\r\n       npm ERR! 404\r\n       npm ERR! 404  '@sap/sbf' is not in the npm registry.\r\n```\r\nRun `npm install` locally and make sure `node_modules` is not in *.cfignore* file.\r\nThen push again your broker application.\r\n\r\nIf you get that error when you run `npm install` locally, make sure to configure the proper npm registry as described on the wiki of this project.\r\n\r\n### Cannot execute start-broker script\r\n\r\nThe service broker may crash during startup on XS advanced with one of the following errors in the log:\r\n```\r\nexec: start-broker: not found\r\n```\r\n```\r\nstart-broker: cannot execute: Permission denied\r\n```\r\n\r\nThere are two possible solutions:\r\n* Set environment variable `ALWAYS_INSTALL` to `true` for the broker application\r\n* Change the `start` script in _package.json_ like this:\r\n```\r\n\"start\": \"node node_modules/@sap/sbf/sbf.js\"\r\n```\r\n\r\n### Create service fails with \"Client already exists\"\r\n\r\nIf `create-service` operation fails with error \"Client already exists\", you are probably attempting to create a second service instance with the same *xsappname* in the parameters. Note that *xsappname* should be different for each service instance.\r\n\r\n[xs-security.json]: https://help.sap.com/viewer/4505d0bdaf4948449b7f7379d24d0f0d/2.0.03/en-US/6d3ed64092f748cbac691abc5fe52985.html\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThere are _incompatible changes_ between _major_ versions.\r\nSee the [migration guide](migration.md) how to adapt.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n<a name=\"6.4.10\"></a>\r\n## 6.4.10 - 2022-06-18\r\n\r\n### Fixed\r\n- dependencies version update.\r\n\r\n<a name=\"6.4.9\"></a>\r\n## 6.4.9 - 2022-06-02\r\n\r\n### Changed\r\n- Relevant for XSUAA scenarios: `authorities` provided by the consumer are ignored and overriden by `extend_xssecurity`. If `extend_xssecurity` is not provided, SBF will pass an empty `authorities` array. <br/>Set the new `secureUAAScopes` option (or environment variable `SBF_SECURE_UAA_SCOPES`) **explicitly** to `false`, in order to pass the authorities array provided by the consumer as is. **This behavior and environment variable form an incompatible change**.\r\n\r\n### Fixed\r\n- Fixed leaking of headers in logged messages in XSUAA scenarios.\r\n- Fixed support for clientx509enabled for K8S apps, where XSUAA credentials are mounted as files.\r\n\r\n<a name=\"6.4.8\"></a>\r\n## 6.4.8 - 2022-05-24\r\n\r\n### Fixed\r\n- support error response with different struct   \r\n \r\n<a name=\"6.4.7\"></a>\r\n## 6.4.7 - 2022-05-18\r\n\r\n### Changed\r\n- Switch from deprecated Request package to Axios Package\r\n\r\n### Removed\r\n- Remove npm-shrinkwrap.json\r\n\r\n<a name=\"6.4.6\"></a>\r\n## 6.4.6 - 2022-04-17\r\n\r\n### Fixed\r\n- Updates to dependency versions \r\n\r\n<a name=\"6.4.5\"></a>\r\n## 6.4.5 - 2022-03-21\r\n\r\n### Added\r\n- Updates to dependency versions \r\n\r\n<a name=\"6.4.4\"></a>\r\n## 6.4.4 - 2022-01-24\r\n\r\n### Added\r\n- Updates to dependency versions \r\n\r\n<a name=\"6.4.3\"></a>\r\n## 6.4.3 - 2022-01-19\r\n\r\n### Added\r\n- Updates to dependency versions \r\n\r\n<a name=\"6.4.2\"></a>\r\n## 6.4.2 - 2021-11-25\r\n\r\n### Added\r\n- Get certurl field from xsuaa binding \r\n\r\n<a name=\"6.4.1\"></a>\r\n## 6.4.1 - 2021-11-10\r\n\r\n### Added\r\n- mTls fixes\r\n\r\n<a name=\"6.4.1\"></a>\r\n## 6.4.0 - 2021-09-26\r\n\r\n### Added\r\n- Out-of-the-Box mTLS\r\n- Customized mTLS \r\n\r\n\r\n<a name=\"6.3.1\"></a>\r\n## 6.3.1 - 2021-08-22\r\n\r\n### Added\r\n- fix for auditlog oauth2 plan\r\n\r\n<a name=\"6.3.0\"></a>\r\n## 6.3.0 - 2021-08-22\r\n\r\n### Added\r\n- Updating audit-logging to support oauth2 plan\r\n- Adapt to XSUAA's new mtls (x.509) security descriptor\r\n\r\n<a name=\"6.2.13\"></a>\r\n## 6.2.13 - 2021-08-13\r\n\r\n### Added\r\n- fix ambiguity error when SBF_CREDENTIALS_PROVIDER_SERVICE is set\r\n- allow brokers to be configured with tls and no basic authentication\r\n\r\n<a name=\"6.2.12\"></a>\r\n## 6.2.12 - 2021-07-25\r\n\r\n### Added\r\n- Allow specification of x509 parameters when binding\r\n\r\n<a name=\"6.2.11\"></a>\r\n## 6.2.11 - 2021-06-22\r\n\r\n### Added\r\n- fix to instance parameters endpoint\r\n\r\n<a name=\"6.2.10\"></a>\r\n## 6.2.10 - 2021-05-05\r\n\r\n### Added\r\n- fetch instance parameters endpoint and hook\r\n\r\n<a name=\"6.2.9\"></a>\r\n## 6.2.9 - 2021-03-16\r\n\r\n### Added\r\n- update prepareRelease command\r\n\r\n<a name=\"6.2.8\"></a>\r\n## 6.2.8 - 2021-03-15\r\n\r\n### Added\r\n- Add --production flag to npm shrinkwrap \r\n\r\n<a name=\"6.2.7\"></a>\r\n## 6.2.7 - 2021-03-04\r\n\r\n### Added\r\n- Updates to dependency versions\r\n\r\n<a name=\"6.2.6\"></a>\r\n## 6.2.6 - 2021-03-02\r\n\r\n### Added\r\n- Updates to dependency versions\r\n\r\n<a name=\"6.2.5\"></a>\r\n## 6.2.5 - 2021-02-03\r\n\r\n### Added\r\n- Updates to dependency versions\r\n\r\n<a name=\"6.2.4\"></a>\r\n## 6.2.4 - 2021-01-11\r\n\r\n### Added\r\n- Support Node v14\r\n\r\n<a name=\"6.2.3\"></a>\r\n## 6.2.3 - 2020-12-16\r\n\r\n### Added\r\n- Support IAS authentication in node-sbf\r\n\r\n<a name=\"6.2.2\"></a>\r\n## 6.2.2 - 2020-09-24\r\n\r\n### Fixed\r\n- Updates to dependency versions\r\n\r\n<a name=\"6.2.1\"></a>\r\n## 6.2.1 - 2020-07-30\r\n\r\n### Fixed\r\n- Updates to dependency versions\r\n\r\n<a name=\"6.2.0\"></a>\r\n## 6.2.0 - 2020-04-30\r\n\r\n### Added\r\n- Support for XSUAA clone update\r\n- Expose `tenantId` in `onProvision` and `onUpdate` hooks via the `xsuaa` property\r\n- `callXsuaa` - add `baseUrlProperty` option to specify base URL\r\n\r\n### Fixed\r\n- Properly filter `access_token` information in debug log\r\n\r\n<a name=\"6.1.0\"></a>\r\n## 6.1.0 - 2020-03-12\r\n\r\n### Added\r\n- Built-in health HTTP endpoint\r\n\r\n<a name=\"6.0.0\"></a>\r\n## 6.0.0 - 2020-01-17\r\n\r\n### Added\r\n- Support authentication using X.509 client certificates (externally managed)\r\n- Support running on K8S\r\n\r\n### Removed\r\n- Support for Node.js 6.x\r\n\r\n### Fixed\r\n- User friendlier error message for XSUAA timeouts\r\n- Removed deprecated XSUAA endpoint from tests\r\n- Updated @sap/xsenv to v2.2.0\r\n\r\n<a name=\"5.1.1\"></a>\r\n## 5.1.1 - 2019-07-11\r\n\r\n### Fixed\r\n- Updated `lodash` to 4.17.13\r\n\r\n<a name=\"5.1.0\"></a>\r\n## 5.1.0 - 2019-06-14\r\n\r\n### Added\r\n- Support authentication using X.509 client certificates (certificates managed by XSUAA).\r\n\r\n### Fixed\r\n- Updated dependencies.\r\n\r\n<a name=\"5.0.0\"></a>\r\n## 5.0.0 - 2019-05-21\r\n\r\n### Changed\r\n- Setting the provider tenant (see *Added* section) is mandatory when a broker is running on Cloud Foundry and audit logging is enabled.\r\nThe value is automatically detected (no error will be thrown if not explicitly provided) in case `autoCredentials` is `true` and the broker is using XSUAA as credentials provider.\r\n\r\n### Fixed\r\n- Duplicate `app_host_id`s are removed in a response to a bind request.\r\n- Remove the catalog suffix from `service_id` and `plan_id` for update instance requests (part of [`previous_values`](https://github.com/openservicebrokerapi/servicebroker/blob/v2.14/spec.md#previous-values-object)).\r\n\r\n### Added\r\n- `SBF_TENANT_ID` environment variable and `tenantId` option for providing a tenant (of the provider) for audit logging.\r\n- Node.js 10 support. **Note**: To use SBSS on HANA with Node.js 10, a version of `@sap/hdbext` (a peer dependency) that supports Node 10 should be added to application's dependencies. Refer to the *package.json* file of the corresponding `@sap/sbss` version for the version range of `@sap/hdbext`.\r\n\r\n<a name=\"4.2.0\"></a>\r\n## 4.2.0 - 2019-03-27\r\n\r\n### Added\r\n- Improvements in documentation.\r\n- Possibility to add/extend `app_host_id` in the `onBind` hook.\r\n- Return `sap.cloud.service.alias` property from the service metadata as part of the credentials.\r\n- Support for multiple 'html5-apps-repo' service bindings from the environment.\r\n\r\n### Fixed\r\n- Search in the environment for 'html5-apps-repo' instances by the 'html5-apps-repo-dt' tag instead of 'html5-apps-repo-rt'.\r\n- Updated dependencies.\r\n\r\n<a name=\"4.1.0\"></a>\r\n## 4.1.0 - 2019-01-30\r\n\r\n### Added\r\n- Expose credential providers\r\n\r\n### Fixed\r\n- Docu: add `SBF_SBSS_RESTRICTED_USER_SERVICE` to the list of environment variables\r\n\r\n<a name=\"4.0.0\"></a>\r\n## 4.0.0 - 2019-01-18\r\n\r\n### Changed\r\n- _@sap/sbf_ now depends on _@sap/sbss_ v4 which no longer brings the _@sap/hdbext_ package by default.\r\nBrokers that use SBSS on HANA need to explicitly specify _@sap/hdbext_ as a dependency.\r\n\r\n### Fixed\r\n- Added Node 8 to list of supported versions\r\n\r\n<a name=\"3.3.1\"></a>\r\n## 3.3.1 - 2019-01-11\r\n\r\n### Fixed\r\n- Typo: property `saasregistryenable` is now renamed to `saasregistryenabled`\r\n\r\n<a name=\"3.3.0\"></a>\r\n## 3.3.0 - 2019-01-08\r\n\r\n### Added\r\n- Support for `subaccount_id` in SBSS on PostgreSQL\r\n\r\n### Fixed\r\n- Using empty string as user name during audit logging on Kubernetes\r\n\r\n<a name=\"3.2.0\"></a>\r\n## 3.2.0 - 2018-12-04\r\n\r\n### Added\r\n- Support for Business Service\r\n- Improvements in documentation\r\n\r\n<a name=\"3.1.0\"></a>\r\n## 3.1.0 - 2018-10-25\r\n\r\n### Added\r\n- Utility function to make HTTP calls to XSUAA\r\n- Specify catalog.json file via `SBF_CATALOG_FILE` environment variable\r\n- Improvements in documentation\r\n\r\n## 3.0.0 - 2018-09-20\r\n\r\n### Changed\r\n- Version 4 of the _@sap/logging_ package is now used. The `requestId` property is no longer available in `params.req.loggingContext` (in custom hooks). Use the `correlationId` for correlating log entries from different components involved in a broker operation.\r\n\r\n### Added\r\n- Support for CF Log format (via adopting _@sap/logging_ v4).\r\n- Provisioning with XSUAA credentials provider: use `subaccount_id` if provided.\r\n\r\n### Fixed\r\n- Validation of update requests.\r\n- Updated dependencies.\r\n\r\n## 2.1.2 - 2018-08-14\r\n\r\n### Fixed\r\n - Updated dependencies\r\n - Validation of provision and bind requests\r\n\r\n## 2.1.1 - 2018-07-27\r\n\r\n### Fixed\r\n - Update 'request' to v2.87.0\r\n\r\n## 2.1.0 - 2018-06-07\r\n\r\n### Added\r\n - 'user_id' and 'originating_identity' properties are available in custom hooks\r\n - 'req' object is available in custom hooks\r\n - New \"Audit logging\" section in README.md\r\n - Support for OSB API context\r\n\r\n### Fixed\r\n - Enhanced example applications\r\n - Propagate some XSUAA errors to the client\r\n - Updated dependencies\r\n\r\n## 2.0.0 - 2018-04-12\r\n\r\nSee the [migration guide](migration.md) how to adapt to incompatible changes.\r\n\r\n### Changed\r\n- Audit log service integration (**Incompatible**)\r\n- PostgreSQL restricted user support (**Incompatible**)\r\n- Reverse the order of operations during unbind and deprovision (**Incompatible**)\r\n- X-Broker-API-version header is now mandatory (**Incompatible**)\r\n\r\n### Removed\r\n- The old format where `xsappname` and the other security properties appear on root level is removed when creating a service instance (**Incompatible**)\r\n\r\n### Added\r\n- Enforce secure outgoing connections via environment variable `SBF_SECURE_OUTGOING_CONNECTIONS`\r\n- Configure timeout for requests to XSUAA via environment variable `SBF_UAA_TIMEOUT`\r\n- New \"Error handling\" section in README.md\r\n- Memory consumption sizing guide\r\n- Documented how to limit heap size\r\n\r\n## 1.5.0 - 2017-12-12\r\n\r\n### Added\r\n- Allow to set scopes/authorities per service/plan with environment variable\r\n- New section in the readme about asynchronous broker operations\r\n\r\n### Fixed\r\n- Propagate some XSUAA errors to the client side\r\n- Change X-Broker-Api-Version check in order to work with XSA\r\n\r\n## 1.4.0 - 2017-10-25\r\n\r\n### Added\r\n- Add support for hashed broker password\r\n- Script for generating hashed broker password\r\n- Allow to embed SBF in an express.js application\r\n- Support new SBSS version\r\n- Script for generating unique ids in service catalog\r\n- Pass generated credentials to the `onBind` hook\r\n- Java examples\r\n- Added \"Security\" section in README.md\r\n- Verify service catalog for consistency\r\n- Log warning if broker password is shorter than 15 characters\r\n\r\n### Fixed\r\n- Deprovision does not fail if UAA cloning is already deleted (Allow to retry deprovision operation)\r\n- Properly encode URL parameters in outbound requests\r\n\r\n## 1.3.0 - 2017-08-16\r\n\r\n### Added\r\n- Allow for custom parameters in create service operation\r\n- New section in the readme about providing custom parameters\r\n- Simple example to register the broker automatically with MTA descriptor\r\n\r\n## 1.2.0 - 2017-08-03\r\n\r\n### Added\r\n- Troubleshooting section in the readme\r\n- New section in the readme about extending the service broker\r\n- Example for OAuth authentication with client credentials grant\r\n- Example for OAuth authentication with user token grant\r\n- Example using MTA and deploy service\r\n- Provide catalog suffix via broker URL\r\n\r\n## 1.1.0 - 2017-06-02\r\n\r\n### Added\r\n- OAuth authentication with UAA\r\n\r\n## 1.0.1 - 2017-05-18\r\n\r\n### Fixed\r\n- Broker will fail if `serviceConfig` contains service that is not defined in *catalog.json*\r\n- Only `onBind` hook is required to be implemented if `autoCredentials: false`\r\n"},{"name":"sbss","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/sbss\r\nNode.js client library for SBSS (Service Broker Security Support)\r\n\r\nSBSS provides secure generation, storage and validation of credentials (user name and password).\r\nThis functionality is aimed at service implementations to protect access to their resources.\r\nSee [Custom Services](https://docs.cloudfoundry.org/services/) in Cloud Foundry documentation for detailed description how to provide custom services.\r\n\r\nSBSS uses a database to do its job and provides a DB API in the form of stored procedures and views.\r\nThis package provides a JavaScript API to access SBSS.\r\n\r\n## Requirements\r\n\r\nSBSS should be installed and configured. The credentials to access it should be available.\r\n\r\n## Install\r\n```sh\r\nnpm install --save @sap/sbss\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar sbssLib = require('@sap/sbss');\r\nvar xsenv = require('@sap/xsenv');\r\nvar assert = require('assert');\r\n\r\nvar options = xsenv.cfServiceCredentials({ tag: 'hana', plan: 'sbss' });\r\nvar sbss = sbssLib(options);\r\n\r\nfunction generateCredentials(options, cb) {\r\n  sbss.createCredentials({\r\n    instanceId: options.instanceId,\r\n    bindingId: options.bindingId,\r\n    serviceId: options.serviceId,\r\n    planId: options.planId,\r\n    appGuid: options.appGuid,\r\n    subaccountId: options.subaccountId\r\n  }, (err, credentials) => {\r\n    if (!err) {\r\n      // credentials.username - generated user name\r\n      // credentials.password - generated password\r\n    }\r\n    cb(err);\r\n  });\r\n}\r\n\r\nfunction validateCredentials(username, password, cb) {\r\n  sbss.validateCredentials(username, password, (err, result) => {\r\n    if (!err) {\r\n      // provided credentials are valid\r\n      // result.instanceId - instanceId provided to createCredentials that generated these credentials\r\n      // result.bindingId - bindingId provided to createCredentials that generated these credentials\r\n      // result.serviceId - serviceId provided to createCredentials that generated these credentials\r\n      // result.planId - planId provided to createCredentials that generated these credentials\r\n      // result.appGuid - appGuid provided to createCredentials that generated these credentials\r\n      // result.subaccountId - subaccountId provided to createCredentials that generated these credentials\r\n    }\r\n    cb(err);\r\n  });\r\n}\r\n```\r\n\r\n## API\r\n\r\n### `sbss(options)`\r\n* `options` - database connection options, normally the `credentials` object of a SAP HANA or PostgreSQL service binding.\r\n\r\nConstructs and returns a new SBSS client. All subsequent functions are accessed through this object.\r\n\r\n**Note:** When using PostgreSQL it is recommended to provide restricted DB user credentials via the `restrictedUser` property. When `restrictedUser` property is present it is mandatory to specify both `restricted-dbuser-name` and the corresponding `restricted-dbuser-password`. They are normally taken from the user-provided service used when populating PostgreSQL schema with SBSS stored procedures.\r\n\r\n* `options`\r\n  * `<postgres service credentials>`\r\n  * `restrictedUser`\r\n    * `restricted-dbuser-name`\r\n    * `restricted-dbuser-password`\r\n\r\nSample usage:\r\n\r\n```js\r\nvar sbssLib = require('@sap/sbss');\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar options = xsenv.cfServiceCredentials({ label: 'postgresql', tag: 'sbss' });\r\noptions.restrictedUser = xsenv.cfServiceCredentials('restriced-dbuser-ups');\r\nvar sbss = sbssLib(options);\r\n```\r\n\r\n### `createCredentials(options, callback)`\r\n* `options`\r\n  * `instanceId` - {string} service instance ID\r\n  * `bindingId` - {string} service binding ID\r\n  * `serviceId` - {string} service ID\r\n  * `planId` - {string} service plan ID\r\n  * `appGuid` - {string} (optional) application guid\r\n  * `subaccountId` - {string} subaccount ID (only supported on PostgreSQL)\r\n* `callback` - `function(error, credentials)`\r\n  * `error` - Error object in case of error, `null` or `undefined` otherwise\r\n  * `credentials` - {object}\r\n    * `username` - {string} generated user name\r\n    * `password` - {string} generated password\r\n\r\nGenerates a new set of credentials and persists them in the database together with the given `options`.\r\nIt is possible to generate multiple credentials for the same instance ID and binding ID.\r\n\r\n**Note:** If SBBS version is older than 1.5.4, then `serviceId`, `planId` and `appGuid` options will not be persisted.\r\n**Note:** If SBBS version is older than 1.5.11, then `subaccountId` will not be persisted.\r\n\r\n### `deleteCredentials(instanceId, bindingId, callback)`\r\n* `instanceId` - {string} service instance ID\r\n* `bindingId` - {string} service binding ID\r\n* `callback` - `function(error, result)`\r\n  * `error` - Error object in case of error, `null` or `undefined` otherwise\r\n  * `result` - {object}\r\n    * `deletedCredentials` - number of deleted credentials, 0 if there are no credentials to delete\r\n\r\nDeletes all previously generated credentials for the given `instanceId` and `bindingId`.\r\n\r\n### `deleteAllInstanceCredentials(instanceId, callback)`\r\n* `instanceId` - {string} service instance ID\r\n* `callback` - `function(error, result)`\r\n  * `error` - Error object in case of error, `null` or `undefined` otherwise\r\n  * `result` - {object}\r\n    * `deletedCredentials` - number of deleted credentials, 0 if there are no credentials to delete\r\n\r\nDeletes all previously generated credentials for the given `instanceId` no matter the binding ID.\r\n\r\n### `validateCredentials(username, password, callback)`\r\n* `username` - {string} user name\r\n* `password` - {string} password\r\n* `callback` - `function(error, result)`\r\n  * `error` - Error object in case of error, `null` or `undefined` otherwise\r\n  * `result` - {object}\r\n    * `instanceId`- {string} service instance ID associated with the given credentials\r\n    * `bindingId` - {string} service binding ID associated with the given credentials\r\n    * `serviceId` - {string} (optional) service ID\r\n    * `planId` - {string} (optional) service plan ID\r\n    * `appGuid` - {string} (optional) application guid\r\n    * `subaccountId` - {string} (optional) subaccount ID\r\n\r\nChecks if the given credentials match any previously generated credentials. If a match is found,\r\nthe `callback` is called with the associated instance ID and binding ID. Otherwise it is called with an error.\r\n\r\n**Note:** `serviceId`, `planId` and `appGuid` options will not be provided if:\r\n * the credentials are generated with versions of SBSS before 1.5.4, or\r\n * the credentials are generated via the `createCredentials({ instanceId, bindingId }, callback)` call.\r\n\r\n**Note:** `subaccountId` will not be provided if:\r\n  * the credentials are generated with versions of SBSS before 1.5.11\r\n  * the credentials are generated with SBSS on HANA\r\n  * the property is not provided in the call to `createCredentials`\r\n\r\n## Troubleshooting\r\n\r\nTo enable debug traces set this environment variable:\r\n```\r\nDEBUG=sbss\r\n```\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 5.3.1 - 2022-04-11\r\n\r\n### Removed\r\n- Removed node 8.x support and tests\r\n \r\n### Changed\r\n- Changed istanbul test framework with c8\r\n \r\n## 5.3.0 - 2022-01-30\r\n\r\n### Fixed\r\n- Update `@sap/hdbext` to 7.6.0\r\n- Update `debug` to 4.3.3\r\n\r\n### Added\r\n- Node.js 16 support\r\n\r\n## 5.2.0 - 2021-10-08\r\n\r\n### Added\r\n- Added ssl certificate option \r\n\r\n## 5.1.1 - 2021-01-22\r\n\r\n### Fixed\r\n- Update `@sap/hdbext` to 7.1.3\r\n- Update `lodash` to 4.17.21\r\n\r\n## 5.1.0 - 2021-01-13\r\n\r\n### Fixed\r\n- Update `@sap/hdbext` to 7.1.0 to support Node.js 14\r\n- Update `lodash` to 4.17.20\r\n- Update `debug` to 4.2.0\r\n\r\n### Added\r\n- Node.js 14 support\r\n\r\n## 5.0.0 - 2020-08-25\r\n\r\n### Fixed\r\n- Update `@sap/hdbext` to 7.0.0 to fix dependency to an old lodash version\r\n\r\n### Removed\r\n- Support for Node.js 6\r\n\r\n### Added\r\n- Node.js 12 support\r\n\r\n## 4.1.2 - 2020-07-30\r\n\r\n### Fixed\r\n- Update `lodash` to 4.17.19\r\n\r\n## 4.1.1 - 2019-07-11\r\n\r\n### Fixed\r\n- Update `lodash` to 4.17.13\r\n- Update `@sap/hdbext` to 6.0.1\r\n\r\n## 4.1.0 - 2019-05-21\r\n\r\n### Added\r\n- Node.js 10 support. **Note**: To use SBSS on HANA with Node.js 10,\r\na version of `@sap/hdbext` (peer dependency of `@sap/sbss`) that supports Node 10 should be added to application's dependencies.\r\nRefer to the _package.json_ file of `@sap/sbss` for the version range of `@sap/hdbext`.\r\n\r\n## 4.0.1 - 2019-02-15\r\n\r\n### Fixed\r\n- Closed idle connection left from SBSS version check on PostgreSQL client\r\n- Added `'error'` event handler on connection pool of PostgreSQL client\r\n\r\n<a name=\"4.0.0\"></a>\r\n## 4.0.0 - 2019-01-18\r\n\r\n### Removed\r\n- The `createCredentials(instanceId, bindingId, callback)` signature\r\n- Support for Node.js v4\r\n\r\n### Changed\r\n- `@sap/hdbext` is now declared as a peer dependency\r\n\r\n### Fixed\r\n- Supported Node.js versions field in _package.json_\r\n\r\n## 3.4.0 - 2019-01-07\r\n\r\n### Added\r\n- Support for Postgre SBSS v1.3 (since SBSS 1.5.11)\r\n\r\n## 3.3.0 - 2018-10-01\r\n\r\n### Added\r\n- Switch to @sap/hana-client via @sap/hdbext version 5.0.0\r\n\r\n## 3.2.2 - 2018-09-19\r\n\r\n### Fixed\r\n- Update `lodash` to 4.17.11\r\n- Update `@sap/hdbext` to 4.7.5\r\n\r\n## 3.2.1 - 2018-04-05\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 3.2.0 - 2018-02-19\r\n\r\n### Added\r\n - Support for PostgreSQL restricted user credentials\r\n - npm-shrinkwrap.json\r\n\r\n## 3.1.1 - 2017-08-28\r\n\r\n### Fixed\r\n- Updated documentation with new SBSS features\r\n- `options.appGuid` argument to `createCredentials` is now optional also with PostgreSQL\r\n\r\n## 3.1.0 - 2017-08-25\r\n\r\n### Added\r\n- Support new SBSS version (both HANA and PostgreSQL)\r\n- Use connection pooling with HANA\r\n\r\n### Fixed\r\n- Fix code execution vulnerability https://node-postgres.com/announcements#2017-08-12-code-execution-vulnerability\r\n\r\n## 3.0.0 - 2017-05-09\r\n\r\n### Changed\r\n- Renamed property `user` to `username` in the result of `createCredentials`\r\n\r\n## 2.0.0 - 2017-05-03\r\n\r\n### Changed\r\n- Renamed function `deleteBindingCredentials` to `deleteCredentials`\r\n"},{"name":"sds-deploy","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"The deploy application can deploy SDS project consisting of CCL file and CCR file to HANA SDS option on XSA.\r\n\r\n\r\n\r\n## Usage\r\n\r\n1. Create the MTA application \r\n2. Create the SDS module. \r\nNOTE: We invent a rule that an SDS module is mapped to an SDS project respectively. Following the rule make things simple.\r\n\r\n    (1) Once the module is created, the folder 'sds_module' shall be created for it. \r\n    \r\n    (2) Within that folder, a sub folder 'model' shall be created for it.\r\n    \r\n    (3) Put the CCL file and CCR file into the folder sds_module/model\r\n    \r\n    (4) Create the package.json file under the folder 'sds_module'. \r\n    \r\n3. Modify the mtad.yaml under the MTA application to provide the service instance for SDS option.\r\n","changelog":"2.0.5 - 2019-01-18\r\n\r\n- Add trust self signed certificate flag\r\n\r\n2.0.4 - 2018-02-28\r\n\r\n- Add npm-shrinkwrap.json\r\n\r\n2.0.2 - 2018-02-01\r\n\r\n - Upgrade open source components\r\n\r\n2.0.0 - 2017-02-10\r\n\r\n - Initial release\r\n\r\n"},{"name":"service-provider-apis","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/service-provider-apis\r\n## Overview\r\n**service-provider-apis** is an npm package that provides the APIs necessary for exposing services using the 'SAP Service Center'.\r\n\r\n## Usage\r\nTo add this package as a dependency in your **package.json** file, under the \"dependencies\" section, add the following dependency: `\"@sap/service-provider-apis\": [Version]`\r\n\r\n## APIs\r\nThis object exposes APIs for the exploration of SAP systems and services.\r\n\r\n### __getServices__  \r\n\r\nThis API retrieves a list of services from a specific provider system.  \r\n\r\n  `getServices(options?: Record<string, any>): Promise<Service[]>;`  \r\n  \r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *credentials (this is optional)*: for services that require authentication.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *filter (this is optional)*: used to filter for relevant services.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.      \r\n\r\n### __getMetadata__  \r\n\r\nThis API retrieves the metadata of a specific service.  \r\n\r\n  `getMetadata(\r\n    service: Service,\r\n    encoding: EncodingMode,\r\n    options?: Record<string, any>,\r\n    relativeUrl?: string,\r\n    credentials?: Authentication\r\n  ): Promise<ServiceMetadata>;`  \r\n  \r\n**service**: Defines the service from which the metadata will be retrieved.  \r\n**encoding**: Defines the required encoding requested by the consumer.  \r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *credentials (this is optional)*: for services that require authentication.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *filter (this is optional)*: used to filter for relevant services.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *relativeUrl* (this is optional)*: for a non-full URL - provides the relative URL to the service.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.   \r\n\r\n### __getAnnotations__  \r\n\r\nThis API retrieves the annotations of a specific service.  \r\n\r\n  `getAnnotations(service: Service, options?: Record<string, any>): Promise<Annotation[]>`  \r\n  \r\n**service**: Defines the service from which the metadata will be retrieved.  \r\n**options (this is optional)**: The following parameters are optional:   \r\n&nbsp;&nbsp;&nbsp;&nbsp; *credentials (this is optional)*: for services that require authentication.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.   \r\n\r\n### __getJsonLiveData__  \r\n\r\nThis API retrieves data for a specific service's entity.  \r\n\r\n  `getJsonLiveData(service: Service, entity: string, options?: Record<string, any>): Promise<ServiceCommon>`  \r\n  \r\n**service**: The service for which to return the entity's data.</br> \r\n**entity**:  The name of the entity for which we are retrieving the data.  \r\n**options (this is optional)**: The following are optional:   \r\n&nbsp;&nbsp;&nbsp;&nbsp; *credentials*: For services that require authentication. </br> \r\n&nbsp;&nbsp;&nbsp;&nbsp; *relativeUrl*: The relative path to the service (used in a non-full URL service). </br> \r\n&nbsp;&nbsp;&nbsp;&nbsp; *filter*: A map of OData request parameters that affect the data response for the entity.  \r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for example: `new Filter(new Map([[\"$top\", [\"2\"]]]]))` returns only the two top data rows.   \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error type.   \r\n\r\n\r\n## Optional Parameters  \r\n*Create credentials object - used to access a system or service that requires authentication*  \r\n`const credentials = getCredentialsObject(\"username\", \"password\");`  \r\n\r\n- **credentials**: *an object that enables you to add credentials to your system request.  \r\n    &nbsp;&nbsp;&nbsp;&nbsp; *USER*: system username  \r\n    &nbsp;&nbsp;&nbsp;&nbsp; *PSW*: system password  \r\n    Credentials can be built as follows:*  \r\n    credentials = new Authentication(<USR>, <PSW>);  \r\n\r\n*Create a filter object - used to filter for needed services*  \r\n`const filter = getNewFilter(\"protocol\", [\"odatav2\"]);`  \r\n\r\n- **filter**: an object that enables you to filter for systems that you want to receive.  \r\n    &nbsp;&nbsp;&nbsp;&nbsp; *FILTER_KEY*: (string) A key used to filter the list of systems.  \r\n    &nbsp;&nbsp;&nbsp;&nbsp; *FILTER_VALUES*: (array of strings) accepted values of the filter key, separated by commas.  \r\n    Filters can be built as follows:  \r\n    filter = new Filter(new Map([[<FILTER_KEY>, <FILTER_VALUES>]]));  \r\n\r\n### Git and GitHub\r\n\r\n1. Open Git Bash, go to the local repository directory and sync with the remote repository.\r\n2. Develop in a **Local** branch.\r\n\r\n- Create a new descriptive branch `git checkout -b my-local-branch-name` <br>**OR** rename the previous one `git branch -m my-local-branch-name`.\r\n- Make sure _my-local-branch-name_ is **NOT master** and that there is **no existing** branch with this name.\r\n\r\n3. Sync with the remote repository.\r\n\r\n- Fetch the code from the master branch by running `git fetch; git merge`.\r\n\r\n4. Make your local changes.\r\n\r\n- Run `npm install` to install dependencies.\r\n- Run `npm run test` to compile the TypeScript code to JavaScript and run tests.\r\n\r\n5. Commit and push.\r\n\r\n- **Do not push directly to master!!!**\r\n- Commit your changes and push to create a new branch on GitHub by running `git push origin my-local-branch-name`\r\n- On consecutive commits **DO NOT** use `commit amend`. You should create a new commit and push to the same feature branch again. This will add an extra commit to your pull request and retrigger the voters.\r\n\r\n6. Open a pull request.\r\n\r\n- Click 'New pull request' next to your branch.\r\n- Edit the pull request name with BLI or BCP. For example: _\"BLI DEVXCORE-123: my new feature\"_ or _\"BCP 1670451810: Fix my bug\"_.\r\n- A new branch _(my-local-branch-name)_ is created in the GitHub repository.\r\n- The new code should enable all voters and code review to pass successfully.\r\n\r\n7. Update the existing pull request.\r\n\r\n- Stage your changes and create a new commit.\r\n- Perform Git fetch.\r\n- Perform Git merge on origin/master - Merge your changes with the most updated master branch.\r\n- Push your changes to your _my-local-branch-name_ (Git push origin _my-local-branch-name_).\r\n\r\n8. Merge the pull request.\r\n\r\n- If all voters passed (XMake + JaaS Voter), click 'Merge pull request'.  \r\n- If your pull request contains several commits, you combine them in one commit from GitHub by selecting the 'Confirm squash and merge' option from the Merge dropdown list.\r\n\r\n9. Delete your branch.\r\n\r\n- After the merge is complete, go to **Code > Branches**.\r\n- Look for your merged pull request and click the delete branch icon.\r\n\r\n### Tests and Coverage\r\n\r\n- Run `npm run test` to run the unit tests written in Mocha and the coverage test.\r\n\r\n## Release\r\n\r\nBump the version in the \"package.json\" GitHub file.\r\n\r\n**_Notes:_**\r\nMake sure to follow this versioning concept:\r\n- When providing new features (when releasing at end of the sprint or when a new feature is ready), bump a major version (for example, from 1.1.0 to 1.2.0).\r\n- When providing a bug fix to an existing version (\"hotfix\"), bump a minor version (for example, from 1.1.0 to 1.1.1).\r\n"},{"name":"service-providers","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# service-providers\r\n\r\nThis module provides various service providers:\r\n\r\n# Direct URL Service Provider\r\n\r\nProvides the ability to consume a service from a URL ( a direct service url rather then through SAP cloud destination service.\r\nThe main use case is when creating an application for demo use or for local development when detached from SAP Cloud\r\n\r\n# Local Metadata File Service Provider\r\n\r\nProvides the ability to use a dummy service represented by metadata.xml file from the local workspace of the developer.\r\nThe main use case is when creating an application for demo use and run it with mock data.\r\n\r\n# Current Project Service Provider\r\n\r\nProvides the ability to consume services from the current CAP project. The service can be java or node.\r\nThe main use case is: a developer adds a _UI_ module to _CAP_ project and he wants to bind the UI with a service (java/node) he has in his project.\r\nThe flow contains also a change of connectivity details in the `package.json/mta.yaml/xsapp.json`, where we declare the dependencies. Later on, the dependency will be reflected in the `Run Configuration`.\r\n\r\n## Requirements\r\n\r\nThe flow starts and ends in the same behaviour we have for service consumption. \r\nAdditional scenario will be added to the system selection:\r\n\r\n    My SAP system\r\n    API hub\r\n    Current project\r\n    Local (will be the next one)\r\n\r\nWhen user selects 'Current project' we should display the all found services from the current CAP project.\r\n</br>The services can be: _Java, Node_.\r\n</br>The format should be: _'service name'_.\r\n</br>Service biding (data connection) - the flow is: binding a service to a UI module, therefore the binding process should be as it is today update service's dependency in the `package.json/mta.yaml/xsapp.json`.\r\n"},{"name":"site-app-server","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"This component is a static resources web server for applications that run in a Fiori Launchpad site on XSA.\r\n\r\nDuring startup it persists to the portal-service all configuration (tiles, groups, routes, uaa) that is needed for this application to run in a Fiori Launchpad portal site.\r\n\r\nThis component is coupled with the @sap/site-entry node module, which in turn acts as the web entry server of the Fiori Launchpad site.\r\n\r\nThis component uses the portal-service that exists in the XSA environment.\r\n\r\nThis component can be used only on HANA XSA SP1 and latest environment.\r\n","changelog":"All notable changes to this project will be documented in this file.\r\n\r\n## 1.9.13 - 2022-06-14\r\n### Updated dependencies\r\n - deps: commander@9.3.0\r\n ### Added\r\n - LICENSE file\r\n\r\n## 1.9.12 - 2022-04-12\r\n### Updated dependencies\r\n - deps: @sap/logging@6.1.1\r\n - deps: commander@9.1.0\r\n - deps: serve-static@1.15.0\r\n\r\n## 1.9.11 - 2021-03-15\r\n### Updated dependencies\r\n - deps: @sap/logging@6.0.x\r\n - deps: commander@7.1.0\r\n\r\n\r\n## 1.9.10 - 2020-06-03\r\n### Updated dependencies\r\n - deps: @sap/logging@5.1.0\r\n - deps: commander@5.1.0\r\n - deps: connect@3.7.0\r\n - deps: serve-static@1.14.1\r\n ### Added\r\n Node.js 12.x support\r\n"},{"name":"site-content-deployer","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"This component is used to deploy the Fiori Launchpad portal site configuration (configuration of tiles, groups and catalogs) into the XSA environment. \r\nThis component is coupled with the @sap/site-entry node module, which in turn acts as the web entry server of the Fiori Launchpad portal site. \r\nThis component uses the portal-service that exists in the environment.\r\n\r\nThis component can be used only on HANA XSA SP1 and above environment.\r\n"},{"name":"site-entry","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Portal Site entry - Web entry for Fiori Launchpad sites\r\n\r\nThis component is the web entry for Fiori Launchpad portal sites.\r\nIt wraps an Approuter component that serves as its web server for serving client side resources and backend calls.\r\nThis componet should perform binding to the sap-portal-service that exists in the environment.\r\n\r\nThis component can be used only on HANA XSA SP1 and above environment.\r\n\r\n## Table of contents\r\n\r\n* [Prerequisites](#prerequisites)\r\n* [Configuration](#configuration)\r\n* [Supported](#supported)\r\n\r\n\r\n\r\n## Prerequisites\r\nPerform bind to portal-services with plan site-host\r\n\r\n\r\n## Configuration\r\nUsing xs-app.json file the wrapped Approuter component can be configured.\r\n\r\n\r\n## Supported\r\nThis component can be used only on HANA XSA SP1 and above environment with a compatible versions of:\r\nSAP UI5\r\nportal-service\r\nsap-site-content-deployer\r\n\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n\r\n## 1.9.38 - 2022-04-11\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.15.1\r\n - deps: @sap/logging@6.1.1\r\n - deps: async@3.2.3\r\n\r\n## 1.9.37 - 2022-03-09\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.14.2\r\n\r\n## 1.9.36 - 2022-03-09\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.13.2\r\n\r\n## 1.9.35 - 2022-01-25\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.11.3\r\n\r\n## 1.9.34 - 2021-11-12\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.9.2\r\n - deps: async@3.2.2\r\n - deps: jwt-decode@3.1.2\r\n\r\n## 1.9.33 - 2021-11-01\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.9.1\r\n\r\n## 1.9.32 - 2021-03-14\r\n### Updated dependencies\r\n - deps: @sap/approuter@10.0.0\r\n\r\n## 1.9.31 - 2021-02-24\r\n### Updated dependencies\r\n - deps: @sap/approuter@9.3.0\r\n - deps: @sap/logging@6.0.3\r\n - deps: lodash@4.17.21\r\n\r\n## 1.9.30 - 2020-10-07\r\n### Updated dependencies\r\n - deps: @sap/logging@5.3.1\r\n - deps: @sap/approuter@8.5.2\r\n\r\n## 1.9.29 - 2020-05-20\r\n### Updated dependencies\r\n - deps: @sap/logging@5.1.0\r\n\r\n## 1.9.28 - 2020-05-07\r\n### Added\r\n - CHANGELOG.md\r\n### Fixed\r\n### Updated dependencies\r\n - deps: @sap/approuter@7.1.1\r\n"},{"name":"subaccount-destination-service-provider","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/subaccount-destination-service-provider\r\n\r\n## Overview\r\n\r\n**subaccount-destination-service-provider** is an npm package that provides the APIs necessary for exposing subaccount destination systems and services.\r\n\r\n## Usage\r\n\r\nTo add this package as a dependency in your **package.json** file, under the \"dependencies\" section, add the following dependency: `\"@sap/subaccount-destination-service-provider\": [Version]`\r\n\r\n## APIs\r\n\r\nThis repository exposes APIs for the exploration of SAP systems and services that are consumed from the Business Application Studio (BAS) subaccount.\r\n\r\n### init\r\n\r\nThis API initializes a provider repository representing a given subaccount.\r\n\r\n`async init(): Promise<void>`\r\n\r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n### getSystems\r\n\r\nThis API retrieves systems exposed by the subaccount.\r\n\r\n`async getSystems(filter?: Filter): Promise<ProviderSystem[]>`\r\n\r\n**filter (this is optional)**: Only retrieves systems that comply with the given filter.\r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if data cannot be retrieved from the system.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n### getServices\r\n\r\nThis API retrieves services exposed by a specific system.\r\n\r\n`async getServices(options?: Record<string, any>): Promise<Service[]>`\r\n\r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _credentials (this is optional)_: for services that require authentication.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _filter (this is optional)_: Used to filter for relevant services.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if data cannot be retrieved from the system.\r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n### getMetadata\r\n\r\nThis API retrieves metadata exposed by a specific system.\r\n\r\n`async getMetadata( service: Service, encoding: EncodingMode, options?: Record<string, any> ): Promise<ServiceMetadata>`\r\n\r\n**service**: Defines the service from which the metadata will be retrieved.  \r\n**encoding**: Defines the required encoding requested by the consumer.  \r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _credentials (this is optional)_: for services that require authentication.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _filter (this is optional)_: Used to filter for relevant services.\r\n&nbsp;&nbsp;&nbsp;&nbsp; _relativeUrl_ (this is optional)*: for a non-full URL - provides the relative URL to the service.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *RETRIEVE_DATA*: This error is displayed if metadata cannot be retrieved from the service.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; *INTERNAL_ERROR\\*: This error is displayed for any other exception.\r\n\r\n### getAnnotations\r\n\r\nThis API retrieves an array of annotations exposed by a specific system.\r\n\r\n`async getAnnotations(service: Service, options?: Record<string, any>): Promise<Annotation[]`\r\n\r\n**service**: Defines the service from which the annotations will be retrieved.  \r\n**options (this is optional)**: The following parameters are optional:  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _credentials (this is optional)_: for services that require authentication.  \r\n**throws ServiceProviderError**: If there is an error, this throws a \"ServiceProviderError\" error message.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _RETRIEVE_DATA_: This error is displayed if annotations cannot be retrieved from the service.  \r\n&nbsp;&nbsp;&nbsp;&nbsp; _INTERNAL_ERROR_: This error is displayed for any other exception.\r\n\r\n## Examples\r\n\r\n_Initialize repository_\r\n`await saRepo.init();`\r\n\r\n_List subaccount systems (destinations)_  \r\n`const saSystems = await saRepo.getSystems();`\r\n\r\n_Create credentials object - Used to access a system or service that requires authentication._  \r\n`const credentials = getCredentialsObject(\"username\", \"password\");`\r\n\r\n_Select a system and list the catalog services that it provides._  \r\n_Note: Add credentials since the system needs authentication._  \r\n`const saSelectedSystem = findByName(saSystems, \"U1Y010_BASIC\");`  \r\n`const saServices = await saSelectedSystem.getServices({credentials: credentials});`\r\n\r\n_Create a filter object - Used to filter for required services._  \r\n`const filter = getNewFilter(\"protocol\", [\"odatav2\"]);`\r\n\r\n_Select a service and consume the metadata and annotations that it provides._  \r\n_Note: Add credentials since the system needs authentication._  \r\n`const saSelectedService = findByName(saServices, \"ZPAGE_BUILDER_CUST\");`  \r\n`const saMetadata = await saSelectedSystem.getMetadata(saSelectedService, saProvider.EncodingMode.XML, {credentials: credentials, filter: filter});`  \r\n`const saAnnotations = await saSelectedSystem.getAnnotations(saSelectedService, {credentials: credentials});`\r\n\r\n- **credentials**: An object that enables you to add credentials to your system request.  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _USER_: system username  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _PSW_: system password  \r\n   Credentials can be built as follows:\\*  \r\n   credentials = new Authentication(<USR>, <PSW>);\r\n\r\n- **filter**: An object that enables you to filter for systems that you want to receive.  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _FILTER_KEY_: (string) A key used to filter the list of systems.  \r\n   &nbsp;&nbsp;&nbsp;&nbsp; _FILTER_VALUES_: (array of strings) accepted values of the filter key, separated by commas.  \r\n   Filters can be built as follows:  \r\n   filter = new Filter(new Map([[<FILTER_KEY>, <FILTER_VALUES>]]));\r\n\r\n### Git and GitHub\r\n\r\n1. Open Git Bash, go to the local repository directory, and sync with the remote repository.\r\n\r\n2. Develop in a **Local** branch.\r\n\r\n- Create a new descriptive branch `git checkout -b my-local-branch-name` <br>**OR** rename the previous one `git branch -m my-local-branch-name`.\r\n- Make sure _my-local-branch-name_ is **NOT master** and that there is **no existing** branch with this name.\r\n\r\n3. Sync with the remote repository.\r\n\r\n- Fetch the code from the master branch by running `git fetch; git merge`.\r\n\r\n4. Make your local changes.\r\n\r\n- Run `npm install` to install dependencies.\r\n- Run `npm run test` to compile the TypeScript code to JavaScript and run tests.\r\n\r\n5. Commit and push.\r\n\r\n- **Do not push directly to master!!!**\r\n- Commit your changes and push to create a new branch on GitHub by running `git push origin my-local-branch-name`\r\n- On consecutive commits **DO NOT** use `commit amend`. You should create a new commit and push to the same feature branch again. This will add an extra commit to your pull request and retrigger the voters.\r\n\r\n6. Open a pull request.\r\n\r\n- Click 'New pull request' next to your branch.\r\n- Edit the pull request name with BLI or BCP. For example: _\"BLI DEVXCORE-123: my new feature\"_ or _\"BCP 1670451810: Fix my bug\"_.\r\n- A new branch _(my-local-branch-name)_ is created in the GitHub repository.\r\n- The new code should enable all voters and code review to pass successfully.\r\n\r\n7. Update the existing pull request.\r\n\r\n- Stage your changes and create a new commit.\r\n- Perform Git fetch.\r\n- Perform Git merge on origin/master - Merge your changes with the most updated master branch.\r\n- Push your changes to your _my-local-branch-name_ (Git push origin _my-local-branch-name_).\r\n\r\n8. Merge the pull request.\r\n\r\n- If all voters passed (XMake + JaaS Voter), click 'Merge pull request'.\r\n- If your pull request contains several commits, you combine them in one commit from GitHub by selecting the 'Confirm squash and merge' option from the Merge dropdown list.\r\n\r\n9. Delete your branch.\r\n\r\n- After the merge is complete, go to **Code > Branches**.\r\n- Look for your merged pull request and click the delete branch icon.\r\n\r\n### Tests and Coverage\r\n\r\n- Run `npm run test` to run the unit tests written in Mocha and the coverage test.\r\n\r\n## Release\r\n\r\nBump the version in the \"package.json\" GitHub file.\r\n\r\n**_Notes:_**\r\nMake sure to follow this versioning concept:\r\n\r\n- When providing new features (when releasing at the end of the sprint or when a new feature is ready), bump a major version (for example, from 1.1.0 to 1.2.0).\r\n- When providing a bug fix to an existing version (\"hotfix\"), bump a minor version (for example, from 1.1.0 to 1.1.1).\r\n"},{"name":"swa-for-sapbas-vsx","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"[![Build Status](https://gkedevxlondon.jaas-gcp.cloud.sap.corp/buildStatus/icon?job=swa_ci/master)](https://gkedevxlondon.jaas-gcp.cloud.sap.corp/job/swa_ci/job/master/)\r\n[![Quality Gate Status](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=alert_status)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n[![Coverage](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=coverage)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n[![Rating](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=sqale_rating)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n[![Bugs](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=bugs)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n[![Code Smells](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=code_smells)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n[![Duplicated Lines Density](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=duplicated_lines_density)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n[![Security Vulnerabilities](https://sonar.wdf.sap.corp/api/project_badges/measure?project=swa-for-sapbas-vsx&metric=vulnerabilities)](https://sonar.wdf.sap.corp/dashboard?id=swa-for-sapbas-vsx)\r\n\r\n\r\n# SAP Web Analytics npm package for Visual Code Extensions\r\nWrapper for SWA meant to be used in Visual code and SAP Application Studio.\r\n\r\n## Usage\r\n\r\n### Installation\r\nnpm install @sap/swa-for-sapbas-vsx\r\n\r\n### ENV\r\nEverything in the environment should be set up, if using in AppStudio please make sure [swa-chart](https://github.wdf.sap.corp/app-studio/swa-chart) is installed as a ws-ext\r\n\r\n### API\r\nThere are only two functions to call for usage\r\n\r\n#### Import\r\n```js\r\nimport { SWATracker } from '@sap/swa-for-sapbas-vsx';\r\n```\r\n\r\n#### Constructor\r\nHas 3 params that are detailed in the constructor call:  \r\n```js\r\n/**\r\n * constructor\r\n * @param vsxPublisher should be publisher in package.json\r\n * @param vsxPackageName should be extension package.json name\r\n * @param errorListener callback for error, one such callback for all the errors we receive via all the track methods err can be string (err.message) or number (response.statusCode)\r\n */\r\nvar myErrorListener = (err) => { myErrorHandling(err); }\r\nswa = new SWATracker(\"My Vscode Ext Publisher\",\"My Package name\", myErrorListener)\r\n```\r\n---\r\n**NOTE**\r\n\r\nThe vsxPublisher and vsxPackageName values passed to SWA Tracker constructor must be exact strings as they appear in the extension package.json. Otherwise, the usage data is not reported when extension is running in VS Code.\r\n\r\n---\r\n\r\n#### Track\r\nAfter creating a new swa class as detailed above usage is pretty simple  \r\n```js\r\n/**\r\n * Send event to SWA for tracking\r\n * @param eventType string detailing what event are you looking to track (ex. \"Generator Success!\") \r\n * @param {string[]} [custom_events] Optional, can accept up to 4, any more will be ignored\r\n * @param {int[]} [numericEvents] Optional, can accept up to 2, any more will be ignored\r\n */\r\nswa.track(\"myEvent\", [\"custom event 1\", \"custom event 2\", \"This array is optional\"],[1,2]); // numeric events is also optional\r\n```\r\n\r\n#### Example\r\n```js\r\nimport * as vscode from 'vscode';\r\nimport {SWATracker} from \"@sap/swa-for-sapbas-vsx\";\r\n// this method is called when your extension is activated\r\n// your extension is activated the very first time the command is executed\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n    const swa = new SWATracker(\"SAP\", \"vscode-close-editor\", (err : string|number) => {console.log(err);});\r\n    let cmd_closeActiveEditor = vscode.commands.registerCommand('extension.closeActiveEditor', () => {\r\n        \r\n        vscode.commands.executeCommand(\"workbench.action.closeActiveEditor\");\r\n        // Note that I don't have any custom events so I don't send an extra array\r\n        swa.track(\"Close Active Editor\");\r\n    });\r\n...\r\n...\r\n```\r\n\r\n### Usage Comments\r\n1. If running in Appstudio and SWA chart is not enabled code will throw error into console log that it is unable to track.  \r\n2. Please take note that if environment is not configured correctly with privacy settings code will not send any tracking.  \r\n\r\n#### Use Different Target\r\nSWA can report usage to a different target.\r\nThese reports are always anonymized.\r\n```js\t\r\nswa.setTarget(<targetUrl>, <targetToken>);\r\n```\r\n\r\n## Enable usage analytics reporting from VS Code\r\nIf you have a VS Code extension that is released to VS Code marketplace and you would like to collect its usage when it runs in VS Code, do the following:\r\n\r\n1. **Make sure that the vsxPublisher and vsxPackageName parameters initializing SWATracker object are correct.** \r\nThe vsxPublisher and vsxPackageName values passed to SWA Tracker constructor must be exact strings as they appear in the extension package.json.\r\n\r\n```js\r\n/**\r\n * constructor\r\n * @param vsxPublisher should be publisher in package.json\r\n * @param vsxPackageName should be extension package.json name\r\n * @param errorListener callback for error, one such callback for all the errors we receive via all the track methods err can be string (err.message) or number (response.statusCode)\r\n */\r\nvar myErrorListener = (err) => { myErrorHandling(err); }\r\nswa = new SWATracker(\"My Vscode Ext Publisher\",\"My Package name\", myErrorListener)\r\n\r\n```\r\n\r\n---\r\n**NOTE**\r\n\r\nIf you need to change vsxPublisher and vsxPackageName values after you already have SWA reports presenting the usage data, do not forget to adjust these reports considering the changed publisher info.\r\nFor example, if you use “Custom event parameter 10” in report filter definition, you should specify both old and new values to see the data from the extension.\r\n\r\n---\r\n\r\n2. **In “configuration” section of your VS code extension** add the settings for user to enable/disable sending the reports. Replace the placeholders with the relevant strings.\r\n\r\n```json\r\n...\r\n\"<Your package name>.enableSapWebAnalytics\": {\r\n\t\t\t\t\t\"type\": \"boolean\",\r\n\t\t\t\t\t\"default\": true,\r\n\t\t\t\t\t\"description\": \"Enable collecting usage analytics data for <Your Tool Name>.  If enabled, non-personally identifiable information is used to help understand the product usage and improve the tool.\",\r\n\t\t\t\t\t\"scope\": \"resource\"\r\n\t\t\t\t}\r\n...\r\n```\r\n3. **In README file of your extension**, add the following paragraph (do not forget replace the \\<Tool Name\\> placeholder with your tool name!) :\r\n\r\nThe tool collects non-personally identifiable information about your usage of the tool to improve its services.\r\nIf you do not want the tool to collect your usage data, you can set the \"Enable Sap Web Analytics\" setting to \"false\".\r\nGo to File > Preferences > Settings (macOS: Code > Preferences > Settings) > Extensions > \\<Tool Name\\>, and deselect the \"Enable Sap Web Analytics\" checkbox.\r\n\r\n## SWA Reports and Parameter Mapping\r\nThe following fields can be used for creating SWA reports:  \r\n\r\n| SWA Field  | Origin |\r\n| ------------- | ------------- |\r\n| **eventType**  | The \"myEvent\" parameter sent via track API    |\r\n| **user**  | Hashed user ID unless privacy is activated, then \"na\"    |\r\n| **Custom event parameter 1**  | Event additional data 1, \"custom event 1\" sent via track API    |\r\n| **Custom event parameter 2**  | Event additional data 2, \"custom event 2\" sent via track API    |\r\n| **Custom event parameter 3**  | Event additional data 3, \"custom event 3\" sent via track API    |\r\n| **Custom event parameter 4**  | Event additional data 4, \"custom event 4\" sent via track API    |\r\n| **Custom event parameter 5**  | Event additional data 5, \"custom event 5\" sent via track API    |\r\n| **Custom event parameter 6**  | IAAS (aws,ali,azure), set by the lib automatically   |\r\n| **Custom event parameter 7**  | Datacenter (stg10.int, cry10.int, ap21, prd40), set by the lib automatically    |\r\n| **Custom event parameter 8**  | Version (currently not supported), set by the lib automatically    |\r\n| **Custom event parameter 9**  | Is SAP User where allowed, empty overwise, set by the lib automatically    |\r\n| **Custom event parameter 10**  | The unique caller ID \"vsxPublisher.vsxPackageName\", set by lib automatically  |\r\n| **Numeric event parameter 1** | Event additional numeric data 1, \"numeric event 1\" sent via tack API |\r\n| **Numeric event parameter 2** | Event additional numeric data 2, \"numeric event 2\" sent via tack API |\r\n\r\n## Contribution\r\n### Contribute and update version\r\n1. Commit your contribution\r\n2. Execute 'npm run set-version <new version>' to set new version for the lib (example: 'npm run set-version 3.2.1')\r\n3. Execute 'npm install' to update package-lock.json\r\n4. Add a PR with your changes\r\n\r\n### Releasing new version\r\n2. Add a PR in https://github.wdf.sap.corp/NPMJS/NODE_SWA_FOR_VSC_EXT-1.0 see [example PR](https://github.wdf.sap.corp/NPMJS/NODE_SWA_FOR_VSC_EXT-1.0)\r\n3. ask project npm project admins (ido goren, asaf dulberg) to approve the PRs\r\n4. new version should be released soon to npmjs on https://www.npmjs.com/package/@sap/swa-for-sapbas-vsx\r\n"},{"name":"test-nodejs-dmz-github","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# test-nodejs-dmz\r\n"},{"name":"textanalysis","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/textanalysis\r\n\r\n@sap/textanalysis is a Node.js module on the XS Advanced platform that supports text analysis. Text analysis performs linguistic analysis and entity extraction on unstructured text documents.\r\n\r\n@sap/textanalysis is implemented as an interface to the `TA_ANALYZE` SQL stored procedure. It provides the following single API function:\r\n- `analyze()`\r\n\r\nFor more information on text analysis and the `TA_ANALYZE` stored procedure, see the [Text Analysis Developer Guide](http://help.sap.com/hana/SAP_HANA_Text_Analysis_Developer_Guide_en.pdf).\r\nNote that `TA_ANALYZE` and @sap/textanalysis is only available on HANA 2.0 and later versions.\r\n\r\n## Usage example\r\nFirst, a HANA database connection must be established (either with [hdb](https://github.com/SAP/node-hdb) or with @sap/hana-client). Then the client database object can be passed to the analyze method along with the input parameters. The input parameters set the input variables to the `TA_ANALYZE` stored procedure.\r\n\r\n```javascript\r\nvar ta = require('@sap/textanalysis');\r\nvar client;\r\nvar options = {\r\n    host: process.env.HANA_HOST,\r\n    port: process.env.HANA_PORT,\r\n    user: process.env.HANA_USER || 'system',\r\n    password: process.env.HANA_PASSWORD || 'manager',\r\n};\r\nasync.series([\r\n\tfunction connect(callback) {\r\n\t\tclient = hdb.createClient(options);\r\n\t\tclient.connect(callback);\r\n\t},\r\n\tfunction analyze(callback) {\r\n\t\tvar values = {\r\n\t\t\tDOCUMENT_TEXT: '<!DOCTYPE html><html><body><h1>My First Heading</h1><p>My first paragraph.</p></body></html>',\r\n\t\t\tLANGUAGE_CODE: 'EN',\r\n\t\t\tCONFIGURATION: 'EXTRACTION_CORE',\r\n\t\t\tRETURN_PLAINTEXT: 0\r\n\t\t};\r\n\t\tta.analyze(values, client, function done(err, parameters, rows) {\r\n\t\t\tif (err) { return console.error('error', err); }\r\n\t\t\tcallback();\r\n\t\t});\r\n\t},\r\n\tfunction end(callback) {\r\n\t\tclient.end(callback);\r\n\t}], done\r\n);\r\n```\r\n"},{"name":"textbundle","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/textbundle\r\n==========\r\n\r\nSimple tool for text internationalization in Node.js. Based on the same concept as SAP UI5, this module works with UTF-8 encoded properties files.\r\nLanguage defaulting is also borrowed from SAP UI5 with the idea the UI and server-side code\r\nuse the same text internationalization approach.\r\n\r\n## [API documentation](./API.md)\r\n\r\n## Usage\r\n\r\nAssuming you have these files in directory ./test/properties:\r\n\r\n*i18n_en_EN.properties*\r\n```\r\ngreeting = Hello {0}, you are {1} years old.\r\n```\r\n\r\n*i18n_de.properties*\r\n```\r\ngreeting = Hallo {0}, Sie sind {1} Jahre alt.\r\n```\r\n\r\n### Creating a TextBundle\r\n#### Old API\r\n```js\r\nvar TextBundle = require('@sap/textbundle').TextBundle;\r\n\r\nvar bundle = new TextBundle({path: 'test/properties/i18n', locale: 'en_EN' } );\r\n```\r\n\r\n#### New API\r\n```js\r\nvar TextBundle = require('@sap/textbundle').TextBundle;\r\n\r\nvar bundle = new TextBundle('test/properties/i18n', 'en_EN');\r\n```\r\n\r\n#### Constructing localized messages\r\n```js\r\nvar TextBundle = require('@sap/textbundle').TextBundle;\r\n\r\nvar bundle = new TextBundle(path.resolve(__dirname, 'test/properties/i18n'), 'en_EN');\r\n\r\nbundle.getText('greeting'); // will return 'Hello {0}, you are {1} years old.'\r\nbundle.getText('greeting', ['Stefan']); // will return 'Hello Stefan, you are undefined years old.'\r\nbundle.getText('greeting', ['Stefan', '21']); // will return 'Hello Stefan, you are 21 years old.'\r\n\r\n// using DE locale\r\nvar bundle = new TextBundle(path.resolve(__dirname, 'test/properties/i18n'), 'de');\r\nbundle.getText('greeting', ['Stefan', '21']); // will return 'Hallo Stefan, Sie sind 21 Jahre alt.'\r\n```\r\n\r\n### Loading bundles\r\nBundles can be loaded by providing the absolute path to the resource bundle or relative path. If relative a path is used it will be resolved with respect to your JavaScript file. Absolute path to the resource bundle should be favored for TextBundles. \r\n\r\nDefault file extension is `.properties`. If your file has a different extension, you just need to append it to the path you provide.\r\nThe format of the file still has to be UTF-8, and the structure has to be properties-like.\r\n\r\n```js\r\nvar TextBundle = require('@sap/textbundle');\r\nvar txtBundle = new TextBundle({path: './test/txt/i18n.txt'});\r\n```\r\n\r\n### Getting texts and language defaulting\r\n\r\nGetting text is straight forward - shown on the examples above already.\r\n\r\nMessage retrieval from properties files is done using fall-back mechanism that searches for the provided key\r\nin a hierarchical order and returns the text associated with this key from the first occurrence in some of the files.\r\n\r\nFollowing order is applied when text is retrieved for specific locale:\r\n\r\n```\r\n  language -> country -> en -> root -> 'not-found, return the key'\r\n```\r\n\r\n\r\nA simple example:  locale is 'de_DE', bundle name is 'i18n', the order in which properties files are checked for key existence is following:\r\n\r\n```\r\n  i18n_de_DE\r\n  i18n_de\r\n  i18n_en\r\n  i18n\r\n  // if not found, the key is returned back\r\n```\r\n\r\n### Locale fallback\r\nThe static function `TextBundle.fallbackLocale` returns the fallback of a given locale (e.g. 'fr_FR' => 'fr' => 'en' => ''). \r\nThis lets you set up a locale fallback chain for your own purpose.\r\n \r\n```js\r\nvar TextBundle = require('@sap/textbundle').TextBundle;\r\n\r\nvar parent = TextBundle.fallbackLocale('en_US');\r\n```\r\n\r\n### ResourceManager \r\nResourceManager class allows managing resources for your module by caching the various TextBundle in order to avoid repeatedly loading them. \r\n\r\n```js\r\nvar ResourceManager = require('@sap/textbundle').ResourceManager;\r\nvar rm = new ResourceManager(path.resolve(__dirname, 'test/properties/i18n'));\r\n\r\nvar bundle = rm.getTextBundle('en_EN');\r\nbundle.getText('greeting');\r\n```\r\n\r\n### Asynchronous resource loading\r\nIn order to improve server scalability, resources should be loaded through asynchronous file system operations.   \r\n\r\n```js\r\nvar ResourceManager = require('@sap/textbundle').ResourceManager;\r\nvar rm = new ResourceManager(path.resolve(__dirname, 'test/properties/i18n'));\r\n\r\nrm.loadTextBundle('en_EN')\r\n    .then(function (bundle) {\r\n        bundle.getText('greeting');\r\n    });\r\n```\r\n\r\n### Resource loading middleware\r\n\r\n```js\r\nvar ResourceManager = require('@sap/textbundle').ResourceManager;\r\nvar rm = new ResourceManager(path.resolve(__dirname, 'test/properties/i18n'));\r\nvar express = require('express');\r\n\r\nvar app = express();\r\n\r\nfunction requestLocale(req) {\r\n    var locale = req.locale = req.acceptsLanguages(['en-US', 'en', 'de-DE', 'de', 'fr-FR', 'fr']) || 'en';\r\n    return locale;\r\n}\r\n\r\napp.use('/', rm.getMiddleware(requestLocale));\r\n\r\napp.use('/myHandler', function (req, res, next) {\r\n    // resources for request locale have been loaded at this stage \r\n    var bundle = rm.getTextBundle(req.locale);\r\n    bundle.getText('greeting');\r\n});\r\n```\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 4.1.0 - 2022-01-12\r\n\r\n### Added\r\n- Node.js 16.x support.\r\n\r\n## 4.0.0 - 2021-02-04\r\n\r\n### Added\r\n- Node.js 14.x support.\r\n\r\n### Fixed\r\n- Reworked the \"langtag\" regex\r\n\r\n### Removed\r\n- Node.js 6.x support\r\n\r\n## 3.1.0 - 2019-12-06\r\n\r\n### Added\r\n- Node.js 12.x support.\r\n\r\n## 3.0.0 - 2019-05-02\r\n\r\n### Removed\r\n- Node.js v0.12 support\r\n- Node.js v4 support\r\n\r\n## 2.3.0 - 2018-12-18\r\n\r\n### Added\r\n- Node.js version 10 support\r\n\r\n## 2.2.1 - 2018-02-07\r\n\r\n### Fixed\r\n- Missing typings from package\r\n\r\n## 2.2.0 - 2018-01-09\r\n\r\n### Added\r\n- Node.js version 8 support\r\n- CHANGELOG.md\r\n- Typings\r\n\r\n## 2.1.0 - 2017-07-04\r\n\r\n### Added\r\n- Static function TextBundle.fallbackLocale.\r\n\r\n## 2.0.6 - 2017-01-25\r\n\r\n### Changed\r\n- Rename package to use @sap scope.\r\n"},{"name":"textmining","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/textmining\r\n@sap/textmining is a Node.js module on the XS Advanced platform that supports text mining. Text mining makes determinations about the content of unstructured text documents by examining the terms used within them.\r\n\r\n@sap/textmining is implemented as an interface to the Text Mining SQL API in HANA. The API functions and parameters follow the pattern of the Text Mining XS Classic API:\r\n- `categorizeKNN()`\r\n- `getRelatedDocuments()`\r\n- `getRelatedTerms()`\r\n- `getRelevantDocuments()`\r\n- `getRelevantTerms()`\r\n- `getSuggestedTerms()`\r\n- `initialize()`\r\n\r\nFor more information on the Text Mining SQL API, see the [SAP HANA SQL and System Views Reference](http://help.sap.com/hana/SAP_HANA_SQL_and_System_Views_Reference_en.pdf) section **Advanced Data Processing**. For `initialize()`, refer to the section **ALTER FULLTEXT INDEX**.\r\n\r\nFor more information on the Text Mining XS Classic API, see the [SAP HANA Text Mining XS JavaScript API Reference](http://help.sap.com/hana/SAP_HANA_XS_JavaScript_API_Reference_en/$.text.mining.Session.html).\r\n\r\nFor more information on text mining, see the [SAP HANA Text Mining Developer Guide](http://help.sap.com/hana/SAP_HANA_Text_Mining_Developer_Guide_en.pdf).\r\n\r\n## Usage example\r\n\r\n```javascript\r\nvar textmining = require('@sap/textmining');\r\nvar hdb = require('hdb');\r\nvar db = {\r\n  \"host\": \"HOST\",\r\n  \"port\": 3XX15,\r\n  \"user\": \"USERNAME\",\r\n  \"password\": \"PASSWORD\"\r\n}\r\n\r\nvar client = hdb.createClient({\r\n  host: db.host,\r\n  port: db.port,\r\n  user: db.user,\r\n  password: db.password\r\n});\r\n\r\nvar p = {\r\n  inputTermText : \"term\",\r\n  top : 10,\r\n  threshold : 0.3\r\n}\r\n\r\nvar config = {\r\nclient : client,\r\nreferenceTable : 'SCHEMA.TABLE',\r\nreferenceColumn : 'COLUMN'\r\n}\r\n\r\nvar tmd = new textmining(config);\r\nclient.connect(function(err){\r\n  if(err)\r\n  {\r\n    client.end();\r\n    throw err;\r\n    return;\r\n  }\r\n  tmd.getSuggestedTerms(p, function(err, result){\r\n    if(err)\r\n    {\r\n      client.end();\r\n      throw err;\r\n      return;\r\n    }\r\n    console.log(result);\r\n    client.end();\r\n  });\r\n});\r\n```\r\n"},{"name":"ui-annotations","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# sap-ui-annotations\r\nUI Annotations\r\n\r\nThe purpose of this module is to provide UI Annotation Definitions required for CDS to OData V4 exposure on XSA Plateform. \r\n\r\nHow to Use this module:\r\n\r\n1) Create package.json file under db module in an MTA project if already not present.\r\n2) Add dependency to the sap-ui-annotations module like below:\r\n\r\n_______________________________________________________________________________\r\n{\r\n  \"name\": \"deploy\",\r\n  \"dependencies\": {\r\n  \t\"@sap/hdi-deploy\": \"2.3.0\",\r\n  \t\"@sap/ui-annotations\": \"2.0.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"node node_modules/@sap/hdi-deploy/deploy.js\"\r\n  }\r\n}\r\n_______________________________________________________________________________\r\n\r\nPlease Note - The version number are subject to change for both the modules used above.\r\n"},{"name":"ui5-builder-webide-extension","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# ui5-builder-webide-extension\r\n\r\nThe SAP Web IDE extension for the UI5 builder provides custom tasks which are not part of the standard UI5 builder. The tasks can be added to the application or library project as custom tasks.\r\n\r\n## Usage\r\n\r\nFirst of all, declare the dependency to this project in the package.json of the application or library:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"ui5-builder-webide-extension\": \"^1.0.0\"\r\n  },\r\n```\r\n\r\nAs of today, the custom tasks need to be added to the `dependencies` section rather than to the `devDependencies` section.\r\n\r\nNow, you can add the custom tasks to the `ui5.yaml` of the application or library:\r\n\r\n```yaml\r\nspecVersion: '1.0'\r\nmetadata:\r\n  name: my-app\r\ntype: application\r\nbuilder:\r\n    customTasks:\r\n    - name: simpleTask\r\n      afterTask: replaceVersion\r\n    - name: otherTask\r\n      afterTask: simpleTask\r\n```\r\n\r\nThe `simpleTask` will be added after the `replaceVersion` and the `otherTask` will be executed after the `simpleTask`.\r\n","changelog":"##1.0.1-\r\nFirst published version\r\n\r\n##1.0.2- \r\n  fix: resources task - resources array is moved into method\r\n  fix: update neo-app task - write is a promise\r\n\r\n##1.0.3- \r\n fix: update @sap/di.code-validation.xml to 1.0.13\r\n \r\n##1.0.4- \r\n fix: update @sap/di.code-validation.xml to 1.0.16\r\n fix: update @sap/di.code-validation.json to 1.0.10\r\n \r\n"},{"name":"ui5-jsdocs","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"[![Build Status](https://prod-build10100.wdf.sap.corp:443/buildStatus/icon?job=devx-wing%2Fdevx-wing-eslint-plugin-ui5-jsdocs-SP-REL-common_indirectshipment)](https://prod-build10100.wdf.sap.corp:443/job/devx-wing/job/devx-wing-eslint-plugin-ui5-jsdocs-SP-REL-common_indirectshipment/)\r\n\r\n# @sap/ui5-jsdocs\r\n\r\n## Overview\r\nThis is the eslint plugin for UI5 appplications. It contains a set of eslint rules and recommended ESLint configuration for static jsdoc code checks of sap.ui.define modules to be used by UI5 appplication developers.\r\n\r\n## Usage\r\n\r\nTo add this package as a dependency in your **package.json** file, do the following:\r\n\r\n1. Under the \"devDependencies\" section, add the following dependency: `\"@sap/eslint-plugin-ui5-jsdocs\": \"a.b.c\"`\r\n1. Add `.eslintrc.json` file with the following content:\r\n\r\n```json\r\n{\r\n\t\"plugins\": [\"@sap/ui5-jsdocs\"],\r\n\t\"extends\": \"plugin:@sap/ui5-jsdocs/recommended\"\r\n}\r\n```\r\n\r\n## List of rules\r\n\r\n| Rule | Description | Recommended Severity  | Fixable \r\n| :--------------------------------- | :------------------------------------------------------------------------------------------------------ | :------------------- | :------------------- |\r\n| [no-jsdoc](docs/rules/no-jsdoc.md) | There is no JSDoc provided | Warning | yes\r\n| [no-jsdoc-param](docs/rules/no-jsdoc-param.md) | There is no JSDoc param defined | Warning | yes\r\n| [no-jsdoc-param-type](docs/rules/no-jsdoc-param-type.md) | There is no JSDoc param type defined | Warning | no\r\n| [wrong-jsdoc-param-type](docs/rules/wrong-jsdoc-param-type.md) | The JSDoc param type is incorrect | Warning | yes\r\n| [duplicate-jsdoc-params](docs/rules/duplicate-jsdoc-params.md) | The argument should contain only one JSDoc param | Warning | no\r\n"},{"name":"ui5-visual-editor","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAPUI5 Visual Editor extension for BAS\r\n\r\n## Build extension\r\n1. Run `npm install` in the root folder\r\n1. Run `npm run all`\r\n1. *ui5-visual-editor.vsix* file should be created in project root\r\n\r\n## Run extension in BAS\r\n1. Open BAS\r\n1. Create a basic dev space\r\n1. Create a `default-plugins` folder under `/home/user`\r\n1. Copy *vsix* file to `/home/user/default-plugins` folder\r\n1. Restart dev space\r\n\r\n### Open SAPUI5 Visual Editor\r\n1. Create or import an adaptation project\r\n1. Right click on `webapp/manifest.appdescr_variant` and click `Open SAPUI5 Visual Editor` (or open command palette and select `Open SAPUI5 Visual Editor`)\r\n"},{"name":"ux-cds-odata-language-server-extension","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/ux-cds-odata-language-server-extension\r\n\r\nThe SAP Fiori tools - CDS OData Language Server enhances the functionality of [SAP Cloud Platform core data services plug-in for Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=SAPSE.vscode-cds) with the features assisting you to define [OData annotations](https://cap.cloud.sap/docs/advanced/odata#annotations) in .cds files serving Fiori UIs.\r\n\r\n## **1. Code Completion**\r\n\r\nThe SAP Fiori tools - CDS OData Language Server provides a list of suggestions based on the service metadata and OData vocabularies. An application developer can open such a list of suggestions for annotation aliases, terms, records, properties and their values and accept one of them to speed up applying OData annotations to service entities and elements. The suggestion lists are context sensitive, and include only the values that are allowed by OData vocabulary specification. This eliminates the need to look up the valid elements and values or type complete values. \r\n\r\n## **2. Micro-Snippets**\r\n\r\nThe SAP Fiori tools - CDS OData Language Server  provides a number of generic micro-snippets in the suggestion lists. These are small blocks of code based on OData vocabulary definitions that can be inserted to avoid triggering the code completion for each annotation element separately. An application developer can insert repeating code patterns such as annotation aliases, terms, and records more efficiently.\r\n\r\n## **3. Diagnostics (error-checking)**\r\n\r\nThe SAP Fiori tools - CDS OData Language Server validates the OData annotations against the project metadata, annotation vocabularies, and OData specification. An application developer can view the diagnostic messages and navigate to the related place in the annotation file to fix the issues.\r\n\r\n## **4. Documentation (Vocabulary Information)**\r\n\r\nThe SAP Fiori tools - CDS OData Language Server provides vocabulary information for annotation terms and their elements, such as property values, record types, etc. This information may include a description, applicability, type, etc. It also indicates if a term/element is experimental or deprecated and informs the developer if the element is mandatory. An application developer can use this information to make a better decision on how to use the annotation. The documentation scope depends on the information provided in the respective vocabulary.\r\n\r\n## **5. Go to Definition/Peek Definition**\r\n\r\nThe Go To Definition feature helps you to navigate to the source of a referenced annotation and opens the result in a new tab.\r\n\r\nThe Peek Definition feature lets you preview the definition of a annotation without switching away from the code that you're writing.\r\n\r\n## **6. i18n Support**\r\n\r\nThe SAP Fiori tools - CDS OData Language Server provides diagnostic warning for hard-coded translatable text values which do not match the expected i18n reference format. Together with the standard functions of SAP Cloud Platform core data services plug-in it simplifies maintaining translateable values.\r\n\r\n\r\n## **Out of Scope**\r\n\r\nCompletion items for path values are only provided based on files referenced via the `using` directive and annotations applied to the entities exposed from the same service.\r\nAdditionally, this version of annotation language server doesn’t support:\r\n- [Core Data Services Common](https://cap.cloud.sap/docs/cds/annotations) annotations\r\n- Annotations applied to complex elements\r\n    ```\r\n    annotate IncidentService.Priority with {\r\n        code {\r\n            @(Common.Text: 'aaa') value;\r\n        }\r\n    };\r\n    ```\r\n- Annotations embedded in entity definitions\r\n    ```\r\n    entity IncidentService @(UI.SelectionFields: [incidentStatus_code]) {\r\n        title @Common : {\r\n                Text            : name,\r\n                TextArrangement : #TextOnly\r\n        } @title: 'Title'\r\n    };\r\n    ```\r\n- Annotations on parameters of parameterized entities \r\n\r\n\r\n## Known Issues\r\n\r\n- CDS path notation mixed with OData path notation (string value in CDS) in annotations.\r\n    - Value paths use CDS notation e.g `LineItem : [ {Value : category.code} ]`\r\n    - Annotation path uses OData path notation e.g \r\n    ```\r\n    Facets : [{\r\n        $Type:'UI.ReferenceFacet',\r\n        Target: 'incidentFlow/@UI.LineItem'\r\n    }]\r\n    \r\n    ```\r\n- Using generated fields from association in annotations. This is needed for correct interpretation by SAP Fiori Elements framework. \r\n\r\n\r\n## Vocabulary Support Matrix\r\n\r\nThe following OData vocabularies are supported by CDS Compiler and Annotation Service\r\n\r\n| Vocabulary                            | Annotation Service | CDS Compiler |\r\n| ------------------------------------- | ------------------ | ------------ |\r\n| Org.OData.Aggregation.V1              | X                  | X            |\r\n| Org.OData.Authorization.V1            | X                  | X            |\r\n| Org.OData.Capabilities.V1             | X                  | X            |\r\n| Org.OData.Core.V1                     | X                  | X            |\r\n| Org.OData.Measures.V1                 | X                  | X            |\r\n| Org.OData.Repeatability.V1            | X                  | X            |\r\n| Org.OData.Temporal.V1                 | X                  |              |\r\n| Org.OData.Validation.V1               | X                  | X            |\r\n| com.sap.vocabularies.Analytics.v1     | X                  | X            |\r\n| com.sap.vocabularies.CodeList.v1      | X                  | X            |\r\n| com.sap.vocabularies.Common.v1        | X                  | X            |\r\n| com.sap.vocabularies.Communication.v1 | X                  | X            |\r\n| com.sap.vocabularies.Graph.v1         | X                  | X            |\r\n| com.sap.vocabularies.Hierarchy.v1     | X                  | X            |\r\n| com.sap.vocabularies.HTML5.v1         |                    | X            |\r\n| com.sap.vocabularies.ODM.v1           | X                  | X            |\r\n| com.sap.vocabularies.PersonalData.v1  | X                  | X            |\r\n| com.sap.vocabularies.Session.v1       | X                  | X            |\r\n| com.sap.vocabularies.UI.v1            | X                  | X            |\r\n\r\n## **Support**\r\nJoin the [SAP Fiori tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.\r\nPlease assign tag: *SAP Fiori tools*\r\n\r\nTo log an issue with SAP Fiori tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n\r\n## **Documentation**\r\n\r\nFor more information see https://cap.cloud.sap/docs/advanced/fiori#fiori-annotations\r\n","changelog":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [1.5.4] - 2022-04-14\r\n### Fixed\r\n- Unjustified error for `LocalDataProperty` in `Common.ValueList` when the property is defined in the service using a `many` clause.\r\n- Unjustified error for `Action` in `UI.DataFieldForAction` if it contains the signatures (i.e. the parts in () ) . \r\n- Unjustified warning for CAP CDS native annotation `@mandatory` when applied to a parameter.\r\n\r\n## [1.3.5] - 2021-09-30\r\n### Fixed\r\n- Unjustified error \"path does not exist\" for paths pointing to entity elements defined as structured type. \r\n\r\n## [1.2.5] - 2021-07-22\r\n### Fixed\r\n- Unjustified warning for the 'assert.integrity' term when applied to the service.\r\n\r\n## [1.2.3] - 2021-06-24\r\n### Added\r\n- Code completion, diagnostic and go to definition for string properties `CollectionPath` and `ValueListProperty` in `@Common.ValueList` annotation defined on the service level.\r\n- Semantic highlighting in OData annotations.\r\n### Changed\r\n- Updated comprised OData vocabularies to include HTML5 vocabulary https://sap.github.io/odata-vocabularies/vocabularies/HTML5.html.\r\n\r\n\r\n## [1.2.0] - 2021-05-27\r\n### Changed\r\n- Updated comprised OData vocabularies.\r\n### Fixed\r\n- Unjustified error message for expected type\r\n\r\n## [1.1.11] - 2021-05-13\r\n### Changed\r\n- Updated comprised OData vocabularies.\r\n\r\n## [1.1.8] - 2021-04-15\r\n### Added\r\n- Syntax warning for `/` or `.` after annotation term name.  \r\n\r\n### Changed\r\n- Removed paths to the same annotation from code completion. \r\n\r\n## [1.1.7] - 2021-03-31\r\n### Added\r\n- Go To References /Peek References / Show All References for the aggregared properties defined with the `@Analytics.AggregatedProperties` annotation. You can now navigate to the place where the aggregated property is referenced.\r\n\r\n### Changed\r\n- Vocabulary description and long description for restricted `String` values are now displayed in Quick Info window of the completion lists. \r\n\r\n## [1.1.5] - 2021-0304\r\n\r\n### Added\r\n- Code completion, diagnostics and quick info for applying selected client-side odata functions:\r\n  -  `odata.concat`\r\n  -  `odata.fillUriTemplate`\r\n  -  `odata.uriEncode`\r\n- Peek References/ Go To References for annotations referenced in other annotations. You can now see if and where the annotation is referenced. \r\nLimitation: references in propagated annotations might be not included.\r\n\r\n## [1.1.4] - 2021-02-25\r\n\r\n### Changed\r\n- Error message \"Invalid property\" for `@Common.ValueList.entity` substituted with warning of deprecated non-standard property.\r\n\r\n\r\n## [1.1.2] - 2021-02-04\r\n\r\n### Added\r\n- Peek Definition for the dynamically created aggregared properties. You can now see how and where the property used as an annotation value is defined also if it is  dynamically created using the Analytics.AggregatedProperties  annotation.\r\n- Go To Definition for the dynamically created aggregared properties. You can now navigate to the place where the aggregated property is defined with the Analytics.AggregatedProperties annotation.\r\n- Code completion and diagnostics for annotating types with terms applicable to properties and parameters. \r\n\r\n## [1.0.9] - 2021-01-21\r\n\r\n### Added\r\n- Code completion and diagnostics for cds-specific alternatives to OData annotations \r\n- Code completion and diagnostics for annotating services (entity containers)\r\n- Code completion and diagnostics for properties `IsActiveEntity` and `HasActiveEntity` auto-generated on applying `@odata.draft.enabled`\r\n- Peek Definition for entity type properties and actions used in annotations. You can now see where the entity type property or action is defined.\r\n- Go To Definition for entity type properties and actions used in annotations. You can now navigate to the place in the service where the entity type property or action is defined.\r\n- Dedicated validation and quick fix for wrong case in annotation terms, properties, record types, `$Type`, `$value`, paths and enum values. You can now fix the typos related to wrong case with one click. \r\n- Dedicated validation for type mismatch in paths\r\n\r\n### Changed\r\n- Omitted qualifier tab stops in code completion snippets for annotation not applied to entity type \r\n- Omitted `:` in code completion snippets for boolean type annotations with default value `true`.\r\n\r\n## [1.0.7] - 2020-12-10\r\n\r\n### Added\r\n- Code completion and diagnostics for referencing actions in DataFieldForAction\r\n- Code completion and diagnostics for properties of open complex types (e.g. Data property in UI.ConnectedFields)\r\n- Code completion, diagnostics and hover information for a subset of cds [common annotations](https://cap.cloud.sap/docs/cds/annotations) recommended in SAP Cloud Application Programming documentation for [serving Fiori UIs](https://cap.cloud.sap/docs/advanced/fiori#prefer-title-and-description)\r\n- String attribute included by default in code snippets for annotation properties of type `Edm.String`\r\n\r\n\r\n## [1.0.6] - 2020-11-25\r\n\r\n### Changed\r\n- Enhanced error messages with additional information.\r\n\r\n### Fixed\r\n- Infinite loop at loading caused by unhandled block comments\r\n- Code completion and validation for $Return in annotations applied to bound actions or functions\r\n- Code completion and validation for paths starting with `_it` in annotations applied to bound actions or functions\r\n- Code completion and validation for relative paths to parameters\r\n\r\n## [1.0.5] - 2020-11-13\r\n\r\n### Added\r\n- Option to omit the redundant types if they are not mandatory based user setting omitRedundantTypesInSnippets.\r\n\r\n### Changed\r\n- Excluded some irrelevant path segments from the code completion in paths\r\n\r\n## [1.0.4] - 2020-11-11\r\n\r\n### Fixed\r\n- Performance for large projects\r\n\r\n## [1.0.3] - 2020-10-29\r\n\r\n### Added\r\n- Support for code completion, diagnostic and navigating to definition in paths to annotation. Example:\r\n    ```\r\n    KPI                 : {\r\n    SelectionVariant : ![@UI.SelectionVariant],\r\n    DataPoint        : ![@UI.DataPoint#test],\r\n    }\r\n    ```\r\n- Replacement behavior for editing annotations\r\n\r\n### Fixed\r\n- Code completion for adding annotation before existing annotation when a comma is missing\r\n- Code completion for path segments: removed actions from the completion lists\r\n- False validation for non-standard annotations `@Aggregation.default`, `@Capabilities.Insertable`, `@Capabilities.Updatable`, `@Capabilities.Deletable` and `@Capabilities.Readable`\r\n- False validation for 'Unknown Namespace ...'\r\n- False validation for 'Term cannot be applied ...'\r\n\r\n### Changed: \r\n- Removed qualifier tab stop in embedded annotation snippets, as qualifiers are not allowed there\r\n\r\n\r\n## [1.0.2] - 2020-10-16\r\n\r\n### Added\r\n- Hiding/showing the i18n-related diagnostic messages based on the user/workspace setting `Mark Missing I18n Default`\r\n- Support for flattened annotation structures\r\n- Support for annotating actions and functions\r\n\r\n### Fixed\r\n- Annotating annotations, e.g. annotating UI.LineItem with UI.Criticality\r\n\r\n## [1.0] - 2020-10-08\r\nRelease status: GA We are pleased to announce the official GA of the SAP Fiori tools - CDS OData Language Server.\r\n\r\n### Added\r\n- Basic code completion and diagnostics for annotating entities and elements\r\n- Complex micro snippets for simplified annotation definition\r\n- Vocabulary documentation on hover and in code completion lists\r\n- Internationalization support for language dependent strings: warnings with Quick Fix actions\r\n- Peek Definition support for referenced annotations \r\n- Go To Definition support for referenced annotations \r\n"},{"name":"ux-specification","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/ux-specification\r\n\r\nThis package specifies the structure of SAP Fiori Element templates in form of typescript types and JSON schema files. You can find the JSON schemas under dist/schema.\r\nIt is used by SAP Fiori Tools (see documentation link below) but can also be used independent from this application.\r\n\r\nThe major and minor version of this specification package matches the major and minor version of SAPUI5, which contains Fiori elements.\r\n\r\n_Example_:  \r\n`@sap/ux-specification@1.76.x` specifies the Fiori elements that are delivered with SAPUI5 version 1.76.x\r\n\r\nThe module supports both the OData V2 and the OData V4 version of the templates (aka FioriElementsVersion), you thus can find two different access points for the typescript definitions:\r\n\r\n- src/v2.ts comprises the OData V2 definitions\r\n- src/v4.ts comprises the OData V4 definitions\r\n\r\nJSON schemas are provided for the following schema types:\r\n\r\n- FioriElementsVersion.v2:  Application, ObjectPage, ListReport and OverviewPage\r\n- FioriElementsVersion.v4:  Application, ObjectPage, ListReport   \r\n\r\nFurther schema or template types are planned within the next releases.  \r\nYou can retrieve any generic schema via schemaAccess.ts.\r\n\r\nBesides the specification, src/api.ts provides functions that can be used with SAP Fiori apps in connection with the JSON schemas:\r\n\r\n- generateSchema: converts one generic schema to an application specific one, enriched by app specific information like annotations.\r\n- importConfig: imports information from the app, like manifest settings or SAPUI5 flexibility changes, into one JSON configuration file that relates to a given schema (representing the central settings of the app or of a page of the app).\r\n- exportConfig: exports from one JSON configuration file, returning an updated manifest.json file and a list of SAPUI5 flexibility changes.\r\n- importProject: imports information from the app and generates all schemas and JSON configuration files.\r\n- importProjectSchema: imports information from the app and generates all schemas but no JSON configuration files.\r\n- getApiVersion: returns the given API version. The API version starts with 1 and will only be increased in case of incompatible changes where the consumption layer must react on.\r\n- generateCustomExtension: generates custom extensions, e.g. Custom Page, Custom Column etc. for a V4 application by using the `@sap-ux/fe-fpm-writer`.\r\n\r\nWhen calling any API function you may pass a logger instance for collecting any messages. The interface of your logger must fit to the ExtensionLogger definition. If no logger is passed, the output channel for messages is the console.\r\n\r\n## Constraints\r\n\r\nThe definitions and functions do not handle the OData annotations of the SAP Fiori Element templates.\r\n\r\n## Support\r\n\r\nJoin the [SAP Fiori tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.  \r\nPlease assign tag: _SAP Fiori tools_.\r\n\r\nTo log an issue with SAP Fiori tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n\r\n## Documentation \r\n\r\n- Visit **SAP Help Portal** for [SAP Fiori tools](https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US) documentation. \r\n\r\n## License\r\n\r\n<details>\r\n    <summary>SAP DEVELOPER LICENSE AGREEMENT</summary>\r\n    <p/>\r\n    Please scroll down and read the following Developer License Agreement carefully (\"Developer Agreement\").  By clicking \"I Accept\" or by attempting to download, or install, or use the SAP software and other materials that accompany this Developer Agreement (\"SAP Materials\"), You agree that this Developer Agreement forms a legally binding agreement between You (\"You\" or \"Your\") and SAP SE, for and on behalf of itself and its subsidiaries and affiliates (as defined in Section 15 of the German Stock Corporation Act) and You agree to be bound by all of the terms and conditions stated in this Developer Agreement. If You are trying to access or download the SAP Materials on behalf of Your employer or as a consultant or agent of a third party (either \"Your Company\"), You represent and warrant that You have the authority to act on behalf of and bind Your Company to the terms of this Developer Agreement and everywhere in this Developer Agreement that refers to 'You' or 'Your' shall also include Your Company. If You do not agree to these terms, do not click \"I Accept\", and do not attempt to access or use the SAP Materials.\r\n    <p/>\r\n    1.  LICENSE:\r\n    <br/>SAP grants You a non-exclusive, non-transferable, non-sublicensable, revocable, limited use license to copy, reproduce and distribute the application programming interfaces (\"API\"), documentation, plug-ins, templates, scripts and sample code (\"Tools\") on a desktop, laptop, tablet, smart phone, or other appropriate computer device that You own or control (any, a \"Computer\") to create new applications (\"Customer Applications\"). You agree that the Customer Applications will not: (a) unreasonably impair, degrade or reduce the performance or security of any SAP software applications, services or related technology (\"Software\"); (b) enable the bypassing or circumventing of SAP's license restrictions and/or provide users with access to the Software to which such users are not licensed; (c) render or provide, without prior written consent from SAP, any information concerning SAP software license terms, Software, or any other information related to SAP products; or (d) permit mass data extraction from an SAP product to a non-SAP product, including use, modification, saving or other processing of such data in the non-SAP product. In exchange for the right to develop Customer Applications under this Agreement, You covenant not to assert any Intellectual Property Rights in Customer Applications created by You against any SAP product, service, or future SAP development.\r\n    <p/>\r\n    2.  INTELLECTUAL PROPERTY:\r\n    <br/>(a) SAP or its licensors retain all ownership and intellectual property rights in the APIs, Tools and Software. You may not: a) remove or modify any marks or proprietary notices of SAP, b) provide or make the APIs, Tools or Software available to any third party, c) assign this Developer Agreement or give or transfer the APIs, Tools or Software or an interest in them to another individual or entity, d) decompile, disassemble or reverse engineer (except to the extent permitted by applicable law) the APIs Tools or Software, (e) create derivative works of or based on the APIs, Tools or Software, (f) use any SAP name, trademark or logo, or (g) use the APIs or Tools to modify existing Software or other SAP product functionality or to access the Software or other SAP products' source code or metadata.\r\n    <br/>(b) Subject to SAP's underlying rights in any part of the APIs, Tools or Software, You retain all ownership and intellectual property rights in Your Customer Applications.\r\n    <p/>\r\n    3. FREE AND OPEN SOURCE COMPONENTS:\r\n    <br/>The SAP Materials may include certain third party free or open source components (\"FOSS Components\"). You may have additional rights in such FOSS Components that are provided by the third party licensors of those components.\r\n    <p/>\r\n    4. THIRD PARTY DEPENDENCIES:\r\n    <br/>The SAP Materials may require certain third party software dependencies (\"Dependencies\") for the use or operation of such SAP Materials. These dependencies may be identified by SAP in Maven POM files, product documentation or by other means. SAP does not grant You any rights in or to such Dependencies under this Developer Agreement. You are solely responsible for the acquisition, installation and use of Dependencies. SAP DOES NOT MAKE ANY REPRESENTATIONS OR WARRANTIES IN RESPECT OF DEPENDENCIES, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND OF FITNESS FOR A PARTICULAR PURPOSE. IN PARTICULAR, SAP DOES NOT WARRANT THAT DEPENDENCIES WILL BE AVAILABLE, ERROR FREE, INTEROPERABLE WITH THE SAP MATERIALS, SUITABLE FOR ANY PARTICULAR PURPOSE OR NON-INFRINGING.  YOU ASSUME ALL RISKS ASSOCIATED WITH THE USE OF DEPENDENCIES, INCLUDING WITHOUT LIMITATION RISKS RELATING TO QUALITY, AVAILABILITY, PERFORMANCE, DATA LOSS, UTILITY IN A PRODUCTION ENVIRONMENT, AND NON-INFRINGEMENT. IN NO EVENT WILL SAP BE LIABLE DIRECTLY OR INDIRECTLY IN RESPECT OF ANY USE OF DEPENDENCIES BY YOU.\r\n    <p/>\r\n    5.  WARRANTY:\r\n    <br/>a)  If You are located outside the US or Canada: AS THE API AND TOOLS ARE PROVIDED TO YOU FREE OF CHARGE, SAP DOES NOT GUARANTEE OR WARRANT ANY FEATURES OR QUALITIES OF THE TOOLS OR API OR GIVE ANY UNDERTAKING WITH REGARD TO ANY OTHER QUALITY. NO SUCH WARRANTY OR UNDERTAKING SHALL BE IMPLIED BY YOU FROM ANY DESCRIPTION IN THE API OR TOOLS OR ANY AVAILABLE DOCUMENTATION OR ANY OTHER COMMUNICATION OR ADVERTISEMENT. IN PARTICULAR, SAP DOES NOT WARRANT THAT THE SOFTWARE WILL BE AVAILABLE UNINTERRUPTED, ERROR FREE, OR PERMANENTLY AVAILABLE.  FOR THE TOOLS AND API ALL WARRANTY CLAIMS ARE SUBJECT TO THE LIMITATION OF LIABILITY STIPULATED IN SECTION 4 BELOW.\r\n    <br/>b)  If You are located in the US or Canada: THE API AND TOOLS ARE LICENSED TO YOU \"AS IS\", WITHOUT ANY WARRANTY, ESCROW, TRAINING, MAINTENANCE, OR SERVICE OBLIGATIONS WHATSOEVER ON THE PART OF SAP. SAP MAKES NO EXPRESS OR IMPLIED WARRANTIES OR CONDITIONS OF SALE OF ANY TYPE WHATSOEVER, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND OF FITNESS FOR A PARTICULAR PURPOSE. IN PARTICULAR, SAP DOES NOT WARRANT THAT THE SOFTWARE WILL BE AVAILABLE UNINTERRUPTED, ERROR FREE, OR PERMANENTLY AVAILABLE.  YOU ASSUME ALL RISKS ASSOCIATED WITH THE USE OF THE API AND TOOLS, INCLUDING WITHOUT LIMITATION RISKS RELATING TO QUALITY, AVAILABILITY, PERFORMANCE, DATA LOSS, AND UTILITY IN A PRODUCTION ENVIRONMENT.\r\n    <p/>\r\n    6.  LIMITATION OF LIABILITY:\r\n    <br/>a)  If You are located outside the US or Canada: IRRESPECTIVE OF THE LEGAL REASONS, SAP SHALL ONLY BE LIABLE FOR DAMAGES UNDER THIS AGREEMENT IF SUCH DAMAGE (I) CAN BE CLAIMED UNDER THE GERMAN PRODUCT LIABILITY ACT OR (II) IS CAUSED BY INTENTIONAL MISCONDUCT OF SAP OR (III) CONSISTS OF PERSONAL INJURY. IN ALL OTHER CASES, NEITHER SAP NOR ITS EMPLOYEES, AGENTS AND SUBCONTRACTORS SHALL BE LIABLE FOR ANY KIND OF DAMAGE OR CLAIMS HEREUNDER.\r\n    <br/>b)  If You are located in the US or Canada: IN NO EVENT SHALL SAP BE LIABLE TO YOU, YOUR COMPANY OR TO ANY THIRD PARTY FOR ANY DAMAGES IN AN AMOUNT IN EXCESS OF $100 ARISING IN CONNECTION WITH YOUR USE OF OR INABILITY TO USE THE TOOLS OR API OR IN CONNECTION WITH SAP'S PROVISION OF OR FAILURE TO PROVIDE SERVICES PERTAINING TO THE TOOLS OR API, OR AS A RESULT OF ANY DEFECT IN THE API OR TOOLS. THIS DISCLAIMER OF LIABILITY SHALL APPLY REGARDLESS OF THE FORM OF ACTION THAT MAY BE BROUGHT AGAINST SAP, WHETHER IN CONTRACT OR TORT, INCLUDING WITHOUT LIMITATION ANY ACTION FOR NEGLIGENCE. YOUR SOLE REMEDY IN THE EVENT OF BREACH OF THIS DEVELOPER AGREEMENT BY SAP OR FOR ANY OTHER CLAIM RELATED TO THE API OR TOOLS SHALL BE TERMINATION OF THIS AGREEMENT. NOTWITHSTANDING ANYTHING TO THE CONTRARY HEREIN, UNDER NO CIRCUMSTANCES SHALL SAP AND ITS LICENSORS BE LIABLE TO YOU OR ANY OTHER PERSON OR ENTITY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR INDIRECT DAMAGES, LOSS OF GOOD WILL OR BUSINESS PROFITS, WORK STOPPAGE, DATA LOSS, COMPUTER FAILURE OR MALFUNCTION, ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSS, OR EXEMPLARY OR PUNITIVE DAMAGES.\r\n    <p/>\r\n    7.  INDEMNITY:\r\n    <br/>You will fully indemnify, hold harmless and defend SAP against law suits based on any claim: (a) that any Customer Application created by You infringes or misappropriates any patent, copyright, trademark, trade secrets, or other proprietary rights of a third party, or (b) related to Your alleged violation of the terms of this Developer Agreement.\r\n    <p/>\r\n    8.  EXPORT:\r\n    <br/>The Tools and API are subject to German, EU and US export control regulations. You confirm that: a) You will not use the Tools or API for, and will not allow the Tools or API to be used for, any purposes prohibited by German, EU and US law, including, without limitation, for the development, design, manufacture or production of nuclear, chemical or biological weapons of mass destruction; b) You are not located in Cuba, Iran, Sudan, Iraq, North Korea, Syria, nor any other country to which the United States has prohibited export or that has been designated by the U.S. Government as a \"terrorist supporting\" country (any, an \"US Embargoed Country\"); c) You are not a citizen, national or resident of, and are not under the control of, a US Embargoed Country; d) You will not download or otherwise export or re-export the API or Tools, directly or indirectly, to a US Embargoed Country nor to citizens, nationals or residents of a US Embargoed Country; e) You are not listed on the United States Department of Treasury lists of Specially Designated Nationals, Specially Designated Terrorists, and Specially Designated Narcotic Traffickers, nor listed on the United States Department of Commerce Table of Denial Orders or any other U.S. government list of prohibited or restricted parties and f) You will not download or otherwise export or re-export the API or Tools , directly or indirectly, to persons on the above-mentioned lists.\r\n    <p/>\r\n    9.  SUPPORT:\r\n    <br/>Other than what is made available on the SAP Community Website (SCN) by SAP at its sole discretion and by SCN members, SAP does not offer support for the API or Tools which are the subject of this Developer Agreement.\r\n    <p/>\r\n    10.  TERM AND TERMINATION:\r\n    <br/>You may terminate this Developer Agreement by destroying all copies of the API and Tools on Your Computer(s). SAP may terminate Your license to use the API and Tools immediately if You fail to comply with any of the terms of this Developer Agreement, or, for SAP's convenience by providing you with ten (10) day's written notice of termination (including email). In case of termination or expiration of this Developer Agreement, You must destroy all copies of the API and Tools immediately.  In the event Your Company or any of the intellectual property you create using the API, Tools or Software are acquired (by merger, purchase of stock, assets or intellectual property or exclusive license), or You become employed, by a direct competitor of SAP, then this Development Agreement and all licenses granted in this Developer Agreement shall immediately terminate upon the date of such acquisition.\r\n    <p/>\r\n    11.  LAW/VENUE:\r\n    <br/>a)  If You are located outside the US or Canada: This Developer Agreement is governed by and construed in accordance with the laws of the Germany. You and SAP agree to submit to the exclusive jurisdiction of, and venue in, the courts of Karlsruhe in Germany in any dispute arising out of or relating to this Developer Agreement.\r\n    <br/>b)  If You are located in the US or Canada: This Developer Agreement shall be governed by and construed under the Commonwealth of Pennsylvania law without reference to its conflicts of law principles. In the event of any conflicts between foreign law, rules, and regulations, and United States of America law, rules, and regulations, United States of America law, rules, and regulations shall prevail and govern. The United Nations Convention on Contracts for the International Sale of Goods shall not apply to this Developer Agreement. The Uniform Computer Information Transactions Act as enacted shall not apply.\r\n    <p/>\r\n    12. MISCELLANEOUS:\r\n    <br/>This Developer Agreement is the complete agreement for the API and Tools licensed (including reference to information/documentation contained in a URL). This Developer Agreement supersedes all prior or contemporaneous agreements or representations with regards to the subject matter of this Developer Agreement. If any term of this Developer Agreement is found to be invalid or unenforceable, the surviving provisions shall remain effective. SAP's failure to enforce any right or provisions stipulated in this Developer Agreement will not constitute a waiver of such provision, or any other provision of this Developer Agreement.\r\n\r\n</details>\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [1.102.0] - 2022-06-16\r\n\r\n### Added\r\n- Missing exposure of type definitions was added.\r\n\r\n### Changed\r\nOData V2:\r\n- Custom column property \"columnIndex\". Schema enhancement by defining range using \"minimum=0\".\r\n\r\n### Removed\r\nOData V4:\r\n- In case of List Report views, non-applicable table properties are removed.\r\n\r\n### Deprecated\r\n\r\n### Fixed\r\nOData V4:\r\n- In case of List Report views, custom columns with navigation property are considered for the correct view.\r\n- Avoid creation of empty personalization object\r\nOData V2:\r\n- Custom column issue with Grid/Tree/Analytical table types - empty second custom column is added in xml files\r\n\r\n### Quality\r\n\r\n"},{"name":"ux-ui5-fe-mockserver-middleware","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/ux-ui5-fe-mockserver-middleware\r\n\r\n## Features\r\n\r\nThe **SAP Fiori - UI5 middleware for the Fiori elements mock server** is a middleware extension for the [UI5 Tooling](https://github.com/SAP/ui5-tooling). As an alternative to proxying OData requests to a live backend, it supports loading mock data for OData v2/v4 requests for supported Fiori elements templates. As the mock server runs locally without requiring a network connection to a backend system, it is useful for development and test scenarios.\r\n\r\n## Installation\r\n\r\n1. Get [Node.js](https://nodejs.org/en/download/)\r\n2. Install the mockserver middleware\r\n    ```sh\r\n    npm install @sap/ux-ui5-fe-mockserver-middleware\r\n    ```\r\n\r\n## Usage\r\n\r\nIn order to use the mock server, the npm module `@sap/ux-ui5-fe-mockserver-middleware` needs to be added as devDependency and ui5.dependencies to `package.json`, and a valid `ui5.yaml` configuration needs to be provided.\r\n**Entries in package.json**\r\n\r\n```\r\n[..]\r\n\r\n\"devDependencies\": {\r\n    \"@sap/ux-ui5-fe-mockserver-middleware\": \"^1\"\r\n},\r\n\"ui5\": {\r\n    \"dependencies\": [\r\n        \"@sap/ux-ui5-fe-mockserver-middleware\"\r\n    ]\r\n}\r\n\r\n[..]\r\n```\r\n\r\n**Example for a yaml configuration file**\r\n\r\n```\r\n\r\nspecVersion: '2.0'\r\nmetadata:\r\n    name: <NAME>\r\ntype: application\r\nserver:\r\n    customMiddleware:\r\n        - name: sap-fe-mockserver\r\n          mountPath: /\r\n          afterMiddleware: compression\r\n          configuration:\r\n            annotations:\r\n              localPath: './webapp/annotations/annotation.xml'\r\n              urlPath: '/sap/opu/odata/IWFND/CATALOGSERVICE;v=2/Annotations*'\r\n            services:\r\n              - urlPath: '/sap/opu/odata/sap/<SERVICE_NAME>'\r\n              metadataXmlPath: './webapp/localService/metadata.xml'\r\n              mockdataRootPath: './webapp/localService/data'\r\n              - urlPath: '/sap/opu/odata/sap/<OTHER_SERVICE_NAME>'\r\n              metadataXmlPath: './webapp/localService/other_metadata.xml'\r\n              mockdataRootPath: './webapp/localService/data'\r\n\r\n```\r\n\r\n**Sample application**\r\n\r\nSee the usage in demo apps [SAP Fiori sample apps](https://github.com/SAP-samples/fiori-tools-samples)\r\n\r\n## Support\r\n\r\nJoin the [SAP Fiori tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.\r\nPlease assign tag: _SAP Fiori tools_\r\n\r\nTo log an issue with SAP Fiori tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\r\n\r\n## 1.6.4 (2022-06-16)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* draft workflow now properly work on sub entities ([#187](https://github.tools.sap/ux/mockserver/issues/187)) ([0c87411](https://github.tools.sap/ux/mockserver/commit/0c87411fa9673fa7afbb2f559f6d13a1b8c1465f))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add node-fetch types ([05be756](https://github.tools.sap/ux/mockserver/commit/05be756689273ffae83825ef0b566319d7299b96))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* **security:** fix test failure ([d062529](https://github.tools.sap/ux/mockserver/commit/d062529a34daa03496829a7c1de104cb63430afe))\r\n* **security:** revert upgrade node-fetch ([c29ffe7](https://github.tools.sap/ux/mockserver/commit/c29ffe77927289345b82259cba969820b31bfdc2))\r\n* **security:** upgrade node-fetch ([4538969](https://github.tools.sap/ux/mockserver/commit/453896923883e63f5260f76494f09edab6078e4a))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* consume external mockserver from the internal one ([#196](https://github.tools.sap/ux/mockserver/issues/196)) ([29c1f6e](https://github.tools.sap/ux/mockserver/commit/29c1f6e9edef126d4f9f5cff525816b83ac6faa2))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.6.3 (2022-06-08)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* draft workflow now properly work on sub entities ([#187](https://github.tools.sap/ux/mockserver/issues/187)) ([0c87411](https://github.tools.sap/ux/mockserver/commit/0c87411fa9673fa7afbb2f559f6d13a1b8c1465f))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.6.2 (2022-06-08)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* draft workflow now properly work on sub entities ([#187](https://github.tools.sap/ux/mockserver/issues/187)) ([0c87411](https://github.tools.sap/ux/mockserver/commit/0c87411fa9673fa7afbb2f559f6d13a1b8c1465f))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.6.1 (2022-06-08)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* draft workflow now properly work on sub entities ([#187](https://github.tools.sap/ux/mockserver/issues/187)) ([0c87411](https://github.tools.sap/ux/mockserver/commit/0c87411fa9673fa7afbb2f559f6d13a1b8c1465f))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n# 1.6.0 (2022-05-05)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* draft workflow now properly work on sub entities ([#187](https://github.tools.sap/ux/mockserver/issues/187)) ([0c87411](https://github.tools.sap/ux/mockserver/commit/0c87411fa9673fa7afbb2f559f6d13a1b8c1465f))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.5.5 (2022-04-21)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* draft workflow now properly work on sub entities ([#187](https://github.tools.sap/ux/mockserver/issues/187)) ([0c87411](https://github.tools.sap/ux/mockserver/commit/0c87411fa9673fa7afbb2f559f6d13a1b8c1465f))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.5.4 (2022-04-07)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand during sticky session ([#185](https://github.tools.sap/ux/mockserver/issues/185)) ([86c551c](https://github.tools.sap/ux/mockserver/commit/86c551cd1461fc6389490d5dce1730ce65979801))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* mockserver in browser was not refreshable ([#182](https://github.tools.sap/ux/mockserver/issues/182)) ([a6da74c](https://github.tools.sap/ux/mockserver/commit/a6da74c7d94516d6387e6ca4242c379ae40d90da))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* support of sticky session token ([#183](https://github.tools.sap/ux/mockserver/issues/183)) ([3fe1ed2](https://github.tools.sap/ux/mockserver/commit/3fe1ed25d1e7b69f836cfb63281a376f01b7659c))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.5.3 (2022-03-24)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* browser usage ([#180](https://github.tools.sap/ux/mockserver/issues/180)) ([4a600f3](https://github.tools.sap/ux/mockserver/commit/4a600f3374462ca45e33ef733011c52a64d5fa7f))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changeset response ([#171](https://github.tools.sap/ux/mockserver/issues/171)) ([9a5f1f5](https://github.tools.sap/ux/mockserver/commit/9a5f1f55b62f3173a5ce2b97eeb9af3c4b88f58d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* in case of 1..1 to 1..1 generated data the mockserver was not responding ([#181](https://github.tools.sap/ux/mockserver/issues/181)) ([515fbbf](https://github.tools.sap/ux/mockserver/commit/515fbbf8a310a28acf590c464dfb20334bad246f))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* karma still is behaving weirdly ([#179](https://github.tools.sap/ux/mockserver/issues/179)) ([9f2bc83](https://github.tools.sap/ux/mockserver/commit/9f2bc8335cb1be7ae90dc69876b51c09e1aaefd0))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* lamba operators were a bit too eager ([#176](https://github.tools.sap/ux/mockserver/issues/176)) ([4f27e8f](https://github.tools.sap/ux/mockserver/commit/4f27e8f4b972f255eccabb1f314b4663e572b7f4))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* singleton should be supported ([#172](https://github.tools.sap/ux/mockserver/issues/172)) ([1aa16b5](https://github.tools.sap/ux/mockserver/commit/1aa16b5bf8c969e4faa7b96eeb1df4ede884caa1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.5.2 (2022-03-10)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* asynchronous API were not handled correctly and were breaking some custom coding ([#164](https://github.tools.sap/ux/mockserver/issues/164)) ([43aa319](https://github.tools.sap/ux/mockserver/commit/43aa319011683aca387d0904a849fb80c55a8c18))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* etag do not work in browser ([#163](https://github.tools.sap/ux/mockserver/issues/163)) ([9eb26e8](https://github.tools.sap/ux/mockserver/commit/9eb26e8ff8fc6b1a11d7429ba9b533986f2bc69b))\r\n* expand now take the content of the mockdata as priority ([#167](https://github.tools.sap/ux/mockserver/issues/167)) ([0b294e8](https://github.tools.sap/ux/mockserver/commit/0b294e80a3cfa3f0b9153fa47d0070680f1d53fe))\r\n* improve code coverage ([#169](https://github.tools.sap/ux/mockserver/issues/169)) ([1d409fe](https://github.tools.sap/ux/mockserver/commit/1d409fe6d6ad5243736e0e2ae230b76f9e160388))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* improve the filter parser to better deal with nested parenthesis ([#161](https://github.tools.sap/ux/mockserver/issues/161)) ([b649f7a](https://github.tools.sap/ux/mockserver/commit/b649f7ae3904ff26b08f75618353480dbe844f84))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* mockserver contributor API can now access other entityset ([#156](https://github.tools.sap/ux/mockserver/issues/156)) ([62bd237](https://github.tools.sap/ux/mockserver/commit/62bd237cee1692bf4eada02691e4f170a9e4ae4c))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support ETAG ([#158](https://github.tools.sap/ux/mockserver/issues/158)) ([17e0522](https://github.tools.sap/ux/mockserver/commit/17e05223d5cb848254bb53439ac61ecf652836f3))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.5.1 (2022-02-28)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* allow empty string in filter parser ([d1138f0](https://github.tools.sap/ux/mockserver/commit/d1138f092625d41ec373a0450468cf0d34423baa))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* changing data in watch mode works properly ([#149](https://github.tools.sap/ux/mockserver/issues/149)) ([6913dbf](https://github.tools.sap/ux/mockserver/commit/6913dbf693285c57b8a2c89ce0c4338219202486))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([a22d30b](https://github.tools.sap/ux/mockserver/commit/a22d30b0653ac4483da72220338ff1d3df8ce4db))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* make sure we don't crash while logging ;) ([ebb6d35](https://github.tools.sap/ux/mockserver/commit/ebb6d3516e6eeb68c0375a298e162833b62850b4))\r\n* mockserver in browser doesn't work with graceful-fs ([#153](https://github.tools.sap/ux/mockserver/issues/153)) ([8904877](https://github.tools.sap/ux/mockserver/commit/8904877a5e9e26a9cd8a8479ae552360f5f8a398))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* properly support v2 guid in filters ([#150](https://github.tools.sap/ux/mockserver/issues/150)) ([f58a151](https://github.tools.sap/ux/mockserver/commit/f58a15190b57eda3d00b71814fa6ceaa48c702db))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* update entry API doesn't require you to fetch the whole object manually anymore ([#151](https://github.tools.sap/ux/mockserver/issues/151)) ([fef0bfb](https://github.tools.sap/ux/mockserver/commit/fef0bfb570a1aa7255750771ca1542d6970aaee0))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* introduce a reload hook behind the metadata ([#152](https://github.tools.sap/ux/mockserver/issues/152)) ([926f7cc](https://github.tools.sap/ux/mockserver/commit/926f7ccf36fab3e333e6af73c351e2b30231d2f8))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n# 1.5.0 (2022-02-16)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* escape annotation path so that it can match standard url ([#145](https://github.tools.sap/ux/mockserver/issues/145)) ([d963b19](https://github.tools.sap/ux/mockserver/commit/d963b192c7f1538425f290cdfa549da96f5bf3f2))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* prefer: return=minimal implementation ([#141](https://github.tools.sap/ux/mockserver/issues/141)) ([2daf339](https://github.tools.sap/ux/mockserver/commit/2daf33961684cd6613ff947ec57e60b4331182f5))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* search query can be enclosed in double quote ([#140](https://github.tools.sap/ux/mockserver/issues/140)) ([3cc4326](https://github.tools.sap/ux/mockserver/commit/3cc4326c506fe559d6b36176229fcf0d98642b20))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.9 (2022-02-04)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* add more debug logs ([#126](https://github.tools.sap/ux/mockserver/issues/126)) ([2063d55](https://github.tools.sap/ux/mockserver/commit/2063d55d48326da8ede3c852c9162014a4a1245e))\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* borken tests ([7d47012](https://github.tools.sap/ux/mockserver/commit/7d470129a96d385258ce4734835ad5e1914e2e7e))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* data is not visible with the loose key mode ([891ddd1](https://github.tools.sap/ux/mockserver/commit/891ddd15bc781061701f445526298cf0448b94ce))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* draft is globally improved ([#112](https://github.tools.sap/ux/mockserver/issues/112)) ([e1e9f2e](https://github.tools.sap/ux/mockserver/commit/e1e9f2e519fefb29200113576d6e462a7c4d3921))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* **infra:** run tets and lint in the PR ([#124](https://github.tools.sap/ux/mockserver/issues/124)) ([b172cc6](https://github.tools.sap/ux/mockserver/commit/b172cc6e8884bff833d7c1df59d5eb64654b1b37))\r\n* issues when creating objects ([#125](https://github.tools.sap/ux/mockserver/issues/125)) ([e6a21a7](https://github.tools.sap/ux/mockserver/commit/e6a21a7502157702ed7916bd47ef1e3f03622c38))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* main snapshot issue ([25f5067](https://github.tools.sap/ux/mockserver/commit/25f5067b05067cc1b8b598d583b172c4070de6d9))\r\n* make sure the mockserver works with the api from karma ([#119](https://github.tools.sap/ux/mockserver/issues/119)) ([6280945](https://github.tools.sap/ux/mockserver/commit/6280945dd104c11c1fd342c3853f0d52740efae6))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* Query parsing parenthesis mismatch ([#118](https://github.tools.sap/ux/mockserver/issues/118)) ([ea391f7](https://github.tools.sap/ux/mockserver/commit/ea391f741cc2726d421e961be730d07515dcf3ec))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use graceful-fs to prevent issue on windows with open files ([#137](https://github.tools.sap/ux/mockserver/issues/137)) ([d74b0e6](https://github.tools.sap/ux/mockserver/commit/d74b0e64b3d71cb9c3b1174840888123ffc9455a))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is crashing requests ([#111](https://github.tools.sap/ux/mockserver/issues/111)) ([39424b1](https://github.tools.sap/ux/mockserver/commit/39424b1933ba3ed61f713f8e4ad664da12db8c60))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support composition without foreign key ([#113](https://github.tools.sap/ux/mockserver/issues/113)) ([c412834](https://github.tools.sap/ux/mockserver/commit/c41283434aa346d739e9e541ef4d6f3a2bc7be89))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.8 (2022-01-20)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* entity data can be null when accessing a property by path ([#81](https://github.tools.sap/ux/mockserver/issues/81)) ([acb6655](https://github.tools.sap/ux/mockserver/commit/acb6655ccf6a6f1e6f41e37cde124e6606e17a11))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve error handling ([#82](https://github.tools.sap/ux/mockserver/issues/82)) ([65531f2](https://github.tools.sap/ux/mockserver/commit/65531f2f63fba1af4d450e1e579f26760888c5ef))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* newly created draft items are not saved ([#93](https://github.tools.sap/ux/mockserver/issues/93)) ([d69488f](https://github.tools.sap/ux/mockserver/commit/d69488f982b3fbee6203647c7f7e8e48fd4a9c25))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* or-ed complex functions now work properly ([#92](https://github.tools.sap/ux/mockserver/issues/92)) ([bc6544a](https://github.tools.sap/ux/mockserver/commit/bc6544abe71dbf55346976e9d3cea2c48e9712f4))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* return all properties if query does not contain $select ([#83](https://github.tools.sap/ux/mockserver/issues/83)) ([37627ca](https://github.tools.sap/ux/mockserver/commit/37627ca554f2be2f07cd6e8b801108571d5655eb))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* select work properly when combining navProperties and expand ([#94](https://github.tools.sap/ux/mockserver/issues/94)) ([1d575e8](https://github.tools.sap/ux/mockserver/commit/1d575e8cdcd16196883d39f7f685a455c8c22540))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* allow to define header for error response ([#95](https://github.tools.sap/ux/mockserver/issues/95)) ([d701c36](https://github.tools.sap/ux/mockserver/commit/d701c36bc894c39da7e0badc9b4bfd38ca6eff64))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* configuration now supports multiple services / annotations ([#98](https://github.tools.sap/ux/mockserver/issues/98)) ([9c7f04e](https://github.tools.sap/ux/mockserver/commit/9c7f04e876dd4ef9af0fff4e8da1754ff27047da))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n* update the snapshot ([5b40eda](https://github.tools.sap/ux/mockserver/commit/5b40edad344d5d9eab3712d07ae069b036bea03c))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.7 (2021-12-08)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* oData guid are now properly parsed in filters ([#79](https://github.tools.sap/ux/mockserver/issues/79)) ([07b041e](https://github.tools.sap/ux/mockserver/commit/07b041e641a0ef1e33fdaa440ad1276c9ff14798))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* properly go to draft for multiple level of data ([#78](https://github.tools.sap/ux/mockserver/issues/78)) ([9cb3b19](https://github.tools.sap/ux/mockserver/commit/9cb3b193e84dd006786f3bf4d2d80c7222cfa515))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.6 (2021-11-25)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* ensure dynamic loading of config still works ([#47](https://github.tools.sap/ux/mockserver/issues/47)) ([7bb2854](https://github.tools.sap/ux/mockserver/commit/7bb2854e90831cf03f56a6116453171468c81675))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([#44](https://github.tools.sap/ux/mockserver/issues/44)) ([ee39cbb](https://github.tools.sap/ux/mockserver/commit/ee39cbb3af9e6acd252aed97900d2962df484f7b))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* keep all properties for expand ([#72](https://github.tools.sap/ux/mockserver/issues/72)) ([67175d7](https://github.tools.sap/ux/mockserver/commit/67175d7a0c3b79571560d60cfd137bf7848f1696))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* usage in the browser is working again ([#52](https://github.tools.sap/ux/mockserver/issues/52)) ([aa7f700](https://github.tools.sap/ux/mockserver/commit/aa7f700ad422a209651dc62ca8f11ea181128e82))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* adapt Edm.Date mockdata ([#67](https://github.tools.sap/ux/mockserver/issues/67)) ([bee36af](https://github.tools.sap/ux/mockserver/commit/bee36af93bd897fa91e93168883755ae66b1dbf2))\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* add support for EntityContainer extension ([#64](https://github.tools.sap/ux/mockserver/issues/64)) ([4a494c2](https://github.tools.sap/ux/mockserver/commit/4a494c20c81268024357b900bc3c1974739dbb69))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* dev script for vscode debug ([#70](https://github.tools.sap/ux/mockserver/issues/70)) ([19e689d](https://github.tools.sap/ux/mockserver/commit/19e689d547111d66289cc39fa8616145de2f1c25))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.5 (2021-10-12)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix webpack ([925c9a5](https://github.tools.sap/ux/mockserver/commit/925c9a59ba9c5c30c20bcd3a7439fc5def046d25))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* test ([360087e](https://github.tools.sap/ux/mockserver/commit/360087efcb08887ec4d379ddda988f8f20c6c9c2))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.4 (2021-10-08)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* **security:** add tgz filtering configuration ([50af7be](https://github.tools.sap/ux/mockserver/commit/50af7be4c3548bf2a0845b65367aa0bfba37dab1))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* bundle the mockserver code ([#37](https://github.tools.sap/ux/mockserver/issues/37)) ([ddc6c4d](https://github.tools.sap/ux/mockserver/commit/ddc6c4d454abf8bdf84db0b9e4a42a36e27ada2d))\r\n* follow the same logic flow when called outside of batch ([cb33b36](https://github.tools.sap/ux/mockserver/commit/cb33b363852e5cd4b42f3b983023389e7b2df8c9))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.3 (2021-10-04)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* also allows contextBasedIsolation for inline config ([#31](https://github.tools.sap/ux/mockserver/issues/31)) ([dc5083c](https://github.tools.sap/ux/mockserver/commit/dc5083cc0c43f528309adf8adbf3f4061db4b5d9))\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n* support watch option  ([#29](https://github.tools.sap/ux/mockserver/issues/29)) ([f80853b](https://github.tools.sap/ux/mockserver/commit/f80853bfc6f1132fae14fc813902bef8c68a42d4))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.2 (2021-09-29)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n\r\n\r\n\r\n\r\n\r\n## 1.4.1 (2021-09-28)\r\n\r\n\r\n### Bug Fixes\r\n\r\n* build it ([6e6c6cf](https://github.tools.sap/ux/mockserver/commit/6e6c6cf95df87e87f7f7050f942e5b6bc884ad74))\r\n* change test port ([ec47cc1](https://github.tools.sap/ux/mockserver/commit/ec47cc14cf4760d5b1723be79218210ebafa8f1d))\r\n* data access ([880653e](https://github.tools.sap/ux/mockserver/commit/880653e9a60191177e6ee669136caecdd1fae179))\r\n* disable test requiring backend ([ef00ae9](https://github.tools.sap/ux/mockserver/commit/ef00ae95d35c9f854d38d78b7cf2d1ce42643754))\r\n* error message with code and content type ([#20](https://github.tools.sap/ux/mockserver/issues/20)) ([823281c](https://github.tools.sap/ux/mockserver/commit/823281c64b8a6caa4a95f209836fc188a18a388a))\r\n* improve parametrized support in v2 ([4396e78](https://github.tools.sap/ux/mockserver/commit/4396e787042c10bc670ac182459ee80ca88e924f))\r\n* improve parametrized support in v2 - ([0fb008d](https://github.tools.sap/ux/mockserver/commit/0fb008d6aa1d4114dd7f20c23523465af02cefd3))\r\n* **infra:** fix xmake build ([88a2bc8](https://github.tools.sap/ux/mockserver/commit/88a2bc8b41ff2b75ae3c0f4a8db18ee3cb10e52b))\r\n* proper support for function in v4 ([6a101d3](https://github.tools.sap/ux/mockserver/commit/6a101d346a50d2cf5bd3d035fcd3dd704284bb6e))\r\n* support direct POST ([8c6b731](https://github.tools.sap/ux/mockserver/commit/8c6b7317d41c1c065bc284937583f6a305a2bfde))\r\n* update AVT to work better with edmx with multiple schema ([5e3e02f](https://github.tools.sap/ux/mockserver/commit/5e3e02fce440c461dfddebe40bc4a3aee7103ee8))\r\n* use proper express API ([23d76bc](https://github.tools.sap/ux/mockserver/commit/23d76bce95aeecd22eeb8339172cafcc91a77bfe))\r\n* use yarn ([923e8e0](https://github.tools.sap/ux/mockserver/commit/923e8e0fb29d1f1140ca4f7ab359a6b246104628))\r\n* v2 expand is now working fine ([e653a6f](https://github.tools.sap/ux/mockserver/commit/e653a6fc15f671c4f4c344f5826f27470bcf4c0f))\r\n\r\n\r\n### Features\r\n\r\n* add sort capabilities ([f37b754](https://github.tools.sap/ux/mockserver/commit/f37b754d7385c7ec4ef1b58576a08420cf39bb36))\r\n* basic usage sample ([4ea757a](https://github.tools.sap/ux/mockserver/commit/4ea757a9d44a9e911517a50bfa4ec0928038d36d))\r\n* samples / doc / api doc ([a8a5acf](https://github.tools.sap/ux/mockserver/commit/a8a5acff494042f58b99061fd9c9a22f59d15036))\r\n"},{"name":"ux-ui5-tooling","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/ux-ui5-tooling\r\n\r\nThe SAP Fiori Tools - UI5 Tooling contains a selection of custom [middlewares](https://sap.github.io/ui5-tooling/pages/extensibility/CustomServerMiddleware/) that can be used with the command `ui5 serve` as well as custom [tasks](https://sap.github.io/ui5-tooling/pages/extensibility/CustomTasks/) that can be used with the command `ui5 build`. \r\nFurthermore, the module expose the cli `fiori` offering e.g. the [`fiori run`](#run) command is a wrapper of the `ui5 serve` commands and provides some additional parameters as well as `fiori add deploy-config` and `fiori add flp-config` to extend an existing project.\r\n\r\n## [**Middlewares**](#middlewares)\r\n\r\nSAP Fiori tools use the capabilities of custom middlewares to start and preview SAP Fiori elements or SAPUI5 freestyle applications, e.g. to enable auto refresh, to switch the version of SAPUI5 sources or to serve static resources. Starting with version `1.3.0` the behaviour of the preview of the SAP Fiori applications has changed. Now the persistent iAppState is ignored in order to have the source code changes always apply when application is refreshed. If you want to enable the iAppState then you need to add the URL parameter `fiori-tools-iapp-state=true` to the browser URL, e.g. `http://localhost:8080/test/flpSandbox.html?fiori-tools-iapp-state=true#masterDetail-display`.\r\n\r\n### [**1. Application Reload**](#1-application-reload)\r\n\r\nThe application reload middleware allows developers to preview SAP Fiori applications while developing/configuring them. Whenever a file relevant for the SAP Fiori application is changed, the reload middleware will refresh the application preview.\r\n\r\n#### Example Configuration\r\n\r\nExecuting `npx fiori run` in your project with the configuration below in a `ui5.yaml` would start the application reload middleware with its default settings.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-appreload\r\n    afterMiddleware: compression\r\n```\r\n\r\n#### Configuration options\r\n\r\nThe application reload middleware does not require any configuration parameters. However, there are optional parameters that can be used if the project structure differs from standard SAP Fiori projects.\r\n\r\n#### path\r\n\r\n- `<string>` (default: `webapp`)\r\nPath that is to be watched. By default the standard SAPUI5 `webapp` folder is used\r\n\r\n#### ext\r\n\r\n- `<string>` (default: `html,js,json,xml,properties,change`)\r\nChange this parameter to select a custom set of file extensions that are to be watched\r\n\r\n#### port\r\n\r\n- `<int>` (default: `35729`)\r\nPort to be used to communicate file system changes\r\n\r\n#### debug\r\n\r\n- `<boolean>` (default: `false`)\r\nSet this parameter to get more log information.\r\n\r\n### [**2. Proxy**](#2-proxy)\r\n\r\nThe proxy middleware provides you with the capabilities to connect to diffent back-end systems or to switch the SAPUI5 version of the application. The proxy is based on the [http-proxy-middleware](https://www.npmjs.com/package/http-proxy-middleware).\r\n\r\n### Configuration Examples\r\n\r\n#### [Connecting to a back-end system](#connecting-to-a-back-end-system)\r\n\r\nExecuting `npx fiori run` in your project with the configuration below in the `ui5.yaml` file would forward any request starting with the `path` parameter to the provided back-end `url`.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\n\r\n#### [Connecting to a back-end system with destination](#connecting-to-a-back-end-system-with-destination)\r\n\r\nIf the back-end is hidden behind a destination then you can also provide the `destination` in the configuration.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n```\r\n#### [Connecting to a back-end system with destination and principal propagation](#connecting-to-a-back-end-system-with-destination-and-principal-propagation)\r\n\r\nIf the back-end destination is configured to use principal propagation, then in some cases the requests might fail. If this occurs then you will need to set the optional property `xfwd` to `true`. This will add the x-forwared headers to the proxy requests.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n      xfwd: true\r\n```\r\n#### [Connecting to multiple back-end systems](#connecting-to-multiple-back-end-systems)\r\nYou can also connect to multiple back-end systems like this.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /northwind\r\n      url: https://my.backend_2.com:1234\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\n#### [Connecting to the SAP Business Technology Platform](#connecting-to-the-sap-business-technology-platform)\r\nIf you want to connect to an ABAP Environment on SAP Business Technology Platform then you will need to set the optional property `scp` to `true`. For any other target, remove this property or set it to `false`.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.steampunk.com:1234\r\n      scp: true\r\n```\r\n\r\n#### [Connecting to the SAP API Business Hub](#connecting-to-the-sap-api-business-hub)\r\nIf you want to connect to the SAP API Business Hub then you will need to set the optional property `apiHub` to `true`, and set the corresponding `path` and `url`, e.g.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /s4hanacloud\r\n      url: https://api.sap.com\r\n      apiHub: true\r\n```\r\n#### [Proxying WebSockets](#proxying-websockets)\r\nIf you want the proxy to handle also WebSockets, then you need to set the optional property `ws` to `true`, e.g.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      ws: true\r\n```\r\n\r\n#### [Changing the path to which a request is proxied](#changing-the-path-to-which-a-request-is-proxied)\r\nLet's that you want to configure the proxy to send requests from a certain path `/services/odata` to a destination with a specified entry path `/my/entry/path`. Then you need to do the following:\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /services/odata\r\n      pathPrefix: /my/entry/path\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n```\r\n\r\n#### [Providing Proxy Configuration](#providing-proxy-configuration)\r\nBy the default the `fiori-tools-proxy` will read the proxy configuration from the Node.js environment variables `proxy`, `https-proxy` and `noproxy`. If those variables are not set, then you can also provide the proxy configuration in the `ui5.yaml` file. **Please note: if you want to exclude any domains from the proxy then you will need to set the `noproxy` variable, e.g. `npm config set noproxy \"sap.com\"`**.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    proxy: https://myproxy.com:8443\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n\r\n```\r\n\r\n#### [UI5](#ui5)\r\n\r\nBy using the proxy configuration one can also change the SAPUI5 version, which is used to preview the application. By using the `version` parameter one can change the SAPUI5 version as follows:\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      path:\r\n      - /resources\r\n      - /test-resources\r\n      url: https://sapui5.hana.ondemand.com\r\n      version: 1.78.0\r\n```\r\n\r\nStarting with `ux-ui5-tooling` version `1.4.7`, if the `version` property is not set in the `ui5.yaml`, then the `minUI5Version` from `manifest.json` will be used for the application preview. If the `version` property is set, but it is empty, then the `latest` SAPUI5 version from https://ui5.sap.com will be used for the application preview. For any other case the value of the `version` property will be used for the application preview.\r\n\r\n**Note:** all UI5 requests are routed through the proxy. Sometimes this can cause performance issues. If you don't want route the UI5 requests through the proxy, then you can set parameter `directLoad: true`. This will inject the UI5 url in the HTML file of the application and thus the UI5 libs will be loaded directly.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      path:\r\n      - /resources\r\n      - /test-resources\r\n      url: https://sapui5.hana.ondemand.com\r\n      version: 1.78.0\r\n      directLoad: true\r\n```\r\n\r\nStarting with version `1.6.0` one can use the following syntax for proxying different UI5 requests to different URLs, e.g.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      paths:\r\n        - path: /resources\r\n          url: https://ui5.sap.com\r\n        - path: /test-resources\r\n          src: https://sapui5.hana.ondemand.com\r\n      version: '1.100.1'\r\n```\r\n\r\n### [**3. Serve Static**](#3-serve-static)\r\n\r\nThe serve static middleware provides the capability to serve any static resources locally from your machine. E.g. you can serve SAPUI5 locally or any other resources.\r\n\r\n\r\n#### [Example Configuration for serving locally SAPUI5](#example-configuration-for-serving-locally-ui5)\r\n\r\n**Pre-requisites:**\r\nSAPUI5 SDK version is downloaded and extracted locally on the machine. One can download UI5 resources from <https://tools.hana.ondemand.com/#sapui5>\r\n\r\nExecuting `npx fiori run` in your project with the configuration below in a `ui5.yaml` file would serve the UI5 sources from your machine. Any request starting with the `path` parameter will be forwarded to the local path provided in the `src` parameter.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n        - path: /test-resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n```\r\n\r\n#### [Example Configuration for serving any resources locally](#example-configuration-for-serving-any-resources-locally)\r\nExecuting `npx fiori run` in your project with the configuration below in a `ui5.yaml` file would serve resources from your machine. Any request starting with the `path` parameter will be forwarded to the local path provided in the `src` parameter.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /images\r\n          src: \"Path/To/images\"\r\n        - path: /libs\r\n          src: \"Path/To/libs\"\r\n```\r\n\r\n### [Configuration options](#configuration-options-1)\r\nAdditionaly you can specify any of the configuration options (excluding `setHeaders`!) of the [serve-static](https://www.npmjs.com/package/serve-static) middleware.\r\n\r\nE.g. you can set `fallthrough: false`, which will cause the middleware to return 404 error, when it can't find a file on the local system:\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n        - path: /test-resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n      fallthrough: false\r\n```\r\n\r\nAlternatively you can set e.g. `fallthrough: false` only for specific requests:\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n          fallthrough: false\r\n        - path: /test-resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n```\r\n\r\n### [**4. Preview**](#4-preview)\r\nThe `fiori-tools-preview` middleware enables the developer variant creation for SAP Fiori applications.\r\n\r\n### Example configuration\r\nExecuting `npx fiori run --open preview.html` in your project with the configuration below in the `ui5.yaml` opens a new browser tab with the application switched to UI adaptation mode for variant creation. The file `preview.html` is created dynamically at runtime by the `fiori-tools-preview` middleware.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-preview\r\n    afterMiddleware: fiori-tools-appreload\r\n    configuration:\r\n      component: myapp\r\n      ui5Theme: sap_fiori_3\r\n```\r\n\r\n### Configuration options\r\n- **`component`** - application component of the SAP Fiori application (value is prefilled when the application is generated with https://www.npmjs.com/package/@sap/generator-fiori).\r\n- **`ui5Theme`** - SAP Fiori theme of the application (value is prefilled when the application is generated with https://www.npmjs.com/package/@sap/generator-fiori).\r\n- **`libs`** - a comma separated list of additional libraries that should be loaded, e.g. `libs: my.custom.lib1, my.custom.lib2`\r\n\r\n## [**Tasks**](#tasks)\r\n\r\nSAP Fiori Tools use the capabilities of custom tasks to deploy the SAP Fiori projects to ABAP servers.\r\n\r\n### [Deployment to ABAP](#deployment-to-abap)\r\n\r\nThe deployment to ABAP task allows deploying SAP Fiori applications to SAP systems using the [SAPUI5 Repository OData service](https://sapui5.hana.ondemand.com/#/topic/a883327a82ef4cc792f3c1e7b7a48de8.html).\r\n\r\n**Pre-requisites:**\r\n\r\n* SAP component SAP_UI 7.53 or higher is installed in your SAP system\r\n* Service needs to be enabled and accessible from your development environment ([how to check this](https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html))\r\n* For operations on a SAPUI5 ABAP repository, you need the S_DEVELOP authorization.\r\n\r\n**Notes:**\r\n\r\n* the task does not create ABAP transports, therefore, it requires an existing transport if the target ABAP package requires a transport\r\n* only Basic Authentication (user/password based authentication) as well as OAuth2 with the SAP Business Technology Platform\r\n\r\n## Example Configuration\r\n\r\nExecuting `ui5 build --config ui5-deploy.yaml` in your project with the configuration below in a `ui5-deploy.yaml`, manually added to the project, would deploy all files of your `dist` folder except files ending with `.test.js` and the `internal.md` file. The target system is XYZ with client 200. Username and password for authentication will be read from the environment variables `XYZ_USER` and `XYZ_PASSWORD`.\r\n\r\nBased on this example, the application will be created/updated as `/TEST/SAMPLE_APP` in package `/TEST/UPLOAD` and all changes will be recorded in transport request `XYZQ300582`.\r\n\r\nContent of `ui5-deploy.yaml`\r\n\r\n```\r\nbuilder:\r\n  customTasks:\r\n  - name: deploy-to-abap\r\n    afterTask: replaceVersion\r\n    configuration:\r\n      target:\r\n        url: https://XYZ.sap-system.corp:44311\r\n        client: 200\r\n        auth: basic\r\n      credentials:\r\n        username: env:XYZ_USER\r\n        password: env:XYZ_PASSWORD\r\n      app:\r\n        name: /TEST/SAMPLE_APP\r\n        package: /TEST/UPLOAD\r\n        transport: XYZQ300582\r\n      exclude:\r\n      - .*\\.test.js\r\n      - internal.md\r\n```\r\n\r\n### Command to create the ui5-deploy.yaml file\r\n\r\nA newly created project does not contain a deployment configuration (`ui5-deploy.yaml`) but you can create it by executing `npx fiori add deploy-config`. You will be prompted for required information and then the file will be created based on your input and the content of the existing `ui5.yaml` file used for the preview. In addition to creating the configuration, the create deployment command will also update your `package.json` so that you can execute `npm run deploy` afterwards to deploy your application.\r\n\r\n### Setting environment variables in a .env file\r\n\r\nIf you prefer to keep the environment variables in a file, an option can be to create ```.env``` file at the root of your project which contains the environment variables that can be referenced in the ui5.yaml file.\r\n\r\nIMPORTANT: The username and password property will **only** accept environment variable references in the ```ui5-deploy.yaml```.\r\n\r\n```\r\nXYZ_USER=[MY_USER_NAME]\r\nXYZ_PASSWORD=[MY_PASSWORD]\r\n```\r\n\r\n## Command to deploy\r\n\r\nAfter completing the changes in the configuration files, execute the command `npm run deploy`. The deployment task is by default interactive and requires that the user confirms the deploy configuration. If such a confirmation is not required or desired then it can be disable by adding `-- -y` to the `deploy` script e.g. `ui5 build preload --config ui5-deploy.yaml -- -y`\r\n\r\n### Accessing the deployed app\r\n\r\nBased on the sample configurations above, after deploying the app, you can access the app using URL: <https://XYZ.sap-system.corp:44311/sap/bc/ui5-ui5/test/sample_app/index.html?sap-client=200#app-preview>\r\n\r\n## Documentation on the Configuration options\r\n\r\nIn addition to defining parameters in the main yaml file, every parameter can also be defined as environment variable that is referenced in yaml. Using the `dotenv` module, the task also supports project specific environment variables defined in a `.env` file in the root of your project. To reference an environment variable the pattern `env:VAR_NAME` must be used.\r\n\r\n### target\r\n\r\nThe target object contains properties identifying your target SAP system.\r\n\r\n#### url\r\n\r\n- `<string> pattern <protocol>://<hostname>[:<port>]` (required)\r\n- This parameter must contain a url pointing to your target SAP system\r\n\r\n#### client\r\n\r\n- `<number> range [0..999]` (optional)\r\n- The client property is used to identify the SAP client that is to be used in the backend system. It translates to the url parameter `sap-client=<client>` If the client parameter is not provide, the default client will be used.\r\n\r\n#### scp\r\n\r\n- `<boolean>` (default: `false`)\r\n- By default the deployment task will use basic authentication when connecting to the backend. If the target system is ABAP Environment on SAP Business Technology Platform, this parameter needs to be set to `true`.\r\n\r\n#### service\r\n\r\n- `<string>` (default: `/sap/opu/odata/UI5/ABAP_REPOSITORY_SRV`)\r\n- Path pointing to the SAPUI5 ABAP repository OData service in your target system. This parameter only needs to be used if the service is exposed at a different path in your backend system e.g. via alias.\r\n\r\n### credentials (optional)\r\n\r\nThe credentials object is mainly required for CI/CD based deployments and it needs to contain the required parameters to authenticate at your target system. It is only possible to use references to environment variables e.g. `env:MY_VARIABLE` here, plain username and password are not supported.\r\n\r\nFor local usage, we recommend to not use the credentials object at all. As result, the deployment task will utilize the operating systems secure storage maintain credentials.\r\n\r\n#### username\r\n\r\n- `<string>` (required)\r\n- SAP business user for the target system. The user requires authorizations to create/update the target ABAP development object.\r\n\r\n#### password\r\n\r\n- `<string>` (required)\r\n- Password required to authenticate the previously configured user. IMPORTANT: while technically possible to add the password to your config, we strongly DISCOURAGE that but recommend instead the use of environment variables.\r\n\r\n### app\r\n\r\nThe app object describes the backend object that is created/updated as result of the deployment.\r\n\r\n#### name\r\n\r\n- `<string>` (required)\r\n- Unique name of the application. The name is used as part of the application url as well as the name of the ABAP development object used as container for the app.\r\n\r\n#### package\r\n\r\n- `<string>` (required for new apps)\r\n- Name of an existing ABAP package that is used as parent of the deployed application. The parameter is required for the creation of the application in the backend. Any following deployment updating the application does not require the package parameter, i.e. it will be ignored.\r\n\r\n#### transport\r\n\r\n- `<string>` (optional)\r\n- The transport parameter refers to a transport request number that is to be used to record changes to the backend application object. The property is optional because it is only required if the package that is used for deployments requires transport requests.\r\n\r\n#### description\r\n\r\n- `<string>` (optional)\r\n- Optional description added to the created application object in the backend.\r\n\r\n### exclude\r\n\r\n- `<string[] array of regex>` (optional)\r\n- By default the deployment task will create an archive (zip file) of all build files and send it to the backend. By using exclude, you can define expressions to match files that shall not be included into the deployment. Note: `string.match()` is used to evaluate the expressions.\r\n\r\n### index\r\n\r\n- `true|false` (default: `false`)\r\n- If set to `true`, then an additional index.html will be generated and deployed to run the application standalone.\r\n\r\n### test\r\n\r\n- `true|false` (default: `false`)\r\n- If set to `true`, the task will run through all steps including sending the archive to the SAP backend. The backend will not deploy the app but run the pre-deployment checklist and return the result.\r\n\r\n## [Commands](#commands)\r\n### [fiori run](#fiori-run---starts-a-local-web-server-for-running-a-fe-application) - starts a local web server for running a FE application\r\n#### Options\r\n\r\n* `--config, c` - Path to config file (default: `ui5.yaml` in root folder of the project).\r\n* `--verbose` - Enable verbose logging (default: `false`).\r\n* `--port, -p` - Port to start the server on (default for HTTP: 8080, HTTPS: 8443).\r\n* `--open, -o` - Open web server root directory in default browser. Optionally, supplied relative path will be appended to the root URL.\r\n* `--https` - Enables HTTPS over the HTTP/2 protocol for the web server (default: `false`). If you provide the `--https` parameter, but you do not provide the `--key` and `--cert` parameters, then a private key and certificate will be created automatically. **Note: For the automatic key and certificate generation, you need to have OpenSSL installed on your OS. Using HTTPS over HTTP/2 is currently not supported in SAP Business Application Studio.**\r\n* `--key` - Path to the private key for https (default: `\"$HOME/.ui5/server/server.key\"`).\r\n* `--cert` - Path to the certificate for https (default: `\"$HOME/.ui5/server/server.crt\"`).\r\n* `--ui5` - UI5 version to use when running the application (default: version from `ui5.yaml`).\r\n* `--ui5Uri` - UI5 uri to load the UI5 resources from (default: uri from `ui5.yaml`).\r\n* `--proxy` - specify proxy configuration, e.g. `https://myproxy:8443` (default: uses host machine proxy configuration, if any).\r\n\r\n### [fiori add deploy-config](#fiori-add-deploy-config---adds-a-deployment-configuration-to-the-project) - adds a deployment configuration to the project\r\n\r\nThe command allows adding a deployment configuration to the project. The command supports the generation of a configuration for deployment to an ABAP system or to a Cloud Foundry space.\r\n\r\n#### Deployment to ABAP \r\nIf `ABAP` is chosen as target then the CLI will prompt the required information to generate a `ui5-deploy.yaml` required for the `deploy-to-abap` task.\r\n\r\n#### Deployment to Cloud Foundry (CF)\r\nFor the deployment to CF, an MTA configuration will be created. The command allows to create a new configuration i.e. a new `mta.yaml` file or updates an existing `mta.yaml` with the information required for deployment. After successfully creating the configuration, running `npm run build` in the MTA directory that contains the application will try to build a deployable mtar file that can then be deployed to CF with `npm run deploy`.\r\n\r\n**Pre-requisites:**\r\n\r\n* Availablity of the [`mta`](https://github.com/SAP/cloud-mta) executable in the path.\r\nUse `npm i -g mta` to install globally\r\n* Availability of Cloud Foundry CLI tools. Installation instructions: https://docs.cloudfoundry.org/cf-cli/install-go-cli.html\r\n* Availability of CF multiapps plugin. Installation instructions: https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/27f3af39c2584d4ea8c15ba8c282fd75.html\r\n* A correctly configured destination to the backend system\r\n* User authorization on CF to deploy\r\n\r\n#### Artifacts & configuration created\r\n\r\nRunning the command/task, results in a directory structure that looks like this:\r\n```\r\nmta_directory\r\n|_ application_directory\r\n   |_ ...\r\n   |_ webapp\r\n      |_ ...\r\n      |_ manifest.json\r\n   |_ ui5.yaml\r\n|_ cf\r\n   |_ deployer\r\n   |_ router\r\n   |_ flp (optional)\r\n...\r\n|_ package.json\r\n|_ mta.yaml\r\n```\r\n#### Information required to generate the configuration\r\n##### Location of MTA Directory\r\nThe tool finds the nearest parent directory that contains a `mta.yaml` and offers that as the MTA directory. Failing that, it defaults to the parent directory of the application.\r\n\r\n##### Destination\r\nDestination configured to connect to the backend on Cloud Foundry. If there's a setting in `ui5.yaml`, that value is offered as the default.\r\n\r\n##### Prefix\r\nPrefix used for the ID of the MTA and the service names. It defaults to the namespace of the app. If a namespace is not found, it defaults to `test`. Please choose a prefix so that the service names are unique to your MTA. Otherwise deployment by multiple people will overwrite the same service.\r\n\r\nAt the end of the generation, it's possible to optionally generate  SAP Fiori launchpad configuration (default: no).\r\n\r\n### [fiori add flp-config](#fiori-add-flp-config---fiori-launchpad-configuration-generation) - Fiori Launchpad configuration generation\r\nIt's possible to create configuration and artifacts required to run the application in an SAP Fiori launchpad. Depending on the target, the command will update either only the application `manifest.json` with the required inbound navigation property, or will also enhance the MTA configuration to contain a standalone FLP on CF.\r\n\r\n### [fiori deploy](#fiori-deploy---performs-the-deployment-of-the-application-into-an-abap-system) - performs the deployment of the application into an ABAP system\r\nDeploys an application to an ABAP frontend server.\r\n\r\n#### Options\r\n\r\n* `--config, c` - Path to config file (default: `ui5-deploy.yaml` in root folder of the project).\r\n* `--noConfig` - Only CLI arguments will be used, no config file is read.\r\n* `--destination, -d` - The destination used in SAP Business Application Studio (default: destination from `ui5-deploy.yaml`).\r\n* `--url, -u` - The url of the service endpoint at the ABAP system (default: url from `ui5-deploy.yaml`).\r\n* `--username` - Name of environment variable containing a username to authenticate (default: username from `ui5-deploy.yaml`).\r\n* `--password` - Name of environment variable containing a password to authenticate (default: password from `ui5-deploy.yaml`).\r\n* `--client, -l` - The ABAP client (default: client from `ui5-deploy.yaml`).\r\n* `--transport, -t` - The id of the transport request (default: transport from `ui5-deploy.yaml`).\r\n* `--name, -n` - The application name (default: name from `ui5-deploy.yaml`).\r\n* `--package, -p` - The ABAP package (default: package from `ui5-deploy.yaml`).\r\n* `--description, -e` - The application description (default: description from `ui5-deploy.yaml`).\r\n* `--yes, -y` - Deploy without asking for confirmation.\r\n* `--failfast, -f` - Throw an error if something goes wrong and exit with a return code != 0.\r\n\r\n\r\n## [FAQ](#faq)\r\n\r\n**My backend system contains the SAP_UI component version 7.53 or newer, but the SAPUI5 repository service cannot be reached.**\r\n\r\n*A: Please check if the service has been activated. More information at <https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html.>*\r\n\r\n**The SAPUI5 repository service is active and reachable but whenever I deploy an application I see the following error \"Request failed with status code 400\".**\r\n\r\nThis could have multiple reasons, please check the console for more information or open transaction `/IWFND/ERROR_LOG` and check the server logs. A common issue is that during the setup, configuring a virus scan profile has been forgotten. This can be corrected in transaction `/IWFND/VIRUS_SCAN`.\r\n\r\n**SSL certificate creation and installation fails with: `Unable to find openssl - please make sure it is installed and available in your PATH`.**\r\n\r\nMost probably the `OpenSSL` package is not installed on your OS. Please install it and make sure that it is available in your `PATH` environment variable.\r\n\r\n## [Support](#support)\r\n\r\nJoin the [SAP Fiori Tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.  \r\nPlease assign tag: _SAP Fiori tools_.\r\n\r\nTo log an issue with SAP Fiori Tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n\r\n## [Documentation](#documentation) \r\n\r\n- Visit **SAP Help Portal** for [SAP Fiori Tools](https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US) documentation. \r\n\r\n## [License](#license)\r\n\r\n<details>\r\n    <summary>SAP DEVELOPER LICENSE AGREEMENT</summary>\r\n    <p/>\r\n    Please scroll down and read the following Developer License Agreement carefully (\"Developer Agreement\").  By clicking \"I Accept\" or by attempting to download, or install, or use the SAP software and other materials that accompany this Developer Agreement (\"SAP Materials\"), You agree that this Developer Agreement forms a legally binding agreement between You (\"You\" or \"Your\") and SAP SE, for and on behalf of itself and its subsidiaries and affiliates (as defined in Section 15 of the German Stock Corporation Act) and You agree to be bound by all of the terms and conditions stated in this Developer Agreement. If You are trying to access or download the SAP Materials on behalf of Your employer or as a consultant or agent of a third party (either \"Your Company\"), You represent and warrant that You have the authority to act on behalf of and bind Your Company to the terms of this Developer Agreement and everywhere in this Developer Agreement that refers to 'You' or 'Your' shall also include Your Company. If You do not agree to these terms, do not click \"I Accept\", and do not attempt to access or use the SAP Materials.\r\n    <p/>\r\n    1.  LICENSE:\r\n    <br/>SAP grants You a non-exclusive, non-transferable, non-sublicensable, revocable, limited use license to copy, reproduce and distribute the application programming interfaces (\"API\"), documentation, plug-ins, templates, scripts and sample code (\"Tools\") on a desktop, laptop, tablet, smart phone, or other appropriate computer device that You own or control (any, a \"Computer\") to create new applications (\"Customer Applications\"). You agree that the Customer Applications will not: (a) unreasonably impair, degrade or reduce the performance or security of any SAP software applications, services or related technology (\"Software\"); (b) enable the bypassing or circumventing of SAP's license restrictions and/or provide users with access to the Software to which such users are not licensed; (c) render or provide, without prior written consent from SAP, any information concerning SAP software license terms, Software, or any other information related to SAP products; or (d) permit mass data extraction from an SAP product to a non-SAP product, including use, modification, saving or other processing of such data in the non-SAP product. In exchange for the right to develop Customer Applications under this Agreement, You covenant not to assert any Intellectual Property Rights in Customer Applications created by You against any SAP product, service, or future SAP development.\r\n    <p/>\r\n    2.  INTELLECTUAL PROPERTY:\r\n    <br/>(a) SAP or its licensors retain all ownership and intellectual property rights in the APIs, Tools and Software. You may not: a) remove or modify any marks or proprietary notices of SAP, b) provide or make the APIs, Tools or Software available to any third party, c) assign this Developer Agreement or give or transfer the APIs, Tools or Software or an interest in them to another individual or entity, d) decompile, disassemble or reverse engineer (except to the extent permitted by applicable law) the APIs Tools or Software, (e) create derivative works of or based on the APIs, Tools or Software, (f) use any SAP name, trademark or logo, or (g) use the APIs or Tools to modify existing Software or other SAP product functionality or to access the Software or other SAP products' source code or metadata.\r\n    <br/>(b) Subject to SAP's underlying rights in any part of the APIs, Tools or Software, You retain all ownership and intellectual property rights in Your Customer Applications.\r\n    <p/>\r\n    3. FREE AND OPEN SOURCE COMPONENTS:\r\n    <br/>The SAP Materials may include certain third party free or open source components (\"FOSS Components\"). You may have additional rights in such FOSS Components that are provided by the third party licensors of those components.\r\n    <p/>\r\n    4. THIRD PARTY DEPENDENCIES:\r\n    <br/>The SAP Materials may require certain third party software dependencies (\"Dependencies\") for the use or operation of such SAP Materials. These dependencies may be identified by SAP in Maven POM files, product documentation or by other means. SAP does not grant You any rights in or to such Dependencies under this Developer Agreement. You are solely responsible for the acquisition, installation and use of Dependencies. SAP DOES NOT MAKE ANY REPRESENTATIONS OR WARRANTIES IN RESPECT OF DEPENDENCIES, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND OF FITNESS FOR A PARTICULAR PURPOSE. IN PARTICULAR, SAP DOES NOT WARRANT THAT DEPENDENCIES WILL BE AVAILABLE, ERROR FREE, INTEROPERABLE WITH THE SAP MATERIALS, SUITABLE FOR ANY PARTICULAR PURPOSE OR NON-INFRINGING.  YOU ASSUME ALL RISKS ASSOCIATED WITH THE USE OF DEPENDENCIES, INCLUDING WITHOUT LIMITATION RISKS RELATING TO QUALITY, AVAILABILITY, PERFORMANCE, DATA LOSS, UTILITY IN A PRODUCTION ENVIRONMENT, AND NON-INFRINGEMENT. IN NO EVENT WILL SAP BE LIABLE DIRECTLY OR INDIRECTLY IN RESPECT OF ANY USE OF DEPENDENCIES BY YOU.\r\n    <p/>\r\n    5.  WARRANTY:\r\n    <br/>a)  If You are located outside the US or Canada: AS THE API AND TOOLS ARE PROVIDED TO YOU FREE OF CHARGE, SAP DOES NOT GUARANTEE OR WARRANT ANY FEATURES OR QUALITIES OF THE TOOLS OR API OR GIVE ANY UNDERTAKING WITH REGARD TO ANY OTHER QUALITY. NO SUCH WARRANTY OR UNDERTAKING SHALL BE IMPLIED BY YOU FROM ANY DESCRIPTION IN THE API OR TOOLS OR ANY AVAILABLE DOCUMENTATION OR ANY OTHER COMMUNICATION OR ADVERTISEMENT. IN PARTICULAR, SAP DOES NOT WARRANT THAT THE SOFTWARE WILL BE AVAILABLE UNINTERRUPTED, ERROR FREE, OR PERMANENTLY AVAILABLE.  FOR THE TOOLS AND API ALL WARRANTY CLAIMS ARE SUBJECT TO THE LIMITATION OF LIABILITY STIPULATED IN SECTION 4 BELOW.\r\n    <br/>b)  If You are located in the US or Canada: THE API AND TOOLS ARE LICENSED TO YOU \"AS IS\", WITHOUT ANY WARRANTY, ESCROW, TRAINING, MAINTENANCE, OR SERVICE OBLIGATIONS WHATSOEVER ON THE PART OF SAP. SAP MAKES NO EXPRESS OR IMPLIED WARRANTIES OR CONDITIONS OF SALE OF ANY TYPE WHATSOEVER, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND OF FITNESS FOR A PARTICULAR PURPOSE. IN PARTICULAR, SAP DOES NOT WARRANT THAT THE SOFTWARE WILL BE AVAILABLE UNINTERRUPTED, ERROR FREE, OR PERMANENTLY AVAILABLE.  YOU ASSUME ALL RISKS ASSOCIATED WITH THE USE OF THE API AND TOOLS, INCLUDING WITHOUT LIMITATION RISKS RELATING TO QUALITY, AVAILABILITY, PERFORMANCE, DATA LOSS, AND UTILITY IN A PRODUCTION ENVIRONMENT.\r\n    <p/>\r\n    6.  LIMITATION OF LIABILITY:\r\n    <br/>a)  If You are located outside the US or Canada: IRRESPECTIVE OF THE LEGAL REASONS, SAP SHALL ONLY BE LIABLE FOR DAMAGES UNDER THIS AGREEMENT IF SUCH DAMAGE (I) CAN BE CLAIMED UNDER THE GERMAN PRODUCT LIABILITY ACT OR (II) IS CAUSED BY INTENTIONAL MISCONDUCT OF SAP OR (III) CONSISTS OF PERSONAL INJURY. IN ALL OTHER CASES, NEITHER SAP NOR ITS EMPLOYEES, AGENTS AND SUBCONTRACTORS SHALL BE LIABLE FOR ANY KIND OF DAMAGE OR CLAIMS HEREUNDER.\r\n    <br/>b)  If You are located in the US or Canada: IN NO EVENT SHALL SAP BE LIABLE TO YOU, YOUR COMPANY OR TO ANY THIRD PARTY FOR ANY DAMAGES IN AN AMOUNT IN EXCESS OF $100 ARISING IN CONNECTION WITH YOUR USE OF OR INABILITY TO USE THE TOOLS OR API OR IN CONNECTION WITH SAP'S PROVISION OF OR FAILURE TO PROVIDE SERVICES PERTAINING TO THE TOOLS OR API, OR AS A RESULT OF ANY DEFECT IN THE API OR TOOLS. THIS DISCLAIMER OF LIABILITY SHALL APPLY REGARDLESS OF THE FORM OF ACTION THAT MAY BE BROUGHT AGAINST SAP, WHETHER IN CONTRACT OR TORT, INCLUDING WITHOUT LIMITATION ANY ACTION FOR NEGLIGENCE. YOUR SOLE REMEDY IN THE EVENT OF BREACH OF THIS DEVELOPER AGREEMENT BY SAP OR FOR ANY OTHER CLAIM RELATED TO THE API OR TOOLS SHALL BE TERMINATION OF THIS AGREEMENT. NOTWITHSTANDING ANYTHING TO THE CONTRARY HEREIN, UNDER NO CIRCUMSTANCES SHALL SAP AND ITS LICENSORS BE LIABLE TO YOU OR ANY OTHER PERSON OR ENTITY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR INDIRECT DAMAGES, LOSS OF GOOD WILL OR BUSINESS PROFITS, WORK STOPPAGE, DATA LOSS, COMPUTER FAILURE OR MALFUNCTION, ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSS, OR EXEMPLARY OR PUNITIVE DAMAGES.\r\n    <p/>\r\n    7.  INDEMNITY:\r\n    <br/>You will fully indemnify, hold harmless and defend SAP against law suits based on any claim: (a) that any Customer Application created by You infringes or misappropriates any patent, copyright, trademark, trade secrets, or other proprietary rights of a third party, or (b) related to Your alleged violation of the terms of this Developer Agreement.\r\n    <p/>\r\n    8.  EXPORT:\r\n    <br/>The Tools and API are subject to German, EU and US export control regulations. You confirm that: a) You will not use the Tools or API for, and will not allow the Tools or API to be used for, any purposes prohibited by German, EU and US law, including, without limitation, for the development, design, manufacture or production of nuclear, chemical or biological weapons of mass destruction; b) You are not located in Cuba, Iran, Sudan, Iraq, North Korea, Syria, nor any other country to which the United States has prohibited export or that has been designated by the U.S. Government as a \"terrorist supporting\" country (any, an \"US Embargoed Country\"); c) You are not a citizen, national or resident of, and are not under the control of, a US Embargoed Country; d) You will not download or otherwise export or re-export the API or Tools, directly or indirectly, to a US Embargoed Country nor to citizens, nationals or residents of a US Embargoed Country; e) You are not listed on the United States Department of Treasury lists of Specially Designated Nationals, Specially Designated Terrorists, and Specially Designated Narcotic Traffickers, nor listed on the United States Department of Commerce Table of Denial Orders or any other U.S. government list of prohibited or restricted parties and f) You will not download or otherwise export or re-export the API or Tools , directly or indirectly, to persons on the above-mentioned lists.\r\n    <p/>\r\n    9.  SUPPORT:\r\n    <br/>Other than what is made available on the SAP Community Website (SCN) by SAP at its sole discretion and by SCN members, SAP does not offer support for the API or Tools which are the subject of this Developer Agreement.\r\n    <p/>\r\n    10.  TERM AND TERMINATION:\r\n    <br/>You may terminate this Developer Agreement by destroying all copies of the API and Tools on Your Computer(s). SAP may terminate Your license to use the API and Tools immediately if You fail to comply with any of the terms of this Developer Agreement, or, for SAP's convenience by providing you with ten (10) day's written notice of termination (including email). In case of termination or expiration of this Developer Agreement, You must destroy all copies of the API and Tools immediately.  In the event Your Company or any of the intellectual property you create using the API, Tools or Software are acquired (by merger, purchase of stock, assets or intellectual property or exclusive license), or You become employed, by a direct competitor of SAP, then this Development Agreement and all licenses granted in this Developer Agreement shall immediately terminate upon the date of such acquisition.\r\n    <p/>\r\n    11.  LAW/VENUE:\r\n    <br/>a)  If You are located outside the US or Canada: This Developer Agreement is governed by and construed in accordance with the laws of the Germany. You and SAP agree to submit to the exclusive jurisdiction of, and venue in, the courts of Karlsruhe in Germany in any dispute arising out of or relating to this Developer Agreement.\r\n    <br/>b)  If You are located in the US or Canada: This Developer Agreement shall be governed by and construed under the Commonwealth of Pennsylvania law without reference to its conflicts of law principles. In the event of any conflicts between foreign law, rules, and regulations, and United States of America law, rules, and regulations, United States of America law, rules, and regulations shall prevail and govern. The United Nations Convention on Contracts for the International Sale of Goods shall not apply to this Developer Agreement. The Uniform Computer Information Transactions Act as enacted shall not apply.\r\n    <p/>\r\n    12. MISCELLANEOUS:\r\n    <br/>This Developer Agreement is the complete agreement for the API and Tools licensed (including reference to information/documentation contained in a URL). This Developer Agreement supersedes all prior or contemporaneous agreements or representations with regards to the subject matter of this Developer Agreement. If any term of this Developer Agreement is found to be invalid or unenforceable, the surviving provisions shall remain effective. SAP's failure to enforce any right or provisions stipulated in this Developer Agreement will not constitute a waiver of such provision, or any other provision of this Developer Agreement.\r\n\r\n</details>\r\n","changelog":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n## [1.6.0] - 2022-05-05\r\n### Changed\r\n- The `fiori-tools-proxy` is now using the [@sap-ux/ui5-proxy-middleware](https://www.npmjs.com/package/@sap-ux/ui5-proxy-middleware) for proxying the UI5 sources\r\n\r\n## [1.5.5] - 2022-04-21\r\n### Fixed\r\n- Fixed an issue with the `fiori-tools-servestatic` middleware not serving files starting with a dot\r\n\r\n## [1.5.4] - 2022-04-07\r\n### Fixed\r\n- Fixed an issue with escaping runtime arguments on Windows with Node.js version 16\r\n\r\n## [1.5.3] - 2022-03-24\r\n### Added\r\n- Added support of new run configuration UI options\r\n\r\n### Fixed\r\n- Fixed an issue where developer variant creation is not starting with SAPUI5 version 1.100.0 and higher\r\n- Fixed an issue where an exception was thrown for SAPUI5 versions <= 1.65 when starting the application preview\r\n\r\n## [1.5.2] - 2022-03-10\r\n### Fixed\r\n- Fixed an issue with the validation of SAPUI5 snapshot versions when starting developer variant creation\r\n\r\n### Changed\r\n- If a port is explictly defined when previewing the application, then this port is not automatically changed, if it is occupied\r\n\r\n## [1.5.1] - 2022-02-24\r\n### Fixed\r\n- Fixed an issue with reading and comparing UI5 versions\r\n- Fixed an issue with previewing applications using services behind a corporate proxy\r\n\r\n### Changed\r\n- Build is no longer executed automatically before starting the application in an external Fiori Launchpad to accomodate custom build procedures\r\n\r\n## [1.5.0] - 2022-02-10\r\n### Fixed\r\n- Fixed an issue with reading and comparing UI5 versions\r\n- Fixed an issue with previewing applications using project based destination\r\n\r\n### Changed\r\n- Requests are not forwarded anymore to next available middleware if UI5 proxy returns 404\r\n\r\n## [1.4.7] - 2022-01-27\r\n### Changed\r\n- Forward request to next available middleware if UI5 proxy response returns 404\r\n- Consolidate UI5 version handling\r\n\r\n## [1.4.6] - 2022-01-13\r\n### Fixed\r\n- Improved variant management validation logic\r\n\r\n## [1.4.3] - 2021-11-18\r\n### Changed\r\n- Updated help texts\r\n\r\n### Fixed\r\n- Fixed an issue with resetting the IAppState on the Object Page\r\n\r\n## [1.4.1] - 2021-11-04\r\n### Fixed\r\n- Fixed minor issues\r\n\r\n## [1.4.0] - 2021-10-21\r\n### Added\r\n- Added a new option to create delivery variants/views\r\n\r\n### Fixed\r\n- Removed wrong WARN messages in the terminal when executing `npx fiori run`\r\n\r\n## [1.3.7] - 2021-10-07\r\n### Changed\r\n- Fixed minor issues and refactoring\r\n\r\n## [1.3.5] - 2021-09-23\r\n### Added\r\n- Added help options for SAP Fiori tools CLI. Typing `npx fiori help` will give the list of commands that the command line tools support. Help text for individual `fiori` commands can also be displayed, e.g. `npx fiori add help`.\r\n\r\n### Fixed\r\n- Stability fixes\r\n\r\n## [1.3.3] - 2021-09-09\r\n### Added\r\n- Added instructions for users on how to retrieve the URL of a deployed application on Cloud foundry\r\n\r\n### Fixed\r\n- Fixed Regex for injecting the UI5 URL into the application's HTML file\r\n\r\n## [1.3.1] - 2021-08-12\r\n### Fixed\r\n- Fixed minor issues\r\n\r\n## [1.3.0] - 2021-07-29\r\n### Added\r\n- Provided the possibility to load UI5 libs directly from CDN, instead of loading via the fiori-tools-proxy\r\n- Introduced iAppState handling. The iAppState is now being deleted when an application is reloaded\r\n\r\n## [1.2.5] - 2021-07-15\r\n### Changed\r\n- Internal improvements and refactoring\r\n\r\n## [1.2.4] - 2021-07-01\r\n### Changed\r\n- Minor fixes and refactoring\r\n\r\n## [1.2.3] - 2021-06-17\r\n### Added\r\n- Added new configuration parameter `fallthrough` for the fiori-tools-servestatic middleware\r\n\r\n## [1.2.1] - 2021-06-03\r\n### Fixed\r\n- Updated dependencies versions because of security fixes\r\n\r\n### Added\r\n- Support for previewing application with destinations that have as URL the full path to the OData service\r\n\r\n## [1.2.0] - 2021-05-20\r\n### Fixed\r\n- Fixed previewing an application with MTA configuration\r\n\r\n## [1.1.11] - 2021-05-06\r\n### Added\r\n- Added new command `npx fiori undeploy` to undeploy an application from ABAP system\r\n\r\n### Fixed\r\n- Fixed an issue causing the application preview to fail if a custom port greater than 9010 is specified\r\n\r\n## [1.1.9] - 2021-04-08\r\n### Added\r\n* Added support in proxy for backend system credentials stored in secure store or in .env file\r\n* Added new proxy configuration property: xfwd\r\n* Added a client property to the YAML file to be used for proxy destination handling\r\n\r\n## [1.1.5] - 2021-03-11\r\n### Fixed\r\n* Improved handling of runtime arguments\r\n\r\n### Added\r\n* Added support for proxying WebSockets\r\n\r\n## [1.1.4] - 2021-02-25\r\n### Fixed\r\n* Fixed handling of the ui5 version parameter in the Fiori CLI\r\n* Hide credentials from proxy url\r\n\r\n### Added\r\n* Notify user when new version is available to install\r\n\r\n## [1.1.2] - 2021-02-11\r\n### Fixed\r\n* Fixed fetching of user information when creating a system\r\n\r\n## [1.1.0] - 2021-01-27\r\n### Fixed\r\n* Fixed HTTPS support for the Livereload of the application\r\n* Fixed automatic SSL certificate creation\r\n* Fixed handling of boolean parameters in the Fiori cli\r\n* Fixed caching issues\r\n\r\n## [1.0.28] - 2021-01-14\r\n### Added\r\n* Support preview of applications based on datasource url of a destination configuration inside a destination instance\r\n\r\n### Fixed\r\n* Fixed several issues in conjunction with preview start in SAP Business Application Studio\r\n* Improved UI of the web page for providing the service key to a service\r\n\r\n## [1.0.26] - 2020-12-03\r\n### Added\r\n* Preview support of applications based on SAP API Business Hub services\r\n* Additional instructions provided to the user when generating `flp-config` to allow integration with the Launchpad module using SAP Business Application Studio\r\n\r\n### Fixed\r\n* Fixed issue when reading the NO_PROXY configuration\r\n\r\n## [1.0.25] - 2020-11-18\r\n### Fixed\r\n* Use ATO Catalog to fetch ATO settings\r\n* Other minor fixes\r\n\r\n### Added\r\n* Proxy support for SAP API Business Hub in SAP Business Application Studio\r\n\r\n## [1.0.24] - 2020-11-05\r\n### Fixed\r\n* Fixed dependency installation in the application folder\r\n* Unable to change folder for a project while generating the deployment configuration on windows\r\n* Fixed the generated xs-app.json for non-SAP systems\r\n\r\n### Added\r\n* Added support for multiple paths configuration for the fiori-tools-servestatic middleware\r\n\r\n\r\n## [1.0.22] - 2020-10-21\r\n### Fixed\r\n* Reduced bundle size\r\n\r\n## [1.0.21] - 2020-10-07\r\n### Fixed\r\n* Build sources are no longer minified to improve debugging.\r\n* Error logging improved\r\n* Fixed issues with unit tests\r\n\r\n### Added\r\n* Provided API to read and remove flex changes from the user's workspace\r\n\r\n\r\n## [1.0.19] - 2020-09-23\r\n### Fixed\r\n* Connectivity service information was missing from the generated mta.yaml for destinations that require it for deployment \r\n\r\n### Added\r\n* Support for specifying username/password provided in an environment variable and passing these as CLI arguments, instead of entering these in ui5.yaml file for deployment\r\n* Provide API to write flex changes into the user's workspace\r\n\r\n## [1.0.18] - 2020-09-09\r\n\r\n### Fixed\r\n* Fixed issue with re-deployment to ABAP\r\n* Updated version of the livereload package\r\n* Fixed configuration for Fiori Launchpad when deploying to Cloud Foundry\r\n\r\n### Added\r\n* Support deployment to S/4HANA Cloud\r\n\r\n## [1.0.16] - 2020-09-02\r\n\r\n### Fixed\r\n* Fix for UI5 parameters provided as string instead of array\r\n* Fix for caching of ui5 sources\r\n* Correct documentation for command to add deployment config\r\n* Improvement for command prompt when creating deployment config for mta project\r\n\r\n### Added\r\n* Updated documentation with info relevant to Cloud Foundry\r\n\r\n## [1.0.15] - 2020-08-12\r\n\r\n### Fixed\r\n* Intent ID is not overwritten when creating the SAP Fiori Launchpad deploy configuration\r\n\r\n## [1.0.11] - 2020-07-29\r\n\r\n### Fixed\r\n* Fixed path re-write issue in App Studio\r\n* Fixed Windows bundling issue\r\n* Fixed issue with fiori run command on Windows\r\n* Other minor fixes\r\n\r\n### Added\r\n* Deploy to Cloud Foundry\r\n* Confirmation added when starting the deployment process\r\n* Confirmation added for app name during deploy config generation\r\n* Confirmation added for target name during deploy config generation\r\n* Confirmation added for sap client during deploy config generation\r\n\r\n## [1.0.9] - 2020-07-16\r\n\r\n### Fixed\r\n\r\n* Fix loading of custom libs\r\n\r\n### Added\r\n\r\n* Add run command to Fiori CLI\r\n* Read fiori run cli params in the proxy middleware\r\n* Readme file updated\r\n\r\n## [1.0.8] - 2020-07-01\r\n### Fixed\r\n- Readme file updated\r\n\r\n## [1.0.7] - 2020-06-17\r\n### Fixed\r\n- Minor stability fixes\r\n\r\n## [1.0.0] - 2020-06-16\r\nRelease status: GA\r\n\r\nWe are pleased to announce the official GA of the ux-ui5-tooling.\r\n\r\n## [0.0.89] - 2020-06-03\r\n### Added\r\n- Multiple back-ends support\r\n- Support for custom UI5 modules\r\n\r\n## [0.0.86] - 2020-05-20\r\n### Added\r\n - Additional deploy functionality (see `npx fiori help`)\r\n - New command `fiori add flp-config` to add Fiori launchpad configuration\r\n - System keys can be uploaded to users secure store\r\n \r\n### Fixed\r\n - Logged URL after deploy is now correct and can be opened\r\n - Namespace check for `z` space during deploy configuration is not case sensitive anymore\r\n - Package name is now all capitals when sending to backend during deployment\r\n - Warning before overwriting existing deploy configuration\r\n\r\n## [0.0.85] - 2020-05-08\r\n### Added\r\n - Downloading of UI5 sources from NPM\r\n\r\n### Fixed\r\n- Reading proxy configuration from VSCode\r\n- Loading UI5 sources in SAP Business Application Studio\r\n- Live reload configuration\r\n\r\n## [0.0.84] - 2020-04-22\r\n### Added\r\n- Destinations support for SAP Business Application Studio\r\n\r\n### Fixed\r\n- Cookies and CSRF token issues fixed\r\n\r\n## [0.0.81] - 2020-04-09\r\n### Added\r\n- Deploy to ABAP functionality with OAuth support\r\n- New middleware for serving local ui5 sources\r\n- Support of snapshot UI5 versions for internal users\r\n\r\n### Fixed\r\n- Fix preview with local UI5 resources\r\n- Add proper handling for ui5Uri arg\r\n- Add proper handling of space separated & quoted runtime args\r\n\r\n## [0.0.79] - 2020-03-24\r\n### Fixed\r\n- Resolved issue when requests are tunneled via proxy\r\n\r\n## [0.0.68] - 2020-02-07\r\n### Added\r\n- CHANGELOG.md documenting the changes\r\n- Internal: enhanced test coverage\r\n\r\n## [0.0.65] - 2020-01-31\r\n### Fixed\r\n- Resolved issues when proxying OData requests to SAP systems with CSRF protection enabled\r\n\r\n## [0.0.62] - 2020-01-17\r\n### Added\r\n- Initial version\r\n- Included proxy and live load middlewares\r\n"},{"name":"vscode-cds","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/vscode-cds\r\n\r\nThis package is not intended to be installed. For installation, please refer to [SAP CDS language support](https://marketplace.visualstudio.com/items?itemName=SAPSE.vscode-cds) on the Visual Studio Marketplace.\r\n\r\nSee the [documentation](https://cap.cloud.sap/docs/get-started/tools) for further information on tools.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).\r\n","changelog":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](https://semver.org/).\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/\r\n\r\n\r\n## Version 6.0.0 - 2022-07-01\r\n\r\n### Added\r\n- using native `notebook` support for `cap-notebook`\r\n- support for new major cds-compiler 3.0.0\r\n- new user setting `cds.workspaceSymbols.caseInsensitive` (default off) to search case insensitive\r\n- new user setting `cds.outline.semantical` (default off) to show outline in a rather semantical structure as opposed to a flat list\r\n- analyze dependencies now supports coloring of layers for monorepos\r\n- env.cdsc is now also considered for code completion\r\n- custom requests to format given content with given options (e.g. for a _formatting options config UI_) and to get path of options file\r\n\r\n### Changed\r\n- now requires NodeJS `>=16.11` (included in recent VSCode)\r\n- now requires Visual Studio Code `>=1.66`\r\n- use `workspace.fs` for file IO during `cds preview`.\r\n\r\n## Fixed\r\n- fixed glitches in cds schema support for `package.json`, `.cdsrc.json` and `.cdsrc-private.json`\r\n- fixed highlighting for empty block comments `/**/`\r\n\r\n### Also see\r\n- `@sap/cds-lsp` 6.0.0\r\n- `@sap/cds-compiler` 3.0.0\r\n\r\n\r\n## Version 4.5.6 - 2022-05-09\r\n\r\n### Added\r\n- file icon for CDS files\r\n\r\n### Changed\r\n- updated included cpaire docs\r\n\r\n### Also see\r\n- `@sap/cds-lsp` 5.5.9\r\n\r\n\r\n## Version 4.5.5 - 2022-05-05\r\n\r\n### Added\r\n\r\n- support syntax highlighting for escape sequences in template strings\r\n\r\n### Fixed\r\n\r\n- find references could have shown wrong entries from localized context \r\n\r\n### Also see\r\n- `@sap/cds-lsp` 5.5.8\r\n\r\n\r\n## Version 4.5.4 - 2022-04-05\r\n\r\n### Changed\r\n- `CAP Release Notes` page now persists its state\r\n### Fixed\r\n- Syntax highlighting in Business Application Studio\r\n\r\n### Also see\r\n- `@sap/cds-lsp` 5.5.7\r\n- `@sap/cds-compiler` 2.13.8\r\n\r\n\r\n## Version 4.5.3 - 2022-03-31\r\n\r\n### Changed\r\n- Consume `package.json` and `.cdsrc.json` schemas from `@sap/cds-lsp`\r\n- Better error message in case `cds preview` could not compile a source file\r\n\r\n### Fixed\r\n- No loner set NODE_ENV to production which resulted in `npm i` only installing prod dependencies\r\n\r\n### Also see\r\n- `@sap/cds-lsp` 5.5.6\r\n- `@sap/cds-compiler` 2.13.6\r\n\r\n\r\n## Version 4.5.2 - 2022-03-03\r\n\r\n### Added\r\n\r\n- New code-formatting options for `action`s and `function`s:\r\n  + `alignActionNames` (aligns names)\r\n  + `alignActionReturns` (aligns `returns` keywords)\r\n\r\n### Changed\r\n\r\n- Removed obsolete code-formatting option `alignAsInElements` (calculated fields use `=` now)\r\n\r\n### Fixed\r\n- Saving a `cds` file now automatically refreshes all open previews for this file\r\n- _Show Formatting Options Configuration_\r\n  + Showed empty samples editor\r\n  + Editor no longer switches to typescript\r\n  + No longer _save changes_ popup when closing samples editor\r\n  + When not opened on existing file (CDS source or .cdsprettier.json) and workspace\r\n    has multiple workspace folders, user has now to pick the workspace folder\r\n- Code formatting:\r\n  + Separate post-annotation with blank\r\n  + Remove erroneous newlines around cardinality and filter in `select`\r\n  + Separate projection items with newlines\r\n- Code completion for annotations now correctly handle e.g: @aaa.| entity\r\n\r\n### Also see\r\n- `@sap/cds-lsp` 5.5.5\r\n\r\n\r\n## Version 4.5.1 - 2022-02-04\r\n\r\n### Fixed\r\n\r\n- extension did not start in Business Application Studio\r\n\r\n### Components\r\n- @sap/cds-lsp 5.5.2\r\n\r\n\r\n## Version 4.5.0 - 2022-01-28\r\n\r\n### Added\r\n\r\n- workspace symbols query now supports filters for kinds\r\n\r\n### Changed\r\n\r\n- consume cds-compiler 2.12.0\r\n- code completion for `index.cds` files will now render just the folder\r\n- CDS language server is now bundled and minified to speed up initialization\r\n- performance: revalidate file on focus got only if stale index\r\n- memory consumption: indexes are now cached per file, no longer per compilation\r\n\r\n### Fixed\r\n\r\n- `cds preview` is now refreshing the preview correctly when called after the underlying cds file has been changed\r\n- `enum` was not indexed\r\n- `composition` of aspect was not indexed\r\n- symbols contained localized entries with recent compiler versions\r\n- workspaces with _many_ workspace folders could lead to stop lsp\r\n- syntax highlighting is now better aligned with CDS grammar:\r\n  + multi-lined strings disabled\r\n  + backslash escaping disabled\r\n  + doubled quotes inside strings to reproduce single quotes\r\n  + element types now include scopes and length/size arguments\r\n\r\n### Components\r\n- @sap/cds-lsp 5.5.0\r\n- @sap/cds-compiler 2.12.0\r\n\r\n\r\n## Version 4.4.0 - 2021-12-03\r\n\r\n### Added\r\n- progress monitor for long runners like References and WorkspaceSymbols\r\n\r\n### Changed\r\n- new 'cold start' start-up behaviour:\r\n    + workspace is not scanned unless required (references, workspace symbols)\r\n    + file contents read during compilation is cached, incl. tried missing paths during path resolution\r\n    + many changes to improve performance and reduce required memory\r\n- `cds preview` now opens a read-only editor to show the cds file preview.\r\n\r\n### Components\r\n- @sap/cds-lsp 5.4.0\r\n- @sap/cds-compiler 2.11.0\r\n\r\n## Version 4.3.0 - 2021-09-23\r\n\r\n### Added\r\n\r\n- doc comments are automatically aligned\r\n- new command: Restart CDS Language Support\r\n\r\n### Fixed\r\n\r\n- certain localized elements were still indexed\r\n- new i18n entry in properties file has corrupted existing last entry\r\n- inconsistency in dependency calculation could have led to incorrect revalidations after a change\r\n\r\n### Changed\r\n\r\n- consume cds-lsp 5.3.0\r\n- consume cds-compiler 2.7.0\r\n- translation support is now lazy\r\n- performance improvements when translation files changed\r\n- last workspace/symbols are cached now to speed up CAP explorer\r\n- user setting cds.workspace.scanCsn has now three modes: Off, ByFileExtension (new default) and InspectJson\r\n\r\n\r\n## Version 4.2.0 - 2021-07-30\r\n\r\n### Added\r\n\r\n- validation mode _ActiveEditorOnly_ (new default).\r\n  The new mode reduces number of compilations during editing and thus improves responsiveness.\r\n- new command _Visualize CDS file dependencies_ to analyze using dependencies of CDS model files.\r\n  Getting an overview of file dependencies can help to keep your project architecture clean.\r\n  Requires the 3rd party extension _Graphviz (dot) language support for Visual Studio Code_ (joaompinto),\r\n  which can be installed with a single click.\r\n\r\n### Changed\r\n\r\n- consume cds-lsp 5.2.0\r\n- consume cds-compiler 2.5.0\r\n\r\n## Version 4.1.1 - 2021-07-05\r\n\r\n### Changed\r\n\r\n- consume cds-lsp 5.1.1\r\n- consume cds-compiler 2.4.4\r\n- new performance relevant user settings\r\n  + `cds.workspace.debounceFastChanges`:  skip intermediate compilations when typing - enabled by default\r\n  + `cds.workspace.scanDependentModules`: skip scanning of node_modules - enabled by default, speeds up start-up time\r\n\r\n    Note:\r\n    - when using code completion for global identifiers (see `cds.completion.workspaceSymbols.minPrefixLength`) this option needs to be enabled\r\n    - for code completion of import paths in `using` statements this option needs to be enabled\r\n    - to include definitions from nodejs dependent modules in workspace symbols this option needs to be enabled\r\n\r\n\r\n## Version 4.1.0 - 2021-06-22\r\n\r\n### Note\r\n\r\nThis is a quality release focusing on performance for large models.\r\nThere are new user settings and some have changed their defaults.\r\nBest performance is achieved with default settings,\r\nexcept `cds.contributions.enablement.odata` which should be switched `off` to speed up compilation, unless feature is needed.\r\n\r\nAdditonal hints to increase performance:\r\n- Within _SAP Business Application Studio_: close `CAP Data Models and Services` view. Otherwise it will ask for all workspace symbols at every change.\r\n- Settings: `Cds › Contributions › Enablement: Odata`: switch off as already mentioned above\r\n- Settings: `Editor › Goto Location: Alternative Definition Command`: do not select `goToReferences`. Otherwise being already on a definition will trigger find references which requires all dirty models to be recompiled.\r\n- Settings: `Workbench › Editor › Limit: Enabled`: switch on\r\n- Settings: `Workbench › Editor › Limit: Value`: lower the number. If open editors have `using` dependencies, a change in one editor will lead to a recompile of releated editors.\r\n- Commands `Go to References` / `Find All References` will recompile all models that might have changed due to a change in a depending model. If there are index models it often means the complete workspace is being recompiled.\r\nUntil a further change, reference calculation is resonably fast.\r\n- Command `Go to Symbol in Workspace` will recompile the complete workspace once, then it is reasonable fast\r\n- Changing settings in `CDS` section will currently perform a complete workspace invalidation i.e. required indexes will lead to recompilations on-demand as described above\r\n- Changing certain `cds.env` settings e.g. folder configurations will invalidate the workspace as well\r\n\r\n### Changed\r\n\r\n- consume cds-lsp 5.1.0\r\n- consume cds-compiler 2.3.2\r\n- user settings\r\n    + cds.workspaceValidationMode new default: OpenEditorsOnly\r\n    + cds.workspace.scanCsn new settings with default switch off (before implicitly on)\r\n    + cds.quickfix.importArtifact new setting with default off (before implicitly on)\r\n- command `Install CDS Development Kit (@sap/cds-dk) globally` will now show a progress dialog as long as it is running\r\n\r\n## Version 4.0.4 - 2021-05-11\r\n\r\n### Changed\r\n- uses `@sap/cds-lsp@5.0.5`\r\n- new user option `cds.env.fetch` to dynamically fetch _cds.env_ when using non-default i18n file/folder names\r\n\r\n### Fixed\r\n- asynchronous scanning of workspace blocked and led to high cpu usage (mostly on Linux/macOS)\r\n\r\n## Version 4.0.2 - 2021-05-06\r\n\r\n### Changed\r\n- uses `@sap/cds-lsp@5.0.3`\r\n- uses `@sap/cds-compiler@2.2.4`\r\n\r\n## Version 4.0.1 - 2021-04-22\r\n\r\n### Changed\r\n- now requires Visual Studio Code `>=1.54`\r\n- entry `Preview as hdbtable` replaces `Preview as hana` in `CDS Preview` menu\r\n- uses `@sap/cds-lsp@5.0.1` which includes fixes for namespace handling\r\n\r\n## Version 4.0.0 - 2021-03-31\r\n\r\n### Note\r\nThis is a major release which comes with @sap/cds-compiler v2.\r\nIt still supports cds-compiler v1 if used in your project\r\nor via global @sap/cds-dk.\r\n\r\n### Added\r\n- semantic highlighting - to be enabled via user setting `cds.semanticHighlighting.enabled`\r\n- new API for annotation handler to support semantic highlighting\r\n\r\n### Changed\r\n- consume cds-compiler 2.1.4\r\n\r\n## Version 3.4.0 - 2021-03-25\r\n\r\n### Added\r\n- preliminary support for cds-compiler 2.x\r\n\r\n### Changed\r\n- now requires Visual Studio Code `>=1.53`\r\n- uses `@sap/cds-lsp@4.4.1`\r\n- uses `@sap/cds-compiler@1.50.0`\r\n\r\n## Version 3.3.0 - 2021-02-01\r\n### Added\r\n- find references for annotations\r\n\r\n### Changed\r\n- extension is now called `SAP CDS language support`\r\n- uses `axios@0.21.1`\r\n- uses `@sap/cds-lsp@4.3.0` (see corresponding changelog for details)\r\n- uses `@sap/cds-compiler@1.49.0`\r\n- new user options for where-used requests<br/>\r\nuntil now this functionality was enabled by default and now needs to be enabled via user options\r\n  + generic annotations - where a certain annotation 'class' or 'namespace' is used\r\n  + strings literals - where same string literals are used\r\n\r\n### Fixed\r\n- temporary folder for `CDS Preview` commands is no longer part of project to avoid files being checked in\r\n- revalidates workspace after an initial annotation plugin installation to show annotation errors w/o the need of manual code edit\r\n\r\n## Version 3.2.0 - 2020-11-27\r\n\r\n### Added\r\n- quickfix for deprecated identifiers\r\n- support for quickfixes in annotation handler\r\n\r\n### Changed\r\n- using native submenu for `CDS Preview` commands\r\n- now requires Visual Studio Code `>=1.50`\r\n- updated npm modules\r\n  + `cds-lsp 4.2.0`\r\n  + `cds-compiler 1.46.4`\r\n\r\n### Fixed\r\n- improvements to the `cds section` scheme used in `.cdsrc.json` and `package.json`\r\n- bug fixes for annotation handler and others\r\n\r\n## Version 3.1.4 - 2020-11-12\r\n\r\n### Fixed\r\n- file system watching no longer worked with latest VSCode\r\n\r\n### Changed\r\n- updated npm modules\r\n  + `cds-lsp 4.1.2`\r\n\r\n## Version 3.1.3 - 2020-11-10\r\n\r\n### Fixed\r\n- internal refactoring and bug fixes\r\n\r\n## Version 3.1.2 - 2020-11-09\r\n\r\n### Fixed\r\n- support for mono repo file system layouts did not work in certain cases\r\n- completion proposals for annotations were not shown at top of the list if inside an annotation\r\n- only update workspace settings file if needed due to changed fileSystemWatch setting\r\n\r\n### Changed\r\n- updated npm modules\r\n  + `cds-lsp 4.1.1`\r\n\r\n## Version 3.1.0 - 2020-11-02\r\n\r\n### Added\r\n- release notes page shows loading text while loading content\r\n- user setting `cds.releaseNotes.showAutomatically` to enable or disable automatic display of `CAP Release Notes` when a new version is available\r\n- support mono repo file system layouts\r\n- user setting to disable odata plugin\r\n- detection of slow running odata plugin (when validating) incl. user settings to disable and fine tune\r\n- user setting for omitRedundantTypesInSnippets for annotations\r\n- user setting to enable file system watching to track installation of @sap/cds in project\r\n\r\n### Changed\r\n- install/update contributions completely async\r\n- completion no longer suggests types when values are meant\r\n- project cds-lsp settings overrule all\r\n- consume cds-compiler 1.45.0\r\n\r\n### Fixed\r\n- validation of annotation plugins led to 100% cpu load\r\n- globally installed cds was not reliably found\r\n- code completion for annotation plugins did not work inside annotations at @ characters\r\n- bug fixes\r\n\r\n\r\n## Version 3.0.1 - 2020-10-23\r\n\r\n### Changed\r\n- release notes page uses longer timeout (30sec) when waiting for content\r\n\r\n### Fixed\r\n- `preview as...` commands now overwrite preview file content instead of appending\r\n- `preview as...` commands only fail when `cds compile` returned with exit code != 0 (severe error)\r\n\r\n\r\n## Version 3.0.0 - 2020-09-30\r\n\r\n### Added\r\n- Plugin support for domain specific annotation handlers, featuring\r\n  + diagnostics\r\n  + code completion\r\n  + hover information\r\n  + goto definition\r\n  + quickfix to maintain translation\r\n  + auto-installation/update with user setting for npm registry\r\n\r\n- code completion inside string literals and `![...]` identifiers is automatically triggered by `/` character (additionally to `.` and `@`)\r\n\r\n- snippets applied via code completion are now formatted\r\n\r\n- `action`s and their parameters are now indexed and support code navigation, hover etc.\r\n\r\n### Changed\r\n- updated npm modules\r\n  + `cds-lsp 4.0.0`\r\n  + `cds-compiler 1.42.2`\r\n\r\n### Fixed\r\n- bug fixes\r\n\r\n\r\n## Version 2.6.1 - 2020-09-24\r\n\r\n### Changed\r\n- using `axios` for https access to CAP release notes\r\n- `CAP release notes` are now displayed when new version is available on `Capire`\r\n\r\n### Fixed\r\n- the `preview as...` commands are more robust and generate preview files without cds extension\r\n\r\n### Added\r\n- command `install cds-dk` now available to install `CDS Development Kit (@sap/cds-dk)` globally\r\n\r\n\r\n## Version 2.6.0 - 2020-09-01\r\n\r\n### Added\r\n- various commands for generating preview files from a cds file\r\n- Code completion proposes identifiers not yet imported in current file and generates corresponding `using` statement\r\n  + user setting: minimum number of characters required to propose those identifiers (`cds.completion.workspaceSymbols.minPrefixLength`). Default is -1 (=off)\r\n  + user setting: limit number of global identifiers (`cds.completion.workspaceSymbols.maxProposals`). Default is -1 (=unlimited)\r\n- Code formatting: options `whitespaceBeforeColon` and `whitespaceAfterColon` are now supported inside `Composition` structs\r\n- Code formatting: support configuration of alignment of `Composition` structs (option `alignCompositionStructToRight`)\r\n\r\n### Changed\r\n- updated npm modules\r\n    + `cds-lsp 3.5.0`\r\n    + `cds-compiler 1.39.0`\r\n\r\n\r\n## Version 2.5.0 - 2020-08-05\r\n\r\n### Added\r\n- various commands for generating preview files from a cds file\r\n\r\n### Changed\r\n- now requires Visual Studio Code `>=1.46`\r\n- updated npm modules\r\n    + `cds-lsp 3.4.3`\r\n    + `cds-compiler 1.35.0`\r\n\r\n\r\n## Version 2.4.2 - 2020-07-29\r\n\r\n### Added\r\n- issue reporting url pointing to `https://answers.sap.com/`\r\n- new user setting `cds.completion.workspaceSymbols` (default `off`) to add workspace symbols to code completion proposals\r\n\r\n### Changed\r\n- updated npm modules\r\n    + `cds-lsp 3.4.2`\r\n    + `cds-compiler 1.34.0`\r\n- internal refactorings\r\n\r\n## Version 2.4.1 - 2020-07-13\r\n\r\n### Changed\r\n- extension is now hosted on Visual Studio Marketplace and updates from there\r\n  + update configuration and update command have been removed\r\n\r\n## Version 2.4.0 - 2020-07-10\r\n\r\n### Added\r\n\r\n- support for docComments (/** ... */)\r\n  + hover over artifact will consider docComment\r\n  + snippet to create\r\n  + formatting will beautify docComments, incl. new option maxDocCommentLine\r\n  + quickFix to convert @cds.doc annotation to docComment incl. beautify\r\n  + distinct syntax highlighting for docComments\r\n- quickFix to generate using statement for not yet imported artifacts\r\n  + sorted by module and artifact name, beautified\r\n- semantic code completion for elements, enums, actions and parameters in annotate and extend (via cds-compiler 1.32.0)\r\n- syntax highlighting identifiers, including variants delimited with \\![...]\r\n- identifier completion proposals are prioritized by message severity\r\n- messages may now contain related information\r\n- added INSTALLATION.md for 3rd party IDE integrations\r\n\r\n### Changed\r\n- updated npm modules\r\n    + `cds-lsp 3.4.0`\r\n    + `cds-compiler 1.32.0`\r\n- improved `README.md`\r\n  + updated feature list\r\n\r\n### Fixed\r\n- enum keyword was wrongly syntax highlighted\r\n- when an ignored source file is closed, potential messages are wiped\r\n- annotations of extensions were not indexed\r\n- bug fixes\r\n\r\n## Version 2.3.3 - 2020-06-26\r\n\r\n### Added\r\n- added properties `dest` and `mtx` to code completion list for `tasks` and `for` in cap project package.json files\r\n\r\n### Fixed\r\n- syntax highlighting: colorize identifiers, including variants delimited with \\![...]\r\n- minor clean up in welcome page handling\r\n\r\n\r\n## Version 2.3.2 - 2020-06-17\r\n\r\n### Changed\r\n- using new npm modules\r\n    + got 11.1.4\r\n\r\n\r\n## Version 2.3.1 - 2020-05-25\r\n\r\n### Added\r\n- add a welcome page with current release information\r\n\r\n\r\n## Version 2.3.0 - 2020-04-26\r\n\r\n### Added\r\n- use global @sap/cds/common if locally not available\r\n\r\n### Changed\r\n- now requires Visual Studio Code 1.41+\r\n- using new npm modules\r\n    + cds-lsp 3.3.1\r\n    + cds-compiler 1.26.2\r\n- (alpha): diagnostics and hover support for external annotation providers\r\n\r\n### Fixed\r\n- Minor fixes and improvements\r\n\r\n\r\n## Version 2.2.0\r\n\r\n### Added\r\n- install/update global cds-dk\r\n\r\n### Changed\r\n- using new npm modules\r\n    + cds-lsp 3.2.0\r\n    + cds-compiler 1.24.3\r\n- remove option for compiler origin - compiler will always be picked in that order: Project -> Global(via DK&CDS) -> BuiltIn\r\n- remove irrelevent formatting option (trimTrailingWhitespace)\r\n\r\n### Fixed\r\n- global npm root for Business App Studio was not found with compiler origin option ProjectThenGlobalThenBuiltIn\r\n\r\n\r\n## Version 2.1.4\r\n\r\n### Changed\r\n- using new npm modules\r\n    + cds-lsp 3.1.3\r\n    + cds-compiler 1.23.2\r\n\r\n### Added\r\n- pick up compiler and env via global cds-dk if cds not (yet) in project\r\n\r\n\r\n## Version 2.1.3\r\n\r\n### Changed\r\n- using new npm modules\r\n    + cds-lsp 3.1.2\r\n    + cds-compiler 1.23.1\r\n\r\n### Added\r\n- code formatting\r\n    - options can now be overridden in source comments e.g. // @formatter tabSize:3\r\n    - new option to add/remove final line break\r\n    - new option to trim trailing whitespace\r\n\r\n### Fixed\r\n- in some cases csn files with .json extension where not detected and thus workspace symbols were incomplete\r\n\r\n\r\n## Version 2.1.2\r\n\r\n### Fixed\r\n- Minor bugs and improvements\r\n\r\n\r\n## Version 2.1.1\r\n\r\n### Changed\r\n- using new npm modules\r\n    + cds-lsp 3.1.1\r\n\r\n### Added\r\n- code formatting\r\n    - option to keep original empty lines\r\n    - ability to start config UI from any .cdsprettier.json\r\n    - use most relevant .cdsprettier.json when starting from source file\r\n    - use .cdsprettier.json in user home when none available in project\r\n\r\n### Fixed\r\n- formatting options were taken from homedir instead of preferring from project\r\n\r\n\r\n## Version 2.1.0\r\n\r\n### Changed\r\n- using new npm modules\r\n    + cds-lsp 3.1.0\r\n    + cds-compiler 1.22.0\r\n\r\n### Added\r\n- extended translation support\r\n    - now all runtime-supported formats (.properties, .json, .csv) incl. quick fixes to create missing entries\r\n    - now all runtime-supported customizations (filename, folder name, fallback_bundle, default_language)\r\n        - if entries of fallback language are missing but are defined for default language the latter ones are used\r\n        - quick fix will use default language if file/json-node/section for fallback language does not exist\r\n        - quick fix will try to keep entries sorted\r\n- allow .cdsprettier.json to be located in user home dir\r\n\r\n### Changed\r\n- code formatting\r\n    - improve alignment of types, values, and preceding `:` or `=` operators\r\n\r\n### Fixed\r\n- code formatting\r\n    - fix, improve, and allow to better adjust alignments and whitespace\r\n    - fix alignment of annotations in `annotate` statement\r\n    - fix casing of and indentation after `Association` and `Composition`\r\n    - fix formatting of parts of `select` statement in case of nesting and after `in`\r\n    - fix positioning of brace `{` after annotation if requested to be kept in previous line\r\n    - fix bug where token starting with `$` was merged\r\n- config UI\r\n    - fix cap/issues#3498 - prettierrc file appears with content\r\n    - fix: no longer selects editor content\r\n- file watching for cds related files did no longer work in recent versions of VSCode e.g. package.json, .cdsrc.json, all supported translation file formats, ignore files\r\n\r\n\r\n## Version 2.0.0\r\nOfficial support for code formatting\r\n\r\n### Changed\r\n- consume cds-lsp 3.0.0\r\n    - code completion\r\n        - more snippet variants for extend\r\n        - no longer differ entity suggestions between within service or outside\r\n        - base types with parameters now suggested as simply keyword w/o params and additional suggestion as snippet (param names now enclosed in < >)\r\n        - changed label indicator for snippets from <> to ellipsis\r\n    - code formatting\r\n        - rework formatting options: add/remove options according to relevance, rename/group options for clarity, change default behavior in some cases\r\n        - various improvements, including in case statements and bracketed conditions\r\n- consume cds-compiler 1.21.1\r\n\r\n### Fixed\r\n- code formatting\r\n    - fix alignment of annotations in views\r\n    - safely identify unreserved keywords\r\n\r\n\r\n## Version 1.4.0\r\n\r\n### Changed\r\n- **requires `Visual Studio Code` version `1.40.0` or higher**\r\n- consume cds-lsp 2.1.21\r\n- consume cds-compiler 1.20.3\r\n\r\n### Added\r\n- support LSP configuration via settings file in workspace incl. logs in workspace\r\n\r\n### Fixed\r\n- Fix indentation after element definitions using Association or Composition\r\n- fix: extraction of root models did no longer work since @sap/cds#3.19\r\n- code formatting\r\n    - Fix indentation of keywords `union`, `except`, and `minus`\r\n    - Make alignments more consistent generally\r\n    - Improve readability by padding operators with blanks\r\n    - Improve alignment of bracketed conditions\r\n\r\n\r\n## Version 1.3.1\r\n- fix reloading formatting options in config UI\r\n- consume cds-lsp 2.1.19\r\n    - fixes and enhancements for code formatting\r\n- consume cds-compiler 1.20.0\r\n\r\n## Version 1.3.0\r\n- configuration UI for formatting options\r\n- consumes cds-lsp 2.1.17\r\n    - fixes and enhancements for code formatting\r\n        - renamed settings file to .cdsprettier.json\r\n- renamed tmLanguage for syntax highlighting\r\n- consume cds-compiler 1.19.2\r\n- requires `Visual Studio Code` version `1.38.0` or higher\r\n\r\n## Version 1.2.12\r\n- deprecate `updatesite` setting\r\n- requires `Visual Studio Code` version `1.36.0` or higher\r\n\r\n## Version 1.2.11\r\n- consumes cds-lsp 2.1.10\r\n    - fixes and enhancements in syntax highlighting and code formatting\r\n\r\n## Version 1.2.10\r\n- requires `Visual Studio Code` version `1.35.0` or higher.\r\n- consumes cds-lsp 2.1.9\r\n    - Syntax highlighting now uses different classifications (=colors) for annotations and comments\r\n    - Support user settings in $LSP/.cds-lsp/.settings.json for IDEs which do not support user settings (Eclipse, Intellij, ...)\r\n    - No longer report compiler messages for csn files\r\n    - Preparation for config editor for formatting options\r\n    - Deadlock detection and prevention for code formatting incl. option to cancel or try best in case\r\n    - Use json parsing from compiler for csn files (which allows comments etc.)\r\n    - Fixes and enhancements in source formatting\r\n- consume cds-compiler 1.17.3\r\n\r\n## Version 1.2.9\r\n- consume cds-lsp 2.1.8\r\n    - code formatting - many fixes and enhancements\r\n        - now on by default but still experimental\r\n    - syntax highlighting reworked for CDL and CQL keywords\r\n    - where-used index now with using path segments\r\n    - updated cds documentation (in code completion)\r\n    - outline now shows contexts and services with fully qualified name\r\n    - other fixes and improvements\r\n- consume cds-compiler 1.17.0\r\n\r\n## Version 1.2.8\r\n- consume cds-lsp 2.1.7\r\n  - consume cds-compiler 1.16.2\r\n\r\n## Version 1.2.7\r\n- consume cds-lsp 2.1.6\r\n\r\n## Version 1.2.6\r\n- consume cds-lsp 2.1.5\r\n- take syntax file form LSP\r\n\r\n## Version 1.2.5\r\n- use internal extension install command instead of command line call to `code` executable to install vsix file.\r\n- requires `Visual Studio Code` version `1.33.0` or higher.\r\n- consume cds-lsp 2.1.4\r\n  - consume cds-compiler 1.15.0\r\n  - experimental support for beautify\r\n\r\n## Version 1.2.3\r\n- consume cds-lsp 2.1.3\r\n  - consume cds-compiler 1.14.0\r\n\r\n## Version 1.2.2\r\n- consume cds-lsp 2.1.2\r\n  - consume cds-compiler 1.13.4\r\n- Use cds-compiler from project workspace by default (option now called 'cds.compiler.origin' with default 'Project_Then_BuiltIn')\r\n- Option to log internal compiler errors: 'cds.compiler.showInternalErrors' (default true). Same errors are reported at most once per minute.\r\n- minor fixes\r\n\r\n\r\n## Version 1.2.1\r\n- consume cds-lsp 2.1.1\r\n  - consume compiler 1.13.1\r\n  - performance improvements (less compilations and reduced memory footprint)\r\n  - Links to folders in using statement are now resolved\r\n\r\n## Version 1.2.0\r\n- consume cds-lsp 2.1.0\r\n  - consume compiler 1.12.1\r\n  - new where-used index with less memory consumption and support for references of custom annotations, built-in types, string constants and better tracking of identifiers in CQL\r\n  - targets of using statement now rendered as links (via documentLink request)\r\n\r\n## Version 1.1.5\r\n- Updated cds-lsp to 2.0.8\r\n  - performance optimizations for translation support\r\n  - consume cds-compiler 1.10.0\r\n- Updated json schema to reflect latest cap config changes.\r\n- Use json schema also for `.cdsrc.json` file.\r\n\r\n## Version 1.1.4\r\n- Updated cds-lsp to 2.0.7\r\n    - new user setting: cds.compiler.markMissingI18nDefault (default: off) to show problem markers for unresolved i18n references\r\n\r\n## Version 1.1.3\r\n- Updated cds-lsp to 2.0.6 - bugfixes plus\r\n- Updated cds-compiler to 1.9.0\r\n\r\n## Version 1.1.2\r\n- Updated cds-lsp to 2.0.5 with\r\n    - suggest @sap/cds/common as default path in using snippet if dependency to @sap/cds is present\r\n- Updated cds-compiler to 1.8.1\r\n\r\n### Also see\r\n- Changes of `@sap/cds-lsp@2.0.5`\r\n- Changes of `@sap/cds-compiler@1.8.1`\r\n\r\n## Version 1.1.1\r\n- Updated cds-lsp to 2.0.3 with\r\n    - doc support (snippet for localization, hover on translation id)\r\n- Updated cds-compiler to 1.8.0\r\n\r\n### Also see\r\n- Changes of `@sap/cds-lsp@2.0.3`\r\n- Changes of `@sap/cds-compiler@1.8.0`\r\n\r\n## Version 1.1.0\r\n### Added\r\nSupport for documentation and translation in CDS source files\r\n\r\n### Also see\r\n- Changes of `@sap/cds-lsp@2.0.0`\r\n- Changes of `@sap/cds-compiler@1.6.0`\r\n\r\n## Version 1.0.37\r\n- Updated cds-lsp to 1.4.25 with\r\n    - support for documentation tags and translation\r\n        - show documentation when hovering\r\n        - show documentation at code completion\r\n        - take @title, @description and @cds.doc into account\r\n        - resolve translation and show warning marker when translation not available\r\n        - quickfix to create missing translation\r\n        - snippet for @cds.doc\r\n- Updated compiler to 1.6.0\r\n    - especially with support for code completion of items in using statement\r\n\r\n## Version 1.0.36\r\n- Updated cds-lsp to 1.4.24\r\n- Updated compiler to 1.5.0\r\n\r\n## Version 1.0.35\r\n- New icon\r\n- Updated cds-lsp to 1.4.23\r\n- Updated compiler to 1.3.0\r\n- Added code completion for paths in using statement\r\n- CSN files are now detected and including in where-used index e.g. for workspace symbols\r\n- Introduce per-file compilation mode which speeds up where-used features expecially for large workspaces. User setting cds.compilation.mode (default PerFile)\r\n- Installation of dependencies in package.json files\r\n    - now configurable via user setting cds.autoInstallDependencies (default off)\r\n    - if turned on it only reinstalls if dependency definitions exist and have changed since last install. Other changes in package.json files are ignored\r\n    - package.json files are no longer reformatted when installing dependencies\r\n    - cdsignore can be used to exclude paths from installation e.g. test folders with package.json files\r\n- Check for updates when user changes update config\r\n- Bug fixes\r\n\r\n## Version 1.0.34\r\n- Updated compiler to 1.1.3\r\n- bug fixes\r\n\r\n## Version 1.0.33\r\n- Updated compiler to 1.1.2\r\n- bug fixes\r\n\r\n## Version 1.0.32\r\n- Snippets now with language documentation\r\n- New snippets for annotate and enum type\r\n- Add json validator for cds entry in package.json\r\n- Add package.json snippet for npm script \"watch\"\r\n- Replace auto build with npm script (see npm script \"watch\")\r\n- Robustness\r\n- No more logging from LSP to CDS console\r\n\r\n## Version 1.0.31\r\n- Support for multiple workspace folders\r\n- Editor now detects much more identifiers\r\n- Compiler 1.1.0\r\n- Improve error handling when update site is invalid or incorrectly configured\r\n\r\n## Version 1.0.30\r\n- Bug fixes (update, ...)\r\n\r\n## Version 1.0.29\r\n- Use cds-lsp 1.4.12\r\n\r\n## Version 1.0.28\r\n- Use cds-lsp 1.4.10\r\n\r\n## Version 1.0.27\r\n- Use os environment proxy settings as fallback when available (http_proxy, https_proxy, no_proxy)\r\n\r\n## Version 1.0.26\r\n- Use cds-lsp 1.4.8\r\n- Proxy settings (http.proxy, http.proxyAuthorization, http.proxyStrictSSL) will be used when downloading update\r\n- Bug fixes\r\n\r\n## Version 1.0.25\r\n- Use cds-lsp 1.4.7\r\n\r\n## Version 1.0.24\r\n- Bug fixes (installation, ...)\r\n\r\n## Version 1.0.23\r\n- Use cds-lsp 1.4.4\r\n    - New setting: cds.workspaceValidationMode\r\n        - OpenEditorsOnly\r\n        - OpenEditorsAndDirectSources\r\n        - OpenEditorsDirectSourcesAndDirectDependencies\r\n- Show compiler version on status bar when it changes for 10secs\r\n- Bug fixes (code completion, ...)\r\n\r\n## Version 1.0.22\r\n- Add external update mechanism\r\n"},{"name":"webide-hdi-base-feature-vscode","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Calculation View Editor Base\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).","changelog":"## 1.12.0\r\n\r\n### New Features\r\n- Calculation views can define a snapshop view for a specific query\r\n\r\n## 1.11.0\r\n\r\n### Fixes\r\n- Schema filter on \"Add Data Source\" dialog\r\n- \"Add data source\" dialog does not display objects with same name as calculation view without any warning\r\n- Table function nodes should also allow searching for synonyms\r\n- Table function in another hdi-container is not found in the \"Add Data Source\" dialog if only a container service is selected\r\n\r\n## 1.10.0\r\n\r\n### Fixes\r\n- The column metadata is not read when creating synonym in the \"Add Data Source\" dialog\r\n\r\n## 1.9.0\r\n\r\n### Fixes\r\n- The \"create synonym\" dialog could hang when adding a data source if external objects are referenced\r\n- The synonym editor added the schema name for target objects that are in the same container\r\n\r\n## 1.8.0\r\n\r\n### New Features\r\n- Parameter mappings can be managed when replacing a data source\r\n\r\n### Fixes\r\n- Object types are displayed consistently in the \"Add Data Source\" dialog\r\n\r\n## 1.7.1\r\n\r\n### Fixes\r\n- The analytical privilege editor displays the procedure correctly when selecting dynamic analytical privileges\r\n- External objects are now shown when adding data sources in the synonym editor\r\n\r\n## 1.7.0\r\n\r\n### New Features\r\n- Improved usability and user experience of the find objects dialog\r\n\r\n### Fixes\r\n- The \"Finish\" button is enabled when only one item is selected\r\n- Fixed an issue when opening the \"Find data sources\" dialog in the analytical privileges dialog\r\n\r\n## 1.6.0\r\n\r\n### Fixes\r\n- The add data source dialog displays a warning message when adding objects with same name as a calculation view\r\n\r\n## 1.5.0\r\n\r\n### New Features\r\n- Roles can be chosen graphically when creating a synonym\r\n\r\n### Fixes\r\n- Filtering columns when adding a data source could lead to unexpected behavior\r\n- A synonym created when adding a data source could be missing the schema field\r\n- Columns of an external object could be missing\r\n- The \"Finish\" button could be enabled if a synonym already exists\r\n\r\n## 1.4.0\r\n\r\n### New Features\r\n- It is now possible to display the name of the service through which an external object is accessible when adding an object\r\n\r\n### Fixes\r\n- User-provided services using the target container credentials are handled correctly\r\n\r\n## 1.3.0\r\n\r\n### Fixes\r\n- The search result now shows synonyms as expected when \"Target Container Service\" is selected with external service(s)\r\n- The option \"use existing synonym\" is no longer enabled by default for synonym creation\r\n- The schema name is now set correctly in generated hdbsynonymconfig files\r\n\r\n## 1.2.0\r\n\r\n### New Features\r\n- Simplify using objects outside of a project\r\n- Improved \"replace data source\" dialog\r\n\r\n### Fixes\r\n- Mass import of synonyms now filters by the selected schema\r\n- Further reduced size of headers of requests sent to the backend\r\n- Fix an issue where wrong results could be displayed in the search box\r\n- Updated the UI library\r\n- Metadata of synonyms whose names start with a whitespace is displayed correctly\r\n- The \"Create Synonym\" button is disabled if there is no data\r\n\r\n## 1.1.0\r\n\r\n### Fixes\r\n- Reduced size of headers of requests sent to the backend\r\n- Fixed a bug in the Import elements dialog which caused the editor to hang\r\n\r\n## 1.0.0\r\n\r\nInitial release\r\n"},{"name":"webide-hdi-feature-vscode","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# SAP HANA Calculation View Editor\r\n\r\n## Installation\r\nThis module is intended to be used only within the [SAP Business Application Studio](https://help.sap.com/viewer/9d1db9835307451daa8c930fbd9ab264/Cloud/).\r\n\r\nSee the [documentation](https://help.sap.com/viewer/product/HANA_CLOUD/latest/en-US?task=develop_task) for more details.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt).","changelog":"## 1.13.0\r\n\r\n### New Features\r\n- Calculation views can define a snapshop view for a specific query\r\n\r\n### Fixes\r\n- When executing the debug query, the error message is now selectable for copy/paste\r\n- The \"add-table-function\" item is displayed properly \r\n- Restricted column that have been renamed can be copied\r\n- Variable extraction of shared dimension in star join retains reference column\r\n- Mapping of an input parameter to a table function is prevented\r\n- Currency conversion allows the selection of a calculated columns from dimensions\r\n- The detail column panel allows multiple column selection\r\n- Generated timetable has no content and leads to deployment failure when the namespace is not empty\r\n- Rename input parameter and adjust references causes build failure when the impacted objects are hdbroles\r\n\r\n## 1.12.0\r\n\r\n### New Features\r\n- Median as aggregation function\r\n- Session variables can be mapped into data sources\r\n\r\n### Fixes\r\n- Performance Analysis shows incorrect info about the datasource\r\n- Auto Parameter Mapping does not propagate parameter's type\r\n- Error message is not clear for time table creation when is not logged-in to Cloud Foundry\r\n- Mass synonym creation requires at least one external service to work\r\n- Variable extraction from underlying view does not work\r\n- \"Red X\" is shown when XML modified by GUI for dimensions having column with dot sign in star join\r\n- Creation of Pruning configuration table fails with no content in \".hdbtable\" file\r\n- Currency conversion semantics of a measure goes off when calculation view is closed and re-opened in BAS\r\n- Copying multi-join node loses copied data information that results into inconsistent XML\r\n- ComboBox list becomes uneditable after selecting median aggregation\r\n- Incorrect alias proposal causes build failure\r\n- Auto mapping parameter hangs on redoing the auto mapping\r\n\r\n## 1.11.0\r\n\r\n### Fixes\r\n- Remove superfluous Input ID in properties of data sources in Union nodes\r\n- The option \"Mass Import of Synonyms\" filters out schemas\r\n- Improve the filter selection in data preview\r\n- Relax fiscal calendar variant type format for more tolerance towards whitespaces\r\n- Auto Parameter Mapping Issue\r\n- Change default hierarchy type to SQL\r\n- \"Maintain Time Tables\" not working in Business Application Studio\r\n\r\n## 1.10.0\r\n\r\n### New Features\r\n- Prune data sources that do not contribute to requested measures in a union\r\n- Objects referecing an input parameter, variable, calculated column, or restricted column can be displayed\r\n\r\n### Fixes\r\n- Show errors if virtual table parameters cannot be retrieved\r\n- Fixed an error that could lead to an empty parameter pane\r\n- Fixed an error that could lead to an empty details pane\r\n- Data preview could fail if multiple views with the same name exist\r\n- Usability improvements\r\n\r\n## 1.9.0\r\n\r\n### New Features\r\n- The data preview can show hierarchies\r\n- Parameter mappings can be managed when replacing a data source\r\n\r\n### Fixes\r\n- The replace data source dialog contained unexpected steps\r\n- A user-friendly message is shown if a connection to Cloud Foundry cannot be established\r\n- The data type of count columns is displayed correctly\r\n- The synonym editor did not fill-in schema name when using target container service\r\n- The calculation view editor details pane shows content when more than 3 editors are open\r\n\r\n## 1.8.2\r\n\r\n### Fixes\r\n- External objects are now shown when adding data sources in the synonym editor\r\n- Time data generation now works when generating fiscal data with variants\r\n\r\n## 1.8.1\r\n\r\n### Fixes\r\n- The configuration option to explicitly configure whether a data preview query should be automatically executed did not work correctly under some circumstances\r\n\r\n## 1.8.0\r\n\r\n### New Features\r\n- Improved usability and user experience of the find objects dialog\r\n- A new configuration option was added to explicitly configure whether a data preview query should be automatically executed\r\n- The data preview allows the preview of hierarchies on SAP HANA Cloud\r\n\r\n### Fixes\r\n- The input parameter/variable mapping dialog is refreshed correctly\r\n- The non-equi-join cardinality is set correctly\r\n- An error message is shown if the generation of time data fails\r\n- Fixed the conversion of graphical restricted columns to expressions\r\n- Fixed the data preview after reordering dimensions\r\n- Fixed the display of the parameter pane when multiple calculation view editor instances are open\r\n- Time data is generated correctly if the project is inconsistent\r\n- Fixed the aggregatable flag for count distinct columns\r\n- Stacking multi-join nodes could lead to erratic behavior\r\n- Spatial join information could be lost in XML or wrong\r\n\r\n## 1.7.0\r\n\r\n### New Features\r\n- Calculation views can be configured to use the session user when evaluating masked data\r\n- Improved value help for calculation view execution hints\r\n\r\n### Fixes\r\n- Improved message if a debug query fails\r\n- Fixed the deletion of a hiarchical privilege in the analytical privilege editor\r\n- Fixed an error when mapping fuzzy search parameters\r\n\r\n## 1.6.0\r\n\r\n### New Features\r\n- Additional keyboard shortcuts\r\n- Roles can be chosen graphically when creating a synonym\r\n- Calculated columns, input parameters, and restricted columns can be filtered\r\n- The default join in a star join is set to left-outer instead of referential\r\n- Improved usability when debugging a calculation view\r\n- Enable data preview using a different database user\r\n- Input parameters of calculation views can be mapped to input parameters of SQL views\r\n\r\n### Fixes\r\n- It is now possible to show the source service when creating a synonym\r\n- Improved usability when copying a variable with a filter\r\n- Opening a dimension calculation view when debugging a start join works as expected\r\n- It is now possible to set a client column when the data source is a calculation view\r\n- The default values for generating time tables are no longer invalid\r\n- Expressions in non-equi-joins are validated correctly\r\n- The expressions for new default values of input parameters and variables are now marked as SQL\r\n- Warn when assigning a variable to an attribute that already has a variable assigned\r\n- Fixed an inconsistency when replacing a data source with a node\r\n- Fix shortcuts on MacOS\r\n\r\n## 1.5.0\r\n\r\n### New Features\r\n- It is now possible to display the name of the service through which an external object is accessible when adding an object\r\n\r\n### Fixes\r\n- Fix an issue that could lead to orphaned table nodes in multi-join node models\r\n- Fixed replace with data source in star join models\r\n- User-provided services using the target container credentials are handled correctly\r\n- Set \"Aggregate All nodes\" to true by default\r\n- Column remapping works now if the DEL key is used to remove the old mapping\r\n- Fixed an issue that could lead to an inconsistency between the model in the file and the model in memory\r\n- Fixed incorrect display of SQL and column engine functions\r\n- Removed the field \"Default Member\" from node \"Semantics\" --> \"General\"\r\n- Fix quoting of numeric input parameters\r\n- Add the \"Like\" operator to the expression editor\r\n- Function keys are now working correctly when used as shortcuts\r\n- Include notes when copying a parameter\r\n\r\n## 1.4.0\r\n\r\n### New Features\r\n- Add keyboard shortcuts for commmon modeling actions\r\n- Keep join type and cardinality in the properties view when a non-equi-join uses an expression\r\n- Enable copy and paste of input parameters, variables, calculated columns, restricted columns, and hierarchies\r\n\r\n### Fixes\r\n- Fix an issue that could lead to deployment failures when using non-equi joins\r\n- Fix an issue where changes in a calculation view are not saved after deploying\r\n- Add infobox information to flags under Semantics --> Advanced\r\n- Fix generated XML for variables of type \"Single Value\" that use an expression as default value\r\n- Add \"aggregate all nodes\" option for migrated calculation views\r\n- Fix an issue where filter expressions on a multi-join node could disappear after closing the editor\r\n- Fix an issue where the validation of a newly added filter expression on a multi-join node fails\r\n- Fix an issue where adding an expression to a multi-join nodes results in deployment failure for the calculation view\r\n- Fix an issue where changes to column \"Label\" could be lost\r\n- Fix wrong expression when creating a non-equi join\r\n- Add missing cancel button in non-equi join \"Create Constant\" dialog\r\n- Fix value help dialog for \"Single Value\" parameter value\r\n- Remove deprecated field \"Count Star Column\" from Semantics --> General\r\n\r\n## 1.3.0\r\n\r\n### New Features\r\n- Reordering of variables and parameters in the semantics node\r\n- Replace a data source with an existing node\r\n- Improved \"Replace data source\" dialog\r\n\r\n### Fixes\r\n- Fix editor conflicts by consuming new UI library version\r\n- The result column is no longer offered as a sort column in rank nodes\r\n- Further reduced size of headers of requests sent to the backend\r\n- Refactoring improvements\r\n- The \"Dynamic Ordering\" or \"Dynamic Partitioning\" flags could be lost after reopening the editor\r\n- The synonym editor now allows selecting multiple synonyms for deletion\r\n- The settings of a non-equi join node could be lost after reopening the editor\r\n- A column engine expression in calculated columns can now be switched to an SQL expression\r\n- Fixed an error where no information is displayed in aggregation nodes if a column has a defined currency conversion\r\n- Non-equi-join nodes now display all nodes\r\n- Join expressions display all columns\r\n- It is now possible to manually enter a restriction value for an analytical privilege\r\n- The to_alphanum expression is not available in SAP HANA Cloud\r\n\r\n## 1.2.0\r\n\r\n### New Features\r\n- Calculation view refactoring\r\n- Data preview of calculation views\r\n\r\n### Fixes\r\n- Reduced size of headers of requests sent to the backend\r\n\r\n## 1.1.0\r\n\r\n### New Features\r\n- Intermediate data preview from calculation view nodes\r\n\r\n### Fixes\r\n- Long analytical privilege names are no longer cut off in the analytical privilege editor\r\n- Fixed an issue with the background color in the analytical privilege dialog\r\n- Fixed the auto-creation of temporal data when starting from an empty calculation view file\r\n\r\n## 1.0.0\r\n\r\nInitial release\r\n"},{"name":"wing-run-config-types","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"## Overview\r\n\r\nThis package contains run-config types definitions used by Cloud Foundry Tools VsCode extension: https://github.com/SAP/cloud-foundry-tools.\r\n"},{"name":"wing-service-binding","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/wing-service-binding\r\n\r\n## Overview\r\n\r\nWing-service-binding is the npm package which provide the ability to bind a module (e.g. ui, cap service etc) with service metadata.\r\n"},{"name":"wing-service-explorer","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/wing-service-explorer\r\n\r\n## Overview\r\n\r\n**Wing-service-explorer** is an npm package that provides the ability to explore SAP services.\r\n\r\n## API\r\n\r\n**Wing-service-explorer** exposes 3 different objects for 3 different SAP systems:\r\n\r\n### ServiceURLExplorer\r\n\r\n---\r\n\r\nThis object exposes APIs for exploration of systems and services defined as OData odata_gen in the account destination list.\r\n\r\n#### getDestinations\r\n\r\nReturns a list of destinations filtered with WebIDEUsage = odata_gen\r\n\r\n#### isFullUrlDestination\r\n\r\nGets as an input a destination object (received from the getDestinations API) and returns **true** if this is a destination to a system\r\nor a service (i.e. if the destination includes a property named full_url and its value is true).\r\n\r\n#### getMetadata\r\n\r\nGets as an input a ConnectionDetails object (which contains the details to connect to a service) and returns the metadata (XML format)\r\nwhich the service exposes.\r\n\r\n### APIHubExplorer\r\n\r\n---\r\n\r\nThis object exposes APIs for exploration of APIs from the APIHub system.\r\n\r\n#### getDestinations\r\n\r\nReturns a list of destinations filtered by WebIDEUsage = apihub_catalog\r\n\r\n#### getListOfAPIs\r\n\r\nGets as an input a destination object (received from the getDestinations API) and returns a list of APIs exposed by the APIHub system.\r\n\r\n#### getApiKey\r\n\r\nGets as an input a destination object and user authetication details (user/password) and returns the user's API key from the APIHub system. (Required for getting the API metadata.)\r\n\r\n#### getMetadata\r\n\r\nGets as an input a ConnectionDetails object (which contains the details to connect to an API) and returns the metadata (XML format)\r\nwhich the API exposes.\r\nNote: The APIHub requires a definition of 2 destinations. The first one for the APIHub system and the second for the API sandbox.\r\n\r\n### ExtensionFactoryExplorer\r\n\r\n---\r\n\r\nThis object exposes APIs for exploration of systems exposed by the Extension Factory.\r\n\r\n#### getDestinations\r\n\r\nReturns a list of destinations which contain an additional property named **XFSystemName**.\r\n"},{"name":"xb-msg-amqp-v091","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# AMQP 0.9.1 Client Library\r\nProvides a client implementation for AMQP v0.9.1\r\n\r\n## Table of contents\r\n* [Prerequisites](#prerequisites)\r\n* [Install](#install)\r\n* [Overview](#overview)\r\n* [Getting started](#getting-started)\r\n* [API](#api)\r\n\r\n## Prerequisites\r\n\r\nMake sure to have a message broker available, e.g. [RabbitMQ](https://www.rabbitmq.com/download.html).\r\n \r\n## Install\r\n\r\nSee also:\r\n[https://www.npmjs.com/package/@sap/xb-msg-amqp-v091](https://www.npmjs.com/package/@sap/xb-msg-amqp-v091)\r\n\r\nTo add it to your project run:\r\n```bash\r\nnpm i @sap/xb-msg-amqp-v091\r\n```\r\n\r\nTo generate complete API documentation run inside the library package folder\r\n```bash\r\nnpm run doc\r\n```\r\n\r\n## Overview\r\n\r\nThis library provides a messaging client for [AMQP v0.9.1](http://www.amqp.org/specification/0-9-1/amqp-org-download).\r\nA single client instance represents one connection to the broker.\r\nEither TLS or NET socket is used depending on defined client options.\r\n\r\nThe API works completely asynchronous based on callbacks, often providing also done (resolve) and failed (reject) callbacks.\r\nThis means it would be simple to use Promise objects in the application even if the client library so far does not use it.\r\n\r\nAMQP v0.9.1 defines [classes and methods](http://www.rabbitmq.com/amqp-0-9-1-reference.html) (like remote procedure calls). Unfortunately, some of them do not allow a key-based mapping of responses to requests. Hence, for those methods the client has to wait for the response before a second request can be sent. The client encapsulates this and behaves always asynchronous for the caller.\r\n\r\n## Getting started\r\n\r\nThere are examples:\r\n* How to use plain API directly [publisher.js](examples/publisher.js) and [subscriber.js](examples/subscriber.js)\r\n* How to use unified streams [producer.js](examples/producer.js) and [consumer.js](examples/consumer.js)\r\n\r\nIt shall run with defaults immediately if a RabbitMQ is installed at localhost:5672 with user guest/guest.\r\n \r\nAll examples accept individual settings, e.g. to use a remote host or to try different settings.\r\nIt can be provided with a js-file given as command line parameter. The file shall just export the options.\r\nRun it like this if the file is stored in folder ```config```, same level as ```examples```.\r\n\r\n```bash\r\nnode .\\examples\\producer.js ..\\config\\my-options.js\r\n```\r\n\r\nFeel free to start testing with the following file content:\r\n\r\n```bash\r\n'use strict';\r\n\r\nmodule.exports = {\r\n    net: {\r\n        host          : '127.0.0.1',\r\n        port          : 5672\r\n    },\r\n    sasl: {\r\n        mechanism     : 'PLAIN',\r\n        user          : 'guest',\r\n        password      : 'guest'\r\n    },\r\n    amqp: {\r\n        vhost         : '/'\r\n    }\r\n    data: {\r\n        exchange      : 'amq.topic',\r\n        routingKey    : 'a.b.c',\r\n        confirms      : true,  // producer\r\n        noAck         : false, // consumer\r\n        prefetchCount : 1000,  // consumer\r\n        payload       : Buffer.allocUnsafe(50).fill('X'),\r\n        maxCount      : 10000,\r\n        logCount      : 1000\r\n    }\r\n};\r\n```\r\n\r\nThe `data` section is ignored by the client, it is just used by the example programs.\r\n\r\n## API\r\nCreate a client instance:\r\n```bash\r\nconst options = {\r\n    tls: {\r\n        host: 'localhost',\r\n        port: 5671,\r\n        ca: [\r\n            fs.readFileSync('../truststore/cacert.pem'),\r\n            fs.readFileSync('../truststore/cert.pem')\r\n        ]\r\n    },\r\n    net: {\r\n        host: 'localhost',\r\n        port: 5672,\r\n    },\r\n    sasl: {\r\n        user: 'guest',\r\n        password: 'guest'\r\n    },\r\n    amqp: {\r\n        vhost: '/',\r\n    }\r\n};\r\nconst client = new AMQP.Client(options);\r\n```\r\nEither 'tls' [attributes](https://nodejs.org/api/tls.html#tls_tls_connect_options_callback) or 'net' [attributes](https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener) must be provided, 'tls' will be preferred.\r\n\r\nIt is also possible to provide connection data as [URI](https://www.rabbitmq.com/uri-spec.html):\r\n```bash\r\nconst options = {\r\n    uri: 'amqp://guest:guest@localhost:5672/vhost1?heartbeat=300' \r\n};\r\nconst client = new AMQP.Client(options);\r\n```\r\nOr using 'tls' again:\r\n```bash\r\nconst options = {\r\n    uri: 'amqps://guest:guest@localhost:5671?cacertfile=cacert.pem&cacertfile=cert.pem'\r\n};\r\nconst client = new AMQP.Client(options);\r\n```\r\n\r\nFinally, also an array of URIs can be provided:\r\n```bash\r\nconst options = {\r\n    uri: [\r\n        'amqp://guest:guest@localhost:5672/vh111',\r\n        'amqp://guest:guest@localhost:5672/vh222'\r\n    ]\r\n};\r\nconst client = new AMQP.Client(options);\r\n```\r\nThe client will start using the first URI and will try further URIs automatically in the given sequence until the connection can be established. If the client fails with all URIs then it stops and waits for another explicit call to connect. At this point an event `'disconnected'` is raised.\r\n\r\nAn application that requires a permanent opened connection shall always handle the `'disconnect'` event by calling `client.connect()` again, of course after a given delay time. Timers or other mechanisms may be used, depending on the application design. Keep in mind that NodeJS runtime does not guarantee precise timer execution, it depends on the event queue load.\r\n\r\nFinally, URIs can also be combined with all other options settings. It will just overwrite those fields that are explicitly defined in the URI. A typical example could be the following:\r\n```bash\r\nconst options = {\r\n    uri: [\r\n        'amqp://guest:guest@localhost:5672/vh111',\r\n        'amqp://guest:guest@localhost:5672/vh222'\r\n    ]\r\n    istreams:\r\n    {\r\n        in1: {channel: 1, exchange: 'amq.topic', routingKey: 'a.b.c', noAck: true},\r\n        in2: {channel: 1, exchange: '', routingKey: 'myQueue', noAck : false, prefetchCount : 1000}\r\n    }\r\n    ostreams:\r\n    {\r\n        out1: {channel: 1, exchange: 'amq.topic', routingKey: 'a.b.c', confirms : true},\r\n        out2: {channel: 1, exchange: 'amq.topic', routingKey: 'x.y.z', confirms : false}\r\n    }\r\n};\r\nconst client = new AMQP.Client(options);\r\n```\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.9.10] - 2020-06-25\r\n\r\n- added: license file for new delivery channel\r\n- fixed: newer Node.js version for unit tests and coverage\r\n\r\n## [0.9.9] - 2019-12-11\r\n\r\n## [0.9.6] - 2019-02-11\r\n\r\n## [0.9.5] - 2019-02-11\r\n\r\n## [0.9.4] - 2019-02-11\r\n\r\n## [0.9.2] - 2018-05-30\r\n\r\n- encoder /decoder refactoring, same structure like in amqp 1.0\r\n- all failed callbacks will not provide an error object anymore if the pending call was discarded due to client disconnect; one can now distinguish real errors from discarded calls\r\n\r\n### Added\r\n\r\n### Changed\r\n\r\n### Removed\r\n"},{"name":"xb-msg-amqp-v100","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/xb-msg-amqp-v100\r\nProvides a protocol implementation for [AMQP 1.0](http://www.amqp.org/specification/1.0/amqp-org-download).\r\n\r\n## Table of contents\r\n\r\n* [Prerequisites](#prerequisites)\r\n* [Install](#install)\r\n* [Overview](#overview)\r\n* [Getting started](#getting-started)\r\n* [API](#api)\r\n    * [Client Options](#client-options)\r\n    * [Server Options](#server-options)\r\n    * [Idle Timeout](#idle-timeout)\r\n    * [Endpoints](#endpoints)\r\n        * [Dynamic Endpoints](#dynamic-endpoints)\r\n        * [Common Behavior](#common-endpoint-behavior)\r\n        * [Session](#session)\r\n        * [Sender](#sender)\r\n        * [Outgoing Stream](#outgoing-stream)\r\n        * [Delivery Tags](#delivery-tags)\r\n        * [Receiver](#receiver)\r\n        * [Incoming Stream](#incoming-stream)\r\n    * [Message Delivery](#message-delivery)\r\n        * [Streams](#message-streams)\r\n        * [Piped Streams](#piped-message-streams)\r\n        * [Message Source and Target](#message-source-and-target)\r\n        * [Convert Source and Target](#convert-source-and-target)\r\n        * [Variable Message Routing](#variable-message-routing)\r\n        * [Quality of Service](#quality-of-service)\r\n        * [Mixed Quality of Service](#mixed-quality-of-service)\r\n        * [Flow Control](#flow-control)\r\n        * [Payload](#message-payload)\r\n        * [Payload and AMQP values](#message-payload-and-amqp-values)\r\n    * [Message Examples](#message-examples)\r\n* [Limitations](#limitations)\r\n* [Further Links](#further-links)\r\n\r\n## Prerequisites\r\n\r\nMake sure to have a message broker available for testing, e.g. [RabbitMQ](https://www.rabbitmq.com/download.html) with enabled AMQP 1.0 plugin.\r\n\r\n## Install\r\n\r\nSee also:\r\n[https://www.npmjs.com/package/@sap/xb-msg-amqp-v100](https://www.npmjs.com/package/@sap/xb-msg-amqp-v100)\r\n\r\nTo add it to your project run:\r\n```bash\r\nnpm i @sap/xb-msg-amqp-v100\r\n```\r\n\r\nTo generate complete API documentation run inside the library package folder\r\n```bash\r\nnpm run doc\r\n```\r\n\r\n## Overview\r\n\r\nThis library provides a messaging client as well as classes to realize a server for [AMQP 1.0](http://www.amqp.org/specification/1.0/amqp-org-download).\r\nIt has been tested successfully in combination with:\r\n* RabbitMQ, version `3.6.6`\r\n* Solace VMR, as of version `8.5.0.1008`\r\n* AMQPNetLite, version `2.1.1`\r\n* Apache Qpid Proton, version `0.23.0` (and electron go client)\r\n* Apache Qpid Proton-J, version `0.23.0`\r\n* Apache Qpid-JMS client, version `0.40.0`\r\n* Golang pack.ag/amqp, version `0.10.2`\r\n* Azure Service Bus, Queue\r\n\r\nEither TLS or NET socket is used, depending on the defined client options.\r\nBesides plain TCP/IP also WebSocket is supported, with and without [OAuth 2.0](https://oauth.net/2/), grant flows [ClientCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.4) and [ResourceOwnerPasswordCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.3).\r\n\r\nThe API works completely asynchronous based on callbacks, typically providing done (resolve) and failed (reject) callbacks.\r\nHence, it will be simple to use Promise objects in the application even if this library does not use it so far.\r\n\r\n## Getting started\r\n\r\nThere are test programs in the package folder `./examples` to demonstrate:\r\n* How to use a client as [producer](examples/producer.js), [consumer](examples/consumer.js) or [counter](examples/counter.js)\r\n* How to realize a server (or a mock server for tests), see example [gateway](examples/gateway.js)\r\n\r\nAll client examples shall run with provided defaults immediately if e.g. RabbitMQ is installed at localhost:5672 with user guest/guest, having the AMQP 1.0 plugin enabled.\r\nAlternatively, the producer may run in combination with the gateway example.\r\n\r\nAll examples accept individual settings, e.g. to use a remote host or to try different stream settings.\r\nIt can be provided with a js-file given as command line parameter. The file shall just export the options.\r\nRun it like this if the file is stored in folder ```config```, same level as ```examples```.\r\n\r\n```bash\r\nnode .\\examples\\producer.js ..\\config\\my-options.js\r\n```\r\n\r\nFeel free to start testing with the following file content:\r\n\r\n```bash\r\n'use strict';\r\n\r\nmodule.exports = {\r\n    net: {\r\n        host      : '127.0.0.1',\r\n        port      : 5672\r\n    },\r\n    sasl: {\r\n        mechanism : 'PLAIN',\r\n        user      : 'guest',\r\n        password  : 'guest'\r\n    },\r\n    data: {\r\n        source    : 'q001', // a queue name, source address for a receiver\r\n        target    : 'q002', // a queue name, target address for a sender\r\n        payload   : Buffer.allocUnsafe(50).fill('X'),\r\n        maxCount  : 10000,\r\n        logCount  : 1000\r\n    }\r\n};\r\n```\r\n\r\nThe `data` section is ignored by the client, it is just used by the example programs.\r\n\r\n## API\r\n\r\nFirst, the library provides a `Client` class. It represents one AMQP container and is able to manage one connection.\r\n`Session`, `Sender` and `Receiver` are provided as endpoints.\r\nReadable/Writable streams are used to consume/produce messages.\r\n\r\nFor the server implementation a basic `Server` class is provided.\r\nLike `Client` it supports connections running plain TCP (net/tls) as well as WebSocket (http/https).\r\n\r\nIncoming connections are represented as instances of the `Connection` class.\r\n`Connection` instances can also be created by an application-specific, more specialized server class.\r\nIt could for example support different connection types or WebSocket sub-protocols in parallel or could apply more strict validation rules.\r\n\r\n### Client Options\r\n\r\nClient instances are created directly, just providing options to the constructor:\r\n\r\n```bash\r\nconst AMQP = require('@sap/xb-msg-amqp-v100');\r\n\r\n...\r\nconst client = new AMQP.Client(options);\r\n...\r\n```\r\n\r\nOptions for a plain TCP connection, authenticating with user/password only:\r\n\r\n```bash\r\nconst options = {\r\n    net: {\r\n        host: 'localhost',\r\n        port: 5672,\r\n    },\r\n    sasl: {\r\n        mechanism: 'PLAIN',\r\n        user: 'guest',\r\n        password: 'guest'\r\n    }\r\n};\r\n```\r\n\r\nOptions for a plain TCP connection, using TLS and special trusts:\r\n\r\n```bash\r\nconst options = {\r\n    tls: {\r\n        host: 'localhost',\r\n        port: 5671,\r\n        ca: [\r\n            fs.readFileSync('../truststore/cacert.pem'),\r\n            fs.readFileSync('../truststore/cert.pem')\r\n        ]\r\n    },\r\n    sasl: {\r\n        mechanism: 'PLAIN',\r\n        user: 'guest',\r\n        password: 'guest'\r\n    }\r\n};\r\n```\r\n\r\nOptions to run AMQP over WebSocket (HTTP):\r\n\r\n```bash\r\nconst options = {\r\n    ws: {\r\n        host: 'localhost',\r\n        port: 80,\r\n        path: '/'\r\n        auth: 'webUser:webPass'\r\n    }\r\n    sasl: {\r\n        mechanism: 'PLAIN',\r\n        user: 'guest', \r\n        password: 'guest'\r\n    }\r\n};\r\n```\r\n\r\nOptions to run AMQP over WebSocket, using TLS (HTTPS) with well-known CA:\r\n\r\n```bash\r\nconst options = {\r\n    wss: {\r\n        host: 'myhost',\r\n        port: 443,\r\n        path: '/'\r\n    },\r\n    sasl: {\r\n        user: 'guest',\r\n        password: 'guest'\r\n    }\r\n};\r\n```\r\n\r\nEither 'tls' [attributes](https://nodejs.org/api/tls.html#tls_tls_connect_options_callback), 'net' [attributes](https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener), wss [attributes](https://nodejs.org/api/https.html#https_https_request_options_callback) or ws [attributes](https://nodejs.org/api/http.html#http_http_request_options_callback) must be provided.\r\nIf more than one is defined the preference is as follows: preferred 'tls' then 'net' then 'wss' then finally 'ws'.\r\n\r\nIn case of WebSocket options the client will overwrite the HTTP method (with GET) and all web-socket relevant header fields.\r\nEverything else is given to `http.request()` or `https.request()`.\r\n\r\nHence, you could for example use a specialized https agent:\r\n\r\n```bash\r\nconst HttpsProxyAgent = require('https-proxy-agent');\r\n\r\n...\r\nconst options = {\r\n    wss: {\r\n        host : 'my.host.behind.proxy',\r\n        port : 443,\r\n        path: '/',\r\n        agent: new HttpsProxyAgent('http://proxy:8080')\r\n    },\r\n    sasl: {\r\n        user: 'guest',\r\n        password: 'guest'\r\n    }\r\n};\r\n```\r\n\r\nIt is also possible to provide connection data as URI.\r\n\r\n```bash\r\nconst options = {\r\n    uri: 'amqp://user:pass@localhost:5672/?container=myAMQPContainerID'\r\n};\r\n```\r\n\r\nTo use 'tls' again with own trust:\r\n\r\n```bash\r\nconst options = {\r\n    uri: 'amqps://user:pass@localhost:5671?cacertfile=cacert.pem&cacertfile=cert.pem'\r\n};\r\n```\r\n\r\nFinally, also an array of URIs can be provided:\r\n\r\n```bash\r\nconst options = {\r\n    uri: [\r\n        'amqp://user11:pass11@host11:7777/?container=ABC123',\r\n        'amqp://user22:pass22@host22:9999/?container=XYZ789'\r\n    ]\r\n};\r\n```\r\n\r\nThe client will start using the first URI and will try further URIs automatically in the given sequence until the connection can be established.\r\nIf the client fails with all URIs then it stops and waits for another explicit call to connect.\r\nAt this point an event `'disconnected'` is raised.\r\n\r\nAn application that requires a continuously opened connection shall always handle the `'disconnected'` event by calling `client.connect()` again, of course after a given delay time.\r\nTimers or other mechanisms may be used, depending on the application design.\r\nBut keep in mind that NodeJS runtime does not guarantee precise timer execution. The scheduling depends on the event queue load.\r\n\r\nFinally, URIs can also be combined with all other settings. URI data (as far as provided) will just overwrite the corresponding fields.\r\nA typical example:\r\n\r\n```bash\r\nconst options = {\r\n    uri: [\r\n        'amqp://user11:pass11@host11:7777',\r\n        'amqp://user22:pass22@host22:9999'\r\n    ]\r\n    amqp: {\r\n        containerID: '',               // auto-generated by client\r\n        maxMessageSize: 1000000        // bytes\r\n        autoDeliveryTagPrefix: 'tag-',\r\n        outgoingSessionWindow: 1000,\r\n        incomingSessionWindow: 1000,\r\n        maxReceiverLinkCredit: 255,\r\n        minReceiverLinkCredit: 200\r\n    }\r\n};\r\n```\r\n\r\nWebSocket connections may require the use of [OAuth 2.0](https://oauth.net/2/) as well, for example a local application connecting to SAP cloud.\r\nRelevant grant flows are: [ClientCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.4) and [ResourceOwnerPasswordCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.3).\r\n\r\n```bash\r\nconst options = {\r\n    wss: {\r\n        host: 'myapp.cfapps.sap.hana.ondemand.com',\r\n        port: 443,\r\n        path: '/'\r\n    },\r\n    oa2: {\r\n        endpoint: 'https://myzone.authentication.sap.hana.ondemand.com/oauth/token',\r\n        client: 'myclientid',\r\n        secret: 'myclientsecret',\r\n    },\r\n    sasl: {\r\n        mechanism: 'ANONYMOUS',\r\n        identity: 'test.user@sap.com'\r\n    }\r\n};\r\n```\r\n\r\nFurther settings for the OAuth token request, for example a special agent:\r\n\r\n```bash\r\nconst options = {\r\n    wss: {\r\n        host: 'myapp.cfapps.sap.hana.ondemand.com',\r\n        port: 443,\r\n        path: '/'\r\n        agent: new HttpsProxyAgent('http://proxy:8080')\r\n    },\r\n    oa2: {\r\n        endpoint: 'https://myzone.authentication.sap.hana.ondemand.com/oauth/token',\r\n        client: 'myclientid',\r\n        secret: 'myclientsecret',\r\n        request: {\r\n            agent: new HttpsProxyAgent('http://proxy:8080')\r\n        }\r\n    },\r\n    sasl: {\r\n        mechanism: 'ANONYMOUS',\r\n        identity: 'test.user@sap.com'\r\n    }\r\n};\r\n```\r\n\r\n### ClientOptions mTLS\r\n\r\nFurthermore, settings to use client certificates (mTLS), possible with or without websocket, this example with websocket:\r\n\r\n```bash\r\nconst options = {\r\n    uri: 'wss://xxx.eu10-canary.em.services.cloud.sap/protocols/amqp10ws'\r\n    wss: {\r\n        key: fs.readFileSync('../config/pem/my-key.pem'),      // or Buffer.from('')\r\n        cert: fs.readFileSync('../config/pem/my-cert.pem')     // or Buffer.from('')\r\n    },\r\n    oa2: {\r\n        endpoint: 'https://xxx.accountsxxx.ondemand.com/oauth2/token',\r\n        client: 'myclientid',\r\n        secret: '',\r\n        request: {\r\n            key: fs.readFileSync('../config/pem/my-key.pem'),  // or Buffer.from('')\r\n            cert: fs.readFileSync('../config/pem/my-cert.pem') // or Buffer.from('')\r\n        }\r\n    }\r\n};\r\n```\r\n\r\nActually, all options from [TLS core](https://nodejs.org/docs/latest-v12.x/api/tls.html#tls_tls_createsecurecontext_options) can be used.\r\n\r\n### Server Options\r\n\r\nSimilar to the client class new `Server` instances are created, using the constructor:\r\n\r\n```bash\r\nconst AMQP = require('@sap/xb-msg-amqp-v100');\r\n\r\n...\r\nconst server = new AMQP.Server(options);\r\n...\r\nserver.listen();\r\n```\r\n\r\nOptions for plain TCP connections, accepting two SASL mechanisms (validation triggered by event):\r\n\r\n```bash\r\nconst options = {\r\n    net: {\r\n        port: 9999,\r\n    },\r\n    sasl: {\r\n        mechanism: 'ANONYMOUS PLAIN',\r\n    }\r\n};\r\n```\r\n\r\nTo use WebSocket with or without SASL processing, both possible in parallel:\r\n\r\n```bash\r\nconst options = {\r\n    ws: {\r\n        port: 8888,\r\n    },\r\n    sasl: {\r\n        mechanism: 'ANONYMOUS PLAIN',\r\n        mandatory: false\r\n    }\r\n};\r\n```\r\n\r\nSecure plain TCP connections and more restrictive protocol settings:\r\n\r\n```bash\r\nconst options = {\r\n    tls: {\r\n        port: 5671,\r\n    },\r\n    sasl: {\r\n        mechanism: 'PLAIN EXTERNAL',\r\n    },\r\n    amqp: {\r\n        outgoingSessionWindow: 100,\r\n        incomingSessionWindow: 100,\r\n        maxReceiverLinkCredit: 10,\r\n        minReceiverLinkCredit: 5\r\n        maxMessageSize: 10000 // bytes\r\n    }\r\n}\r\n```\r\n\r\nThe server will create one `Connection` instance for each incoming client connection.\r\nWhen running an own (more specialized) server similar instances can be created.\r\n\r\nThe AMQP protocol is completely handled by the `Connection` class.\r\nIt requires the same options as the `Server` class, but uses only the sections `sasl`, `amqp` and `tune`.\r\n\r\n```bash\r\nconst AMQP = require('@sap/xb-msg-amqp-v100');\r\n\r\nconst options = {\r\n    sasl: {\r\n        mechanism: 'PLAIN'\r\n    },\r\n    amqp: {\r\n        outgoingSessionWindow: 100,\r\n        incomingSessionWindow: 100,\r\n        maxReceiverLinkCredit: 10,\r\n        minReceiverLinkCredit: 5,\r\n        maxMessageSize: 10000 // bytes\r\n    }\r\n    tune: {\r\n        ostreamPayloadCopyLimit: 1024 // bytes\r\n    }\r\n}\r\n\r\nfunction init(socket) {\r\n    try {\r\n        const connection = new Connection(socket, 'net', options);\r\n        ...\r\n        connection\r\n            .once('authenticate', (mechanism, data, callback) => {...}\r\n            .once('ready', (peerInfo) => {...}\r\n            .once('abort', (hadError) => {...}\r\n            .once('close', (hadError) => {...}\r\n            .on('error', (error) => {...}\r\n            .on('sender', (endpoint) => {...}\r\n            .on('receiver', (endpoint) => {...}\r\n        ;\r\n        ...\r\n    } catch(e) {\r\n        socket.destroy(e);  // if e.g. options were not accepted\r\n    }\r\n} \r\n```\r\n\r\nThe [gateway](examples/gateway.js) example uses all of the defined events, you may compare it as check list.\r\nMore details can also be found in JSDoc.\r\n\r\n`Connection` instances behave always the same, independent from the used server class.\r\nEach instance offers the expected endpoints: `Session`, `Sender`, `Receiver`.\r\n\r\n### Idle Timeout\r\n\r\nWhile opening a new connection both peers can declare an [idle timeout](https://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#doc-doc-idle-time-out).\r\nIt means to expect receiving any frame within this time or to close the connection otherwise.\r\nThe behavior is similar for client and server. And for both sides this library supports the following options:\r\n\r\n* `idleTimeoutMilliseconds`: specifies the timeout value in milliseconds, 0 means no timeout. The value will be provided to [`net.setTimeout()`](https://nodejs.org/dist/latest-v12.x/docs/api/net.html#net_socket_settimeout_timeout_callback)\r\n* `idleTimeoutTryKeepAlive`: defines the timeout behavior, indicates whether to send an empty frame to keep the connection alive or to end the connection, sending a close frame with an appropriate error message.\r\n* `adjustSelfIdleTimeout`: optional callback to recalculate the own timeout after peer information are available, the default implementation calculates the minimum of the own timeout and the half of peers timeout, but only if running in keep alive mode.\r\n\r\nClient defaults:\r\n```bash\r\nconst options = {\r\n    amqp: {\r\n        idleTimeoutMilliseconds: 90000,\r\n        idleTimeoutTryKeepAlive: true,\r\n        adjustSelfIdleTimeout: adjustSelfIdleTimeout // callback\r\n    }\r\n}\r\n\r\n```  \r\nServer defaults:\r\n```bash\r\nconst options = {\r\n    amqp: {\r\n        idleTimeoutMilliseconds: 180000,\r\n        idleTimeoutTryKeepAlive: false,\r\n        adjustSelfIdleTimeout: adjustSelfIdleTimeout // callback\r\n    }\r\n}\r\n\r\n```  \r\n\r\n### Endpoints\r\n\r\nOnce a connection has been established its usage is quite symmetric for both peers.\r\nAt least foreseen by the specification client and server both can begin and end sessions as well as attach and detach incoming or outgoing links.\r\n\r\nFor example, a server may wait for clients to connect and may afterwards immediately begin a session, attach an outgoing link and may finally start sending messages (that the client has never asked for).\r\n\r\nHowever, in typical scenarios the client takes the active role and the server will wait for client requests.\r\nIn particular, if the server is actually a message broker this is the expected behavior.\r\n\r\n#### Dynamic Endpoints\r\n\r\nThe boolean endpoint property _dynamic_ indicates whether or not an endpoint was created on peers request.\r\n`Session`, `Sender` and `Receiver` provide a common getter for it.\r\nThe property is not covered by the specification, it is just used by this API as part of the endpoint lifecycle control.\r\n\r\n`Client` and `Connection` both support _dynamic_ endpoints as follows:\r\n\r\n* raise an event each time a dynamic endpoint was created and opened the very first time,\r\n* destroy it immediately if the event is not handled to avoid uncontrolled resource consumption,\r\n* destroy it automatically latest on connection close,\r\n* allow the application to destroy it at any earlier point in time.\r\n\r\nIn addition the `Client` allows to create _non-dynamic_ endpoints, which stay registered by `name` or `id` until the application destroys it explicitly.\r\nThose endpoints can be used at any point in time, with or without an opened connection.\r\n\r\n#### Common Endpoint Behavior\r\n\r\nOverview on common methods for `Session`, `Sender` and `Receiver` (check JSDoc for details):\r\n\r\n* `dynamic()`: returns `true` if the endpoint was created on peers request,\r\n* `active()`: returns `true` if the endpoint gets opened automatically once `Client` is connected,\r\n* `opened()`: returns `true` if local and remote endpoint are interactive, \r\n* `closed()`: returns `true` if local and remote endpoint are neither opened nor on the way to open,\r\n* `destroyed()`: returns true if the endpoint was destroyed; it is not registered anymore,\r\n* `destroy()`: will immediately destroy the endpoint and cancel all of its messages in transit.\r\n\r\nOverview on common events for `Session`, `Sender` and `Receiver` (check JSDoc for details):\r\n\r\n* `opened`: raised if local and remote endpoint are both opened,\r\n* `closed(ox, ix)`: raised if local and remote endpoint are both closed, with outgoing and incoming error, both optional\r\n* `destroy`: raised before local endpoint is destroyed, application shall release any reference.\r\n\r\nThe `closed` event may report protocol errors. If the event is not handled by the application, but parameter `ix` is valuated then this (peer) error will be reported by the client.\r\n\r\nFurther methods and events depend on the specific endpoint type and applicable performatives.\r\n\r\n#### Session\r\n\r\nEach [session](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#section-sessions) groups multiple [links](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#section-links) and provides a higher-level flow control.\r\nFor a single connection multiple sessions can be used, but one session is usually sufficient.\r\n\r\nA stable session identifier (comparable to a link name) is not defined by the specification.\r\nThat's why, the library introduces an identifier (a simple string) just for local usage and applications convenience.\r\nIt is never visible to the peer.\r\n\r\nThere is one default session in use, identified with an empty string:\r\n\r\n```bash\r\nconst defSession = client.session('');\r\n...\r\nconst anySession = client.session('anyLocalID');\r\n```\r\n\r\nOverview on `Session` specific methods (check JSDoc for details):\r\n\r\n* all [common endpoint methods](#common-endpoint-behavior) and\r\n* `begin(outgoing, incoming, options)`: _begin_ session, all parameters optional and defaulted by client options,\r\n* `flow(outgoing, incoming)`: change current incoming and outgoing window size,\r\n* `end()`: _end_ the session, no messages will be sent or received, attached outgoing streams will wait based on flow control.\r\n\r\nOverview on `Session` specific events (check JSDoc for details):\r\n\r\n* all [common endpoint events](#common-endpoint-behavior) and\r\n* `flow`: flow settings were updated by the corresponding remote endpoint.  \r\n\r\nA session will automatically _begin_ if at least one active link endpoint is assigned to it.\r\nHowever, this can also be triggered explicitly.\r\n\r\n```bash\r\nclient.session('').begin(200, 200);\r\n```\r\n\r\nThe inherited method `destroy()` will first destroy all currently attached links before destroying itself.\r\n\r\n#### Sender\r\n\r\nEach `Sender` offers an `OutgoingStream` which extends the NodeJS stream class `Writable`.\r\nThe stream runs in object mode and expects plain message objects (see also [Message Streams](#message-streams)).\r\n\r\nOverview on `Sender` methods (check JSDoc for details):\r\n\r\n* all [common endpoint methods](#common-endpoint-behavior) and\r\n* `session()`: returns the currently assigned session endpoint,\r\n* `name()`: returns the link name,\r\n* `options()`: returns current settings as plain object,\r\n* `stream()`: returns the currently associated stream,\r\n* `attach()`: update settings, create the stream, _attach_ the link and return the stream,\r\n* `detach()`: destroy the stream and _detach_ the link,\r\n\r\nA `Sender` provides only the [common endpoint events](#common-endpoint-behavior) (check JSDoc for details):\r\n\r\nMethod `attach()` may also be called if the client is not connected.\r\nThis will switch the endpoint in active mode and it will automatically _attach_ whenever a connection is opened successfully.\r\n\r\nImmediately after calling `attach()` the application may also start using the stream.\r\nIn any case flow control must be handled correctly, based on the standard NodeJS stream API.\r\n\r\nAs long as the endpoint is `active()` it will try to send all queued messages.\r\nEven if the connection is interrupted the endpoint will resume its work as soon as the connection is opened again.\r\n\r\nThe inherited method `destroy()` will first _detach_ the endpoint before destroying its stream and finally itself.\r\nDestroying the stream means all queued messages including those that are already in transit will be cancelled.\r\nThe message `failed` callback is used to notify the application.\r\n\r\nThe application may also call `stream.end()` to indicate end of usage.\r\nNew messages are not accepted anymore, but all queued messages will be processed before the link is detached.\r\n\r\nA `Sender` manages one instance of an `OutgoingStream`.\r\n\r\n#### Outgoing Stream\r\n\r\nOverview on `OutgoingStream` methods (check JSDoc for details):\r\n\r\n* all methods of `Writable` and\r\n* `sender(): Sender`: returns the associated sender endpoint,\r\n* `newDeliveryTag():string`: returns a new delivery tag that can be registered by application before usage,\r\n* `flow(available)`: send the amount of locally available messages,\r\n* `delivered():UInt`: returns the amount of delivered messages,\r\n* `available():UInt`: returns the amount of available messages,\r\n* `credit():UInt`: returns the remaining message transfer credit,\r\n\r\nOverview on `OutgoingStream` events (check JSDoc for details):\r\n* all events of `Writable` and\r\n* `ready`: indicates the stream is attached and messages will now really be sent, not only queued.\r\n\r\n```javascript\r\nstream\r\n    .on('ready', () => {\r\n        send();\r\n    })\r\n    .on('drain', () => {\r\n        send();\r\n    })\r\n    .on('finish', () => {\r\n        client.disconnect();\r\n    })\r\n;\r\n```\r\n\r\nSee also the [producer](examples/producer.js) example.\r\n\r\n#### Delivery Tags\r\n\r\nIf the application writes a message without a `message.target.deliveryTag` to an outgoing stream then this tag will be generated automatically.\r\nThe result will be the same as if the application would have called `stream.newDeliveryTag()` first and would have assigned the new tag to a message, but the application was not able to register the tag for any kind of message correlation later on.\r\n\r\nGenerated delivery tags will start with `options.amqp.autoDeliveryTagPrefix`, by default `'tag-'`.\r\nHence, the application may also use own delivery tags in parallel with generated tags, easily avoiding duplicate tags being used.\r\n\r\n#### Receiver\r\n\r\nEach `Receiver` offers an `IncomingStream` which extends the NodeJS stream class `Readable`.\r\nThe stream runs in object mode and manages plain message objects (see also [Message Streams](#message-streams)).\r\n\r\nOverview on `Receiver` methods (check JSDoc for details):\r\n\r\n* all [common endpoint methods](#common-endpoint-behavior) and\r\n* `session()`: returns the currently assigned session endpoint,\r\n* `name()`: returns the link name,\r\n* `options()`: returns current settings as plain object,\r\n* `stream()`: returns the currently associated stream,\r\n* `attach()`: update settings, create the stream, _attach_ the link and return the stream,\r\n* `detach()`: destroy the stream and _detach_ the link,\r\n\r\nA `Receiver` provides only the [common endpoint events](#common-endpoint-behavior) (check JSDoc for details):\r\n\r\nMethod `attach()` may also be called if the client is not connected and it will return the stream already.\r\nThe endpoint is switched into active mode and will automatically _attach_ whenever a connection is opened successfully.\r\n\r\nThe inherited method `destroy()` will first _detach_ before destroying its stream and finally itself.\r\nDestroying the stream means:\r\n\r\n* all queued messages will be deleted immediately; it will not reach the application anymore, \r\n* for messages in transit (already provided to the application, but not yet done) a following `done()` callback is ignored,\r\n\r\nA `Receiver` manages one instance of an `IncomingStream`.\r\n\r\n#### Incoming Stream\r\n\r\nThe IncomingSteam handles also flow control for the application.\r\nIt can renew the transfer credit after it was consumed and it can reduce the credit if application has to consume slower as the sender can send.\r\n\r\nOverview on `IncomingStream` methods (check JSDoc for details):\r\n\r\n* all methods of `Readable` and\r\n* `receiver(): Receiver`: returns the associated receiver endpoint,\r\n* `flow(maxCredit, minCredit)`: updates message transfer credit settings,\r\n* `delivered():UInt`: returns the amount of messages received by this stream,\r\n* `available():UInt`: returns the amount of available messages from the remote endpoint,\r\n* `credit():UInt`: returns the remaining message transfer credit,\r\n\r\nOverview on `IncomingStream` events (check JSDoc for details):\r\n* all events of `Readable` and\r\n* `subscribed`: indicates the stream is attached and messages could be received now.\r\n\r\n```bash\r\nstream\r\n    .on('subscribed', () => {\r\n        console.log('attached');\r\n    })\r\n    .on('data', (message) => {\r\n        ...\r\n        message.done();\r\n        ...\r\n    })\r\n;\r\n```\r\n\r\nAs soon as the current credit reaches `minCredit`, the incoming stream will renew the credit with maxCredit automatically.\r\nHowever, if the application decides to set `minCredit = -1` then the application will have to renew the credit explicitly using method `stream.flow(maxCredit, minCredit)`.\r\n\r\nThe application must always call `message.done()`, independent from chosen settle mode.\r\n\r\nSee also the [consumer](examples/consumer.js) example.\r\n\r\n### Message Delivery\r\n\r\nMessages are transferred as soon as a link between a `Sender` and a `Receiver` is attached.\r\n\r\n#### Message Streams\r\n\r\nAs mentioned earlier `Writable` and `Readable` streams are provided to handle outgoing and incoming messages.\r\nThese streams always run in object mode using `options.amqp.linkHighWaterMsgCount`.\r\n\r\nHere, a single message is represented as a plain object with the following attributes:\r\n* `source`: defined by the incoming stream, providing transfer attributes as well as the message header, annotations and properties,\r\n* `target`: defined optionally by the application, similar to the source, accepted by the outgoing stream,\r\n* `payload`: message data to transfer, see also this [chapter](#message-payload),\r\n* `done`: a callback function to confirm final message processing,  \r\n* `failed`: a callback function to indicate processing failure.\r\n\r\nA receiving application is expected to call either `done` or `failed` for each single message, exactly one time (maybe asynchronously) and independent from the used link settings.\r\n\r\nIf a transfer was received unsettled then `done` will send a disposition with outcome [DeliveryAccepted](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-accepted).\r\n\r\nIn the case of a processing error, `failed` will either send outcome [DeliveryRejected](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-rejected) (if an error object is provided) or [DeliveryReleased](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-released) otherwise.\r\n\r\n```bash\r\nstream.on('data', (message) => {\r\n    try {\r\n        JSON.parse(message.payload.toString('utf8'));\r\n        ...\r\n        message.done();\r\n    } catch (e) {\r\n        message.failed(e);\r\n    }\r\n};\r\n```\r\n\r\nA sending application can define the callbacks to get notified about the transfer result.\r\n\r\n```bash\r\nconst message = {\r\n    payload : Buffer.from('test'),\r\n    done : () => this._onSendDone(message),\r\n    failed : (error) => this._onSendFailed(error, message)\r\n};\r\nconst noPause = stream.write(message);\r\n```\r\n\r\n#### Piped Message Streams\r\n\r\nAn application may also pass trough (or transform) a received message from an incoming stream to an outgoing stream.\r\nIn this case both streams would directly handle `done` and `failed` correctly.\r\n\r\n```bash\r\nclass Processor extends Transform {\r\n    constructor() {\r\n        super({\r\n            writableObjectMode: true,\r\n            writableHighWaterMark: 16,\r\n            readableObjectMode: true,\r\n            readableHighWaterMark: 16\r\n        });\r\n    }\r\n    \r\n    _transform(message, encoding, callback) {\r\n        try {\r\n            JSON.parse(message.payload.toString('utf8'));\r\n            ...\r\n            this.push(message);\r\n            callback();\r\n        } catch (e) {\r\n            callback(e);\r\n        }\r\n    }\r\n}\r\n...\r\nconst istream = client.receiver('inp').attach('queue:q001');\r\nconst ostream = client.sender('out').attach('topic:a/b/c');\r\n...\r\nistream.pipe(new Processor()).pipe(ostream);\r\n...\r\nclient.connect();\r\n```\r\n\r\n#### Message Source and Target\r\n\r\nBoth, `message.source`and `message.target` provide the same fields (check JSDoc for details):\r\n\r\n* `deliveryTag`: an application tag to identify (and correlate) the message,\r\n* `batchable`: true if a disposition can be delayed in order to optimize processing,\r\n* `settled`: true if the sender has already settled,\r\n* `rcvSettleMode`: senders requested receiver settle mode,\r\n* `header`: plain object with header data ([see specification](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-header)),\r\n* `annotations`: map with message annotations ([see specification](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-message-annotations)),\r\n* `properties`: plain object with message properties ([see specification](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-properties)).\r\n\r\nAll target data are optional, defaults originate from the link definition that the message is sent over.\r\n\r\n#### Convert Source and Target\r\n\r\nTwo fields of the `Client` and the `Connection` options allow the registration of conversion exits:\r\n* `options.amqp.mapIncomingMsgSource`\r\n* `options.amqp.mapOutgoingMsgTarget`\r\n\r\nThe application or any other library could replace the default functions (check JSDoc for parameters).\r\nFor example, @sap/xb-msg-env uses this mechanism to assure that a unified message source is provided and a unified target can be used by application.\r\n\r\n#### Variable Message Routing\r\n\r\nUsing `message.target` the application can select dynamically the address that the message is sent to:\r\n\r\n```bash\r\nlet id = '42'; \r\n...\r\nmessage.target = {\r\n    properties : {\r\n        to: 'topic/order/' + id\r\n    }\r\n};\r\n...\r\n```\r\n\r\nThis allows to:\r\n* add message-related data as topic segment, e.g. an object identifier,\r\n* forward messages with variable target address over one single link.\r\n\r\nPlease note, the specification defines only an [address string](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-address-string).\r\nThe address syntax depends on the connected service. For example, RabbitMQ, SolaceVMR or SAP Enterprise Messaging support different address expressions.\r\nAnd even more unexpected, RabbitMQ uses `properties.subject` instead of `properties.to`.\r\nHowever, package @sap/xb-msg-env would enable a unified processing here, if really needed.\r\n\r\n#### Quality of Service\r\n\r\nChapter [2.6.12.](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#doc-idp438000) of the protocol specification describes how to handle message transfers.\r\nWith different combinations of sender and receiver settle mode the usual qualities can be realized.\r\n\r\n| quality | [sndSettleMode](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-sender-settle-mode) | [rcvSettleMode](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#type-receiver-settle-mode) |\r\n| :---: | :---: | :---: |\r\n| at-most-once  | 1 (settled) | 0 (first) |\r\n| at-least-once | 0 (unsettled) | 0 (first) |\r\n| exactly-once  | 0 (unsettled) | 1 (second) |\r\n\r\nSender and receiver will agree on its settle modes when the link is attached:\r\n```bash\r\nsender.attach({\r\n    sndSettleMode: 0,\r\n    rcvSettleMode: 0,\r\n    target: {\r\n        address: 'topic:a/b/c'\r\n    }\r\n});\r\n```\r\n\r\n```bash\r\nreceiver.attach({\r\n    sndSettleMode: 0,\r\n    rcvSettleMode: 0,\r\n    source: {\r\n        address: 'queue:q001'\r\n    }\r\n});\r\n```\r\n\r\nIn any case the application has just to select the settle mode, usually at the client side.\r\nThe library will assure correct handling of messages in transit, delivery states and message settlement.\r\n\r\n#### Mixed Quality of Service\r\n\r\nA sender may decide dynamically (per single message) on the settle mode.\r\nFirst, it would define sndSettleMode `mixed` while attaching the link.\r\n\r\n```bash\r\nsender.attach({\r\n    sndSettleMode: 2,\r\n    rcvSettleMode: 0,\r\n    target: {\r\n        address: 'topic:a/b/c'\r\n    }\r\n});\r\n```\r\n\r\nLater it would define the quality of service using the message target.\r\n\r\n```bash\r\n...\r\nmessage.target = {\r\n    settled: false,     // not yet settled by sender\r\n    rcvSettleMode: 0    // receiver settles first\r\n};\r\n...\r\n```\r\n\r\n#### Flow Control\r\n\r\nThere are actually 3 layers of flow control:\r\n* network socket and amount of bytes that is sent or received before the connection is throttled,\r\n* session layer with an incoming and outgoing message transfer window,\r\n* link layer with message transfer credits provided by the receiver to the sender.\r\n\r\nThe library handles flow control on all layers automatically to protect the process in which it resides.\r\nThe application just has to define the limits for each layer as part of the client or server options:\r\n\r\n* section `options.tune` for the network layer and\r\n* section `options.amqp` for the session and link layer.\r\n\r\n#### Message Payload\r\n\r\nThe application may provide the message payload for an outgoing message as follows:\r\n\r\n* a `Buffer` object,\r\n* an `Array` of `Buffer` objects,\r\n* a `Payload` object or a plain object with same properties as `Payload`.\r\n\r\nProperties of a `Payload` object:\r\n* `chunks`: an Array of Buffer objects,\r\n* `type`: an optional string providing the content type,\r\n* `encoding`: an optional string providing the content encoding,\r\n* `data`: any optional data to be sent either as [AMQP sequence](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-amqp-sequence) or as [AMQP value](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-amqp-value),\r\n* `properties`: [application properties](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-application-properties).\r\n\r\nAfter the payload was given to a sender it must not be modified by the application anymore.\r\nAnd as soon as a single buffers size exceeds `options.tune.ostreamPayloadCopyLimit` (default 1024 bytes, minimum 128 bytes) it will not be copied anymore, but will be pushed to the network socket directly.\r\n\r\nIncoming messages will always provide a `Payload` object, just for application convenience.\r\n\r\n#### Message Payload and AMQP values\r\n\r\nUsually, the message payload will consist of binary data, an opaque array of bytes from the protocol libraries perspective.\r\nHowever, AMQP 1.0 allows also a single [AMQP value](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-amqp-value) or an [AMQP sequence](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-amqp-sequence) alternatively.\r\n\r\nIf a received message payload consists of such values then the decoded values are provided as `payload.data` and in addition the corresponding parsed raw bytes as `payload.chunks`.\r\nThe field `payload.type` will then have the special value `'amqp-1.0'`, which is not a real mime type and in consequence not in danger to clash with such.\r\nPlease note, `'amqp-1.0'` is only a local API convention, not standardized.\r\nHowever, it has already been introduced by [RabbitMQ AMQP 1.0 plugin](https://github.com/rabbitmq/rabbitmq-amqp1.0).\r\n\r\nFor an outgoing message payload with special type `'amqp-1.0'` the encoder will either write `payload.chunks` (if provided) directly without any validation or it will encode the given `payload.data` as AMQP value or AMQP sequence.\r\n\r\n### Message Examples\r\nJust a few copy&paste templates:\r\n\r\n* Payload as Buffer\r\n  ```javascript\r\n  const message = {\r\n    payload : Buffer.from('hello world'),\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n  ```\r\n\r\n* Payload as Buffer Array\r\n  ```javascript\r\n  const message = {\r\n    payload : [\r\n        Buffer.from('hello '),\r\n        Buffer.from('world'),\r\n    ],\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n  ```\r\n\r\n* Payload from JSON, application, properties, message properties and message header to be sent\r\n  ```javascript\r\n  const message = {\r\n    payload: {\r\n        chunks: [Buffer.from(JSON.stringify({\r\n            quantity: 100,\r\n            uom: 'kg',\r\n        }))],\r\n        properties:{ // application properties, data to read without parsing full payload\r\n            SalesOrder: '42',\r\n            DeliveryID: '1764'\r\n        },\r\n        type: 'application/json'\r\n    },\r\n    target: {\r\n        header: {\r\n            durable: true,\r\n            priority: 2,\r\n            ttl: null, // or number in milliseconds\r\n        },\r\n        properties: {\r\n            messageID: '100037877',\r\n            userID: '',\r\n            to: 'topic:a/b/c',\r\n            subject: '',\r\n            replyTo: '',\r\n        }\r\n    },\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n  ```\r\n\r\n* Cloud Event, structured format\r\n  ```javascript\r\n  \r\n  const message = {\r\n    payload: {\r\n        chunks: [Buffer.from(JSON.stringify({\r\n            specversion: '0.3',\r\n            source: 'sap/faas/demo',\r\n            type: 'com.sap.coffee.produced',\r\n            id: 'demo',\r\n            cause: 'demo',\r\n            subject: '',\r\n            data: 'espresso',\r\n            datacontenttype: 'text/plain'\r\n        }))],\r\n        type: 'application/cloudevents+json'\r\n    },\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n\r\n  ```\r\n\r\n* Cloud Event, binary format \r\n  ```javascript\r\n  \r\n  const message = {\r\n    payload: {\r\n        chunks: [\r\n            Buffer.from('espresso')\r\n        ],\r\n        properties: {\r\n            'cloudEvents:specversion': '0.3',\r\n            'cloudEvents:source': 'sap/faas/demo',\r\n            'cloudEvents:type': 'com.sap.coffee.produced',\r\n            'cloudEvents:id': 'demo',\r\n            'cloudEvents:cause': 'demo',\r\n            'cloudEvents:subject': ''\r\n        },\r\n        type: 'text/plain'\r\n    },\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n\r\n  ```\r\n\r\n* No binary payload, but single AMQP Value, e.g. a string\r\n  ```javascript\r\n  \r\n  const AMQP = require('@sap/xb-msg-amqp-v100');\r\n  \r\n  const message = {\r\n    payload: {\r\n        type: 'amqp-1.0',\r\n        data: AMQP.Factory.String('Hello World')\r\n    },\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n\r\n  ```\r\n\r\n* Simulate text message from [Qpid JMS](https://qpid.apache.org/components/jms/index.html)\r\n  ```javascript\r\n  \r\n  const AMQP = require('@sap/xb-msg-amqp-v100');\r\n    \r\n  const message = {\r\n    target: {\r\n      annotations: {\r\n        'x-opt-jms-msg-type': AMQP.Factory.Byte(5)\r\n      }\r\n    },\r\n    payload: {\r\n      type: 'amqp-1.0',\r\n      data: AMQP.Factory.String('Hello World')\r\n    },\r\n    done: () => { console.log('message was sent'); },\r\n    failed: (err) => { console.log('message not sent,', err); }\r\n  };\r\n\r\n  ```\r\n\r\n## Limitations\r\n\r\nSimilar to other libraries not the full scope of AMQP 1.0 could be implemented so far:\r\n\r\n* Only the following SASL mechanisms are supported: ANONYMOUS, PLAIN, EXTERNAL,\r\n* Deliveries cannot be resumed; once reconnected those messages are sent again with a new delivery,\r\n* Delivery state [Received](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-received) is not used,\r\n* Delivery state [Modified](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#type-modified) is not supported,\r\n* Multiple Transfer Frames for one delivery are collected until the whole message can be provided to the application,\r\n* Message Footer is not supported, received but not exposed at the API,\r\n* Message Delivery Annotations are not supported, received, but not exposed at the API,\r\n* Decimal values are provided/accepted as binary data only, using a `Buffer` instance; use a specialized library for the conversion,\r\n* Transactions are not supported,\r\n* Incoming streams handle Quality of Service _Exactly Once_ with one single callback to the application only,\r\n* Source filters are not supported,\r\n* Several fine-grained settings for endpoint lifecycle control may be ignored.\r\n\r\n## Further Links\r\n\r\nProtocol Specification:\r\n\r\n* [AMQP 1.0, Part 1: Types](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-types-v1.0-os.html#toc)\r\n* [AMQP 1.0, Part 2: Transport](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transport-v1.0-os.html#toc)\r\n* [AMQP 1.0, Part 3: Messaging](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-messaging-v1.0-os.html#toc)\r\n* [AMQP 1.0, Part 4: Transactions](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-transactions-v1.0-os.html#toc)\r\n* [AMQP 1.0, Part 5: Security](http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-security-v1.0-os.html#toc)\r\n\r\nSASL and supported mechanisms:\r\n\r\n* [SASL Protocol](https://tools.ietf.org/html/rfc4422)\r\n* [SASL Mechanisms](https://www.iana.org/assignments/sasl-mechanisms/sasl-mechanisms.xhtml#sasl-mechanisms-1)\r\n* [SASL Mechanism ANONYMOUS](https://tools.ietf.org/html/rfc4505)\r\n* [SASL Mechanism PLAIN](https://tools.ietf.org/html/rfc4616)\r\n* [SASL Mechanism EXTERNAL](https://tools.ietf.org/html/rfc4422#page-29)\r\n\r\nAMQP and WebSocket:\r\n\r\n* [AMQP WebSocketBinding](http://docs.oasis-open.org/amqp-bindmap/amqp-wsb/v1.0/amqp-wsb-v1.0.html)\r\n* [WebSocket Protocol](https://tools.ietf.org/html/rfc6455)\r\n* [Http User Agent Header](https://tools.ietf.org/html/rfc2616#section-14.43)\r\n* [OAuth 2.0](https://oauth.net/2/)\r\n* [OAuth 2.0, Client Credentials Grant](https://tools.ietf.org/html/rfc6749#section-4.4)\r\n* [OAuth 2.0, Resource Owner Password Credentials Grant](https://tools.ietf.org/html/rfc6749#section-4.3)\r\n\r\nProtocol Support by others:\r\n\r\n* [Rabbit MQ AMQP 1.0 plugin](https://github.com/rabbitmq/rabbitmq-amqp1.0)\r\n* [AMQP 1.0 in Azure Service Bus and Event Hubs protocol guide](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-amqp-protocol-guide)\r\n* [Solace: Using AMQP 1.0](https://docs.solace.com/Open-APIs-Protocols/Using-AMQP.htm)\r\n* [Solace: AMQP 1.0 Protocol Conformance](https://docs.solace.com/Open-APIs-Protocols/AMQP-Protocol-Conformance.htm)\r\n* [Qpid Proton Overview](https://qpid.apache.org/proton/index.html)\r\n* [Qpid Proton C++ API](https://qpid.apache.org/releases/qpid-proton-0.22.0/proton/cpp/api/index.html)\r\n* [Qpid Proton-J API](https://qpid.apache.org/releases/qpid-proton-j-0.26.0/api/index.html)\r\n* [Qpid JMS](https://qpid.apache.org/components/jms/index.html)\r\n* [Qpid Proton github repository](https://github.com/apache/qpid-proton)\r\n* [.Net Library: AMQP.Net Lite](https://github.com/Azure/amqpnetlite)\r\n* [Node Library: Rhea](https://github.com/amqp/rhea)\r\n* [Node Library: AMQP 1.0](https://github.com/noodlefrenzy/node-amqp10)\r\n* [Go Library (uses Qpid C library): Qpid Electron](https://godoc.org/qpid.apache.org/electron)\r\n* [Go Library (pure GO, context.Context support): vcabbage/amqp](https://github.com/vcabbage/amqp)\r\n\r\nOthers:\r\n* [Introduction to AMQP 1.0](https://de.slideshare.net/ClemensVasters/amqp-10-introduction)\r\n* [Node: Backpressuring in Streams](https://nodejs.org/en/docs/guides/backpressuring-in-streams/)\r\n\r\n\r\n\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.9.58] - 2021-12-14\r\n\r\n- fixed: oauth payload length issue on method fallback\r\n\r\n## [0.9.57] - 2021-12-08\r\n\r\n- added: oauth request timeout\r\n\r\n## [0.9.56] - 2021-11-15\r\n\r\n- fixed: late connection container close\r\n\r\n## [0.9.55] - 2021-11-15\r\n\r\n- fixed: oauth via params\r\n\r\n## [0.9.54] - 2021-11-04\r\n\r\n- fixed: handle null values as message payload\r\n\r\n## [0.9.53] - 2021-09-14\r\n\r\n- added: example for mTLS\r\n- added: 2-mode strategy for OAuth2.0 token request (auth via header, auth via params)\r\n\r\n## [0.9.52] - 2021-06-25\r\n\r\n- fixed: return response payload as part of error text on failed websocket upgrade\r\n\r\n## [0.9.51] - 2021-04-30\r\n\r\n- fixed: count split transfer frames correctly (when maxFrameSize is smaller than payload)\r\n\r\n## [0.9.50] - 2020-11-30\r\n\r\n- fixed: update more precisely remoteIncomingWindow and remoteOutgoingWindow\r\n\r\n## [0.9.48] - 2020-10-09\r\n\r\n- fixed: README after move to npmjs\r\n\r\n## [0.9.47] - 2020-09-22\r\n\r\n- fixed, no endpoint error emitted at client if endpoint closed event is handled\r\n\r\n## [0.9.45] - 2020-08-19\r\n\r\n- fixed: null values for unused Flow frame fields\r\n\r\n## [0.9.44] - 2020-07-31\r\n\r\n- fixed: relax max listener for connection state, each session will listen\r\n\r\n## [0.9.43] - 2020-06-25\r\n\r\n- added: license file for new delivery channel\r\n- fixed: newer Node.js version for unit tests and coverage\r\n\r\n## [0.9.42] - 2020-06-18\r\n\r\n## [0.9.41] - 2020-06-16\r\n\r\n- fixed: serial number handling (as sequence number, delivery number, transfer number)\r\n\r\n## [0.9.40] - 2020-05-29\r\n\r\n- fixed: always copy payload if websocket writer masks data (client to server)\r\n\r\n## [0.9.39] - 2020-03-23\r\n\r\n- added: improved default options for better performance\r\n\r\n## [0.9.38]- fixed: no disposition for early closed sessions (channels) - 2020-03-10\r\n\r\n## [0.9.36] - 2020-02-12\r\n\r\n- fixed: link state in combination with frequent state changes on same connection\r\n\r\n## [0.9.35] - 2020-02-11\r\n\r\n## [0.9.34] - 2019-12-23\r\n\r\n- fixed: correct minimum value for idleTimeoutMilliseconds\r\n- fixed: early destroy of dynamic endpoints (server-side)\r\n\r\n## [0.9.32] - 2019-12-10\r\n\r\n- added: echo example, receives and send via same connection\r\n- fixed: end handling of consumer example\r\n\r\n## [0.9.31] - 2019-11-18\r\n\r\n- added: more fine-grained handling of idle timeout, for client and for server side\r\n\r\n## [0.9.29] - 2019-11-15\r\n\r\n- fixed: payload encoding independent from payload (content) type\r\n\r\n## [0.9.28] - 2019-10-17\r\n\r\n## [0.9.27] - 2019-10-16\r\n\r\n- fixed: encoding of explicit bool value as application property\r\n\r\n## [0.9.26] - 2019-10-15\r\n\r\n- fixed: increment transfer.message.header.deliveryCount after serialization\r\n- fixed: decode value type CHAR correctly\r\n- fixed: application properties with long strings\r\n- fixed: updated dependencies\r\n\r\n## [0.9.20] - 2019-09-27\r\n\r\n- fixed: Value Factory, AMQP type Byte, Short, Int\r\n- added: Value Factory, AMQP type String and Symbol\r\n- fixed: payload type amqp-1.0 for AMQP values\r\n- added: sample to send AMQP values as payload\r\n\r\n## [0.9.19] - 2019-07-26\r\n\r\n- fixed: close plain TCP server\r\n\r\n## [0.9.18] - 2019-07-23\r\n\r\n- fixed: wrong transfer resumption in outgoing stream, when sending before ready event\r\n\r\n## [0.9.17] - 2019-06-06\r\n\r\n## [0.9.16] - 2019-06-06\r\n\r\n## [0.9.15] - 2019-06-06\r\n\r\n- fixed: flow.drain mode, missing flow response (to JMS client)\r\n\r\n## [0.9.14] - 2019-05-22\r\n\r\n- added: message examples in README.md\r\n- fixed: exeption handling, init connection\r\n- fixed: jsdoc annotations, js hint errors\r\n\r\n## [0.9.13] - 2019-03-18\r\n\r\n- fixed: incoming and outgoing endpoint errors\r\n- fixed: support info fields on AMQP errors\r\n- added: provide error object with endpoint closed events\r\n\r\n## [0.9.10] - 2019-02-11\r\n\r\n## [0.9.9] - 2019-02-11\r\n\r\n## [0.9.8] - 2019-02-01\r\n\r\n## [0.9.7] - 2019-02-01\r\n\r\n- fixed: link handles managed per session\r\n- fixed: endpoint state handling in case of early close\r\n- fixed: links destroyed automatically if owning session is destroyed\r\n- added: sender handles received flow.drain\r\n- added: peerInfo provides complete property map in addition\r\n\r\n## [0.9.2] - 2018-05-30\r\n\r\n- amqp v100 client-side implementation ready\r\n- amqp v100 server-side implementation ready"},{"name":"xb-msg-env","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# xb-msg-env\r\nProvides functions to setup messaging client options from CF (or XSA) environment variables.\r\n\r\nThe following clients are supported:\r\n* `@sap/xb-msg`, protocol-agnostic API, multiple destinations per single client\r\n* `@sap/xb-msg-amqp-v100`, protocol-specific, single connection per client\r\n* `@sap/xb-msg-amqp-v091`, protocol-specific, single connection per client\r\n* `@sap/xb-msg-mqtt-v311`, protocol-specific, single connection per client.\r\n\r\nThe following environment variables are used:\r\n* `VCAP_SERVICES` with bindings to RabbitMQ or Enterprise Messaging,\r\n* `SAP_XBEM_SERVICE_LABEL` to use an alternative service label for Enterprise Messaging,\r\n* `SAP_XBEM_BINDINGS` to define incoming and/or outgoing message streams.\r\n \r\n## Table of contents\r\n\r\n* [Install](#install)\r\n* [API](#api)\r\n* [Examples](#examples)\r\n* [Limitations](#limitations)\r\n\r\n## Install\r\n\r\nSee also:\r\n[https://www.npmjs.com/package/@sap/xb-msg-env](https://www.npmjs.com/package/@sap/xb-msg-env)\r\n\r\nTo add it to your project run:\r\n```bash\r\nnpm i @sap/xb-msg-env\r\n```\r\n\r\nTo generate complete API documentation run inside the library package folder\r\n```bash\r\nnpm run doc\r\n```\r\n\r\n## API\r\n\r\n### Environment Variables \r\nThe following parameters exist in the SAP_XBEM_BINDINGS environment variable.\r\nSAP_XBEM_BINDINGS contains an input and an output map.\r\n\r\n```\r\n\"SAP_XBEM_BINDINGS\": {\r\n    \"outputs\": {\r\n    },\r\n    \"inputs\": {\r\n    }\r\n}\r\n```\r\n\r\nA single input or output can have the following properties:\r\n\r\n| Parameter | Type | Input | Output | Description |\r\n| --- | --- | --- | --- | --- |\r\n| service | string | yes | yes | Name of the messaging service to which this item is assigned |\r\n| address | string | yes | yes | Queue name (e.g. `queue:q001`) or topic in unified syntax (e.g. `topic:BO/Sales/Order/Released`) |\r\n| reliable | boolean | yes | yes | Indicates whether acknowledgements are used for reliable message transfers |\r\n| exclusive | boolean | yes | no | Indicates whether only one single consumer is allowed at a time |\r\n| persistent | boolean | no | yes | Indicates whether the message broker persists messages |\r\n| maxMsgInFlight | number | yes | no | The maximum number of unacknowledged messages the broker sends to the consumer |\r\n\r\n### Create xb-msg Client Options\r\nCreate a messaging client and start consuming messages.\r\n````\r\nconst msg = require('@sap/xb-msg');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\n/* get options from cf/xsa environment */\r\nconst options = env.msgClientOptions('msg-instance-01', ['MyInpA'], []);\r\n\r\n/* start messaging */\r\nconst client = new msg.Client(options);\r\n\r\nclient.istream('MyInpA')\r\n    .on('subscribed', () => {\r\n        console.log('subscribed');\r\n    })\r\n    .on('data', (message) => {\r\n        console.log('message: ' + message.payload.toString());\r\n        message.done();\r\n    });\r\n\r\nclient.connect();\r\n````\r\n\r\n### Create xb-msg-amqp-v100 Client Options without SAP_XBEM_BINDINGS\r\nCreate an AMQP 1.0 messaging client and start consuming messages, receiving each at-least-once.\r\n````\r\nconst msg = require('@sap/xb-msg-amqp-v100');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\n/* get options from cf/xsa environment */\r\nconst options = env.amqpV100ClientOptions('my-service');\r\n\r\n/* start messaging */\r\nconst client = new msg.Client(options);\r\nconst stream = client.receiver('MyLinkA').attach('MyQueue1');\r\n\r\nstream\r\n    .on('subscribed', () => {\r\n        console.log('subscribed');\r\n    })\r\n    .on('data', (message) => {\r\n        console.log('message: ' + message.payload.toString());\r\n        message.done();\r\n    });\r\n\r\nclient.connect();\r\n````\r\n\r\n### Create xb-msg-amqp-v091 Client Options\r\nCreate an AMQP v091 messaging client and start consuming messages.\r\n````\r\nconst msg = require('@sap/xb-msg-amqp-v091');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\n/* get options from cf/xsa environment */\r\nconst options = env.amqpV091ClientOptions('msg-instance-02', ['MyInpB'], []);\r\n\r\n/* start messaging */\r\nconst client = new msg.Client(options);\r\n\r\nclient.channel(1)\r\n    .on('opened', () => {\r\n        console.log('opened');\r\n    })\r\n    .on('flow', (active) => {\r\n        console.log(active ? 'continue' : 'wait');\r\n    })\r\n    .on('closed', (hadError) => {\r\n        console.log('closed');\r\n        client.disconnect();\r\n    });\r\n\r\nclient.istream('MyInpB')\r\n    .on('subscribed', () => {\r\n        console.log('subscribed');\r\n    })\r\n    .on('data', (message) => {\r\n        console.log('message: ' + message.payload.toString());\r\n        message.done();\r\n    });\r\n\r\nclient.connect();\r\n````\r\n\r\n### Create xb-msg-mqtt-v311 Client Options\r\nCreate an MQTT v311 messaging client and start consuming messages.\r\n````\r\nconst msg = require('@sap/xb-msg-mqtt-v311');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\n/* get options from cf/xsa environment */\r\nconst options = env.mqttV311ClientOptions('msg-instance-03', ['MyInpC'], []);\r\n\r\n/* start messaging */\r\nconst client = new msg.Client(options);\r\n\r\nclient.istream('MyInpC')\r\n    .on('subscribed', () => {\r\n        console.log('subscribed');\r\n    })\r\n    .on('data', (message) => {\r\n        console.log('message: ' + message.payload.toString());\r\n        message.done();\r\n    });\r\n\r\nclient.connect();\r\n````\r\n\r\n## Examples\r\nBelow is an example of 'Environment Variables'. There is one Rabbit MQ instance named 'myService'.\r\nThe messaging service inputs and outputs are maintained via another environment variable named SAP_XBEM_BINDINGS. \r\nHere, one output name 'myOutA' is defined.\r\n\r\n```json\r\n{\r\n  \"VCAP_SERVICES\": {\r\n    \"rabbitmq\": [\r\n        {\r\n            \"credentials\": {\r\n                \"hostname\": \"10.11.11.11\",\r\n                \"ports\": {\r\n                    \"15672/tcp\": \"8888\",\r\n                    \"5672/tcp\": \"9999\"\r\n                },\r\n                \"port\": \"9999\",\r\n                \"username\": \"user\",\r\n                \"password\": \"pwd\",\r\n                \"uri\": \"amqp://user:pwd@10.11.11.11:9999\"\r\n            },\r\n            \"syslog_drain_url\": null,\r\n            \"volume_mounts\": [],\r\n            \"label\": \"rabbitmq\",\r\n            \"provider\": null,\r\n            \"plan\": \"v3.6-container\",\r\n            \"name\": \"myService\",\r\n            \"tags\": [\r\n                \"rabbitmq\",\r\n                \"mbus\",\r\n                \"pubsub\",\r\n                \"amqp\"\r\n            ]\r\n        }\r\n    ]\r\n  },\r\n  \"SAP_XBEM_BINDINGS\": {\r\n    \"outputs\": {\r\n      \"myOutA\" : {\r\n        \"service\": \"myService\",\r\n        \"address\": \"topic:Cars/Velocity/milesPerHour\",\r\n        \"reliable\": false\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nThe following call:\r\n\r\n```javascript\r\nconst env = require('@sap/xb-msg-env');\r\nconst opt = env.msgClientOptions('myService', [], ['myOutA']);\r\n```\r\nwill provide the client options for `@sap/xb-msg`:\r\n\r\n```json\r\n{\r\n  \"destinations\": [\r\n    {\r\n      \"name\": \"myService\",\r\n      \"type\": \"amqp-v091\",\r\n      \"net\": {\r\n        \"host\": \"10.11.11.11\",\r\n        \"port\": 9999\r\n      },\r\n      \"sasl\": {\r\n        \"user\": \"user\",\r\n        \"password\": \"pwd\"\r\n      },\r\n      \"amqp\": {\r\n        \"vhost\": \"/\"\r\n      },\r\n      \"istreams\": {\r\n      },\r\n      \"ostreams\": {\r\n        \"out\": { \r\n          \"channel\": 1, \r\n          \"exchange\": \"amq.topic\", \r\n          \"routingKey\": \"Cars.Velocity.milesPerHour\",\r\n          \"confirms\": false \r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.9.6] - 2020-10-16\r\n\r\n- added: support for message-queuing\r\n\r\n## [0.9.5] - 2020-06-26\r\n\r\n- added: license file for new delivery channel\r\n- fixed: newer Node.js version for unit tests and coverage\r\n\r\n## [0.9.4] - 2019-02-11\r\n\r\n## [0.9.3] - 2019-02-11\r\n\r\n## [0.9.2] - 2019-02-11\r\n\r\n## [0.9.1] - 2019-02-06\r\n\r\n### Added\r\n- amqp-v100 protocol support\r\n\r\n### Changed\r\n- adapt to new enterprise-messaging VCAP structure\r\n\r\n### Removed\r\n"},{"name":"xb-msg-mqtt-v311","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/xb-msg-mqtt-v311\r\nProvides a protocol implementation for [MQTT 3.1.1](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html).\r\n\r\n## Table of contents\r\n* [Prerequisites](#prerequisites)\r\n* [Install](#install)\r\n* [Overview](#overview)\r\n* [Getting started](#getting-started)\r\n* [API](#api)\r\n* [Limitations](#limitations)\r\n\r\n## Prerequisites\r\nMake sure to have an message broker available, e.g. [RabbitMQ](https://www.rabbitmq.com/download.html) with enabled MQTT plugin.\r\n\r\n## Install\r\n\r\nSee also:\r\n[https://www.npmjs.com/package/@sap/xb-msg-mqtt-v311](https://www.npmjs.com/package/@sap/xb-msg-mqtt-v311)\r\n\r\nTo add it to your project run:\r\n```bash\r\nnpm i @sap/xb-msg-mqtt-v311\r\n```\r\n\r\nTo generate complete API documentation run inside the library package folder\r\n```bash\r\nnpm run doc\r\n```\r\n\r\n## Overview\r\n\r\nThis library provides a messaging client for [MQTT 3.1.1](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html).\r\nA single client instance represents one connection to the broker.\r\n\r\nEither TLS or NET socket is used, depending on defined client options.\r\nBesides plain TCP/IP also WebSocket is supported, with and without [OAuth 2.0](https://oauth.net/2/), grant flows [ClientCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.4) and [ResourceOwnerPasswordCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.3).\r\n\r\nThe API works completely asynchronous based on callbacks, often providing also done (resolve) and failed (reject) callbacks.\r\nThis means it would be simple to use Promise objects in the application even if the client library so far does not use it.\r\n\r\n## Getting started\r\n\r\nThere are test programs in the package folder `./examples`:\r\n* How to use plain API directly [publisher.js](examples/publisher.js) and [subscriber.js](examples/subscriber.js)\r\n* How to use unified streams [producer.js](examples/producer.js) and [consumer.js](examples/consumer.js)\r\n\r\nIt shall run with defaults immediately if for example a RabbitMQ with active MQTT plugin is listening at `localhost:1883` with default settings.\r\n\r\nAll examples support individual settings, e.g. to use a remote host or to try different stream settings.\r\nIt can be provided with a js-file given as command line parameter.\r\nThe file shall export a client option object. Defaults will still be used for undefined fields.\r\n\r\nRun it like this if the file is stored in folder `config`, same level as `examples`.\r\n\r\n```bash\r\nnode ./examples/producer.js ../config/my-options.js\r\n```\r\n\r\nFeel free to start testing with the following file content:\r\n\r\n```bash\r\n'use strict';\r\n\r\nmodule.exports = {\r\n    net: {\r\n        host      : '127.0.0.1',\r\n        port      : 1883\r\n    },\r\n    credentials: {\r\n        user      : 'guest',\r\n        password  : 'guest'\r\n    },\r\n    data: {\r\n        payload   : Buffer.allocUnsafe(50).fill('X'),\r\n        qos       : 1,\r\n        topic     : 'sap/test/hello',\r\n        maxCount  : 50000,\r\n        logCount  : 1000\r\n    }\r\n};\r\n```\r\n\r\nThe `data` section is ignored by the client, it is just used by the example programs.\r\n\r\n## API\r\n\r\nThe library provides a client class, which is able to manage one connection.\r\n```bash\r\nconst MQTT = require('@sap/xb-msg-mqtt-v311');\r\n\r\n...\r\nconst client = new MQTT.Client(options);\r\n...\r\n```\r\n\r\n### Client Options\r\n\r\nCreate a client instance using plain TCP:\r\n```bash\r\nconst options = {\r\n    net: {\r\n        host: 'localhost',\r\n        port: 1883\r\n    },\r\n    credentials: {\r\n        user: '',\r\n        password: ''\r\n    },\r\n    mqtt: {\r\n        clientID : '',\r\n        cleanSession : true,\r\n        keepAlive : 30\r\n    }\r\n};\r\n\r\nconst client = new MQTT.Client(options);\r\n```\r\n\r\nor plain TCP with TLS connection:\r\n\r\n```bash\r\nconst options = {\r\n    tls: {\r\n        host: 'localhost',\r\n        port: 8883,\r\n        ca: [\r\n            fs.readFileSync('../../../truststore/cacert.pem'),\r\n            fs.readFileSync('../../../truststore/cert.pem')\r\n        ]\r\n    },\r\n    credentials: {\r\n        user: '',\r\n        password: ''\r\n    }\r\n};\r\n\r\nconst client = new MQTT.Client(options);\r\n```\r\nas well as MQTT over WebSocket (HTTP):\r\n \r\n```bash\r\nconst options = {\r\n    ws: {\r\n        host: 'localhost',\r\n        port: 80,\r\n        path: '/'\r\n        auth: 'webUser:webPass'\r\n    }\r\n    credentials: {\r\n        user: 'mqttUser',            // used in CONNECT packet \r\n        password: 'mqttPass'         // used in CONNECT packet\r\n    }\r\n};\r\n\r\nconst client = new MQTT.Client(options);\r\n```\r\n\r\nor MQTT over WebSocket using TLS (HTTPS):\r\n\r\n```bash\r\nconst options = {\r\n    wss: {\r\n        host: 'localhost',\r\n        port: 443,\r\n        path: '/',\r\n        ca: [\r\n            fs.readFileSync('../../../truststore/cacert.pem'),\r\n            fs.readFileSync('../../../truststore/cert.pem')\r\n        ]\r\n    },\r\n    credentials: {\r\n        user: '',\r\n        password: ''\r\n    }\r\n};\r\n\r\nconst client = new MQTT.Client(options);\r\n```\r\n\r\nEither 'tls' [attributes](https://nodejs.org/api/tls.html#tls_tls_connect_options_callback), 'net' [attributes](https://nodejs.org/api/net.html#net_socket_connect_options_connectlistener), wss [attributes](https://nodejs.org/api/https.html#https_https_request_options_callback) or ws [attributes](https://nodejs.org/api/http.html#http_http_request_options_callback) must be provided. If more than one is provided the preference is as follows: preferred 'tls' then 'net' then 'wss' then finally 'ws'.\r\n\r\nIn case of WebSocket options the client will overwrite HTTP method (GET) and all web-socket relevant header fields. Everything else is given to http.request() or https.request().\r\n\r\nIt is also possible to provide connection data as [URI](https://github.com/mqtt/mqtt.github.io/wiki/URI-Scheme):\r\n```bash\r\nconst options = {\r\n    uri: 'mqtt://user:pass@localhost:1883/?keepalive=300&clientid=abcd'\r\n};\r\nconst client = new MQTT.Client(options);\r\n```\r\nOr using 'tls' again:\r\n```bash\r\nconst options = {\r\n    uri: 'mqtts://user:pass@localhost:8883?cacertfile=cacert.pem&cacertfile=cert.pem'\r\n};\r\nconst client = new MQTT.Client(options);\r\n```\r\n\r\nFinally, also an array of URIs can be provided:\r\n```bash\r\nconst options = {\r\n    uri: [\r\n        'mqtt://user11:pass11@host11:1883/?heartbeat=300',\r\n        'mqtt://user22:pass22@host22:1884/'\r\n    ]\r\n};\r\nconst client = new MQTT.Client(options);\r\n```\r\nThe client will start using the first URI and will try further URIs automatically in the given sequence until the connection can be established. If the client fails with all URIs then it stops and waits for another explicit call to connect. At this point an event `'disconnected'` is raised.\r\n\r\nAn application that requires a permanent opened connection shall always handle the `'disconnect'` event by calling `client.connect()` again, of course after a given delay time. Timers or other mechanisms may be used, depending on the application design. Keep in mind that NodeJS runtime does not guarantee precise timer execution, it depends on the event queue load.\r\n\r\nFinally, URIs can also be combined with all other settings. URI data (as far as provided) will just overwrite the corresponding fields. A typical example could be the following:\r\n```bash\r\nconst options = {\r\n    uri: [\r\n        'mqtt://user11:pass11@host11:1883/?keepalive=300',\r\n        'mqtt://user22:pass22@host22:1884/?clientid=myCID'\r\n    ]\r\n    mqtt: {\r\n        clientID: '',\r\n        keepAlive: 60\r\n    },\r\n    istreams: {\r\n        in1: {topic: 'a/b/c/d', qos: 1},\r\n        in2: {topic: 'x/y/z/#', qos: 1}\r\n    }\r\n    ostreams: {\r\n        out1: {topic: 'test/out1', qos: 0},\r\n        out2: {topic: 'test/out2', qos: 2}\r\n    }\r\n};\r\nconst client = new MQTT.Client(options);\r\n```\r\n\r\nWebSocket connections may require the use of [OAuth 2.0](https://oauth.net/2/) as well. Relevant grant flows are: [ClientCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.4) and [ResourceOwnerPasswordCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.3). One example is an external application, connecting to the cloud.\r\n\r\n```bash\r\nconst options = {\r\n    oa2: {\r\n        endpoint: 'https://myzone.authentication.sap.hana.ondemand.com/oauth/token',\r\n        client: 'myclientid',\r\n        secret: 'myclientsecret',\r\n    },\r\n    wss: {\r\n        host: 'myapp.cfapps.sap.hana.ondemand.com',\r\n        port: 443,\r\n        path: '/'\r\n    }\r\n};\r\n\r\nconst client = new MQTT.Client(options);\r\n```\r\n\r\nAfter an connection has been established the application may start to publish and/or subscribe. Details can be found in the sample applications, in project folder `./examples`.\r\n\r\n### Message Payload\r\n\r\nThe application may provide message payload as follows:\r\n\r\n* a simple Buffer object,\r\n* an Array of simple Buffer objects or\r\n* a Payload (see API) object, mainly for compatibility with other @sap/xb-msg* libraries.\r\n\r\nAfter the payload was handed over to the client the buffer content must not be modified by the application.\r\nAnd as soon as the buffer size exceeds `options.tune.ostreamPayloadCopyLimit` (default 1024 bytes, minimum 128 bytes) the client will not copy these data, but will directly push it to the network socket.\r\n\r\n## Limitations\r\n\r\nCurrently, you may only set the MQTT flag `cleanSession` to true.\r\n\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.9.17] - 2021-12-16\r\n\r\n- fixed: oauth request, method fallback and payload length\r\n\r\n## [0.9.16] - 2021-11-15\r\n\r\n- fixed: oauth with mTLS\r\n- fixed: cleanup assert handler in examples\r\n- fixed: stream ready after client connected\r\n\r\n## [0.9.15] - 2021-10-28\r\n\r\n- added: oauth2, try legacy mode as fallback\r\n- updated dev dependencies\r\n\r\n## [0.9.13] - 2020-06-25\r\n\r\n- added: license file for new delivery channel\r\n- fixed: newer Node.js version for unit tests and coverage\r\n\r\n## [0.9.12] - 2020-06-02\r\n\r\n- fixed: always copy payload if websocket writer masks data (client to server)\r\n\r\n## [0.9.9] - 2019-11-15\r\n\r\n## [0.9.7] - 2019-02-11\r\n\r\n## [0.9.6] - 2019-02-11\r\n\r\n## [0.9.5] - 2019-02-11\r\n\r\n## [0.9.4] - 2019-02-11\r\n\r\n## [0.9.2] - 2018-05-30\r\n\r\n### Added\r\n\r\n### Changed\r\n\r\n### Removed"},{"name":"xb-msg","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# Message Streams\r\nProvides a client for stream-based messaging.\r\n\r\n## Table of contents\r\n* [Prerequisites](#prerequisites)\r\n* [Install](#install)\r\n* [Overview](#overview)\r\n* [Client Options](#client-options)\r\n* [Connections](#connections)\r\n* [Message Streams](#message-streams)\r\n* [Message Payload](#message-payload)\r\n* [Payload and Websocket Data Masking](#message-payload-and-websocket-data-masking)\r\n* [Examples](#examples)\r\n\r\n## Prerequisites\r\nMake sure to have a message broker available, e.g. [RabbitMQ](https://www.rabbitmq.com/download.html) installed locally, having the plugins for AMQP 1.0, MQTT 3.1.1 and WebSocket binding enabled.\r\n\r\n## Install\r\n\r\nSee also:\r\n[https://www.npmjs.com/package/@sap/xb-msg](https://www.npmjs.com/package/@sap/xb-msg)\r\n\r\nTo add it to your project run:\r\n```bash\r\nnpm i @sap/xb-msg\r\n```\r\n\r\nTo generate complete API documentation run inside the library package folder\r\n```bash\r\nnpm run doc\r\n```\r\n\r\n## Overview\r\nA messaging application shall focus on its business logic.\r\nBindings and protocol-specific settings shall move to configuration, without negative impact on performance.\r\nThe package provides a solution for that, wrapping protocol-specific client implementations from separate packages.\r\n\r\n| Library               | Protocol                                                                          |\r\n|:----------------------|:----------------------------------------------------------------------------------|\r\n| `@sap/xb-msg-amqp-v091` | [AMQP v0.9.1](http://www.amqp.org/specification/0-9-1/amqp-org-download)          |\r\n| `@sap/xb-msg-amqp-v100` | [AMQP v1.0](http://www.amqp.org/specification/1.0/amqp-org-download)              |\r\n| `@sap/xb-msg-mqtt-v311` | [MQTT v3.1.1](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html) |\r\n\r\nDirect usage of the listed libraries provides full access to protocol-specific features.\r\nWith `@sap/xb-msg-amqp-091` the application may control channels, queues and exchanges.\r\nWith `@sap/xb-msg-amqp-100` the application may for example define sessions, attach links and control link credit dynamically.\r\nWith `@sap/xb-msg-mqtt-311` last-will-messages could be used.\r\n\r\nHowever, many messaging applications will have less specific requirements. It may come down to:\r\n* Produce messages with a writable stream\r\n* Consume messages from a readable stream\r\n* Use messages with a binary payload\r\n* Receive message at least once and acknowledge messages after successful processing\r\n* Stay flexible with regards to the used messaging protocol\r\n* But still accept the need to maintain settings on the broker side, e.g. to create queues or assign topic bindings to it\r\n\r\nWith these requirements `@sap/xb-msg` in combination with package `@sap/xb-msg-env` can be a good choice.\r\nFor example to consume messages:\r\n\r\n```javascript\r\nconst msg = require('@sap/xb-msg');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\nconst options = env.msgClientOptions('my-service-instance', ['my-inp'], []);\r\nconst client = new msg.Client(options);\r\n\r\nclient.istream('my-inp')\r\n    .on('error', () => {\r\n        console.log(error);\r\n    })\r\n    .on('data', (message) => {\r\n        console.log(`message: ${message.payload.toString()}`);\r\n        message.done();\r\n    })\r\n;\r\n\r\nclient.connect();\r\n```\r\n\r\n`@sap/xb-msg-env` reads cf/xs environment variables to build up the client options (configuration).\r\nSwitching the protocol, changing the binding to queues or topics or changing the quality of service becomes possible without changing the program code.\r\n\r\nA message producer is implemented in a similar way:\r\n```javascript\r\nconst msg = require('@sap/xb-msg');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\nconst options = env.msgClientOptions('my-service-instance', [], ['my-out']);\r\nconst client = new msg.Client(options);\r\n\r\nclient.ostream('my-out')\r\n    .on('ready', () => {\r\n        send();\r\n    })\r\n    .on('drain', () => {\r\n        send();\r\n    })\r\n    .on('error', (error) => {\r\n        console.log(error);\r\n    })\r\n;\r\n\r\nclient.connect();\r\n```\r\n\r\nFinally, using an own `Transform` stream (here class `Converter`) the application can also rely on fully automated flow control:\r\n```javascript\r\nconst msg = require('@sap/xb-msg');\r\nconst env = require('@sap/xb-msg-env');\r\n\r\nconst options = env.msgClientOptions('my-service-instance', ['my-inp'], ['my-out']);\r\nconst client = new msg.Client(options);\r\n\r\nclient.istream('my-inp')\r\n    .pipe(new Converter())\r\n    .pipe(client.ostream('my-out'))\r\n;\r\n\r\nclient.connect();\r\n```\r\n\r\n## Client Options\r\nThe client employs protocol-specific libraries that require protocol-specific settings, at least for stream definitions.\r\nFor example, MQTT will accept a property `qos` whereas `AMQP 1.0` accepts `sndSettleMode` and `rcvSettleMode`.\r\nHowever, these differences are restricted to the configuration.\r\nAt runtime the application will always see a unified client behavior.\r\n\r\n## Connections\r\nBased on client options one or more connections can be created, each for one of the supported protocols and each providing multiple incoming or outgoing streams.\r\nAs soon as a client instance is connected the application can produce and/or consume messages.\r\n\r\nConnections via 'net' and 'tls' are supported for all protocols.\r\nWebsocket is specified and in consequence implemented for MQTT 3.1.1 and AMQP 1.0 only. Use options attribute 'wss' or 'ws'.\r\n\r\nWebSocket connections can also be established using [OAuth 2.0](https://oauth.net/2/), for example when connecting a local application to SAP cloud.\r\nRelevant grant flows are: [ClientCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.4) and [ResourceOwnerPasswordCredentialsFlow](https://tools.ietf.org/html/rfc6749#section-4.3).\r\n\r\nIf multiple settings are provided the preference is as follows: preferred 'tls' then 'net' then 'wss' then finally 'ws'.\r\n\r\n## Message Streams\r\n`Writable` and `Readable` streams are provided to handle outgoing and incoming messages.\r\nThese streams always run in object mode.\r\n\r\nHere, a single message is represented as a plain object with the following attributes:\r\n* `source`: defined by the incoming stream,\r\n* `target`: defined optionally by the application, similar to the source, accepted by the outgoing stream,\r\n* `payload`: message payload,\r\n* `done()`: a callback function to confirm final message processing,  \r\n* `failed(error)`: a callback function to indicate processing failure.\r\n\r\nA receiving application is expected to call either `done` or `failed` for each single message, exactly one time (maybe asynchronously) and independent from the used quality of service.\r\nA sending application can define the callbacks to get notified about the message state.\r\n \r\n```bash\r\nconst message = {\r\n    payload : Buffer.from('test'),\r\n    done : () => this._onSendDone(message),\r\n    failed : (error) => this._onSendFailed(error, message)\r\n};\r\nconst noPause = stream.write(message);\r\n```\r\n\r\nIn any case the application is expected to implement the flow control of writable streams correctly.\r\n\r\n## Message Payload\r\n\r\nThe application may provide the message payload for an outgoing message as follows:\r\n* a `Buffer` object,\r\n* an `Array` of `Buffer` objects,\r\n* a `Payload` object or a plain object with same properties as `Payload`.\r\n\r\nCommon properties of a `Payload` object (specific protocol clients add more data):\r\n* `chunks`: an Array of Buffer objects,\r\n* `type`: an optional string providing the content type (not supported with MQTT)\r\n\r\nAfter the payload was given to a sender it must not be modified by the application anymore.\r\n\r\nIncoming messages will always provide a `Payload` object, just for application convenience.\r\n\r\n## Examples\r\n\r\nIn folder `examples` there are test programs, ready to run if a broker can be reached locally at the protocol-specific default port.\r\nFolder `examples/cfg` provides sample configurations.\r\n\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [0.9.10] - 2020-06-26\r\n\r\n- added: license file for new delivery channel\r\n- fixed: newer Node.js version for unit tests and coverage\r\n\r\n## [0.9.9] - 2019-03-28\r\n\r\n## [0.9.7] - 2019-03-27\r\n\r\n## [0.9.6] - 2019-03-27\r\n\r\n## [0.9.5] - 2019-02-11\r\n\r\n## [0.9.4] - 2019-02-11\r\n\r\n## [0.9.3] - 2019-02-11\r\n\r\n## [0.9.2] - 2019-02-06\r\n\r\n## [0.9.1] - 2019-02-06\r\n\r\n### Added\r\n- support of the amqp v100 protocol with QoS at least once\r\n\r\n### Changed\r\n\r\n### Removed\r\n"},{"name":"xsenv","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"# @sap/xsenv\r\n\r\nUtility for easily reading application configurations for bound services and certificates in the SAP Cloud Platform Cloud Foundry environment, SAP XS advanced model and Kubernetes (K8S).\r\n\r\n\r\n## Install\r\n\r\n```sh\r\nnpm install --save @sap/xsenv\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\n// Read the configuration for all bound service instances\r\nvar services = xsenv.readServices();\r\nconsole.log(services.serviceInstance); // prints { credentials: { user: ..., pass:... }, name: 'serviceInstance', tags: [...], label: ...\r\n\r\n// Read the credentials for all bound service instances matching a given service query\r\nvar services = xsenv.filterServices({ label: 'hana' });\r\nconsole.log(services); // prints [ { credentials: { ... } }, { credentials: { ... } } ]\r\n\r\n// Read only the credentials portion of the configuration for a service instance matching a given service query\r\nvar svc = xsenv.serviceCredentials({ tag: 'hana' });\r\nconsole.log(svc); // prints { host: '...', port: '...', user: '...', password: '...', ... }\r\n\r\n// Read configuration for a service instance matching a given service query\r\nvar services = xsenv.getServices({ hana: { name: 'hanaInstance' }}); // returns { hana: { host: '...', port: '...', user: '...', password: '...', ... } }\r\nvar hanaInstanceCredentials = services.hana;\r\n\r\n```\r\nFor specifics in the usage in different environments, read below.\r\n\r\n## Usage in Cloud Foundry and SAP XS Advanced\r\n\r\nCloud Foundry and SAP XS advanced both provide application configurations via environment variables.\r\nThe properties of the bound services are in [VCAP_SERVICES](http://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html#VCAP-SERVICES) environment variable in both cases.\r\n\r\n### Service Lookup\r\n\r\nNormally in Cloud Foundry you bind a service instance to your application with a command like this one:\r\n```sh\r\ncf bind-service my-app aservice\r\n```\r\n\r\nHere is how you can get this service configuration in your Node.js application if you don't know the instance name in advance:\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar services = xsenv.readServices();\r\nvar svc = services[process.env.SERVICE_NAME];\r\n```\r\n\r\nYou can look up services based on their metadata:\r\n```js\r\nvar svc = xsenv.serviceCredentials({ tag: 'hdb' });\r\nconsole.log(svc); // prints { host: '...', port: '...', user: '...', password: '...', ... }\r\n```\r\nThis example finds a service binding with `hdb` in the tags.\r\nSee [Service Query](#service-query) below for description of the supported query values.\r\n\r\nYou can also look up multiple services in a single call:\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar services = xsenv.getServices({\r\n  hana: { tag: 'hdb' },\r\n  scheduler: { label: 'jobs' }\r\n});\r\n\r\nvar hanaCredentials = services.hana;\r\nvar schedulerCredentials = services.scheduler;\r\n```\r\nThis example finds two services - one with tag `hdb` and the other with label `jobs`.\r\n`getServices` function provides additional convenience that default service configuration can be provided in a JSON file.\r\n\r\nTo test the above example locally, create a file called `default-services.json` in the working directory of your application.\r\nThis file should contain something like this:\r\n```json\r\n{\r\n  \"hana\": {\r\n    \"host\": \"localhost\",\r\n    \"port\": \"30015\",\r\n    \"user\": \"SYSTEM\",\r\n    \"password\": \"secret\"\r\n  },\r\n  \"scheduler\": {\r\n    \"host\": \"localhost\",\r\n    \"port\": \"4242\",\r\n    \"user\": \"my_user\",\r\n    \"password\": \"secret\"\r\n  }\r\n}\r\n```\r\n**Note:** The result property names (`hana` and `scheduler`) are the same as those in the query object and also those in `default-services.json`.\r\n\r\n[Local environment setup](#local-environment-setup) describes an alternative approach to provide service configurations for local testing.\r\n\r\n### User-Provided Service Instances\r\n\r\nWhile this package can look up any kind of bound service instances, you should be aware that [User-Provided Service Instances](https://docs.cloudfoundry.org/devguide/services/user-provided.html) have less properties than managed service instances. Here is an example:\r\n```json\r\n  \"VCAP_SERVICES\": {\r\n    \"user-provided\": [\r\n      {\r\n        \"name\": \"pubsub\",\r\n        \"label\": \"user-provided\",\r\n        \"tags\": [],\r\n        \"credentials\": {\r\n          \"binary\": \"pubsub.rb\",\r\n          \"host\": \"pubsub01.example.com\",\r\n          \"password\": \"p@29w0rd\",\r\n          \"port\": \"1234\",\r\n          \"username\": \"pubsubuser\"\r\n        },\r\n        \"syslog_drain_url\": \"\"\r\n\t  }\r\n    ]\r\n  }\r\n```\r\nAs you can see the only usable property is the `name`. In particular, there are no tags for a user-provided services.\r\n\r\n\r\n## Usage in Kubernetes\r\n\r\nKubernetes offers several ways of handling application configurations for bound services and certificates. @sap/xsenv expects that such configurations are handled as Kubernetes Secrets and mounted as files to the pod at a specific path. This path can be provided by the application developer, but the default is `/etc/secrets/sapcp`. From there, @sap/xsenv assumes that the directory structure is the following `/etc/secrets/sapcp/<service-name>/<instance-name>`. Here `<service-name>` and `<instance-name>` are both directories and the latter contains the credentials/configurations for the service instance as files, where the file name is the name of the configuration/credential and the content is respectively the value.\r\n\r\nFor example, the following folder structure:\r\n```sh\r\n\r\n/etc/\r\n    /secrets/\r\n            /sapcp/\r\n                 /hana/\r\n                 |    /hanaInst1/\r\n                 |    |          /user1\r\n                 |    |          /pass1\r\n                 |    /hanaInst2/\r\n                 |               /user2\r\n                 |               /pass2\r\n                 /xsuaa/\r\n                       /xsuaaInst/\r\n                                  /user\r\n                                  /pass\r\n```\r\nresembles two instances of service `hana` - `hanaInst1` and `hanaInst2` each with their own credentials/configurations and one instance of service `xsuaa` called `xsuaaInst` with its credentials.\r\n\r\nIn Kubernetes you can create and bind to a service instance in the following way using the Service Catalog:\r\n\r\n```sh\r\nsvcat provision xsuaaInst --class xsuaa --plan application\r\nsvcat bind xsuaaInst --name xsuaaBind\r\n```\r\nUpon creation of the binding, the Service Catalog will create a Kubernetes secret (by default with the same name as the binding) containing credentials, configurations and certificates. This secret can then be mounted to the pod as a volume.\r\n\r\nThe following *deployment.yml* file would generate the file structure above, assuming we have bindings `hanaBind1`, `hanaBind2` and `xsuaaBind` for service instances `hanaInst1`, `hanaInst2` and `xsuaaInst` created with Service Catalog:\r\n```sh\r\n...\r\n     containers:\r\n      - name: app\r\n        image: app-image:1.0.0\r\n        ports:\r\n          - appPort: 8080\r\n        volumeMounts:\r\n        - name: hana-volume-1\r\n          mountPath: \"/etc/secrets/sapcp/hana/hanaInst1\"\r\n          readOnly: true\r\n        - name: hana-volume-2\r\n          mountPath: \"/etc/secrets/sapcp/hana/hanaInst2\"\r\n          readOnly: true\r\n        - name: xsuaa-volume\r\n          mountPath: \"/etc/secrets/sapcp/xsuaa/xsuaaInst\"\r\n          readOnly: true\r\n      volumes:\r\n      - name: hana-volume-1\r\n        secret:\r\n          secretName: hanaBind1\r\n      - name: hana-volume-2\r\n        secret:\r\n          secretName: hanaBind2\r\n      - name: xsuaa-volume\r\n        secret:\r\n          secretName: xsuaaBind\r\n\r\n```\r\n\r\nOf course, you can also create Kubernetes secrets directly with `kubectl` and  mount them to the pod. As long as the mount path follows the `<root-path>/<service-name>/<instance-name>` pattern, @sap/xsenv will be able to read and filter the bound services configurations.\r\n\r\n**Note**: The library attempts to parse property values which represent valid JSON objects.\r\nProperty values representing arrays are not being parsed.\r\n\r\nThe following service credentials:\r\n\r\n```\r\n/etc/\r\n    /secrets/\r\n            /sapcp/\r\n                 /some-service/\r\n                       /some-instance/\r\n                                  /url   - containing https://some-service\r\n                                  /uaa   - containing { \"url\": \"https://uaa\", \"clientid\": \"client\", \"clientsecret\": \"secret\" }\r\n                                  /other - containing [1, \"two\"]\r\n```\r\n\r\nWill be available to the application as:\r\n\r\n```js\r\n{\r\n  url: 'https://some-service',\r\n  uaa: {\r\n    url: 'https://uaa',\r\n    clientid: 'client',\r\n    clientsecret: 'secret'\r\n  },\r\n  other: '[1, \"two\"]'\r\n}\r\n```\r\n\r\n### Service Lookup\r\n\r\nService look up in the Kubernetes environment looks the same way as it does in the Cloud Foundry one.\r\n\r\nLooking at the above example of bound services here is how you can get the service configuration of `hanaInst1` in your node application:\r\n\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar services = xsenv.readServices();\r\nconsole.log(services.hanaInst1.credentials); // prints { user1: '...', pass1: '...', ... }\r\n```\r\n\r\nHere is how to lookup the service based on its metadata in Kubernetes:\r\n```js\r\nvar svc = xsenv.serviceCredentials({ label: 'hana' });\r\nconsole.log(svc); // prints { host: '...', port: '...', user: '...', passwrod: '...', ... }\r\n```\r\nThis example finds a service binding with `hana` as a label. Note that for Kubernetes lookup based on metadata is limited. See [Service Query](#service-query) below for description of the supported query values in Cloud Foundry and Kubernetes.\r\n\r\n\r\nIf you have mounted your secrets to a different path, you can pass it to @sap/xsenv like so:\r\n\r\n```js\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar services = xsenv.getServices('/some/user/path', {\r\n  hana: { name: 'hanaInst1' },\r\n  xsuaa: { label: 'xsuaa' }\r\n});\r\n\r\nvar hanaCredentials = services.hana;\r\nvar schedulerCredentials = services.xsuaa;\r\n```\r\n\r\n## Local Usage\r\n\r\nFor local testing you can provide configurations by yourself. This package allows you to provide default configurations in a separate configuration file.\r\n* This reduces clutter by removing configuration data from the app code.\r\n* You don't have to set env vars manually each time you start your app.\r\n* Different developers can use their own configurations for their local tests without changing files under source control. Just add this configuration file to `.gitignore` and `.cfignore`.\r\n\r\nYou can provide default configurations on two levels:\r\n* For bound services via `getServices()` and `default-services.json`\r\n* For any environment variable via `loadEnv()` and `default-env.json`\r\n\r\n## Service Query\r\n\r\nBoth `getServices` and `filterServices` use the same service query values. Due to specifics of the environment the queries in Cloud Foundry can be richer - see property table below.\r\n\r\nQuery value | Description\r\n------------|------------\r\n{string}    | Matches the service with the same service instance name (`name` property). Same as `{ name: '<string>' }`.\r\n{object}    | All properties of the given object should match corresponding service instance properties as they appear in VCAP_SERVICES or the Kubernetes secret. See below what is supported on each platform.\r\n{function}  | A function that takes a service object as argument and returns `true`, only if it is considered a match.\r\n\r\nIf an object is given as a query value, it may have the following properties:\r\n\r\nProperty | CF  | K8S | Description\r\n---------|-----|-----|------------\r\n`name`   | yes | yes |Service instance name - the name you use to bind the service\r\n`label`  | yes | yes |Service name - the name shown by `cf marketplace`\r\n`tag`    | yes | no  |Should match any of the service tags\r\n`plan`   | yes | no  |Service instance plan - the plan you use in `cf create-service`\r\n\r\nIf multiple properties are given, _all_ of them must match.\r\n\r\n**Note:** Do not confuse the instance name (`name` property) with the service name (`label` property).\r\nSince you can have multiple instances of the same service bound to your app,\r\ninstance name is unique while service name is not.\r\n\r\nHere are some examples.\r\n\r\nFind a service instance by name:\r\n```js\r\nxsenv.serviceCredentials('hana');\r\n```\r\n\r\nLook up a service by tag:\r\n```js\r\nxsenv.serviceCredentials({ tag: 'relational' });\r\n```\r\n\r\nMatch several properties:\r\n```js\r\nxsenv.serviceCredentials({ label: 'hana', plan: 'shared' });\r\n```\r\n\r\nPass a custom filter function:\r\n```js\r\nxsenv.serviceCredentials(function(service) {\r\n  return /shared/.test(service.plan) && /hdi/.test(service.label);\r\n});\r\n```\r\nNotice that the filter function is called with the full service object as it appears in VCAP_SERVICES, but `serviceCredentials` returns only the `credentials` property of the matching service. The behaviour is the same in Kubernetes - the function will return only the contents of the `credentials` portion of the mounted secret.\r\n\r\n## API\r\n\r\n### getServices([path], query, [servicesFile])\r\n\r\nLooks up bound service instances matching the given query.\r\nIf a service is not found - returns default service configuration loaded from a JSON file. The order of lookup is VCAP_SERVICES -> mounted secrets path in K8S -> default service configuration.\r\n\r\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\". For example, by default the credentials for an instance \"inst-name\" of service \"service-name\" would be located under \"/etc/secrets/sapcp/service-name/inst-name\".\r\n* `query` - An object describing requested services. Each property value is a filter as described in [Service Query](#service-query)\r\n* `servicesFile` - (optional) path to JSON file to load default service configuration (default is default-services.json).\r\nIf `null`, do not load default service configuration.\r\n* _returns_ - An object with the same properties as in query argument where the value of each property is the respective service credentials object\r\n* _throws_ - An error, if for some of the requested services no or multiple instances are found\r\n\r\n### serviceCredentials([path], filter)\r\n\r\nLooks up a bound service instance matching the given filter works for both the Kubernetes and Cloud Foundry environments.\r\n\r\n**Note:** This function does not load default service configuration from default-services.json.\r\n\r\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\".\r\n* `filter` - Service lookup criteria as described in [Service Query](#service-query)\r\n* _returns_ - Credentials object of found service\r\n* _throws_ - An error in case no or multiple matching services are found\r\n\r\n### filterServices([path], filter)\r\n\r\nReturns all bound services that match the given criteria. Works in Cloud Foundry and Kubernetes.\r\n\r\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\".\r\n* `filter` - Service lookup criteria as described in [Service Query](#service-query)\r\n* _returns_ - An array of credentials objects of matching services. Empty array, if no matches found.\r\n\r\n### readServices([path], [options])\r\n\r\n* `path` - (optional) A string containing the mount path where the secrets are located in Kubernetes. By default is \"/etc/secrets/sapcp\".\r\n* `options` - (optional) An object with options to customize behavior. Only supports field `disableCache` to disable K8s secrets caching.\r\n* _returns_ Returns an object where each service instance is mapped to its name. Works in Kubernetes and Cloud Foundry.\r\n\r\nFor example, given this VCAP_SERVICES:\r\n```\r\n  {\r\n    \"hana\" : [ {\r\n      \"credentials\" : {\r\n        ...\r\n      },\r\n      \"label\" : \"hana\",\r\n      \"name\" : \"hana1\",\r\n      \"plan\" : \"shared\",\r\n      \"tags\" : [ \"hana\", \"relational\" ]\r\n    },\r\n    {\r\n      \"credentials\" : {\r\n        ...\r\n      },\r\n      \"label\" : \"hana\",\r\n      \"name\" : \"hana2\",\r\n      \"plan\" : \"shared\",\r\n      \"tags\" : [ \"hana\", \"relational\", \"SP09\" ]\r\n    } ]\r\n  }\r\n```\r\n`readServices` would return:\r\n```\r\n{\r\n  hana1: {\r\n    \"credentials\" : {\r\n      ...\r\n    },\r\n    \"label\" : \"hana\",\r\n    \"name\" : \"hana1\",\r\n    \"plan\" : \"shared\",\r\n    \"tags\" : [ \"hana\", \"relational\" ]\r\n  },\r\n  hana2: {\r\n    \"credentials\" : {\r\n      ...\r\n    },\r\n    \"label\" : \"hana\",\r\n    \"name\" : \"hana2\",\r\n    \"plan\" : \"shared\",\r\n    \"tags\" : [ \"hana\", \"relational\", \"SP09\" ]\r\n  }\r\n}\r\n```\r\n\r\n\r\n### cfServiceCredentials(filter)\r\n\r\nSame as [serviceCredentials(filter)](#servicecredentialspath-filter) but works only in Cloud Foundry. It is recommended to use the generic function.\r\n\r\n### filterCFServices(filter)\r\n\r\nSame as [filterServices(filter)](#filterservicespath-filter) but works only in Cloud Foundry. It is recommended to use the generic function.\r\n\r\n### readCFServices()\r\n\r\nSame as [readServices()](#readservicespath) but works only in Cloud Foundry. It is recommended to use the generic function.\r\n\r\n## Local environment setup\r\n\r\nTo test your application locally you often need to setup its environment so that resembles the environment in Cloud Foundry or Kubernetes.\r\nYou can do this easily by defining the necessary environment variables in a JSON file.\r\n\r\nFor example you can create file _default-env.json_ with the following content in the working directory of the application :\r\n```json\r\n{\r\n  \"PORT\": 3000,\r\n  \"VCAP_SERVICES\": {\r\n    \"hana\": [\r\n      {\r\n        \"credentials\": {\r\n          \"host\": \"myhana\",\r\n          \"port\": \"30015\",\r\n          \"user\": \"SYSTEM\",\r\n          \"password\": \"secret\"\r\n        },\r\n        \"label\": \"hana\",\r\n        \"name\": \"hana-R90\",\r\n        \"tags\": [\r\n          \"hana\",\r\n          \"database\",\r\n          \"relational\"\r\n        ]\r\n      }\r\n    ],\r\n    \"scheduler\": [\r\n      {\r\n        \"credentials\": {\r\n          \"host\": \"localhost\",\r\n          \"port\": \"4242\",\r\n          \"user\": \"jobuser\",\r\n          \"password\": \"jobpassword\"\r\n        },\r\n        \"label\": \"scheduler\",\r\n        \"name\": \"jobscheduler\",\r\n        \"tags\": [\r\n          \"scheduler\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nThen load it in your application:\r\n```js\r\nxsenv.loadEnv();\r\nconsole.log(process.env.PORT); // prints 3000\r\nconsole.log(xsenv.cfServiceCredentials('hana-R90')); // prints { host: 'myhana, port: '30015', user: 'SYSTEM', password: 'secret' }\r\n```\r\n\r\nThis way you don't need in your code conditional logic if it is running in Cloud Foundry or locally.\r\n\r\nYou can also use a different file name:\r\n```js\r\nxsenv.loadEnv('myenv.json');\r\n```\r\n\r\n### loadEnv([file])\r\n\r\nLoads the environment from a JSON file.\r\nThis function converts each top-level property to a string and sets it in the respective environment variable,\r\nunless it is already set. This function does not change existing environment variables. So the file content acts like default values for environment variables.\r\n\r\nThis function does not complain if the file does not exist.\r\n\r\n* `file` - optional name of JSON file to load, `'default-env.json'` by default. Does nothing if the file does not exist.\r\n\r\n## Loading SSL Certificates\r\n\r\nIf SSL is configured in XS advanced On-Premise Runtime, it will provide one or more\r\ntrusted CA certificates that applications can use to make SSL connections.\r\nIf present, the file paths of these certificates are listed in `XS_CACERT_PATH`\r\nenvironment variable separated by `path.delimiter` (`:` on LINUX and `;` on Windows).\r\n\r\n### loadCertificates([certPath])\r\n\r\nLoads the certificates listed in the given path.\r\nIf this argument is not provided, it uses `XS_CACERT_PATH` environment variable instead.\r\nIf that is not set either, the function returns `undefined`.\r\nThe function returns an array even if a single certificate is provided.\r\nThis function is synchronous.\r\n\r\n* `certPath` - optional string with certificate files to load. The file names are separated by `path.delimiter`. Default is `process.env.XS_CACERT_PATH`.\r\n* _returns_ - an array of loaded certificates or `undefined` if `certPath` argument is not provided\r\n* _throws_ - an error, if some of the files could not be loaded\r\n\r\nFor example, this code loads the trusted CA certificates so they are used for all\r\nsubsequent outgoing HTTPS connections:\r\n```js\r\nvar https = require('https');\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nhttps.globalAgent.options.ca = xsenv.loadCertificates();\r\n```\r\n\r\nThis function can be used also to load SSL certificates for HANA like this:\r\n```js\r\nvar hdb = require('hdb');\r\nvar xsenv = require('@sap/xsenv');\r\n\r\nvar client = hdb.createClient({\r\n  host : 'hostname',\r\n  port : 30015,\r\n  ca   : xsenv.loadCertificates(),\r\n  ...\r\n});\r\n```\r\n\r\n## Debugging\r\n\r\nSet `DEBUG=xsenv` in the environment to enable debug traces. See [debug](https://www.npmjs.com/package/debug) package for details.\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 3.3.2 - 2022-06-17\r\n\r\n### Fixed\r\n- service bindings for Kubernetes: bindings were not read because of symlinks\r\n\r\n## 3.3.1 - 2022-06-08\r\n\r\n### Fixed\r\n- change node plugin version for xmake to 10.15.0\r\n\r\n## 3.3.0 - 2022-06-06\r\n\r\n### Added\r\n- Service bindings for Kubernetes\r\n\r\n## 3.2.2 - 2022-04-11\r\n\r\n### Removed\r\n- Removed node 8.x support and tests\r\n\r\n### Changed\r\n- Changed istanbul test framework with c8\r\n\r\n## 3.2.1 - 2022-02-28\r\n\r\n### Added\r\n- Reading K8s services now caches the results to decrease file system calls.\r\n- Documentation on how to disable caching for K8s Services if needed.\r\n\r\n## 3.2.0 - 2022-01-24\r\n\r\n### Added\r\n- Support Node.js 16.x\r\n\r\n### Updated\r\n- `debug` dependency to 4.3.3.\r\n\r\n## 3.1.1 - 2021-07-01\r\n\r\n### Fixed\r\n- Reading services will now properly check for K8s services when VCAP_SERVICES is defined but contains no services.\r\n- Getting a service will now properly check in K8s services if VCAP_SERVICES does not have the service.\r\n\r\n### Updated\r\n- `debug` dependency to 4.2.0.\r\n- `lodash` dependency to 4.17.21.\r\n\r\n## 3.1.0 - 2020-11-20\r\n\r\n### Added\r\n- Support Node.js 14.x\r\n\r\n## 3.0.0 - 2020-06-05\r\n\r\n### Removed\r\n- Node.js 6 support\r\n\r\n### Changed\r\n- K8S case: nested objects in credentials are now automatically parsed (does not apply to arrays)\r\n\r\n## 2.2.0 - 2019-11-28\r\n\r\n### Added\r\n- Support Node.js 12.x\r\n\r\n## 2.1.0 - 2019-10-15\r\n\r\n### Added\r\n- Support for K8S secrets mounted as volumes.\r\n\r\n## 2.0.0 - 2019-04-22\r\n\r\n### Removed\r\n- Node.js 4 support\r\n- Remove deprecated loadCaCert function\r\n\r\n## 1.3.0 - 2018-12-18\r\n\r\n### Added\r\n- Node.js 10 support\r\n\r\n### Fixed\r\n- Update `lodash` to 4.17.11\r\n\r\n## 1.2.9 - 2018-01-18\r\n### Added\r\n- Release with npm-shrinkwrap.json\r\n\r\n\r\n## 1.2.8 - 2017-10-09\r\n### Security\r\n- Updated debug package to fix a security issue https://snyk.io/vuln/npm:debug:20170905\r\n"},{"name":"xsjs-test","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/xsjs-test\r\n=========\r\n\r\nUnit test framework for the compatibility layer (XS runtime)\r\n\r\nSimple steps to use xsjs-test in your project:\r\n* Declare a dev dependency to @sap/xsjs-test in your XSJS application project (package.json)\r\n* Your tests are in folder test/ parallel to package.json and lib/\r\n* Configure a xstest script in your application package.json which runs xstest script\r\n* Run with npm run xstest\r\n\r\n\r\n## Details\r\n\r\n1) Dev dependency to @sap/xsjs-test\r\nPlease verify which version of @sap/xsjs-test is released and refer to it accordingly. Dev dependency means that @sap/xsjs-test will be installed only in local dev installation, not in productive installation. Another option would be to install @sap/xsjs-test globally on your PC:\r\n```Shell\r\nnpm install -g @sap/xsjs-test\r\n```\r\nThen you do not need to include it in dev dependency, it is visible everywhere on your workstation.\r\n\r\n2) Test folder\r\nNormally xsjs runtime files are under xsjs/  folder.\r\nSo following paths are expected:\r\n<<project>>/xsjs/package.json\r\n<<project>>/xsjs/lib/\r\n<<project>>/xsjs/test/\r\nThe last path is where the tests are expected. Of course you are free to put the tests in another folder, but then a special configuration is required.\r\n\r\n3) Test script\r\nThere is a normal binary script defined in bin folder. The normal way would be to define a script in the application package.json\r\n```JSON\r\n\"scripts\": {\r\n  \"xstest\" : \"xstest\"\r\n  }\r\n```\r\n\r\n\r\n4) Test execution\r\n```Shell\r\nnpm run xstest\r\n```\r\n\r\n5) Example configuration in file ./test/xstest.json\r\n```javascript\r\n{\r\n    test: {\r\n        format: \"xml\", // optional, default: \"html\"\r\n        pattern: \".*[Tt]Test\", // optional, default: \"\".*[Tt]Test\"\r\n        reportdir: \"test results folder\", // optional, default: \".\"\r\n        filename: \"test results file name without extension\" // optional, default: \"report\"\r\n    },\r\n    coverage: {\r\n        reporting: {\r\n            reports: [\"json\"] // default: \"html\"\r\n        },\r\n        dir: \"coverage results folder\", // optional, default: \"{test.reportdir}/coverage\"\r\n        filename: \"coverage results file name without extension\" // optional, default \"coverage\"\r\n    }\r\n}\r\n```\r\n\r\n## Known Restrictions\r\n\r\n* jasmine.callHTTPService() (see http://help.sap.com/hana/SAP_HANA_XS_Unit_JavaScript_API_Reference_en/jasmine.html ) is not supported because of the different underlying architecture of XSA. Instead of writing integration tests going through http, you should rely on pure unit tests to check the expected responses.\r\n* jasmine.tags is not supported.\r\n* jasmine.addProfile() is not supported.\r\n* describe( ... ).x() is not supported.\r\n* spys on globals like Date, Array, etc. won't work because each xsjslib is executed in a separate context. Try to stub/spy/mock via local members of your test instead.\r\n* jasmine.hdbConnection not supported (use jasmine.dbConnection)\r\n* jasmine.log is not supported (use console.log)\r\n* describeDB() and xdescribeDB() are not supported because they were already deprecated before (see http://help.sap.com/hana/SAP_HANA_XS_Unit_JavaScript_API_Reference_en/global.html#describeDb )\r\n* jasmine expect().toThrowError() is not supported (use toThrow(new Error()) instead)\r\n* tableUtils::copy*UserSchema() (http://help.sap.com/hana/SAP_HANA_XS_Unit_JavaScript_API_Reference_en/module-tableUtils-TableUtils.html) are not supported on HDI because there is a) no schema to copy from and b) by default no writable user schema\r\n* tableUtils.fillFromCsvFile() is not supported. Use HDI *.tableimport files instead to fill your HDI container with test data.\r\n* mockstar is discouraged/deprecated. Use HDI containers instead. If you need to reference larger test data, use HDI synonyms.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license.txt).\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 3.2.2\r\n- Internal refactorings.\r\n\r\n## 3.2.1\r\n- Bugfixes\r\n- Using latest versions of libs `lodash`, `@sap/fibers`, `@sap/hdbext` and `@sap/xsjs`.\r\n\r\n## 3.2.0\r\n- Support for Node.js 14.\r\n\r\n## 3.1.3\r\n- Use `lodash` in version `4.17.15`.\r\n\r\n## 3.1.2\r\n- Internal restructuring.\r\n\r\n## 3.1.1\r\n- More bug fixes.\r\n\r\n## 3.1.0\r\n\r\n### Changed\r\n- Using latest versions of libs `@sap/fibers`, `@sap/hdbext` and `@sap/xsjs`.\r\n\r\n## 3.0.3 - 2019-02-14\r\n\r\n### Changed\r\n- use latest fibers\r\n\r\n## 3.0.2 - 2019-02-13\r\n\r\n### Changed\r\n- use correct hdbext\r\n\r\n## 3.0.1 - 2019-02-12\r\n\r\n### Changed\r\n- use latest hdbext and fibers\r\n\r\n### Fixed\r\n- npm-shrinkwrap.json cleansed\r\n\r\n## 3.0.0 - 2018-10-12\r\n\r\n### Changed\r\n- use @sap/hana-client instead of node-hdb\r\n\r\n## 2.0.15 - 2018-04-19\r\n\r\n### Fixed\r\n- use newer fibers to enable running on newer node.js runtimes\r\n\r\n## 2.0.14 - 2018-01-18\r\n\r\n### Changed\r\n- cleaned integrity field from npm-shrinkwrap.json to avoid checksum errors on customer side\r\n\r\n## 2.0.13 - 2018-01-15\r\n\r\n### Changed\r\n- use released version of hdbext\r\n- added missing double quote for table names in createTestTable\r\n\r\n## 2.0.12 - 2018-01-12\r\n\r\n### Added\r\n- CHANGELOG.md\r\n\r\n## 2.0.11 - 2018-01-12\r\n\r\n### Added\r\n- Node 8 support.\r\n\r\n### Fixed\r\n- Update dependencies.\r\n\r\n## 2.0.10 - 2018-01-09\r\n\r\n### Added\r\n- console output for test results\r\n\r\n### Fixed\r\n- jasmine.toEqualObject matches semantic equality\r\n- correct decimal value of a column in a row in resultSet\r\n- expect().toEqual(jasmine.any()) fixed\r\n- Can't wait without a fiber bug\r\n- set package parameter\r\n- sqlExecutor.execQuery (when hdbConnection) returns correct ColumnType and ColumnTypeName\r\n- execSingle works for update statement\r\n"},{"name":"xsjs","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/xsjs\r\n===========\r\n\r\nCompatibility layer for SAP HANA extended application services, classic model (SAP HANA XS Classic) applications to run on Node.js in SAP HANA extended application services, advanced model.\r\n\r\n<!-- toc -->\r\n\r\n- [Usage](#usage)\r\n  * [Options](#options)\r\n    + [hana](#hana)\r\n    + [secureStore](#securestore)\r\n    + [formData](#formdata)\r\n    + [mail](#mail)\r\n    + [destinationProvider](#destinationprovider)\r\n    + [auditLog](#auditlog)\r\n    + [context](#context)\r\n    + [libraryCache](#librarycache)\r\n    + [Multitenant usage](#multitenant-usage)\r\n- [OData support](#odata-support)\r\n  * [Clear OData model cache](#clear-odata-model-cache)\r\n- [NPM packages support](#npm-packages-support)\r\n- [Destinations support](#destinations-support)\r\n    + [Via user provided services](#via-user-provided-services)\r\n    + [Via custom provider function](#via-custom-provider-function)\r\n- [Accessing column values by index in *$.hdb.ResultSet* rows](#accessing-column-values-by-index-in-hdbresultset-rows)\r\n- [Tracing via *$.trace* API](#tracing-via-trace-api)\r\n- [Troubleshooting](#troubleshooting)\r\n- [Differences with HANA XS Classic](#differences-with-hana-xs-classic)\r\n\r\n<!-- tocstop -->\r\n\r\nFor the API of XS Engine\r\n  * [SAP HANA XS JavaScript Reference](http://help.sap.com/hana/SAP_HANA_XS_JavaScript_API_Reference_en/)\r\n\r\n\r\n## Usage\r\nIt is as simple as it could be.\r\n```js\r\n'use strict';\r\n\r\nvar xsenv = require('@sap/xsenv');\r\nvar xsjs = require('@sap/xsjs');\r\n\r\nvar port = process.env.PORT || 3000;\r\nvar options = xsenv.getServices({\r\n    uaa: 'xsuaa',\r\n    hana: 'hana-hdi',\r\n    jobs: 'scheduler',\r\n    mail: 'mail',\r\n    secureStore: 'secureStore',\r\n    auditLog: 'audit-log'\r\n});\r\nxsjs(options).listen(port);\r\n\r\nconsole.log('Node XS server listening on port %d', port);\r\n```\r\n\r\nThe starting function takes an object that contains service credentials and application options.\r\n\r\nYou will need to setup the Application Router for authentication.\r\nFor a step by step tutorial see *Use the XSJS Compatibility Layer in XS Advanced*\r\nin *SAP HANA Developer Guide for SAP HANA XS Advanced Model*.\r\n\r\nFor local testing you can set `options.anonymous = true` to disable authentication.\r\n\r\n### Options\r\n\r\nHere is a list with options you can provide:\r\n\r\n| property | default | usage |\r\n| -------- | ------- | ----- |\r\n| rootDir | 'lib' | xsjs files location |\r\n| rootDirs |  | same as above, but array of directories can be provided, overrides rootDir if provided |\r\n| uaa |  | UAA configuration necessary to enable JWT token authentication and business user propagation to HANA |\r\n| [hana](#hana) |  | object containing HANA DB connection parameters, used for DB connectivity |\r\n| [secureStore](#secureStore) |  | object containing HANA DB connection parameters, used for secure store connectivity |\r\n| jobs |  | Job scheduler connection parameters used to register jobs during application startup and later for updating job execution status when job finished |\r\n| [mail](#mail) |  | Mail options, used by $.net.Mail API |\r\n| maxBodySize | '1mb' | Maximum body size accepted by xsjs. The value is passed to the [bytes library](https://www.npmjs.com/package/bytes) for parsing. |\r\n| anonymous | false | Enable anonymous access, i.e. without credentials |\r\n| [formData](#formdata) |  | Special restrictions over form-data submitted to server |\r\n| [destinationProvider](#destinationProvider) |  | Custom function, synchronous or asynchronous, to be used when $.net.http.readDestination is called in XSJS code. For more information on destinations support, check the detailed description for this configuration option. |\r\n| ca | certificates listed in `XS_CACERT_PATH` env var | Trusted SSL certificates for any outgoing HTTPS connections. Should be an array of loaded certificates. |\r\n| compression | true | By default text resources over 1K are compressed. |\r\n| [auditLog](#auditlog) |  | Object containing Audit log service credentials. If not provied audit logging will be disabled. If set to `{ logToConsole: true }` audit log messages will be written on the console (only suitable for non-productive setup, e.g. local development).|\r\n| [context](#context) | {} | Extend the default context in xsjs scripts. |\r\n| [libraryCache](#librarycache) | {} | Contains the xsjslibs that should be cached. |\r\n| redirectUrl | | If specified, a redirect to this url is triggered when the root path is requested. **Note**: When xsjs is behind a reverse proxy (Application Router for instance), the value of this property should be aligned with the path rewriting rules that may apply. |\r\n| xsApplicationUser | true | If set to false, the session variable `XS_APPLICATIONUSER` will not be set. |\r\n\r\n**Note:** When there are several rootDirs (for example: repo1 and repo2) and their file strucutre is equivalent (/repo1/hello.xsjs and /repo2/hello.xsjs) the file from the first directory (as listed in the 'rootDirs' property) will be used (/repo1/hello.xsjs) and the file from the second directory (/repo2/hello.xsjs) will be ignored with a warning message in the logs.\r\n\r\nSAP HANA XS Advanced applications connect to HANA with a fixed technical user provided via CloudFoundry service (environment variables). The actual (business) user of the application is retrieved from the JWT token and propagated to HANA.\r\n\r\nThe connection to Job scheduler service is done with a fixed technical user provided by the CloudFoundry service binding.\r\n\r\n\r\n#### hana\r\n\r\n| property | mandatory | usage |\r\n| -------- | ----- | -------- |\r\n| host | x | DB host |\r\n| port | x | DB port |\r\n| user | x | Technical user used for DB connection |\r\n| password | x | Technical user password |\r\n| schema |  | If provided will be set as current schema to DB connection |\r\n| connectWithLoggedUser |  | Possible values are `true` / `false`, default is `false`. If provided the DB connection will be done with the SAML assertion contained in the JWT token of the logged user. **Note:** This option is provided only for HANA cockpit transition to SAP HANA XS Advanced. In general this option should be avoided. |\r\n| sqlcc |  | Object containing all SQLCC configurations as properties with name after  SQLCC name used in XSJS code |\r\n| ca |  | Trusted SSL certificates explicitly for HANA connection. Should be an array of loaded certificates. If not provided, certificate from service binding will be used. If none are available HANA connection will not be encrypted. |\r\n\r\n- `sqlcc` - referring to the example above, SQLCC property can be initialized from the bound services like this:\r\n\r\n```js\r\n...\r\noptions.hana.sqlcc = xsenv.getServices({\r\n  'com.sap.my.sqlcc_config': 'SQLCC__NAME',\r\n  'com.sap.my.other_sqlcc_config': 'OTHER_SQLCC_UPS_NAME'\r\n  });\r\n...\r\n```\r\n\r\nand used later in xsjs code like:\r\n```js\r\nvar connection = $.db.getConnection('com.sap.my.sqlcc_config');\r\n```\r\n\r\n\r\n#### secureStore\r\n\r\n| property | mandatory | usage |\r\n| -------- | ----- | -------- |\r\n| host | x | DB host |\r\n| port | x | DB port |\r\n| user | x | Technical user used for DB connection |\r\n| password | x | Technical user password |\r\n| schema |  | If provided will be set as current schema to DB connection |\r\n\r\n\r\n\r\n#### formData\r\n\r\nobject with following properties:\r\n\r\n| property | default | usage |\r\n| -------- | ------- | ----- |\r\n| maxFilesSizeInBytes | `10485760` | It restricts the total size of all the uploaded files. |\r\n\r\n\r\n#### mail\r\n\r\nobject with following properties:\r\n\r\n| property | mandatory | usage |\r\n| -------- | ----- | -------- |\r\n| host | x | SMTP server host. |\r\n| port | x | SMTP server port. |\r\n| ignoreTLS |  | Could be `true` or `false`. This represents whether a STARTTLS command should be invoked if available by the mail server. Defaults to `false`. |\r\n| secure |  | Could be `true` or `false`. This represents whether the connection should be over TLS/SSL. Defaults to `false`. |\r\n| connectionTimeout |  | Connection timeout in ms. Defaults to 60000. |\r\n| authMethod |  | Authentication method to use. Could be 'PLAIN' / 'LOGIN' / 'CRAM-MD5'. |\r\n| auth |  | Authentication credentials. Example: {user: 'user', pass: 'pass'} The default is no authentication. |\r\n\r\n\r\n#### destinationProvider\r\n\r\nIf your application requires different mechanism for destination configuration for example dynamic configuration changes or dynamically adding new destinations to your application, you can provide own function that retrieves these configurations from your storage.\r\n\r\nFor convenience we support synchronous and asynchronous destination provider function. Depending on the number of parameters your function has we call it synchronously or asynchronously.\r\n\r\nHere are the signatures for both:\r\n\r\n```js\r\nfunction getDestinationSync(packagename, objectname, dtDescriptor) {\r\n}\r\n\r\nfunction getDestinationAsync(packagename, objectname, dtDescriptor, callback) {\r\n}\r\n```\r\n\r\n\r\n| parameter | description |\r\n| -------- | --------- |\r\n| packagename | the package of the destination supplied to $.net.http.readDestination |\r\n| objectname | the object name of the destination supplied to $.net.http.readDestination |\r\n| dtDescriptor | object containing all properties contained in the corresponding .xshttpdest file, if such file is available, otherwise __undefined__ |\r\n| callback | provided only in the asynchronous case - should be called by your provider function to return the destination or report error  |\r\n\r\n#### auditLog\r\n\r\nThis package audit logs entries in the following cases:\r\n- when the validation of the incoming JWT token fails\r\n- when the token in the request used to trigger a job does not contain the required scope\r\n\r\nApplications can also write audit log messages:\r\n\r\n```js\r\nvar xsjs = require('@sap/xsjs');\r\nvar xsenv = require('@sap/xsenv');\r\nvar auditLogging = require('@sap/audit-logging');\r\n\r\nvar port = process.env.PORT || 3000;\r\nvar options = xsenv.getServices({ auditLog: 'audit-log', uaa: 'xsuaa', hana: 'hana-hdi' });\r\n\r\n// Using Audit log REST API v2\r\nauditLogging.v2(options.auditLog, function (err, auditLog) {\r\n  if (err) {\r\n    return console.log('Could not create audit log client:', err);\r\n  }\r\n\r\n  options.context = { auditLog: auditLog };\r\n  xsjs(options).listen(port);\r\n});\r\n```\r\n\r\n**Note**: Check in advance whether the Audit log service to be used supports REST API v2\r\n(note the invocation of the `v2` method of `auditLogging`).\r\nOtherwise instantiate a client object that works with Audit log REST API v1:\r\n\r\n```js\r\n// Using Audit log REST API v1\r\nvar auditLog = auditLogging(options.auditLog);\r\n```\r\n\r\nIt is recommended to use Audit log REST API v2 if available.\r\nRefer to the documentation of the _@sap/audit-logging_ package for more information.\r\n\r\nThe audit log client object can then be used as following:\r\n\r\n```js\r\nauditLog\r\n  .securityMessage('Content of the message')\r\n  .by($.session.getUsername())\r\n  .sync.log();\r\n```\r\n\r\n**Note**: The usage of `sync` before `log` - this ensures that the call to the Audit log service is synchronous.\r\n\r\n**Note**: `$.session.getUsername()` returns `undefined` in case `anonymous` mode is used. It is up to applications whether to use another string as user or not audit log at all.\r\n\r\n\r\n#### context\r\n\r\nThis option can be used if you want to extend the xsjs scripts with additional global variables.\r\n\r\nExample:\r\n\r\n```js\r\nvar xsjs = require('@sap/xsjs');\r\nvar options = {\r\n  anonymous: true,\r\n  context: { answer: 42 }\r\n};\r\nxsjs(options).listen(3000);\r\n```\r\n\r\nThis configuration extends the context of xsjs scripts with one additional variable called `answer`.\r\nEvery time an xsjs script is executed it will not only have the `$` variable in it's context, but it will also include variable `answer` with value `42`.\r\n\r\nLets have a file `answer.xsjs` with the following content:\r\n```js\r\n$.response.setBody(answer);\r\n```\r\nA request to `http://<your_domain>:3000/answer.xsjs` will respond with `42`.\r\n\r\nWith the `context` property set, you can expose Node.js packages and variables:\r\n```js\r\nvar options = {\r\n  anonymous: true,\r\n  context: { environment: process.env, _: require('lodash') }\r\n};\r\n```\r\n\r\nCurrently we are aware of a limitation, which causes `<variable> instanceof <constructor_function>` used in a xsjs script to have odd behaviour.\r\nAlso stubbing or mocking constructor functions such as `Date`, `String`, etc in a xsjs script won't affect other xsjs files.\r\n\r\nThe `context` property also finds usage in a workaround for this limitations. Setting:\r\n```js\r\nvar options = {\r\n  anonymous: true,\r\n  context: { Array: Array, String: String }\r\n};\r\n```\r\nwill fix these problems, but has side effects:\r\n\r\n* Creating an array in xsjs script and checking it's instance will now return false:\r\n```js\r\n  var myArray = [1, 2, 3];\r\n  $.response.setBody(myArray instanceof Array); // Responds with false\r\n```\r\n* Monkey-patching built-in types won't work as expected, if they are exposed through the `context` property:\r\n```js\r\n  String.prototype.contains = function(str) { return this.indexOf(str) >= 0; };\r\n  var stringLiteral = 'Abc';\r\n  var stringObject = new String('Abc');\r\n  console.log(stringLiteral.contains); // undefined\r\n  console.log(stringObject.contains); // [Function]\r\n```\r\nSince there might be other side effects, **use this feature at your own risk.**\r\n\r\n#### libraryCache\r\n\r\nAn object that contains the xsjslibs that will be cached. Example:\r\n\r\n```js\r\n{\r\n  'my.libs.utility': 'global'\r\n}\r\n```\r\n\r\nIn XSJS code the import looks like:\r\n\r\n```js\r\nvar utility = $.import('my.libs', 'utility');\r\n```\r\n\r\n**Note:** it is recommended to use this feature only when necessary because keeps the cached content until the application is running.\r\nIt might have side effects in case the xsjslib keeps state. It also leads to extensive memory consumption and this should be considered while calculating application memory limits.\r\n\r\n#### Multitenant usage\r\n\r\nIn multitenant scenarios, the `hana` and `secureStore` properties can contain an object with the credentials of a _managed-hana_ (Instance Manager) service (created with the appropriate service plan)\r\ninstead of the credentials of a _hana_ service. In this case the application will connect to a HANA system depending on the tenant (identity zone) of the incoming request.\r\nA managed service instance for the particular tenant should be created in advance and the corresponding database artefacts should be deployed prior to requesting the application with this tenant.\r\nOtherwise the processing of the request will be terminated with an error.\r\n\r\n**Note**: Currently jobs are not multitenant-aware. Jobs are shared between tenants and a connection to a HANA database cannot be established.\r\nA job executing xsjs code can still connect to a specific HANA service instance using SQLCC configuration.\r\n\r\n## OData support\r\n\r\nOData support is provided by OData package @sap/xsodata. Details on what features are provided can be found in the project itself. The compatibility layer scans for .xsodata files in the specified source directory and registers OData endpoints for each valid descriptor. Both JavaScript and SQL script exits are supported.\r\n\r\n### Clear OData model cache\r\n\r\nFor each OData service the model is loaded and cached in memory upon first request.\r\nIn case the schema of the underlying db objects is changed at runtime, it is necessary to reload the model. Here is an example:\r\n```js\r\nvar app = xsjs(options);\r\n\r\nfunction onSchemaChange(tenant) {\r\n  app.clearODataCache(tenant);\r\n}\r\n```\r\n`clearODataCache(tenant)` clears the OData model cache for the given tenant.\r\n`tenant` argument is optional. If not provided, the cache for all tenants will be cleared.\r\n\r\n**Note:** Each application instance contains a cache of OData models. Clearing the cache in one of those instances does not automatically trigger cache invalidation in the others. The application itself is responsible for calling `clearODataCache` in each instance. Since an HTTP request is received only by a single instance, it cannot be used to trigger clearing the cache in a consistent manner for the whole application. Other solutions, like messaging, are more suitable for that purpose.\r\n\r\n## NPM packages support\r\nAs an extension in the dollar API we included support for all the available NPM packages. <br />\r\nFor example, in your xsjs file you can add the following code:\r\n\r\n```js\r\nvar _ = $.require('underscore');\r\n// Count to ten\r\nvar count = '';\r\n_.range(11).forEach(function(number) {\r\n  count += number + ' ';\r\n});\r\n$.response.setBody(count);\r\n```\r\n\r\n__NOTE__: If you require an npm package that is asynchronous, you have to use the `sync` property to make it synchronous. See [fibrous](https://github.com/goodeggs/fibrous) package for details.\r\n\r\nLet's take for example the [request](https://github.com/request/request/blob/master/request.js) module from npm. The standard Node.js approach for using the module will be:\r\n\r\n```js\r\nvar request = $.require('request');\r\nrequest('http://google.com', function(error, response) {\r\n  if (error) {\r\n    $.trace.error(error);\r\n    return;\r\n  }\r\n  $.response.setBody(response.body);\r\n});\r\n```\r\nThis snippet won't work in a xsjs file. The right xsjs approach would be:\r\n\r\n```js\r\nvar request = $.require('request');\r\ntry {\r\n  var response = request.sync('http://google.com');\r\n  $.response.setBody(response.body);\r\n} catch(error) {\r\n  $.trace.error(error.message);\r\n}\r\n```\r\n\r\nYou can also require a file relatively. The required file will execute in Node.js context. This means you will have access to global Node.js variables, such as `__dirname`, `process`, etc. in it.\r\nFor example, if we have a file called myAPI.js with content:\r\n\r\n```js\r\n// myAPI.js\r\nmodule.exports = {\r\n  getDirname: function() {\r\n    return __dirname;\r\n  }\r\n};\r\n```\r\n\r\nLet's say myAPI.js is located in a parent directory for the following xsjs file:\r\n```js\r\nvar myAPI = $.require('../myAPI.js');\r\n$.response.setBody(myAPI.getDirname());\r\n```\r\n\r\n## Destinations support\r\n\r\n#### Via user provided services\r\nBy default the compatibility layer supports destinations configuration via user provided services. The destination name (the repo resource id, e.g. package + '.' + xshttpdest name) is matched to service name.\r\n\r\nExample content of VCAP_SERVICES:\r\n\r\n```js\r\n\"VCAP_SERVICES\": {\r\n  \"user-provided\": [\r\n    {\r\n      \"label\": \"user-provided\",\r\n      \"name\": \"foobar.httpdest.mydest\",\r\n      \"credentials\": {\r\n        \"host\": \"some.host\",\r\n        \"port\": 8088,\r\n        \"username\": \"user\",\r\n        \"password\": \"secret\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\nExample usage in XSJS code:\r\n```js\r\nvar destination = $.net.http.readDestination('foobar.httpdest', 'mydest');\r\n```\r\nIf there is no service in VCAP_SERVICES with same name as the destination requested, an exception is thrown.\r\n\r\nWhen destination is read the content of the design time descriptor is merged with the properties provided in the user provided service. Property values of the UP service override DT descriptor values.\r\n\r\n\r\n#### Via custom provider function\r\n\r\nIf the default support is not enough for your use case, you can provide custom destination provider function. For details how to do that, see the __destinationProvider__ configuration option explained above.\r\n\r\n## Accessing column values by index in *$.hdb.ResultSet* rows\r\n\r\nColumn values from within a row of a *$.hdb.ResultSet* in XS Classic can be accessed either by column name or by column index.\r\nIf an application does not make use of accessing columns by index, then this capability can be turned off which will result in\r\nimproved performance:\r\n\r\n```js\r\nvar connection = $.hdb.getConnection({ enableColumnIndices: false });\r\n```\r\n\r\n## Tracing via *$.trace* API\r\n\r\nEach trace entry is associated with a location. The entry point being accessed is used as a location:\r\n- All application trace entries produced during OData handling (entries produced by exits and the imported `.xsjslib` scripts, _@sap/xsodata_ entries) use the location of the `.xsodata` service itself, e.g. '/odata/service.xsodata'.\r\n- All application trace entries produced during job execution (entries from `.xsjs` scripts and the imported `.xsjslib`s) use the location of the `.xsjob` descriptor, e.g '/jobs/my-job.xsjob'.\r\n- All application trace entries produced by `.xsjs` code (including the imported `.xsjslib` scripts) use the location of the `.xsjs` file itself, e.g. '/xsjs/service.xsjs'. The same applies to scripts referenced from `$.response.followUp`.\r\n\r\nThis allows easier changing of the tracing level (only of the entry point - a `.xsodata`, a `.xsjob` or a `.xsjs`) without doing so for every single script involved in the execution or by using wildcards. The trace message can be used to find the source line that has produced it.\r\n\r\n**Note:** Regarding request-ids for jobs - the run-id received from the jobscheduler is used as the request-id instead of an auto-generated one.\r\n\r\n## Troubleshooting\r\n\r\nThis package uses _@sap/logging_ package so all of its features are available to control logging.\r\nFor example to set all logging and tracing to finest level set `XS_APP_LOG_LEVEL` environment variable to `debug`.\r\n\r\nIf the application is deployed on XS Advanced On-premise Runtime, you can change the log level without restarting the application.\r\nFor example this command will set all logging and tracing to finest level.\r\n```sh\r\nxs set-logging-level <application-name> \"*\" debug\r\n```\r\nSee @sap/logging documentation for details.\r\n\r\nSome of the libraries used by this package employ other tracing mechanisms. For example many use the popular [debug](https://www.npmjs.com/package/debug) package. This means that by setting `DEBUG` environment variable, you can enable additional traces. Set it to `*` to enable all of them, but be careful as the output may be overwhelming.\r\nIn addition internal Node.js traces can be enabled via `NODE_DEBUG` environment variable. [This post](http://www.juliengilli.com/2013/05/26/Using-Node.js-NODE_DEBUG-for-fun-and-profit/) describes it in more detail.\r\n\r\n**Warning:** Enabling some of these options may trace security sensitive data, so use with caution.\r\n\r\n## Differences with HANA XS Classic\r\n\r\nSee the differences [here](differences.md).\r\n<br/>","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n<a name=\"6.6.4\"></a>\r\n## 6.6.4 - 2022-06-03\r\n\r\n### Fixed\r\n- Creats new set of connections when using followUp functionality\r\n\r\n### Added\r\n- Added maxpoolsize to default DB options. \r\n\r\n<a name=\"6.6.3\"></a>\r\n## 6.6.3 - 2022-05-03\r\n\r\n### Update\r\n- Update @sap/hana-client to v2.12.20\r\n\r\n<a name=\"6.6.2\"></a>\r\n## 6.6.2 - 2022-04-26\r\n\r\n### Update\r\n- Update _moment_ to v2.29.2\r\n- Update _async_ to v3.2.2\r\n\r\n<a name=\"6.6.1\"></a>\r\n## 6.6.1 - 2022-04-26\r\n\r\n### Update\r\n- Update _@sap/xsodata_ to v7.5.5\r\n\r\n<a name=\"6.6.0\"></a>\r\n## 6.6.0 - 2022-04-01\r\n\r\n### Update\r\n- Updated the way multipart/related WebRequests are handled.\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.5.0\r\n- Update _body-parser_ to v1.19.2\r\n\r\n<a name=\"6.5.5\"></a>\r\n## 6.5.5 - 2022-03-17\r\n\r\n### Added\r\n- Support for multipart request handling in Client.\r\n\r\n<a name=\"6.5.4\"></a>\r\n## 6.5.4 - 2022-03-11\r\n\r\n### Added\r\n- Added support for WebEntityRequest creation via .create() on $.web.WebRequest.entities.\r\n\r\n<a name=\"6.5.3\"></a>\r\n## 6.5.3 - 2022-03-08\r\n\r\n### Fixed\r\n- Update _@sap/audit-logging_ to v5.0.0\r\n- Update _@sap/xssec_ to v3.2.13\r\n\r\n<a name=\"6.5.2\"></a>\r\n## 6.5.2 - 2022-02-25\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.11.20\r\n\r\n<a name=\"6.5.1\"></a>\r\n## 6.5.1 - 2022-02-07\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.4.5\r\n\r\n<a name=\"6.5.0\"></a>\r\n## 6.5.0 - 2021-12-16\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.11.14\r\n- Update _@sap/hdbext_ to v7.5.0\r\n\r\n<a name=\"6.4.1\"></a>\r\n## 6.4.1 - 2021-11-25\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.10.20\r\n- Update _@sap/hdbext_ to v7.4.1\r\n\r\n<a name=\"6.4.0\"></a>\r\n## 6.4.0 - 2021-10-05\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.10.13\r\n- Update _@sap/hdbext_ to v7.4.0\r\n\r\n<a name=\"6.3.1\"></a>\r\n## 6.3.1 - 2021-08-09\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.9.28\r\n- Update _@sap/hdbext_ to v7.3.1\r\n\r\n\r\n<a name=\"6.3.0\"></a>\r\n## 6.3.0 - 2021-07-21\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.9.23\r\n- Update _@sap/hdbext_ to v7.3.0\r\n- Update _@sap/xsodata_ to v7.4.4\r\n\r\n<a name=\"6.2.2\"></a>\r\n## 6.2.2 - 2021-07-13\r\n\r\n### Fixed\r\n- Update _nodemailer_ to v6.6.1\r\n\r\n<a name=\"6.2.1\"></a>\r\n## 6.2.1 - 2021-06-28\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.8.22\r\n\r\n<a name=\"6.2.0\"></a>\r\n## 6.2.0 - 2021-05-07\r\n\r\n### Fixed\r\n- Update _@sap/hdbext_ to v7.2.0\r\n- Update _@sap/hana-client_ to v2.8.20\r\n- Update _@sap/xsodata_ to v7.4.2\r\n\r\n<a name=\"6.1.1\"></a>\r\n## 6.1.1 - 2021-02-25\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.3.7\r\n\r\n<a name=\"6.1.0\"></a>\r\n## 6.1.0 - 2021-02-22\r\n\r\n### Added\r\n- Node.js 14.x support\r\n\r\n### Fixed\r\n- Update _@sap/audit-logging_ to v4.2.0\r\n- Update _@sap/e2e-trace_ to v3.0.0\r\n- Update _@sap/fibers_ to v5.0.0-0\r\n- Update _@sap/fibrous_ to v0.5.0-6\r\n- Update _@sap/hana-client_ to v2.7.23\r\n- Update _@sap/hdbext_  to v7.1.3\r\n- Update _@sap/logging_ to v6.0.3\r\n- Update _@sap/node-jwt_ to v1.6.14\r\n- Update _@sap/node-vsi_ to v1.4.21\r\n- Update _lodash_ to v4.17.21\r\n- Update _multiparty_ to v4.2.2\r\n\r\n<a name=\"6.0.8\"></a>\r\n## 6.0.8 - 2020-11-25\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.3.5\r\n- Update _@sap/logging_ to v6.0.0\r\n- Update _@sap/jobs-client_ to v1.6.1\r\n- Update _@sap/xss-secure_ to v4.0.0\r\n- Update _@sap/xsenv_ to v3.1.0\r\n- Update _@sap/xssec_ to v3.0.10\r\n- Update _@sap/node-jwt_ to v1.6.13\r\n- Update _@sap/node-vsi_ to v1.4.20\r\n- Update _@sap/hdbext_ to v7.0.1\r\n- Update _@sap/hana-client_ to v2.6.58\r\n- Update _nodemailer_ to v6.4.16\r\n- Reduced installation size significantly.\r\n\r\n<a name=\"6.0.7\"></a>\r\n## 6.0.7 - 2020-10-15\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.3.4\r\n\r\n<a name=\"6.0.6\"></a>\r\n## 6.0.6 - 2020-10-02\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.5.109\r\n- Update _@sap/xsodata_ to v7.3.3\r\n- Update _lodash_ to v4.17.20\r\n\r\n<a name=\"6.0.5\"></a>\r\n## 6.0.5 - 2020-08-14\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.5.104\r\n- Update _@sap/xss-secure_ to v3.1.0\r\n- Update _@sap/hdbext_ to v7.0.0\r\n- Update _@sap/audit-logging_ to v3.1.1\r\n- Update _@sap/e2e-trace_ to v2.1.0\r\n- Update _@sap/instance-manager_ to v2.2.0\r\n- Update _@sap/logging_ to v5.3.1\r\n- Update _@sap/node-jwt_ to v1.6.11\r\n- Update _@sap/node-vsi_ to v1.4.19\r\n- Update _@sap/textbundle_ to v3.1.0\r\n- Update _@sap/xsenv_ to v3.0.0\r\n- Update _async_ to v3.2.0\r\n- Update _lodash_ to v4.17.19\r\n- Update _request_ to v2.88.2\r\n\r\n<a name=\"6.0.4\"></a>\r\n## 6.0.4 - 2020-06-01\r\n\r\n### Fixed\r\n- Crash when executing a `CALL` procedure statement with `$.hdb.Connection.executeQuery` or `$.hdb.Connection.executeUpdate` when there are no output tables\r\n- Document some known incompatibilities in regard to jobs\r\n- Add missing entry in CHANGELOG.md in regard to dropping support for PowerPC big endian in v6.0.0\r\n- Update _@sap/node-jwt_ to v1.6.9 (contains binaries for PowerPC little endian)\r\n- Update _@sap/node-vsi_ to v1.4.18 (contains binaries for PowerPC little endian)\r\n\r\n<a name=\"6.0.3\"></a>\r\n## 6.0.3 - 2020-05-18\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.0.2\r\n\r\n<a name=\"6.0.2\"></a>\r\n## 6.0.2 - 2020-04-29\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v7.0.0\r\n- Update _@sap/node-jwt_ to v1.6.8\r\n- Update _@sap/node-vsi_ to v1.4.17\r\n- Update _@sap/hdbext_ to v6.2.2\r\n- Update _@sap/hana-client_ to v2.4.196\r\n\r\n<a name=\"6.0.1\"></a>\r\n## 6.0.1 - 2020-04-16\r\n\r\n### Fixed\r\n- Adjustments to avoid _IsGlobalEmpty_ crash with `$.db` and `$.hdb` have been added\r\n- Performance when executing queries with `$.db` and `$.hdb` has been improved\r\n\r\n<a name=\"6.0.0\"></a>\r\n## 6.0.0 - 2020-03-13\r\n\r\n### Added\r\n- Node.js 12.x support.\r\n\r\n### Removed\r\n- Support for Node.js versions 6.x and 8.x\r\n- Support (pre-built binaries) for PowerPC big endian.\r\n\r\n### Fixed\r\n- Update _@sap/xssec_ to v2.2.5\r\n- Update _@sap/xsodata_ to v6.0.0\r\n- Update _@sap/hana-client_ to v2.4.182\r\n- Update _@sap/hdbext_ to v6.2.0\r\n- Update _@sap/fibers_ to v4.0.3-0\r\n- Update _@sap/fibrous_ to v0.5.0-5\r\n- Update _@sap/node-jwt_ to v1.6.7\r\n- Update _@sap/node-vsi_ to v1.4.16\r\n\r\n<a name=\"5.3.1\"></a>\r\n## 5.3.1 - 2019-12-17\r\n\r\n### Fixed\r\n- Update _@sap/xsenv_ to v2.2.0\r\n- Update _@sap/xsodata_ to v5.0.0\r\n\r\n<a name=\"5.3.0\"></a>\r\n## 5.3.0 - 2019-11-20\r\n\r\n### Added\r\n- Audit logging could be disabled now (providing audit log configuration is optional).\r\n\r\n### Fixed\r\n- Update _@sap/hana-client_ to v2.4.167\r\n\r\n<a name=\"5.2.3\"></a>\r\n## 5.2.3 - 2019-10-31\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v4.7.0\r\n\r\n<a name=\"5.2.2\"></a>\r\n## 5.2.2 - 2019-10-25\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v4.6.0\r\n- Update _@sap/hdbext_ to v6.1.0 (adds support for synonyms as table parameters in procedures)\r\n\r\n<a name=\"5.2.1\"></a>\r\n## 5.2.1 - 2019-09-19\r\n\r\n### Fixed\r\n- Integrate _nodemailer_ v6.2.1\r\n- Update dependencies\r\n- Locale of database connections when no locale information is present in the incoming request (the driver's default is now used)\r\n- `var`s and `function`s from `xsjslib`s are now enumerable\r\n\r\n<a name=\"5.2.0\"></a>\r\n## 5.2.0 - 2019-06-06\r\n\r\n### Added\r\n- Node 10 support\r\n\r\n### Fixed\r\n- Updated dependencies\r\n\r\n<a name=\"5.1.0\"></a>\r\n## 5.1.0 - 2019-05-20\r\n\r\n### Fixed\r\n- Remove `x-powered-by` response header\r\n- Update `nodemailer` to v4.3.1\r\n- Update `express` to v4.16.4\r\n\r\n### Added\r\n- Adopt *@sap/hana-client* v2.4.139\r\n\r\n<a name=\"5.0.0\"></a>\r\n## 5.0.0 - 2019-02-05\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v4.4.0\r\n- Update _@sap/fibers_ to 3.1.1-1\r\n- Update _@sap/fibrous_ to 0.5.0-4\r\n\r\n### Removed\r\n- The support for Node.js v4.x\r\n\r\n<a name=\"4.0.2\"></a>\r\n## 4.0.2 - 2019-01-21\r\n\r\n### Added\r\n- Flag to disable setting XS_APPLICATIONUSER\r\n\r\n### Fixed\r\n- Update _@sap/hdbext_ to v5.1.0.\r\n\r\n## 4.0.1 - 2018-10-22\r\n\r\n### Fixed\r\n- Update _@sap/xsodata_ to v4.3.0.\r\n\r\n## 4.0.0 - 2018-10-04\r\n\r\n### Changed\r\n- Providing `auditLog` options is now mandatory.\r\n- Underlying database driver is now *@sap/hana-client*.\r\n- Due to the changed driver, precision and scale in metadata may differ for some data types (e.g. REAL, FLOAT, DOUBLE, BLOB).\r\n- `$.db.ResultSetMetaData.getCatalogName` now throws an exception instead of returning a value.\r\n- `$.db.ResultSetMetaData.getColumnDisplaySize` now throws an exception instead of returning a value.\r\n- String representations of SECONDDATE and TIMESTAMP are in a different format (without 'T'). The format now is: *YYYY-MM-DD HH24:MI:SS.FF*, the format in previous versions was: *YYYY-MM-DDTHH24:MI:SS.FF*.\r\n- `$.hdb`, calling stored procedures with input table parameters: since default data type conversions are not performed over input table parameters,\r\nand since *@sap/hana-client* is more restrictive on values provided for DATE and TIME types compared to the hdb driver,\r\nscenarios with input table parameters and table content provided as an array of objects will now throw if the input table parameter has DATE or TIME columns and the values  are provided as Date objects.\r\n- `$.db.ResultSet.close` does not close the result set. All results will be closed when the corresponding statement is closed.\r\n\r\n### Added\r\n- `typeName` property in result set metadata of `$.hdb`.\r\n\r\n### Fixed\r\n- `$.db`, string representations of TIMESTAMPs have all the digits from the fractional seconds that are stored in the database.\r\n- Return values of `$.db.ParameterMetaData.getParameterMode` is now aligned with XS Classic.\r\n- `$.db`, parameter and result set metadata - prior to this version `getPrecision` returned the scale and `getScale` returned the precision. These methods are now fixed.\r\n- `$.db.PreparedStatement.executeBatch` now returns a value - an array with integers representing the number of updated rows per batch.\r\n- Type of ALPHANUM columns is now ALPHANUM instead of NVARCHAR.\r\n- Type of SECONDDATE columns is now SECONDDATE instead of TIMESTAMP.\r\n- Type of SHORTTEXT columns in result set metadata is now SHORTTEXT instead of NVARCHAR. Note that parameter metadata returns NSTRING for SHORTTEXT as in versions prior to this one.\r\n- Type of TEXT columns is now TEXT instead of NCLOB.\r\n- Type of BINTEXT columns is now BINTEXT instead of NCLOB.\r\n\r\n## 3.7.0 - 2018-10-04\r\n\r\n### Added\r\n- Integration with Audit log service.\r\n\r\n## 3.6.0 - 2018-09-20\r\n\r\n### Added\r\n- Support for CF Log format (via adopting _@sap/logging_ v4).\r\n\r\n### Fixed\r\n- Updated dependencies.\r\n\r\n## 3.5.0 - 2018-09-04\r\n\r\n### Added\r\n- `enableColumnIndices` option in `$.hdb.getConnection` with which column indices for result sets can be turned off (improves performance).\r\nDefaults to `true`.\r\n- Warning log for aborted requests.\r\n\r\n### Fixed\r\n- Conversion of input strings for binary data types.\r\n- Documentation improvements.\r\n- Updated dependencies.\r\n\r\n## 3.4.2 - 2018-07-10\r\n\r\n### Fixed\r\n- Updated @sap/hdbext to 4.7.3\r\n- Fix regression caused by performance optimization in `$.import` for Node.js 6 and up ( this optimization has been removed )\r\n- Clean up acquired database connections for aborted requests\r\n\r\n## 3.4.1 - 2018-06-26\r\n\r\n### Fixed\r\n- Imported (via `$.import`) but unused `xsjslib`s are no longer loaded\r\n(applicable to Node.js 6 and up)\r\n- Performance during attaching column indices for `$.hdb` result sets\r\n(applicable to Node.js 6 and up)\r\n\r\n## 3.4.0 - 2018-05-28\r\n\r\n### Added\r\n- Enable setting maxBodySize\r\n\r\n### Fixed\r\n- Use @sap/xsodata feature for lazy db connection creation\r\n- Updated dependencies\r\n\r\n## 3.3.7 - 2018-04-23\r\n\r\n### Fixed\r\n- Updated @sap/xsodata to 3.6.0\r\n\r\n## 3.3.6 - 2018-04-20\r\n\r\n### Fixed\r\n- Update @sap/xssec to 2.1.10\r\n\r\n## 3.3.5 - 2018-04-19\r\n\r\n### Fixed\r\n- Update @sap/fibers to 2.0.2-0\r\n- Update @sap/fibrous to 0.5.0-3\r\n\r\n## 3.3.4 - 2018-04-06\r\n\r\n### Added\r\n- A note in the documentation regarding the `redirectUrl` option.\r\n\r\n### Fixed\r\n- Update dependencies\r\n\r\n## 3.3.3 - 2018-03-12\r\n\r\n### Fixed\r\n- Improved performance of $.hdb.\r\n\r\n## 3.3.2 - 2018-03-02\r\n\r\n### Fixed\r\n- Fix callable statement output params.\r\n\r\n## 3.3.1 - 2018-02-26\r\n\r\n### Fixed\r\n- Incorrect milliseconds in TIMESTAMPS.\r\n\r\n## 3.3.0 - 2018-02-21\r\n\r\n### Changed\r\n- `@sap/xsodata` version.\r\n\r\n### Added\r\n- DSR metrics.\r\n\r\n### Fixed\r\n- Trailing zeros of decimals will not be removed.\r\n- Performance issue for string to date conversions in $.hdb.\r\n\r\n## 3.2.1 - 2018-02-13\r\n\r\n### Changed\r\n- `@sap/xsodata` version.\r\n\r\n### Fixed\r\n- `sqlcc` user overrides default one.\r\n- Returned error code in batch affected rows.\r\n\r\n## 3.2.0 - 2018-01-23\r\n\r\n### Added\r\n- npm-shrinkwrap.json\r\n\r\n## 3.1.0 - 2018-01-16\r\n\r\n### Added\r\n- Result set indices in $.hdb after output type conversions.\r\n- Support for gzipped and deflated requests.\r\n- Expose security context to XSJS code.\r\n- Documentation for `redirectUrl` and `libraryCache`.\r\n\r\n### Fixed\r\n- Missing $.request.body in some requests.\r\n- Always return array result for batch update.\r\n\r\n## 3.0.0 - 2017-12-06\r\n\r\n### Changed\r\n- An array of affected rows is returned for failed batch inserts via $.hdb instead of throwing an error.\r\n\r\n### Added\r\n- Node 8 support.\r\n- Support for tilde (`~`) headers (except for `~server` headers).\r\n\r\n### Fixed\r\n- Update dependencies.\r\n\r\n## 2.1.2 - 2017-11-27\r\n\r\n### Fixed\r\n- Updated dependencies.\r\n- Apply compatible formatting for decimal strings.\r\n- Warning messages for files that will be ignored.\r\n\r\n## 2.1.1 - 2017-10-17\r\n\r\n### Changed\r\n- Dependencies' versions.\r\n\r\n## 2.1.0 - 2017-10-13\r\n\r\n### Added\r\n- The authorization header is now exposed to application code.\r\n- Improvements to documentation.\r\n\r\n### Fixed\r\n- Locale handling in OData.\r\n\r\n### Changed\r\n- Dependencies' versions.\r\n\r\n## 2.0.0 - 2017-08-28\r\n\r\n### Changed\r\n- Missing UAA configuration when anonymous access is not enabled results in an error during application startup.\r\n- Not valid files (e.g. .xsjs files with syntax errors) cause an error during application startup.\r\n- $.hdb.ResultSetMetadata has been incompatibly changed (compared to @sap/xsjs v1) in order to become more compatible with XS Classic.\r\n\r\n### Removed\r\n- The deprecated xsjs.extend function.\r\n- The support for the 'jwt' option (use the 'uaa' option instead).\r\n- The support for Node.js v0.12.x.\r\n\r\n### Fixed\r\n- `$.session.language` now fallbacks to the value of `$.request.language` if `xsSessionLanguage` cookie is not present.\r\n\r\n## 1.16.4 - 2017-07-28\r\n\r\n### Added\r\n- Provide a request-specific logger to @sap/xsodata.\r\n\r\n### Fixed\r\n- Upload of binary files.\r\n\r\n## 1.16.3 - 2017-07-17\r\n\r\n### Fixed\r\n- $.session missing in OData exits.\r\n- Errors from `.xsjs` files not handled properly.\r\n\r\n## 1.16.2 - 2017-07-04\r\n\r\n### Fixed\r\n- `.xsaccess` rewrite rules scope.\r\n- Default conversions on input parameters.\r\n- Retrieval of job logs\r\n- `$.hdb.rollback` is executed synchronously.\r\n\r\n## 1.16.1 - 2017-06-02\r\n\r\n### Added\r\n- Support for HTTP method PATCH in $.request.method.\r\n\r\n### Fixed\r\n- Fix database connection pooling.\r\n- Trace uncaught exceptions stack trace.\r\n- Log package version and Node version.\r\n- Improvements in README.md.\r\n\r\n## 1.16.0 - 2017-05-09\r\n\r\n### Added\r\n- Support for Date objects as input parameters in $.hdb.\r\n- Support for the treatDateAsUTC flag for $.hdb connections.\r\n- Performance improvements via adopting @sap/logging version 3.\r\n\r\n### Fixed\r\n- Typo in the name of the category used for logging.\r\n- Getting null values from $.db.ResultSet.\r\n- Automatic closing of database connections.\r\n\r\n### Changed\r\n- The entry point of the application being accessed is used as a location of $.trace API entries.\r\n\r\n## 1.15.1 - 2017-04-13\r\n\r\n### Fixed\r\n - Allow query parameters for OData $batch requests\r\n\r\n## 1.15.0 - 2017-04-06\r\n\r\n### Added\r\n - API for clearing OData model cache.\r\n\r\n## 1.14.2 - 2017-04-04\r\n\r\n### Fixed\r\n - http compression was not enabled when configured.\r\n\r\n### Added\r\n - README.md table of content.\r\n\r\n## 1.14.1 - 2017-03-20\r\n\r\n### Fixed\r\n -\tResultSet::getTimestamp regression when getting `null` values.\r\n -\t`xsjob` can refer `.xsjs` files placed in the application root directory.\r\n\r\n## 1.14.0 - 2017-03-13\r\n\r\n### Added\r\n- Multitenancy support via integration with Instance Manager\r\n\r\n## 1.13.1 - 2017-02-21\r\n\r\n### Fixed\r\n- Fix jobs execution with authentication.\r\n- Improve ResultSet getters parameter validation and functionallity.\r\n- Fix $.session.hasAppPrivilege when using anonymous access.\r\n\r\n## 1.13.0 - 2017-01-30\r\n\r\n### Added\r\n- Adding, altering and deleting entries from Zip objects.\r\n- Log error for jobs without HANA config.\r\n\r\n### Changed\r\n- Rename package to use @sap scope\r\n\r\n### Fixed\r\n- npm restriction.\r\n\r\n## 1.12.0 - 2017-01-06\r\n\r\n### Added\r\n- Column indexing functionality for $.hdb.ResultSet\r\n- SAP passport support when connecting to db\r\n\r\n### Fixed\r\n- Jobs callback url\r\n- Direct execution of queries in $.hdb\r\n\r\n## 1.11.4 - 2016-11-25\r\n\r\n### Fixed\r\n- Fix in xsodata: use same quoting semantic for input parameters of calcviews as in XS Classic\r\n\r\n## 1.11.3 - 2016-11-16\r\n\r\n### Fixed\r\n- Adapt Zip objects in xsjs APIs\r\n- Align TupelList behavior\r\n- Fix ReDoS issue in negotiator\r\n- Use getter/setter for library execution result property assignment\r\n- Do not trace an error stack for 4xx status codes\r\n- Document decimal column incompatibility\r\n- Use default previous component name in SAP passport\r\n\r\n## 1.11.2 - 2016-10-14\r\n\r\n### Fixed\r\n - Fixes database connectivity\r\n\r\n## 1.11.1 - 2016-10-13\r\n\r\n### Fixed\r\n - Fixes in xsodata\r\n\r\n## 1.11.0 - 2016-10-11\r\n\r\n### Fixed\r\n - Minor fixes and improvements\r\n\r\n## 1.10.1 - 2016-09-28\r\n\r\n### Fixed\r\n - Fixes in xsodata\r\n\r\n## 1.10.0 - 2016-09-28\r\n\r\n### Added\r\n - $.util.Zip\r\n - $.util.SAXParser\r\n\r\n### Fixed\r\n - Align content-type header values with XS Classic\r\n - Minor bug fixes\r\n\r\n## 1.9.0 - 2016-08-29\r\n\r\n### Added\r\n - HANA connection pooling\r\n - Support for Node.js v6\r\n\r\n## 1.8.0 - 2016-08-05\r\n\r\n### Added\r\n - 'context' property in xsjs bootstrap options which can be used if you want to extend the xsjs scripts with additional global variables\r\n\r\n### Fixed\r\n - Fixes in database connectivity\r\n\r\n## 1.7.0 - 2016-07-13\r\n\r\n### Added\r\n - $.util.compression\r\n - $.text.mining support\r\n - Support for compression\r\n"},{"name":"xsodata","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"XSODATA\r\n=======\r\n\r\nExpose data from HANA database artifacts like tables or views as OData V2 service with the help of .xsodata service definition files. \r\n\r\nNote: XSOData was developed to provide XS Classic users using XSOData the possibility to migrate to XS Advanced on node.js. \r\n      This library contains nearly the same feature set as XSOData provided on SAP HANA XS Classic. This module is already \r\n      in maintenance mode and it is not planned to extend or enhance it.\r\n      \r\n      If you want to create new OData services we strongly reoommend to use OData V4 along with a generic CDS-OData provider.\r\n      Here you can model your consumption persistency model with CDS (Core Data Services) and expose parts or the complete\r\n      model as OData service. Such a solution is already productively available on the JAVA runtime stack. \r\n      \r\n      For node.js we also provide an OData V4 solution. The development of the OData V4 node.js Library already started in 2016.\r\n      It is also planned that a generic CDS-Odata provider will be deliverd.\r\n\r\n      If you are developing an OData service for SAP Business Technology Platform, it is recommended to move to the SAP Cloud Application Programming Model (CP).\r\n      The XSODATA solution supports HANA as a service, but does **NOT** support SAP HANA Cloud Services (see also SAP note 3013788).\r\n\r\n## Usage\r\n\r\n  * This module is used in the XSJS shim for SAP HANA XSC Engine applications to\r\n    allow the reuse of .xsodata files from XSC applications on SAP HANA XSA.\r\n\r\n  * It can also be used directly in your own nodejs server application. Be aware that you use the same version of the hdb and winston node module version in your application.\r\n  \r\n## Documentation \r\n\r\n[For documentation see here](./documentation.md)\r\n\r\n## Warning\r\n\r\n  * In order to restrict the amount of records loaded from the database (to reduce the memory usage) please use the \r\n    limit setting which can be set in the xsodata file [see here](documentation/xsodataSettings.md)\r\n  * The xsodata library CHANGES the TRANSACTION ISOLATION LEVEL on the used database connection\r\n  * The xsodata library CHANGES the SCHEMA on the used database connection\r\n  * The xsodata library uses temporary tables for performance reasons\r\n  * If you manually modify the db-connection/client inside xsodata-application-exits the modifications you have done\r\n   will not be restored by the xsodata library\r\n  \r\n  So the user of the xsodata library should clean the database connection\r\n  \r\n## Features - Overview\r\n\r\n  * Automatic metadata handling based on XSOData definition and HANA db metadata artifacts\r\n  * OData request handling with URI parsing including system query options\r\n  * OData request/response serialization and deserialization \r\n  * Load table records from HANA database via generated SQL queries\r\n  * Calculation view support\r\n  * Batch handling\r\n  * Logging:\r\n    When the xsjs application log is enabled then xsodata also writes log information.\r\n    If, in addition, the environment variable XSODATA_LOG_MEMORY_CONSUMPTION is set to 'true'\r\n    xsodata writes also memory consumption information to the logs\r\n\r\n\r\n## Supported OData V2 Features:\r\n\r\nGET Requests:\r\n\r\n* URI0 = scheme serviceRoot \r\n* URI1 = scheme serviceRoot \"/\" entitySet\r\n* URI2 = scheme serviceRoot \"/\" entitySet \"(\" keyPredicate \")\"\r\n* URI6 = scheme serviceRoot \"/\" entitySet \"(\" keyPredicate \")/\" entityNavProperty\r\n* URI7 = scheme serviceRoot \"/\" entitySet \"(\" keyPredicate \")/$links/\" entityNavProperty\r\n* URI8 = scheme serviceRoot \"/$metadata\"\r\n* URI9 = scheme serviceRoot \"/$batch\"\r\n* URI15 = scheme serviceRoot \"/\" entitySet count\r\n\r\nCreateUpdateDelete Requests:\r\n\r\n* CUD - Entity\r\n* CUD - Link \r\n\r\n[System Query options](/documentation/supportedSystemQueryOptions.md):\r\n\r\n* $top\r\n* $skip\r\n* $filter, except for:\r\n    * comparison of navigation properties\r\n* $orderby, except for:\r\n    * comparison of navigation properties\r\n* $expand\r\n* $select\r\n* $format\r\n    * only json supported\r\n* $inlinecount\r\n\r\n[Supported HTTP methods per requests type](/documentation/supportedMethods.md)\r\n\r\n## Supported XS1 OData features (defined in the XSOData file):\r\n\r\n  * Definition of OData schema namespace\r\n  * OData Service exposure\r\n  * Metadata caching\r\n  * Create/update/delete restrictions of OData requests\r\n  * Exposure of table and views (including calculation views) as EntitySet\r\n  * Property Projection: Expose a subset of the table columns as properties of an OData EntityType\r\n  * [Automatic OData key generation] (/documentation/generatedKeys.md), e.g. required for aggregated views\r\n  * Simple and complex associations \r\n  * [Data aggregation] (/documentation/aggregations.md)\r\n  * Parameter EntitySets for calculation views\r\n  * ETAG handling\r\n  * Nullable properties\r\n  * Cache Control via cache header\r\n  * [Custom exits] (/documentation/customExits.md) (JavaScript and SQL Script) for modification and validation requests\r\n  * Custom exits in batch requests\r\n  * Uses only UTF-8\r\n  * Uses \"content-type: application/json\" for CREATE, UPDATE, DELETE\r\n  * Expose data only via JSON format (ATOM format is not supported)\r\n  * Supported types and type mapping [see here](/documentation/typemapping.md) \r\n  * [Supported XSOData features by OSDL] (/documentation/xsodataEbnf.md) \r\n  \r\n\r\nNote: \r\n\r\n* XS1 applications using analytical views, attribute views or calculation views <= SAP HANA SPS 10 have to migrate first their views to the new calculation views of SPS 11. \r\n* Authentication/Authorisation is not handled by XSOData node module and has to be done by the application using the node module. \r\n* [The module can be used in development mode and productive mode] (/documentation/modes.md)\r\n* [Debug View is available when using the module in development mode] (/documentation/debugView.md)\r\n\r\n## Features per HANA DB Artifact\r\n\r\n### Table\r\n\r\nSupports the following Features:\r\n- [Explicit Aggregations](/documentation/aggregations.md#explicit-aggregations)\r\n- [Generated Local Key](/documentation/generatedKeys.md)\r\n \r\nSupported Http Verbs:\r\n- GET, PUT, POST, DELETE\r\n\r\n### SQL View\r\n\r\nSupports the following Features:\r\n- [Explicit Aggregations](/documentation/aggregations.md#explicit-aggregations)\r\n- [Generated Local Key](/documentation/generatedKeys.md)\r\n\r\nSupported Http Verbs:\r\n- GET\r\n\r\n### XS Advanced Calculation View\r\n\r\nSupports the following Features:\r\n- [Implicit Aggregations](/documentation/aggregations.md#implicitderived-aggregations)\r\n- [Generated Local Key](/documentation/generatedKeys.md)\r\n\r\nSupported Http Verbs:\r\n- GET\r\n\r\n## Samples\r\n\r\n* [xsodata code samples without xsjs](/documentation/code_samples_pure_node/readme.md)\r\n* [Calcview](/documentation/calcviewSample.md)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","changelog":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Unreleased\r\n\r\n## [7.5.5] - 2022-04-21\r\n\r\n* On calc view: Stable sort order with $skip and $top usage for subsequent requests via \"order by\" of key fields in SQL statement\r\n\r\n## [7.5.4] - 2022-04-21\r\n\r\nBuild infrastructure fix\r\n\r\n## [7.5.1] - [7.5.3] - 2022-04-20\r\n\r\nBuild infrastructure fixes\r\n\r\n## [7.5.0] - 2022-03-22\r\n\r\n* Support of node version 16\r\n* Update module dependencies\r\n* Update of system query options and xsodata-settings help text\r\n* Minor changes: Error reporting\r\n\r\n## [7.4.5] - 2021-12-15\r\n\r\n* Suppress $metadata annotation <code>sap:aggregation-role=\"dimension\"</code> on calculation view property if it is used as description property referenced by annotation <code>sap:text</code> by another property of the calulation view. The annotation is only supressed if the corresponding xsodata-file has <code>settings</code> containing this: <code>noDimensionAnnoOnTextProperty true;</code>\r\n* Improvements on URI parsing errors:\r\n  * reporting URI resource path character position on parsing error, if possible\r\n  * Invalid navigation property on <code>$expand</code> system query option returns 400 (Bad Request) instead of 500 (Internal Server Error)\r\n* Removed support for NodeJS version 10\r\n\r\n## [7.4.4] - 2021-07-20\r\n\r\n* HANA client API usage changed: 'execQuery' used for read requests, change requests remain on 'exec'\r\n\r\n## [7.4.2] - 2021-05-05\r\n\r\n* Quote reserve for calcview \"in\" formula\r\n* node version support: 10, 12, 14\r\n\r\n## [7.3.7] - 2021-02-24\r\n\r\n### Fixed\r\n\r\nFor Edm.String typed properties, all single quotes must be preserved.\r\n\r\n## [7.3.5] - 2020-11-23\r\n\r\n### Fixed\r\n\r\nAuthorization header parsing conform to RFC6750\r\n\r\n## [7.3.4] - 2020-10-14\r\n\r\n### Fixed\r\n\r\nadd \"return\" before asynDone to avoid \"Callback was already called\" errors when \"dataCollector* classes\" are called\r\n\r\n## [7.3.3] - 2020-10-01\r\n\r\n### Fixed\r\n\r\nCommit on drop of temporary tables added.\r\n\r\n\r\n## [7.3.2] - 2020-09-30\r\n\r\n## [7.3.1] - 2020-09-29\r\n\r\n### Changed\r\n\r\n* Improved error messages.\r\n\r\n## [7.3.0] - 2020-09-15\r\n\r\n* Aggregation for \"count\":\r\n  * For explicit application the aggregation type \"count\" was not supported in the xsodata file. When\r\n    \"aggregates always (COUNT of \"Amount\");\" was used, a syntax error was thrown.\r\n  * For implicit aggregation, where the aggregation information is loaded from the calcviews measures (e.g.\r\n    using \"aggregates always;\" without a property list in the *.xsodata file), wrongly \"avg\" was used as measure\r\n    type instead of \"count\".\r\n  * With this fix aggregation type \"count\" is now properly supported\r\n    * For explicit application: \"aggregates always (COUNT of \"Amount\");\"\r\n    * For implicit aggregation: calcview measures \"count\" and \"avg\" are now supported property\r\n\r\n* Fix: If a temporary table is not properly dropped by the DB, a second drop step is performed to avoid errors\r\n    when recreating the table.\r\n\r\n## [7.2.0] - 2020-08-19\r\n\r\n* Improve logging infrastructure\r\n\r\n## [7.1.0] - 2020-08-11\r\n\r\n* OData type Edm.Time is mapped to hana types 'TIME' (due to backward compatiblity) which stores only hour, minutes\r\n  and seconds, so only the uri format **time'PT0H0M0S'** was supported. With this fix also the full representation\r\n  like time'P2010Y12M30DT01H02M03S' can be used (some UIs generated it) if the parts of year, mounth and day are zero.\r\n\r\n* Fix for missing annotations (e.g. \"sap:label\") if an calcview without input parameters is exposed as normal view\r\n  (this is without the \"parameter via\" keyword in the xsodata file)\r\n\r\n* Fixes for create, update, delete operations via user-exits on calculation views without input parameters.\r\n  Please note: if the input parameters are omitted and \"via keys\" is used, then the input parameter must be set in\r\n  the exit functions since they are rendered in the output.\r\n\r\n* Explicitly drop prepared statements immediately instead at request end\r\n\r\n## [7.0.3] - 2020-06-30\r\n\r\n### Added\r\n- license file: developer-license-3.1.txt\r\n\r\n## [7.0.2] - 2020-05-18\r\n\r\n* Add support for create, update, delete operations via user-exits on calculation views without input parameters.\r\n  Work for both, calculation views without input parameters exposed as normal view and exposed as calcview.\r\n\r\n## [7.0.1] - 2020-05-12\r\n\r\n* Add support for calculation views without input parameters.\r\n  Before release 7.0.0 calcviews without input parameters have not been supported, but worked accidentally if a calcview\r\n  was wrongly exposed as normal view. After the major release 7.0.0 this wrong exposure of a calcview resulted in an error.\r\n  Because calcviews without input parameters are used more often, the support for this calcviews is now supported.\r\n  You can either expose a calcview as normal view or as proper calcview, for the latter an input parameter entityset with\r\n  parenthesis must be used.\r\n\r\n## [7.0.0] - 2020-04-23\r\n\r\n* Add support for NodeJS version 12\r\n* Removed support for NodeJS version 6\r\n* Fix bug when using a view with explicit key in combination with concurrency token using default properties for ETag.\r\n  Now key properties are not considered for etag generation as written in the \"SAP HANA Developer Guide\":\r\n  _If you specify concurrency token only, then all properties, except the key properties, are used to calculate\r\n  the ETag value. If you provide specific properties, then only those properties are used for the calculation._\r\n\r\n## [6.2.1] - 2020-03-05\r\n\r\n* fixes in release process\r\n\r\n## [6.1.0] - 2020-03-05\r\n\r\n* fixes in release process\r\n\r\n## [6.0.0] - 2020-03-05\r\n\r\n* Add support for LTS Node.js version 12 and 10\r\n* Support for create/update/delete requests on calculation views if \"parameter via keys\" definition is used.\r\nRequirements:\r\n    * input parameters in the calculation view of type ALPHANUM, BLOB, DECIMAL, NVARCHAR, VARBINARY, VARCHAR must have length restriction\r\n    * input parameters in the calculation view of type DECIMAL must have scale restriction\r\n    * all key semantics also apply to keys coming from input parameters\r\n* **IMPORTANT** By default, now a maximum body size of \"10mb\" per request is allowed. More payload leads to an \"413 Payload Too Large\" error. This value of 10mb can be changed with the odata settings in the *.xsodata file\r\n[see **XSOdata Settings**](/documentation/xsodataSettings.md)\r\n\r\n## [5.0.0] - 2019-12-17\r\n\r\n### Info\r\n\r\n* Removed lock when opening a db connection\r\n  The new native hana-client driver used by xsjs is thread save, so the lock for retrieving a new db connection is not required anymore.\r\n  **IMPORTANT** If a custom open function is used, then this function must be reentrant or implement an own lock inside.\r\n\r\n### Fixed\r\n\r\n* When using $count to determine the number of records of an entity set in junction with the limit feature, the\r\nreturned number was also capped by the limit, this was wrong. Now the correct full number of records is returned.\r\n* Fixed typeError if a stored procedure used as custom exit does not return a proper error structure.\r\n\r\n## [4.7.0] - 2019-10-28\r\n\r\n### Fixed\r\n\r\nFixed error causing duplicate properties and property references in the metadata document. Prerequisites:\r\n* The error occurs if an calculation view has been used as source for an entityset\r\n* This calculation view contains an input parameter which is used in more than one measures\r\n* Example: Input parameter \"Input_Currency\" (a calcview variable) is used in the currency conversion for the measures \"VALUE\" and \"TAX\"\r\n\r\n## [4.6.0] - 2019-10-11\r\n\r\n### Fixed\r\n\r\nFixed error \"Error while executing a DB query\" when using an navigation property to navigate from a calculation view to an related entity.\r\n\r\n## [4.5.4] - 2019-08-26\r\n\r\n### Info\r\n\r\n- Update module dependencies\r\n\r\n## [4.5.3] - 2019-08-26\r\n\r\n### Info\r\n\r\n- Update module dependencies\r\n\r\n## [4.5.1] - 2019-08-23\r\n\r\n### Info\r\n\r\n- Updated documentation\r\n\r\n## [4.5.0] - 2019-08-23\r\n\r\n### Info\r\n\r\n- Update module dependencies\r\n- Adopt to new async behaviour\r\n- Adopt to new calcview metadata\r\n\r\n### Fixed\r\n\r\n- Fix bug in error case (duplicate call of callback)\r\n\r\n\r\n## [4.4.0] - 2019-01-25\r\n\r\n- Update module dependencies\r\n- The code field inside an OData error response (error.code) is now correctly send as string (not as number)\r\n- For calcviews the columns type length is determined from the COLUMN_SQL_TYPE if LENGTH is not set.\r\n- Fixed error while parsing multipart/mixed batch requests\r\n\r\n## [4.3.0] - 2018-10-19\r\n\r\n### Info\r\n\r\n- Minimal required @sap/hana-client version is 2.3.123\r\n- Improved test exits\r\n- **IMPORTANT** Conversion: When converting TIMESTAMP db type to OData V2 json payload, only the first 3 digits\r\n of the fractional part are used (OData V2 type DateTime does only supports millisecond precision). With the old\r\n hdb db driver the xsodata library got already only millisecond precision, with the new hana-client db-driver the xsodata\r\n library itself has to remove any digits and use only the millisecond part. The check if the digits for micro- or nanoseconds\r\n are zero and throwing an error if not (added with release 4.0.0) has been removed due to backward  compatibility reasons.\r\n\r\n## [4.2.0] - 2018-09-18\r\n\r\n### Changed\r\n\r\n- Upgraded lodash module dependency to 4.17.11\r\n\r\n## [4.1.0] - 2018-08-31\r\n\r\n### Added\r\n\r\n- Write memory consumption to log if requested\r\n\r\n### Fixed\r\n\r\n- Improve cleanup of temporary tables\r\n\r\n## [4.0.0] - 2018-08-15\r\n\r\n### Added\r\n\r\n- **IMPORTANT**|**INCOMPATIBLE** Added limit feature to restrict the amount of records loaded from the database.\r\n  There are defaults for the limit values [see **XSOdata Settings**](/documentation/xsodataSettings.md) which need to\r\n  be validated before using this version.\r\n- Support for hana-client database connector\r\n- **IMPORTANT**|**INCOMPATIBLE** Switched default database connector from hdb to hana-client\r\n  [see **Database connector**](/documentation/db.md)\r\n\r\n### Fixed\r\n\r\n- Use always the original DB property ordering when copying data into temporary tables for use\r\nin exits in the insert and update steps.\r\n\r\n\r\n## [3.7.0] - 2018-05-22\r\n\r\n### Fixed\r\n\r\n- Update dependencies\r\n\r\n## [3.6.7] - 2018-05-18\r\n\r\n### Fixed\r\n\r\n- Extended DB-Version check to avoid unnecessary cleanup of temporary tables (added new db versions)\r\n- Allow throwing an Error object in custom exits\r\n\r\n## New features with xsodata 3.6.0:\r\n\r\n### Fixed\r\n\r\n- Extended DB-Version check to avoid unnecessary cleanup of temporary tables\r\n- Commands for cleanup of temporary tables don't stop the request processing if tables are truncated/dropped already\r\n- Fixed error which leads to an unclosed db connection. This error occurred only if\r\n   - the xsdata library is used without the xsjs layer (which is not recommended) and\r\n   - the db connection information was provided via host, port, user,... to the OdataHandler\r\n   - as request options for the processRequest method a string containing the uriPrefix is used\r\n   (not an RequestOptions object).\r\n   - $batch processing is used\r\n- Fixed wrong decoding of OData strings of type Edm.String in $filter and $orderby expressions if the string contained\r\nexactly one single quote (e.g. '''' have been decoded wrongly to Json \"\" not to the correct \"'\")\r\n- Parsing milliseconds for Edm.DateTime works now as expected for hana column type TIMESTAMP.\r\n  Sample: HANA value \"9999-12-31T23:59:59.99\" is parsed now to have 990 ms instead of just 99ms\r\n\r\n### Changed\r\n\r\n- Upgraded @sap/xssec module dependencies\r\n\r\n## New features with xsodata 3.5.0:\r\n\r\n### Fixed\r\n\r\n- Proper pattern escaping for substringof, startswith and endswith operations on $filter or $orderby.\r\n- Fixed SQL error when retrieving the row count of calculation views with transparent filters.\r\n\r\n### Added:\r\n\r\n- Added new SQL error class to pass all errors related to DB query execution\r\n\r\n## New features with xsodata 3.4.0:\r\n\r\n### Added:\r\n\r\n- Support for points \".\" in HANA table column names and consistently in OData property names.\r\n  This feature has been added for backward compatibility reasons only. The OData V2 specification does not allow the usage\r\n  of points for property names as points are used to separate namespace parts and names.\r\n  So please consider not using it.\r\n\r\n### Changed\r\n\r\n- Upgraded @sap/xssec and @sap/xsenv module dependencies\r\n\r\n## New features with xsodata 3.3.0:\r\n\r\n### Fixed:\r\n\r\n- Removed failing sql calls to cleanup temporary tables, which become unnecessary with db patch 2.00.030.00.1515544046.\r\n- Numbers of type Edm.Int64 must be represented as string (e.g. \"123\") in json format even if they are within in the range of JS Number.\r\n\r\n## New features with xsodata 3.0.0:\r\n\r\n### Added\r\n\r\n- Support Node.js 4.x.x, 6.x.x and newly 8.x.x\r\n\r\n### Changed\r\n\r\n- Updated dependencies\r\n- Improved content id handling in batch requests\r\n\r\n### Fixed\r\n\r\n- Fixed conversion of binary data if generated key are used\r\n\r\n### Removed\r\n\r\n- Removed support for Node.js 0.12.9\r\n\r\n## New features with xsodata 2.4.0:\r\n\r\n### Added\r\n\r\n- Add \"hints\" setting to xsodata file definition to provide custom hints for SQL-select\r\n\r\n## New features with xsodata 2.3.0:\r\n\r\n### Added\r\n\r\n- Before/After commit exits also called for non batch modifications\r\n- Improved cleanup of temporary tables\r\n- Improved error message when using key property with point '.'\r\n- Rollback performed also for non batch modifications\r\n\r\n### Changed\r\n\r\n- Updated dependencies\r\n\r\n### Fixed\r\n\r\n- Fixed __metadata Uri in payload: name/value key pairs are now correct\r\n\r\n## Modifications with SAP HANA XSA 2.0 SPS 2:\r\n\r\n### Added\r\n\r\n- Request specific logging\r\n- I18N support for language specific metadata, e.g. labels in annotations\r\n- Update of Open Source libraries\r\n\r\n### Fixed\r\n\r\n- Several smaller bug fixes\r\n\r\n## Modifications with SAP HANA XSA 2.0 SPS 1:\r\n\r\n### Added\r\n\r\n- Switch to scoped package name @sap/xsodata\r\n- Support for node.js version 4.X.X & 6.9.X\r\n\r\n## New Features with SAP HANA XSA 2.0 SPS 0:\r\n\r\n### Added\r\n\r\n- [Annotations in metadata](/documentation/annotations.md)\r\n- [Scope based authorization checks](/documentation/authorization.md)\r\n- Support for node.js version 4.4.X & 6.2.X\r\n\r\n## New Features with SAP HANA XSA SPS 12:\r\n\r\n### Added\r\n\r\n- Support for $links requests\r\n- Custom exits for $links requests (modification requests only)\r\n- Support for node.js version 0.12.X & 4.4.X\r\n"},{"name":"xss-secure","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/xss-secure\r\n==============\r\n\r\nXSSSecurity Implementation taken from SAP UI5\r\n\r\n## Usage\r\n`var xssSecure = require('@sap/xss-secure');`\r\n\r\n## API Reference\r\n\r\n#### `encodeCSS(string)`\r\nEncode the string for inclusion into CSS string literals or identifiers.\r\n* `string` - The string to be escaped\r\n\r\nReturns the escaped `string`.\r\n```js\r\nxssSecure.encodeCSS('1<4'); // returns '1\\\\3c 4'\r\nxssSecure.encodeCSS('a-b'); // returns 'a\\2d b'\r\n```\r\n\r\n#### `encodeHTML(string)`\r\nEncode the string for inclusion into HTML content/attribute.\r\n* `string` - The string to be escaped\r\n\r\nReturns the escaped `string`.\r\n```js\r\nxssSecure.encodeHTML('1<4');  // returns '1&lt;4'\r\nxssSecure.encodeHTML('\\x00'); // returns '&#xfffd;'\r\n```\r\n\r\n#### `encodeJS(string)`\r\nEncode the string for inclusion into a JS string literal.\r\n* `string` - The string to be escaped\r\n\r\nReturns the escaped `string`.\r\n```js\r\nxssSecure.encodeJS('1<4');  // returns '1\\\\x3c4'\r\nxssSecure.encodeJS('\\x00'); // returns '\\\\x00'\r\n```\r\n\r\n#### `encodeURL(string)`\r\nEncode the string for inclusion into an URL parameter.\r\n* `string` - The string to be escaped\r\n\r\nReturns the escaped `string`.\r\n```js\r\nxssSecure.encodeURL('http://testing.com/?a=1&b=\"ok\"');\r\n// returns 'http%3a%2f%2ftesting.com%2f%3fa%3d1%26b%3d%22ok%22'\r\n```\r\n\r\n#### `encodeXML(string)`\r\nEncode the string for inclusion into XML content/attribute.\r\n* `string` - The string to be escaped\r\n\r\nReturns the escaped `string`.\r\nThis function is alias to `encodeHTML`.\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 4.1.0 - 2022-01-12\r\n\r\n### Added\r\n- Support for Node.js 16.x\r\n\r\n## 4.0.0 - 2020-11-09\r\n\r\n### Added\r\n- Node.js 14.x support.\r\n\r\n### Removed\r\n- Node.js 6.x support\r\n\r\n## 3.1.0 - 2019-12-06\r\n\r\n### Added\r\n- Node.js 12.x support.\r\n\r\n## 3.0.0 - 2019-04-25\r\n\r\n### Removed\r\n- Node.js v0.12 and v4 support\r\n\r\n## 2.2.0 - 2018-12-18\r\n\r\n### Added\r\n- Node.js version 10 support.\r\n- Release with npm-shrinkwrap.json\r\n\r\n## 2.1.0 - 2018-01-08\r\n\r\n### Added\r\n- Node.js version 8 support.\r\n- CHANGELOG.md\r\n\r\n## 2.0.11 - 2017-01-24\r\n\r\n### Changed\r\n- Rename package to use *sap* scope.\r\n\r\n## 2.0.10 - 2017-01-23\r\n\r\n### Changed\r\n- Improvements in documentation.\r\n"},{"name":"xssec","type":"module","gitHubOwner":"gregorwolf","gitHubRepo":"SAP-NPM-API-collection","forks":8,"stars":17,"addedToBoUI5":"","createdAt":"2018-09-07T15:27:07Z","updatedAt":"2022-06-11T15:23:30Z","readme":"@sap/xssec: XS Advanced Container Security API for node.js\r\n==========================================================\r\n\r\n## XS Advanced Authentication Primer\r\n\r\nAuthentication for node applications in XS Advanced relies on a special usage of the OAuth 2.0 protocol, which is based on central authentication at the UAA server that then vouches for the authenticated user's identity via a so-called OAuth Access Token. The current implementation uses as access token a JSON web token (JWT), which is a signed text-based token following the JSON syntax.\r\n\r\nNormally, your node application will consist of several parts, that appear as separate applications in your manifest file, e.g. one application part that is responsible for the HANA database content, one application part for your application logic written e.g. in node.js (this is the one that can make use of this XS Advanced Container Security API for node.js), and finally one application part that is responsible for the UI layer (this is the one that may make use of the application router functionality). The latter two applications (the application logic in node.js and the application router) should be bound to one and the same UAA service instance. This has the effect, that these two parts can use the same OAuth client credentials.\r\n\r\nWhen your business users access your application UI with their browser, the application router redirects the browser to the UAA where your business users need to authenticate. After successful authentication, the UAA sends - again via the business user's browser - an OAuth authorization code back to the application router. Now the application router sends this authorization code directly (not via the browser) to the UAA to exchange it into an OAuth access token. If the access token is obtained successfully, the business user has logged on to the UI part of your application already. In order to enable your UI to pass this authentication on to the node.js application part, you need to ensure that the destination to your node.js application part is configured such that the access token is actually sent to the node.js part (\"forwardAuthToken\": true).\r\n\r\nIn order to authenticate this request, which arrives at the node.js backend, sap-xssec offers two mechanisms: Firstly, you can use the XS Advanced Container Security API directly to validate the access token. Secondly, you can make use of the passport strategy that is contained in module sap-xssec as another convenient way how to handle the access token. In the following, both options are described followed by the sap-xssec API description.\r\n\r\nsap-xssec offers an offline validation of the access token, which requires no additional call to the UAA. The trust for this offline validation is created by binding the XS UAA service instance to your application. Inside the credentials section in the environment variable VCAP_SERVICES, the key for validation of tokens is included. By default, the offline validation check will only accept tokens intended for the same OAuth2 client in the same UAA identity zone. This makes sense and will cover the vast majority of use cases. \r\n\r\nIf you want to enable another (foreign) application to use some of your application's scopes, you can add a ```granted-apps``` marker to your scope in the ```xs-security.json``` file (as in the following example). The value of the marker is a list of applications that is allowed to request a token with the denoted scope.\r\n\r\n```JSON\r\n{\r\n  \"xsappname\"     : \"sample-leave-request-app\",\r\n  \"description\"   : \"This sample application demos leave requests\",\r\n  \"scopes\"        : [ { \"name\"                : \"$XSAPPNAME.createLR\",\r\n                        \"description\"         : \"create leave requests\" },\r\n                      { \"name\"                : \"$XSAPPNAME.approveLR\",\r\n                        \"description\"         : \"approve leave requests\",\r\n                        \"granted-apps\"        : [\"MobileApprovals\"] }\r\n                    ],\r\n  \"attributes\"    : [ { \"name\"                : \"costcenter\",\r\n                        \"description\"         : \"costcenter\",\r\n                        \"valueType\"           : \"string\"\r\n                    } ],\r\n  \"role-templates\": [ { \"name\"                : \"employee\",\r\n                        \"description\"         : \"Role for creating leave requests\",\r\n                        \"scope-references\"    : [ \"$XSAPPNAME.createLR\",\"JobScheduler.scheduleJobs\" ],\r\n                        \"attribute-references\": [ \"costcenter\"] },\r\n                      { \"name\"                : \"manager\",\r\n                        \"description\"         : \"Role for creating and approving leave requests\",\r\n                        \"scope-references\"    : [ \"$XSAPPNAME.createLR\",\"$XSAPPNAME.approveLR\",\"JobScheduler.scheduleJobs\" ],\r\n                        \"attribute-references\": [ \"costcenter\" ] }\r\n                    ]\r\n}\r\n```\r\n\r\n## Usage of the XS Advanced Container Security API in your node.js Application\r\n\r\nIn order to use the capabilities of the XS Advanced container security API, add the module \"sap-xssec\" to the dependencies section of your application's package.json.\r\n\r\nTo enable tracing, you can set the environment variable DEBUG as follows: `DEBUG=xssec:*`.\r\n\r\n### Direct Usage with existing Access Token\r\n\r\nFor the usage of the XS Advanced Container Security API it is necessary to pass a JWT token. If you have such a token, you may use the API as follows. The examples below rely on users and credentials that you should substitute with the ones in your context. The code below is based on version v0.0.9 (if you use another version, the coding might differ).\r\n\r\nThe typical use case for calling this API lies from within a container when an HTTP request is received. In an authorization header (with keyword `bearer`) an access token is contained already. You can remove the prefix `bearer` and pass the remaining string (just as in the following example as `access_token`) to the API.\r\n\r\n```js\r\nxssec.createSecurityContext(access_token, xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa, function(error, securityContext, tokenInfo) {\r\n    if (error) {\r\n        console.log('Security Context creation failed');\r\n        return;\r\n    }\r\n    console.log('Security Context created successfully');\r\n    console.log(tokenInfo.getPublicClaims());\r\n});\r\n```\r\n\r\nNote that the example above uses module `xsenv` to retrieve the configuration of the default services (which are read from environment variable `VCAP_SERVICES` or if not set, from the default configuration file). However, it passes only the required `uaa` configuration to the method `createSecurityContext`. As default the UAA configuration is searched with tag `xsuaa` by `xsenv`. For details we refer to module @sap/xsenv. The `xsenv` documentation also helps if you want to provide the credentials from e.g. a user provided service.\r\n\r\nThe creation function `xssec.createSecurityContext` is to be used for an end-user token (e.g. for grant_type `password` or grant_type `authorization_code`) where user information is expected to be available within the token and thus within the security context.\r\n\r\n`createSecurityContext` also accepts a token of grant_type `client_credentials`. This leads to the creation of a limited SecurityContext where certain functions are not available. For more details please consult the API description below or your documentation.\r\n\r\nWith version 3.1.0 there is a support for multiple configuration objects for one SecurityContext. For more details have a look [here](doc/MultiConfiguration.md).\r\n\r\n### Support for X-Correlation-ID header\r\n\r\nThe xssec library internally calls REST APIs of the XSUAA.\r\nNow it's possible to set a `correlationId` during context creation and for token exchange calls.\r\nFor this you have to restructe the configuration object.\r\n\r\n```js\r\nconst config = {\r\n  credentials: xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa,\r\n  correlationId: \"1111-1111-11111111\"\r\n};\r\n\r\n//now you can call the createSecurityContext method as always\r\nxssec.createSecurityContext(access_token, config, function(error, securityContext, tokenInfo) {\r\n    if (error) {\r\n        console.log('Security Context creation failed');\r\n        return;\r\n    }\r\n    console.log('Security Context created successfully');\r\n    console.log(tokenInfo.getPublicClaims());\r\n});\r\n```\r\n\r\n### Disable the cache for the current call (ONLY FOR TESTING!)\r\nThe xssec library internally calls REST APIs to fetch the public verification keys from XSUAA/IAS.\r\nFor performance reasons there is a cache, so not all calls have to fetch the key again.\r\n\r\nNow it's possible to turn off the cache using the  `disableCache` option during context creation.\r\nFor this you have to restructe the configuration object.\r\n\r\n```js\r\nconst config = {\r\n  credentials: xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa,\r\n  correlationId: \"1111-1111-11111111\"\r\n  disableCache: true\r\n};\r\n\r\n//now you can call the createSecurityContext method as always\r\n//internally no Cache will be used!\r\nxssec.createSecurityContext(access_token, config, function(error, securityContext, tokenInfo) {\r\n    if (error) {\r\n        console.log('Security Context creation failed');\r\n        return;\r\n    }\r\n    console.log('Security Context created successfully');\r\n    console.log(tokenInfo.getPublicClaims());\r\n});\r\n```\r\n\r\nThis also works for the Tokenexchange methods!\r\n\r\n### Usage with Passport Strategy\r\n\r\nIf you use [express](https://www.npmjs.com/package/express) and [passport](https://www.npmjs.com/package/passport), you can easily plug a ready-made authentication strategy.\r\n\r\nSince version 3.1.1 the JWTStratgy also supports the scope validation specified in [passport](http://www.passportjs.org/docs/oauth/#scope).\r\n\r\n```js\r\nvar express = require('express');\r\nvar passport = require('passport');\r\nvar JWTStrategy = require('@sap/xssec').JWTStrategy;\r\nvar xsenv = require('@sap/xsenv');\r\n\r\n...\r\n\r\nvar app = express();\r\n\r\n...\r\n\r\npassport.use(new JWTStrategy(xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa));\r\n\r\napp.use(passport.initialize());\r\napp.use(passport.authenticate('JWT', { session: false }));\r\n```\r\n\r\nIf JWT token is present in the request and it is successfully verified, following objects are created:\r\n* request.user - according to [User Profile](http://passportjs.org/docs/profile) convention\r\n  * id\r\n  * name\r\n    * givenName\r\n    * familyName\r\n  * emails `[ { value: <email> } ]`\r\n* request.authInfo - the [Security Context](#api-description)\r\n* request.tokenInfo - the [TokenInfo](doc/TokenInfo.md) object\r\n\r\nIf the `client_credentials` JWT token is present in the request and it is successfully verified, following objects are created:\r\n* request.user - empty object\r\n* request.authInfo - the [Security Context](#api-description)\r\n* request.tokenInfo - the [TokenInfo](doc/TokenInfo.md) object\r\n\r\n\r\n#### Session\r\n\r\nIt is recommended to _disable the session_ as in the example above.\r\nIn XSA each request comes with a JWT token so it is authenticated explicitly and identifies the user.\r\nIf you still need the session, you can enable it but then you should also implement [user serialization/deserialization](http://passportjs.org/guide/configure/) and some sort of [session persistency](https://github.com/expressjs/session).\r\n\r\n\r\n### Configure the cache of Verificationkeys\r\nFor token verification the library needs a so called `public key`. This key can be requested from the XSUAA server.\r\nThe library caches these keys to reduce the load to the XSUAA. (And for better performance!)\r\nThere are two values that are used to control the cache. The number of cache entries and an expiration time of each item. The latter is important to easily support key rotation scenarios and should not be too high.\r\n:exclamation: **Normally you don't need to overwrite the default values!**\r\n\r\nBut in rare situations there is a need to change them.\r\n\r\n**Conditions:**\r\nThe cacheSize value has to be >=1000\r\nThe expirationTime is measured in minutes and has to be a number >= 10 \r\n\r\n**Currently the default values are:**\r\n```json\r\n{\r\n  \"cacheSize\": 1000,\r\n  \"expirationTime\": 10\r\n}\r\n```\r\n\r\n**Here are some codesnippets how to do this:**\r\n\r\n```js\r\n//just add the keyCache object into the config object and pass it to the constructor functions\r\n\r\nvar config = xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa;\r\nconfig.keyCache = {\r\n  cacheSize: 5000,\r\n  expirationTime: 10\r\n};\r\n\r\n//if you only want to overwrite one value you can also:\r\nvar config = xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa;\r\nconfig.keyCache = {\r\n  cacheSize: 10000\r\n};\r\n\r\n//then pass the config object to createSecurityConfig\r\nxssec.createSecurityContext(access_token, config, function(error, securityContext, tokenInfo) {\r\n   ...\r\n});\r\n\r\n//if you use passport:\r\nvar config = xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa;\r\nconfig.keyCache = {\r\n  cacheSize: 10000\r\n};\r\npassport.use(new JWTStrategy(config));\r\n...\r\n```\r\n\r\n### Test Usage without having an Access Token\r\n\r\nFor test purposes, you may retrieve the token for a certain user (whose credentials you know) from the UAA as in the following code-snippet.\r\n\r\n```js\r\nvar http = require(\"http\");\r\nvar xssec = require(\"@sap/xssec\");\r\nvar xsenv = require('@sap/xsenv');\r\nvar request = require('request');\r\n\r\nvar uaaService = xsenv.getServices( { uaa: 'uaa' } ).uaa;\r\nvar testService = xsenv.getServices( { test : { label : 'test' } } ).test;\r\nprocess.env.XSAPPNAME = testService.test.xsappname;\r\n\r\nvar options = {\r\n    url : uaaService.url + '/oauth/token?client_id=' + uaaService.clientid\r\n            + '&grant_type=password&username=' + testService.userid + '&password='\r\n            + testService.usersecret\r\n};\r\nrequest.get(\r\n    options,\r\n    function(error, response, body) {\r\n        if (error || response.statusCode !== 200) {\r\n            console.log('Token request failed');\r\n            return;\r\n        }\r\n\r\n        var json = null;\r\n        try {\r\n            json = JSON.parse(body);\r\n        } catch (e) {\r\n        \treturn callback(e);\r\n        }\r\n\r\n        xssec.createSecurityContext(json.access_token, uaaService, function(error, securityContext, tokenInfo) {\r\n            if (error) {\r\n                console.log('Security Context creation failed');\r\n                return;\r\n            }\r\n            console.log('Security Context created successfully');\r\n            console.log(tokenInfo.getPublicClaims());\r\n        });\r\n    }\r\n).auth(uaaService.clientid, uaaService.clientsecret, false);\r\n```\r\nNote that this example assumes additional test configuration in the file `default-services.json`.\r\n\r\n```json\r\n{\r\n  \"uaa\": {\r\n    \"url\"             : \"<UAA URL>\",\r\n    \"clientid\"        : \"<your application's OAuth client id>\",\r\n    \"clientsecret\"    : \"<your application's OAuth client secret>\",\r\n    \"xsappname\"       : \"<your application's name>\",\r\n    \"identityzone\"    : \"<desired UAA identity zone>\",\r\n    \"tags\"            : [\"xsuaa\"],\r\n    \"verificationkey\" : \"<verification key for offline validation>\"\r\n  },\r\n  \"test\": {\r\n    \"userid\"          : \"marissa\",\r\n    \"usersecret\"      : \"koala\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n### Support for X.509 authentication for token exchange\r\nXSUAA offers the possibility to use X.509 authentication.\r\nSince version 3.2.2 the node-xssec library supports to use this.\r\n\r\nAs a developer you normally do not need to do something differently. You create a SecurityContext with the configuration object you get from the environment.\r\nIf the XSUAA is configured to use X.509 the config object does not contain a `clientsecret`. Instead of this, there are a `certificate` and a `key` attributes.\r\nThe library will use these attributes during token exchanges to fetch the tokens from xsuaa using mtls.\r\n\r\n#### X.509 with XSUAA managed certificates\r\nIf your XSUAA instance is configured to manage certificates and keys on its own, you can take the configuration object from VCAP services and pass it to the `createSecurityContext` method.\r\nThe needed `certificate` and `key` attributes are already filled.\r\n\r\nThere is no difference to client-credential based token exchange.\r\n\r\n#### X.509 with external certificates\r\nIf you configured your XSUAA instance to use an external managed certificate/key you need to provide the `key` attribute to the configuration object.\r\n\r\nFor this you take the JSON from VCAP-Services and add the PEM encoded key as a string to the configuration.\r\n```js\r\n//read xsuaa config from VCAP\r\nconst config = xsenv.getServices({xsuaa:{tag:'xsuaa'}}).xsuaa;\r\n\r\nconst myExternalManagedKey = \"-----BEGIN RSA PRIVATE KEY-----...-----END RSA PRIVATE KEY-----\\n\";\r\nconfig.key = myExternalManagedKey;\r\n\r\n//if using passport\r\npassport.use(new JWTStrategy(config));\r\n\r\n//or create a security context directly\r\nxssec.createSecurityContext(access_token, config, function(error, securityContext, tokenInfo) {\r\n    //now you can run a tokenExchange with the provided key    \r\n    xssec.requestToken(config, constants.TYPE_USER_TOKEN, null, function(err, data) {\r\n\r\n    })    \r\n});\r\n```\r\n\r\n### Usage in Docker\r\n\r\nIn versions <= 3.0.0 there was **no** support for alpine base images.\r\nBut since verion >= 3.0.0 the xssec library has no dependency to a native library anymore. So it is now **fully compatible** with alpine images.\r\n\r\n## API Description\r\n\r\n### createSecurityContext\r\n\r\nThis function creates the Security Context by validating the received access token against credentials put into the application's environment via the UAA service binding.\r\n\r\nUsually, the received token must be intended for the current application. More clearly, the OAuth client id in the access token needs to be equal to the OAuth client id of the application (from the application's environment).\r\n\r\nParameters:\r\n\r\n* `access token` ... the access token as received from UAA in the \"authorization Bearer\" HTTP header\r\n* `config` ... a structure with mandatory elements url, clientid and clientsecret or cache configuration. Since version 3.1.0 it may also be an array of these structures (have a look [here](doc/MultiConfiguration.md))\r\n* `callback(error, securityContext, tokenInfo)`\r\n\r\n### getLogonName\r\n\r\nnot available for tokens of grant_type `client_credentials`, returns the logon name\r\n\r\n### getGivenName\r\n\r\nnot available for tokens of grant_type `client_credentials`, returns the given name\r\n\r\n### getFamilyName\r\n\r\nnot available for tokens of grant_type `client_credentials`, returns the family name\r\n\r\n### getEmail\r\n\r\nnot available for tokens of grant_type `client_credentials`, returns the email\r\n\r\n### getUserName\r\n\r\nreturns unique principal name of a user `user/<origin>/<logon name>` or client id that the access token has been issued for `client/<client id>`\r\n\r\n### getUniquePrincipalName\r\n\r\nnot available for tokens of grant_type `client_credentials`, returns unique principal name of a user. `user/<origin>/<logon name>`\r\n\r\n### getOrigin\r\n\r\n* returns the user origin. The origin is an alias that refers to a user store in which the user is persisted. For example, users that are authenticated by the UAA itself with a username/password combination have their origin set to the value uaa.\r\n\r\n### checkLocalScope\r\n\r\nchecks a scope that is published by the current application in the xs-security.json file.\r\n\r\nParameters:\r\n\r\n* `scope` ... the scope whose existence is checked against the available scopes of the current user. Here, no prefix is required.\r\n* returns `true` if the scope is contained in the user's scopes, `false` otherwise\r\n\r\n### checkFollowingInstanceScope\r\n\r\nchecks a instance specific scope that is published by the current application in the xs-security.json file. Use this to check a scope from a service instance.\r\n\r\nParameters:\r\n\r\n* `scope` ... the scope whose existence is checked against the available scopes of the current user. Here, no prefix is required.\r\n* returns `true` if the scope is contained in the user's scopes, `false` otherwise\r\n\r\n### checkScope\r\n\r\nchecks a scope that is published by an application.\r\n\r\nParameters:\r\n\r\n* `scope` ... the scope whose existence is checked against the available scopes of the current user.  Here, the prefix is required, thus the scope string is \"globally unique\".\r\n* returns `true` if the scope is contained in the user's scopes, `false` otherwise\r\n\r\n### getAppToken\r\n\r\n* returns the token of the application that can be used e.g. for token forwarding to another app.\r\n\r\n### getHdbToken\r\n\r\n* returns a token that can be used for contacting the HANA database. If the token, that the security context has been instantiated with, is a foreign token (meaning that the OAuth client contained in the token and the OAuth client of the current application do not match), `null` is returned instead of a token.\r\n\r\n### getTokenInfo\r\n* returns the [TokenInfo](doc/TokenInfo.md) object, containing all information received from token.\r\n\r\n### requestToken\r\n\r\nRequests a token based on the given type. The type can be `constants.TYPE_USER_TOKEN` or `constants.TYPE_CLIENT_CREDENTIALS_TOKEN`.\r\n\r\n* `serviceCredentials` ... the credentials of the service as JSON object. The attributes `clientid`, `clientsecret` and `url` (UAA) are mandatory. Note that the subdomain of the `url` will be adapted to the subdomain of the application token if necessary.\r\n* `type` ... allowed values are `constants.TYPE_USER_TOKEN` and `constants.TYPE_CLIENT_CREDENTIALS_TOKEN`\r\n* `additionalAttributes` ... the attributes that should be included into the JWT token as JSON object (key-value list), e.g. `{\"attr1\" : \"value1\", \"attr2\" : \"value2\"}` \r\n* `cb(error, token)` ... callback function\r\n\r\nalso have a look on how to initiate the [token flows](doc/TokenFlows.md) directly\r\n### hasAttributes\r\n\r\nnot available for tokens of grant_type `client_credentials`.\r\n\r\n* returns `true` if the token contains any xs user attributes, `false` otherwise.\r\n\r\n### getAttribute\r\n\r\nnot available for tokens of grant_type `client_credentials`.\r\n\r\nParameters:\r\n\r\n* `name` ... The name of the attribute that is requested.\r\n* returns the attribute exactly as it is contained in the access token. If no attribute with the given name is contained in the access token, `null` is returned. If the token, that the security context has been instantiated with, is a foreign token (meaning that the OAuth client contained in the token and the OAuth client of the current application do not match), `null` is returned regardless of whether the requested attribute is contained in the token or not.\r\n\r\n### getAdditionalAuthAttribute\r\n\r\nParameters:\r\n\r\n* `name` ... The name of the additional authentication attribute that is requested.\r\n* returns the additional authentication attribute exactly as it is contained in the access token. If no attribute with the given name is contained in the access token, `null` is returned. Note that additional authentication attributes are also returned in foreign mode (in contrast to getAttribute).\r\n\r\n### isInForeignMode\r\n\r\n* returns `true` if the token, that the security context has been instantiated with, is a foreign token that was not originally issued for the current application, `false` otherwise.\r\n\r\n### getSubdomain\r\n\r\n* returns the subdomain that the access token has been issued for.\r\n\r\n### getClientId\r\n\r\n* returns the client id that the access token has been issued for.\r\n\r\n### getSubaccountId\r\n\r\n* returns the subaccount id that the access token has been issued for.\r\n\r\n### getZoneId\r\n\r\n* returns the identity zone that the access token has been issued for.\r\n\r\n### getExpirationDate\r\n\r\n* returns the expiration date of the access token as javascript Date object.\r\n\r\n### getCloneServiceInstanceId\r\n\r\n* returns the service instance id of the clone if the XSUAA broker plan is used.\r\n\r\n### getGrantType\r\n\r\n* returns the grant type of the JWT token, e.g. `authorization_code`, `password`, `client_credentials` or `urn:ietf:params:oauth:grant-type:saml2-bearer`.\r\n\r\n## Latest published Version\r\nUse this command to check for the latest version that is published to the NPM repository:\r\n\r\n```\r\nnpm view --registry https://npm.sap.com @sap/xssec versions\r\n```\r\n","changelog":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\n## 3.2.13 - 2022-02-15\r\n- hofix in keycache implementation if you turn off to use the cache\r\n- upgrade to newer axios library\r\n\r\n## 3.2.12 - 2022-01-19\r\n- add support for UAA system plan \r\n- upgrade to newer axios library\r\n\r\n## 3.2.11 - 2021-11-30\r\n- add support for timeout setting for all requests-calls \r\n- support for password token flow in requests module\r\n- support for setting scopes for all requests to XSUAA\r\n## 3.2.10 - 2021-11-02\r\n- fix correlationID header names to \"x-vcap-request-id\" or \"x-correlationid\"\r\n\r\n## 3.2.9 - 2021-10-22\r\n- custom domain support for IAS\r\n- support for \"x-correlation-id\" header to be set for createSecurityContext and tokenexchange-calls\r\n- support to turn off the internal cache for a createSecurityContext call\r\n\r\n## 3.2.8 - 2021-10-18\r\n- add additional getter for user properties on XSUAA context\r\n- remove deed and unneeded code for IAS context\r\n- fix token flows in requests if subdomain is provided using certificate\r\n\r\n## 3.2.7 - 2021-09-15\r\n- replace got with axios library because of a bug in got lib during https get\r\n\r\n## 3.2.5 - 2021-09-07\r\n- fix to be backward-compatible for tokenFlow-APIs\r\n\r\n## 3.2.4 - 2021-09-03\r\n- fix an issue with IAS multitenancy support\r\n- remove the deprecated request library with got library\r\n\r\n## 3.2.3 - 2021-08-23\r\n- add checkFollowingInstanceScope to SecurityContext to retrieve instance specific scope without need to build scope string on your own\r\n- fix a reference error in key verification\r\n- support for multitenance IAS applications using 'x-zone_uuid' Header in jwks call\r\n\r\n## 3.2.2 - 2021-06-16\r\n- Support for tokenexchanges with X.509 certificates managed by XSUAA\r\n- Support for tokenexchanges with manually managed X.509 certificates\r\n- support for configuration objects that does not provide a clientsecret (but a certificate)\r\n\r\n## 3.2.1 - 2021-06-01\r\n- Add some more error and tracing information\r\n\r\n## 3.2.0 - 2021-04-20\r\n- Support for IAS token validation. ([more details](doc/IAS.md))\r\n\r\n## 3.1.2 - 2021-03-01\r\n- Feature: Support for IAS to XSUAA token exchange ([more details](doc/IAStoXSUAA.md))\r\n- Feature: Support for ZoneID enabled token flows ([more details](doc/TokenFlows.md))\r\n\r\n\r\n## 3.1.1 - 2021-02-11\r\n- Bugfix: Tokenexchange with additional attributes may result in a wrong formatted url\r\n- Feature: The passport middleware allows to provide scopes to be validated at authentication time. Details [here](http://www.passportjs.org/docs/oauth/#scope)\r\n\r\n## 3.1.0 - 2021-02-10\r\n- Support for multiple configurations for one security context ([more details here](doc/MultiConfiguration.md))\r\n- Bugfix: support for additional attributes in token exchange\r\n- Bugfix: authorization now in payload for better XSUAA support\r\n- correct support for azp (clientid) in token payload\r\n- method to identify an XSUAA token\r\n\r\n## 3.0.10 - 2021-10-01\r\n- The requests to the XSUAA are now available using the requests module also if you do not have a securityContext\r\n\r\n## 3.0.9 - 2020-08-06\r\n- Set request library to version 2.88.2 because of security vulnerability\r\n\r\n## 3.0.8 - 2020-08-06\r\n- Increase timeout for jwt-bearer token flow to reduce of timeouts with very big tokens.\r\n\r\n## 3.0.7 - 2020-07-24\r\n- Move the token to the request body for jwt-bearer token flow, because of problems with very big tokens\r\n\r\n## 3.0.6 - 2020-07-01\r\n- Audience Validation validates to true when the derived client_id of broker-clone token matches the trusted client. This is relevant to support tokens of grant type user_token that contains no scopes.\r\n\r\n## 3.0.5 - 2020-06-26\r\n- Audience Validation accepts tokens of grant type user_token that does not provide aud claim. In that case the audience is derived from the audiences from the scopes.\r\n- Audience Validation is skipped when cid of token matches the trusted client.\r\n- Use getSubaccountId() method only to fetch the subaccount id, e.g. for calling the metering API for user-based pricing.\r\n- In case you are interested in the customers tenant GUID make use of getZoneId method instead!\r\n- A new [TokenInfo](/doc/TokenInfo.md) class is introduced for better logging capabilities.\r\n\r\n## 3.0.3 - 2020-05-25\r\n\r\n- Fix jwt-bearer flow to take the right token as uri parameter.\r\n\r\n## 3.0.2 - 2020-05-20\r\n\r\n- Fix get verification key from keycache.\r\n\r\n## 3.0.1 - 2020-05-19\r\n\r\n- HotFix missing debugTrace in verification key\r\n- Fix RetryStrategy\r\n\r\n## 3.0.0 - 2020-05-15\r\n\r\n- Replace grant type user_token in method requestToken (TYPE_USER_TOKEN) in favor of urn:ietf:params:oauth:grant-type:jwt-bearer\r\n- Remove obsolete method getToken (use getHdbToken or getAppToken))\r\n- Remove obsolete method requestTokenForClient (use requestToken)\r\n- Remove obsolete method getIdentityZone (use getZoneId() instead, or getSubaccountId() for metering purposes) \r\n- Support for audience validation in token\r\n- remove of SAP_JWT_TRUST_ACL environment variable support (functionality now comes with audience validation); see also [here](https://jam4.sapjam.com/blogs/show/oEdyQO183plBoQdrvcPw2w).\r\n- remove depencency to node-jwt (ALPINE support)\r\n- restructure internal code for better maintainability\r\n\r\n## 2.2.5 - 2020-02-28\r\n\r\n- Update to node-jwt version 1.6.6\r\n\r\n## 2.2.4 - 2019-08-14\r\n\r\n- Support for API methods getUserName and getUniquePrincipalName\r\n \r\n## 2.2.3 - 2019-08-07\r\n\r\n- Add retry for recieving keys\r\n\r\n## 2.2.2 - 2019-06-24\r\n\r\n- Use verification key from binding as backup if online key retrieval fails\r\n\r\n## 2.2.1 - 2019-06-17\r\n\r\n- Fix uaaDomain comparison in key cache\r\n\r\n## 2.2.0 - 2019-06-17\r\n\r\n- Align key cache implementation with other container security libraries\r\n\r\n## 2.1.17 - 2019-05-17\r\n\r\n- Introduce http timeout of two seconds\r\n- Update version of module debug, lru-cache and @sap/xsenv\r\n- Fix token verification for broker master instance subscriptions\r\n\r\n## 2.1.16 - 2019-01-28\r\n\r\n- Fix token parser: switch ASCII to Utf8 decode\r\n\r\n## 2.1.15 - 2018-08-13\r\n\r\n- Update version of module request\r\n\r\n## 2.1.14 - 2018-07-24\r\n\r\n- Evaluate SAP_JWT_TRUST_ACL if trustedclientidsuffix is present but not matching\r\n\r\n## 2.1.13 - 2018-07-18\r\n\r\n- Update version of module request\r\n\r\n## 2.1.12 - 2018-06-01\r\n\r\n- Support for API methods getSubaccountId and getOrigin\r\n- Mark API method getIdentityZone as deprecated\r\n\r\n## 2.1.11 - 2018-05-18\r\n\r\n- Update version of module request\r\n\r\n## 2.1.10 - 2018-04-20\r\n\r\n- Fixes for keycache\r\n\r\n## 2.1.9 - 2018-04-18\r\n\r\n- Update version of module @sap/node-jwt (1.4.8)\r\n- Fixes for keycache\r\n- Update version of module request\r\n\r\n## 2.1.8 - 2018-03-14\r\n\r\n- Support for API method getAppToken\r\n\r\n## 2.1.7 - 2018-03-05\r\n\r\n- Support for API method requestToken\r\n\r\n## 2.1.6 - 2018-02-19\r\n\r\n- Update version of module @sap/node-jwt\r\n\r\n## 2.1.5 - 2018-02-07\r\n\r\n- Update version of module request\r\n\r\n## 2.1.4 - 2017-12-04\r\n\r\n- Support new JWT structure (attribute location ext_cxt)\r\n- First implementation for keycache\r\n\r\n## 2.1.3 - 2017-11-29\r\n\r\n- Support for API method getClientId\r\n\r\n## 2.1.2 - 2017-10-23\r\n\r\n- Support for API method getSubdomain\r\n\r\n## 2.1.1 - 2017-10-09\r\n\r\n- Update version of modules @sap/node-jwt, @sap/xsenv and debug\r\n\r\n## 2.1.0 - 2017-07-06\r\n\r\n- Support of API method requestTokenForClient\r\n- Update version of module @sap/node-jwt\r\n\r\n## 2.0.0 - 2017-06-26\r\n\r\n- Removal of deprecated constructor method createSecurityContextCc\r\n- Removal of API method method getUserInfo\r\n\r\n## 1.3.0 - 2017-06-23\r\n\r\n- Revert removal of API method method getUserInfo\r\n\r\n## 1.2.0 - 2017-06-22\r\n\r\n- Support for API methods getLogonName, getGivenName, getFamilyName, getEmail\r\n- Removal of API method method getUserInfo\r\n- Fix identity zone validation (only relevant for tenants created with SAP Cloud Cockpit)\r\n\r\n## 1.1.1 - 2017-05-30\r\n- Update version of dependent modules\r\n\r\n## 1.1.0 - 2017-05-22\r\n- Mark API method createSecurityContextCC as deprecated\r\n\r\n## 1.0.4 - 2017-05-17\r\n\r\n- Support for validation of XSUAA broker plan tokens\r\n- Support for API methods getCloneServiceInstanceId and getAdditionalAuthAttribute\r\n- Support for validation of XSUAA application plan tokens in arbitrary identity zones\r\n\r\n## 1.0.3 - 2017-03-29\r\n\r\n- Update version of dependent modules\r\n\r\n## 1.0.2 - 2017-02-22\r\n\r\n- Support for validation of SAML Bearer tokens\r\n\r\n## 1.0.1 - 2017-02-02\r\n\r\n- Support for client credentials tokens in JWT strategy\r\n\r\n## 1.0.0 - 2017-01-25\r\n\r\n- Introduction of scopeing, module name changed to @sap/xssec\r\n"}],"tags":[]}