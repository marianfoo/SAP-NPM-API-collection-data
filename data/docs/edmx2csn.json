[{"name":"CHANGELOG.md","content":"# Change Log\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## Unreleased\r\n\r\n## [1.0.9] - 2020-03-17\r\n\r\n## [1.0.8] - 2019-08-16\r\n\r\n### Fixed\r\n- Fixed an issue with version tag in CSN.\r\n\r\n## [1.0.7] - 2019-08-05\r\n\r\n### Fixed\r\n- Fixed an issue to pick the Cardinality when Association and AssociatioSet Name are different.\r\n- Added version tag.\r\n\r\n## [1.0.6] - 2018-12-04\r\n### Fixed\r\n- Renamed the attribute `targetMax` to `max`.\r\n- Replaced the CSN syntax `onCond` used in associations with `on`.\r\n\r\n## [1.0.5] - 2018-10-03\r\n### Fixed\r\n- Edm.DateTimeOffset is now mapped to Date for any property having the attribute `sap:display-format=\"Date\"`.\r\n- Errors generated from this tool is now propagated back to the system process that invokes this tool.\r\n\r\n## [1.0.4] - 2018-09-24\r\n### Fixed\r\n- Edm.single is now mapped to DecimalFloat in the HANA database.\r\n- Fixed an issue when mapping navigation in the OData model to `onCond` in the CSN model.\r\n- New option `-p` has been added to ignore `@cds.persistence.skip` annotation specified on any entity in the model.\r\n\r\n## [1.0.3] - 2018-08-20\r\n### Fixed\r\nModified open source dependency to a specific version.\r\n\r\n## [1.0.2] - 2018-08-13\r\n### Fixed\r\nConverts inherited complex types and entities from the OData model to CSN equivalent.\r\n\r\n## [1.0.1] - 2018-05-30\r\n\r\n### Added\r\nThe annotation @cds.persistence.skip:true is added for all entities in the converted CSN file.\r\n\r\n## [1.0.0] - 2018-05-02\r\n \r\n### Added\r\n- Performs basic OData V2 metadata validation\r\n- Converts OData V2 entities/properties to CSN entities/elements\r\n- Converts OData V2 complex types to CSN structures\r\n- Converts OData V2 entity navigations to CSN associations\r\n"},{"name":"README.md","content":"# Getting started\r\n\r\n<!-- markdownlint-disable MD001 MD022 -->\r\n##### Table of Contents\r\n<!-- markdownlint-enable MD001 MD022 -->\r\n\r\n- [Overview](#overview)\r\n- [Installation](#installation)\r\n- [Usage](#usage)\r\n- [Constraints](#constraints)\r\n\r\n## Overview\r\nEDMX2CSN is a command line utility that will convert an OData V2 model (EDMX) to a CSN (JSON) file. The primary use case for this utility is when you're building an extension application that connects to a remote OData V2 data source such as S4HANA.  In such a case, converting the EDMX model from the OData V2 data source to CSN is the first step you take, along with defining the CDS data model, in order to define the CDS service model for your application.\r\n\r\n## Installation\r\n\r\n1. Install the EDMX2CSN utility from one of the following repositories:\r\n   Nexus **milestones** registry or npm registry:\r\n\r\n  ```\r\n  npm config set registry <local nexus milestone or https://registry.npmjs.org/>\r\n  ```\r\n\r\n  or **releases** registry:\r\n\r\n  ```\r\n  npm config set registry <local nexus release or https://registry.npmjs.org/>\r\n  ```\r\n  > ***Do not add direct dependency to edmx2csn github project!***\r\n\r\n  >npm does not support snapshots via nexus. The only possibility is to download manually a snapshot and install it.\r\n\r\n2. Install the EDMX2CSN utility using npm:\r\n\r\n  ```\r\n  npm install \"@sap/edmx2csn\"\r\n  ```\r\n\r\n3. As an alternative to step 2, maintain your package.json dependencies as follows:\r\n\r\n  package.json\r\n  ```\r\n    \"dependencies\": {\r\n      \"@sap/edmx2csn\": \"*\"\r\n    }\r\n  ```\r\n\r\n## Usage\r\n\r\nThe compiler with its options is invoked like any other npm/Unix command:\r\n\r\n    To generate CSN file from an EDMX File:\r\n            a) Windows: $homedir>./node_modules/.bin/edmx2csn.cmd -i ${input_folder}/metadata.xml -o ${output_folder} -f\r\n            b) Linux: $homedir>./node_modules/.bin/edmx2csn.sh -i ${input_folder}/metadata.xml -o ${output_folder} -f\r\n\r\n    To generate CSN file from an EDMX URL:\r\n            a) Windows: $homedir>./node_modules/.bin/edmx2csn.cmd -i ${service_url}/$metadata -o ${output_folder}\r\n            b) Linux:   $homedir>./node_modules/.bin/edmx2csn.sh -i ${service_url}/$metadata -o ${output_folder}\r\n\r\n## Constraints\r\n\r\n    1) Supports only OData V2 services.\r\n    2) Supports only publicly available OData service URLs (for example, http://services.odata.org/V2/OData/OData.svc/$metadata).\r\n    3) Multiple schemas are not supported (for example, http://services.odata.org/V2/Northwind/Northwind.svc/$metadata).\r\n    4) Function imports in EDMX are not supported."}]