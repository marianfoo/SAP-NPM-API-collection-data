[{"name":"CHANGELOG.md","content":"# Hana Client 2.10.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.10 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.10/en-US\r\n\r\nFor the latest updates please see SAP Note 3087732 - SAP HANA Client 2.10 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3087732\r\n\r\n# Hana Client 2.9.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.9 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.9/en-US\r\n\r\nFor the latest updates please see SAP Note 3063974 - SAP HANA Client 2.9 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3063974\r\n\r\n# Hana Client 2.8.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.8 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.8/en-US\r\n\r\nFor the latest updates please see SAP Note 3033179 - SAP HANA Client 2.8 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3033179\r\n\r\n# Hana Client 2.7.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.7 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.7/en-US\r\n\r\nFor the latest updates please see SAP Note 3000693 - SAP HANA Client 2.7 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/3000693\r\n\r\n# Hana Client 2.6.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.6 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.6/en-US\r\n\r\nFor the latest updates please see SAP Note 2973943 - SAP HANA Client 2.6 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/2973943\r\n\r\n# Hana Client 2.5.x Drivers\r\n\r\nPlease see the \"What’s new in the SAP HANA Client\" section in the official HANA client 2.5 documentation:\r\n\r\nhttps://help.sap.com/viewer/product/SAP_HANA_CLIENT/2.5/en-US\r\n\r\nFor the latest updates please see SAP Note 2937532 - SAP HANA Client 2.5 Release Notes\r\n\r\nhttps://launchpad.support.sap.com/#/notes/2937532\r\n\r\n# Hana Client 2.4.x Drivers\r\n\r\n## Version 2.4.202\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 247255: Some rows of a query could have been incorrectly missing if the server returned a fetch warning.\r\n - Issue Number 246397: SQLDBC/ODBC tracing output could have been incorrect in several cases.\r\n - Issue Number 242465: When fallback routing happened in executing hint routed FDA select, the application server could have received an un-initialized ITAB result and produced an ABAP dump.\r\n\r\n## Version 2.4.196\r\n\r\n### Changes:\r\n\r\n - Issue Number 246837: node.js process crashes while executing a statement created by Stream.createProcStatement() when connection is closed.\r\n - Issue Number 245618: Application crashes with 'Check failed: IsGlobalEmpty()'.\r\n - Issue Number 244631: Fix Memory leaks caused by warnings.\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 244599: Long-running plan execution cannot be canceled.\r\n\r\n## Version 2.4.194\r\n\r\n### Changes:\r\n\r\n - Issue Number 239769: Using HanaLobStream produced an incorrect streaming result of NULL value.\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 244509: The wrong error message was displayed when the cseKeyStorePassword property was missing\r\n - Issue Number 237977: When bulk fetching rows into buffers from a ResultSet, the driver may have returned success when an error occurred while fetching data.\r\n - Issue Number 236457: There were several SQLDBC tracing issues with flushing disabled and trace only on error\r\n - Issue Number 241887: VARCHARMODE session variable was not visible using the ClientInfo interface when connecting with ABAPVARCHARMODE=1\r\n\r\n## Version 2.4.191\r\n\r\n### Changes:\r\n\r\n - Issue Number 242230: Possible crash on queries with TEXT columns\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 243053: When specifying HOSTNAME environment variable and\r\n   using both JDBC and SQLDBC-based drivers to connect with SecureStore\r\n   entries, or Client Side Encryption operations, the JDBC operations could\r\n   have failed\r\n - Issue Number 240995: Reading BLOB longer than SQLDBC packet size limit\r\n   resulted in silent truncation\r\n - Issue Number 238492: There was no way for S/4 HANA to check if all internal\r\n   connections for routing were valid on a distributed system\r\n\r\n## Version 2.4.186\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Issue Number 243922: WebSockets would have only reported 'HTTP Exception' from HTTP errors\r\n - Issue Number 236729: HANA Client for Linux x86_64 was not backwards compatible with Red Hat Enterprise Linux 5\r\n\r\n## Version 2.4.182\r\n\r\n### Changes:\r\n\r\n - Bug 236802: SQLDBC 2.4.132 and later may infinitely loop on reading finished NCLOB into a more than large enough UCS2 destination buffer if the payload contains non-BMP characters\r\n\r\n## Version 2.4.177\r\n\r\n### Changes:\r\n\r\n - Bug: 233849 - [node] The ResultSet object could be prematurely freed by node.js GC\r\n\r\n## Version 2.4.171\r\n\r\n### Changes:\r\n\r\n - Bug: 233849 - [node] fix heap-use-after-free\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 233843 - [SQLDBC] SNI is not set correctly when sslValidateCertificate is false\r\n - Bug: 231977 - [SQLDBC] ALTER CLIENTSIDE ENCRYPTION COLUMN KEY <column key name> ADD KEYCOPY ENCRYPTED WITH KEYPAIR <keypair name> fails with error -10429: Encryption of Column Encryption Key failed: Failed to create temporary Key ID table\r\n - Bug: 231823 - [SQLDBC] Corrupted debug trace\r\n\r\n## Version 2.4.167\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 233843 - [SQLDBC] SNI is not set correctly when sslValidateCertificate is false\r\n - Bug: 228317 - [SQLDBC] Audit log APPLICATION_USER_NAME column is single character on slave node and it works fine on master node\r\n\r\n## Version 2.4.162\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 230135 - [SQLDBC] SQLDBC will now trace the initial connection reply packet\r\n - Bug: 229397 - [SQLDBC] Fixed incorrect reporting of rows-affected for LOB datatype\r\n - Bug: 228712 - [SQLDBC] DBSL could have given a Secure store error: Timeout waiting for the secure store access lock\r\n\r\n## Version 2.4.155\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 228735 - [SQLDBC] Unintialized scalar value in Connection\r\n - Bug: 226661 - [SQLDBC] Client not work well with deferred_lob_writing ON\r\n\r\n## Version 2.4.154\r\n\r\n### Changes:\r\n\r\n - Bug: 225625 - [node] \"stderr maxBuffer length exceeded\" error when deploying an mtar to CF\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 220794 - [SQLDBC] Enable frequent TCP keepalive probes\r\n\r\n## Version 2.4.153\r\n\r\n### Changes:\r\n\r\n - Bug: 221808 - [node] mdx get_axisinfo return garbage data\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 225784 - [SQLDBC] Crash when OOM during error reporting\r\n - Bug: 224703 - [SQLDBC] Send networkGroup in DBConnectInfo\r\n\r\n## Version 2.4.151\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 225299 - [SQLDBC] Show tracing category & level at start of restarted trace files\r\n - Bug: 224855 - [SQLDBC] Windows trace file archiving stop at first copy\r\n - Bug: 224764 - [SQLDBC] crash at: time::Transaction::xa_remote_rollback - Assertion failed: is_global_coordinator_\r\n - Bug: 223866 - [SQLDBC] Include original value in conversion failure situations\r\n - Bug: 223751 - [SQLDBC] Remove RANGE_RESTRICTION test against CE server\r\n - Bug: 192870 - [SQLDBC] Support returning TIMESTAMP with 'T' seperator instead of space (like ISO 8601)\r\n\r\n## Version 2.4.144 (HANA 2.0 SPS03 Rev 37.02)\r\n\r\n### Changes:\r\n\r\n - Bug: 217819 - [node] getColumnInfo on stored procedure result: accumulates column infos after multiple executions\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 223345 - [SQLDBC] Adjust/remove SQLDBC tests on master due to XSEngine removal\r\n - Bug: 218913 - [SQLDBC] Support HTTP CONNECT Proxy connections\r\n - Bug: 218677 - [SQLDBC] Server-side WebSocket pings disconnect client\r\n\r\n## Version 2.4.142 (HANA 2.0 SPS04 Rev 41)\r\n\r\n### Changes:\r\n\r\n - Bug: 221035 - [node] Wrong results for Node.js client with option rowsAsArray\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 221067 - [SQLDBC] Detect when connected to a cloud edition server\r\n - Bug: 220794 - [SQLDBC] Enable frequent TCP keepalive probes\r\n - Bug: 218956 - [SQLDBC] SQLDBC pass to a null value to hana server\r\n - Bug: 218917 - [SQLDBC] Error -10333 when SAPR3 prepare call with IN ITAB\r\n - Bug: 196975 - [SQLDBC] UCS-2 non-BMP (U+10000) conversions to UTF-8 are incorrect\r\n - Bug: 177745 - [SQLDBC] improve SQLDBC handling of exceptions and OOM\r\n\r\n## Version 2.4.139 (HANA 2.0 SPS03 Rev037.01)\r\n\r\n### Changes\r\n\r\n - Bug: 219118 - [node] Improve performance of fetching data from date, time, timestamp columns\r\n - Bug: 217395 - [node] need a way to check if output parameter is null and get its length\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 215654 - [SQLDBC] Invalid number of row counts returned (0, expected 4)\r\n - Bug: 213867 - [SQLDBC] Columns which appear after the encrypted column in the SELECT list do not have the correct length\r\n - Bug: 117546 - [SQLDBC] DBACOCKPIT SQLDBC trace integration issue\r\n\r\n## Version 2.4.126 (SP04 Takt 12, Rev 40)\r\n\r\n### Changes\r\n\r\n - Bug: 210467 - [node] Value of inout clob procedure parameter lost\r\n - Bug: 210265 - [node] HanaProcStatement does not close result sets\r\n - Bug: 208719 - [node] Batch inserts with null value leading to data corruption\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 212792 - [SQLDBC] Unexpected numeric overflow\r\n - Bug: 212269 - [SQLDBC] Support 0x80 Proxy Authentication for Cloud Connector\r\n - Bug: 210821 - [SQLDBC] Client crashes during connect after self-assignment of SQLDBC_ConnectProperties object\r\n - Bug: 210818 - [SQLDBC] Access violation while inserting empty string\r\n - Bug: 210341 - [SQLDBC] The SP04 converter for INTEGRAL to ASCII conversion is almost 2 times slower than the SP03 one\r\n - Bug: 210340 - [SQLDBC] The SP04 converter for REAL to ASCII conversion is 3 times slower than the SP03 one\r\n - Bug: 208245 - [SQLDBC] FDA partition-aware routing ignored partition information update\r\n - Bug: 201548 - [SQLDBC] secondary connections need to send SessionContext - required for workload replay\r\n - Bug: 177745 - [SQLDBC] improve SQLDBC handling of exceptions and OOM\r\n\r\n\r\n# Hana Client 2.3.x Drivers\r\n\r\n\r\n## Version 2.3.152\r\n\r\n### Changes\r\n\r\n - Bug: 214413 - [node] NVARCHAR columns truncated by Connection.exec\r\n - Bug: 210467 - [node] Value of inout clob procedure parameter lost\r\n - Bug: 210265 - [node] HanaProcStatement does not close result sets\r\n - Bug: 200139 - [node] Segmentation fault errors in Node.js client\r\n - Bug: 193735 - [node] executeBatch incorrectly inserting invalid data\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 212269 - [SQLDBC] Support 0x80 Proxy Authentication for Cloud Connector\r\n - Bug: 210818 - [SQLDBC] Access violation while inserting empty string\r\n - Bug: 208370 - [SQLDBC] SP03/04 is 10 times slower than SP02 on fetching data from numeric columns when the data is bound with CHAR\r\n - Bug: 208245 - [SQLDBC] FDA partition-aware routing ignored partition information update\r\n\r\n## Version 2.3.144\r\n\r\n### Changes\r\n\r\n - Bug: 170890 - [node] Feature request: Introduce a way to configure query timeout\r\n - Bug: 208719 - [node] Batch inserts with null value leading to data corruption\r\n - Bug: 207730 - [node] Data corruption (decimal data type) with execBatch\r\n - Bug: 202061 - [node] nodejs is killed by @sap/hana-client\r\n\r\n### Underlying SQLDBC changes:\r\n\r\n - Bug: 212269 - [SQLDBC] Support 0x80 Proxy Authentication for Cloud Connector\r\n - Bug: 209416 - [SQLDBC] Much slower to fetch a value from a bool column than from a tinyint column\r\n - Bug: 207692 - [SQLDBC] [dbcapi] SQL strings are always assumed to be ASCII encoding\r\n - Bug: 205486 - [SQLDBC] Implicit XA join at prepare time\r\n - Bug: 204378 - [SQLDBC] Big endian client or server corruption during range partitioning\r\n - Bug: 180821 - [SQLDBC] improve sqldbc tracing\r\n\r\n## Version 2.3.134\r\n\r\nNote: This version includes node 10 support.\r\n\r\n### Changes\r\n\r\n - Bug: 207088 - [node] hana-client throws error when inserting UTF8 value into NCLOB column\r\n - Bug: 203323 - [node] crash in ~executeBaton\r\n - Bug: 202025 - [node] crash in hana-client master snapshot during HRTT-service component tests\r\n - Bug: 201692 - [node] GetParameterValues() may return different values for queries executed using exec and execQuery\r\n - Bug: 200139 - [node] Segmentation fault errors in Node.js client\r\n - Bug: 197590 - [node] AddressSanitizer: heap-buffer-overflow in statement.cpp:644\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 206695 - [SQLDBC] Always send ClientInfo APPLICATION / APPLICATIONUSER in ClientInfo\r\n - Bug: 205558 - [SQLDBC] Cannot set isolation level as described in docs\r\n - Bug: 205486 - [SQLDBC] Implicit XA join at prepare time\r\n - Bug: 205420 - [SQLDBC] SQL code: -10923 occurred while accessing table USR01\r\n - Bug: 202117 - [SQLDBC] Websocket connection to port with no listener hangs on Windows\r\n - Bug: 201991 - [SQLDBC] Change limit of READLOBREQUEST requested chunk size to be at most packet size - 1KB instead of 1KB*124\r\n - Bug: 201333 - [SQLDBC] Always cache cookies for all authentication methods\r\n - Bug: 201180 - [SQLDBC] Coverity failure - CID 175085 - dereference after null check\r\n - Bug: 199762 - [SQLDBC] result set and parameters incorrect after prepare, alter, routed execute\r\n - Bug: 197565 - [SQLDBC] Support 32bit fetchsize\r\n - Bug: 188197 - [SQLDBC] specifying hosts for multiple unrelated systems can cause issues for multiple connections\r\n\r\n## Version 2.3.130\r\n\r\n### Changes\r\n\r\n - Bug: 201050 - [node] HANA client crashes if ResultSet is closed while async next is running\r\n - Bug: 198780 - [node] Prepare happens twice for same statement execution (non distributed), impacts performance\r\n - Bug: 198599 - [node] empty DATE & TIMESTAMP causes crash/memory leak with prepared statements\r\n - Bug: 198300 - [node] executeQuery crashes if no parameters passed in\r\n - Bug: 197989 - [node] Node crashes with core dumps were found\r\n - Bug: 197914 - [node] nodejs application server memory increases even after drop and disconnect\r\n - Bug: 196801 - [node] Node driver crashes in getParameterValue\r\n - Bug: 186681 - [node] Fatal error when fetching a CLOB value of ~500MB\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 199481 - [SQLDBC] Cursor holdability not correctly sent to the server\r\n - Bug: 199218 - [SQLDBC] Certain years cause DATE values to be incorrectly returned as NULL with DFV=1\r\n - Bug: 197444 - [SQLDBC] CSE test failures report misleading error messages\r\n - Bug: 197279 - [SQLDBC] Unable to lock newly created table with active distributed statement routing\r\n - Bug: 188197 - [SQLDBC] specifying hosts for multiple unrelated systems can cause issues for multiple connections\r\n - Bug: 184551 - [SQLDBC] fix Performance regression\r\n - Bug: 183778 - [SQLDBC] CESU-8 -> UTF-8 conversions don't work, CESU-8 isn't used in the SQLDBC protocol\r\n - Bug: 163009 - [SQLDBC] SQLDBC client can send out-of-date StatementContext resulting in server internal errors or incorrect transaction behaviour\r\n\r\n## Version 2.3.123\r\n\r\n### Changes\r\n\r\n - Bug: 196993 - [node] - Segmentation fault in stmt.getRowStatus()\r\n - Bug: 196811 - [node] - AddressSanitizer: heap-use-after-free in getResultSet()\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 196981 - [SQLDBC] - Remove <CURRENT WRITE POSITION> at the end of trace file\r\n - Bug: 196540 - [SQLDBC] - SystemReplicationIntegrationTest testReconnectBehaviour, testBackOffTimerRetry sporadic failures\r\n - Bug: 195187 - [SQLDBC] - enabling autocommit with write txn \"Invalid transaction state\" error\r\n - Bug: 197118 - [SQLDBC] - Crash in SQLDBC::Connection::updateTopology\r\n - Bug: 189159 - [SQLDBC] - Fix \"-10429: Failed to open the key store file. Opening of the Keystore failed.\"\r\n\r\n## Version 2.3.122\r\n\r\n### Changes\r\n\r\n - Bug: 179616 - [node] - Stream.createStatement does not support parameter bindings with an array of arrays\r\n - Bug: 194801 - [node] - NCLOB output parameter truncated\r\n - Bug: 191764 - [node] - crash in hana Node driver\r\n - Bug: 178638 - [node] - Expose named constants for Isolation Level\r\n - Bug: 186986 - [node] - HanaProcStatement: add possibility to have ColumnInfo on output tables (both output table parameters and SELECT results)\r\n - Bug: 183202 - [node] - Column info does not distinguish between column name and alias\r\n\r\n## Version 2.3.121\r\n\r\n### Changes\r\n\r\n - Bug: 185046 - [node] - Batch insert: specify which group has been inserted successfully and which not\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 182656 - [SQLDBC] - [Decimal38, DFV=8] Performance regression (30%) in benchCppPsaloadBarrier.py (elapsed time)\r\n\r\n## Version 2.3.120\r\n\r\n### Changes\r\n\r\n - Bug: 194578 - [node] - @sap/hana-client could not be installed on Mac OS X 10.13.6 - node-gyp build fatal error: 'thread' file not found\r\n\r\n## Version 2.3.119 (Rev 33)\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 189502 - [SQLDBC] - core file produced if the OS400 version of R3trans connects to the database using the HDB client\r\n\r\n## Version 2.3.118-ms\r\n\r\n### Changes\r\n\r\n - Bug: 190151 - [node] - node driver returns incorrect values for large DECIMAL and SMALLDECIMAL types\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 194315 - [SQLDBC] - Crash at PreparedStatement::getObject() if passed negative param-index\r\n - Bug: 191790 - [SQLDBC] - Wrong function name when using TO_VARCHAR function in GENERATED ALWAYS AS clause\r\n - Bug: 193427 - [SQLDBC] - Non terminated input string access overflow\r\n\r\n## Version 2.3.117 (Rev 33 RC3)\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 189511 - [SQLDBC] - Hierarchy Warning as error\r\n\r\n## Version 2.3.115 (Rev 33 RC2)\r\n\r\n### Changes\r\n\r\n - Bug: 187823 - [node] - Error message from query is truncated\r\n - Bug: 186963 - [node] - Procedures, output parameters with unicode characters not readable\r\n - Bug: 186399 - [node] - Error when using DDL Statement in dynamic SQL\r\n - Bug: 184557 - [node] - node driver memory leak\r\n - Bug: 186462 - [node] - executeBatch doesn't return error if callback function isn't provided \r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 184711 - [SQLDBC] Vulnerabilities in trace files\r\n - Bug: 186830 - [SQLDBC] Coverity 33397, 171110\r\n\r\n## Version 2.3.112\r\n\r\nNote: This version contains the dependent module debug@3.1.0 and ms@2.0.0 to address security issues in those modules.\r\n\r\n### Changes\r\n\r\n - Bug 184286 - Coverity CID 169674 - Resource leak in object\r\n - Bug 182045 - Preparing SQL statement returns error \"Unhandled SQLDBC type '32'\"\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug 189083 - FDA fetch next after warning\r\n - Bug 189856 - error when AA hint based routing to down secondary or bad VolumeIds\r\n - Bug 184710 - [hdbkeystore] Imported key pairs are not validated\r\n - Bug 172302 - conversion error on bulk execute should fail all rows to match server behavior\r\n - Bug 184128 - [SQLDBC] Decrypted data and keys are not wiped\r\n - Bug 186707 - HE2E:H2SP4:Trying to encrypt a decimal column gets error\r\n\r\n## Version 2.3.108\r\n\r\n### Changes\r\n\r\n - Bug: 183789 - hana_client crashes when single sign-on attempted\r\n - Bug: 186603 - Crash in hana_node driver when using ResultSet.prototype.getData() for a NULL value\r\n\r\n### Underlying SQLDBC changes\r\n\r\n - Bug: 185978 - Invalid numeric value for parameter/column (3) source type DECIMAL, target type FIXED16\r\n - Bug: 184670 - Batch insert with decimals does not work\r\n - Bug: 186968 - SQLDBC-based clients on Windows and 32-bit Linux platforms use an invalid value for a Randomly encrypted NULL for a TIMESTAMP column\r\n - Bug: 172302 - conversion error on bulk execute should fail all rows to match server behavior\r\n - Bug: 183982 - [SQLDBC] Allow override of APPLICATION / APPLICATIONUSER\r\n - Bug: 185435 - SQL Error \"-10901 No space left in request packet\" during FOR ALL ENTRIES FDA\r\n - Bug: 182050 - large clientinfo that fills packet causes client crash or failures\r\n - Bug: 184700 - node.js driver ignored databasename connect parameter\r\n - Bug: 184107 - [SQLDBC] WebSockets does not have a thread to return responses for ping/pong\r\n - Bug: 165561 - Netweaver workprocess crashes from SQLDBC\r\n\r\n## Version 2.3.106\r\n\r\n### Changes\r\n\r\n - Bug: 184700 - node.js driver ignored databasename connect parameter\r\n\r\n## Version 2.3.102\r\n\r\n### Changes\r\n\r\n - Bug: 184700 [nodejs] - Replace SQLDBC connection parameter serverDb with databasename\r\n - Bug: 184409 [nodejs] - HXE: SQL error while accessing data base explorer from cockpit UI\r\n - Bug: 182956 [SQLDBC] - SQLDBC should clear all write lobs before silent re-execution for stale metadata\r\n - Bug: 183012 [SQLDBC] - Support siteType connection property in the SQLDBC driver.\r\n - Bug: 183521 [SQLDBC] - StatementContext FlagSet now tests appropriate bit for A/A fallback\r\n - Bug: 180790 [SQLDBC] - Add socket timeout support\r\n - Bug: 182950 [SQLDBC] - Implement support for Client-side Encrypted Decimal38\r\n - Bug: 182230 [SQLDBC] - dfv8 error source expectation change\r\n - Bug: 182476 [SQLDBC] - Fetching a BOOLEAN value as string Host Type returns \"TRUE\" or \"FALSE\" instead of \"1\" or \"0\"\r\n - Bug: 181236 [nodejs] - Executing a DELETE statement returns undefined if the data doesn't exist, and make default CharSet=UTF-8 for node driver\r\n\r\nThe above bug fix also fixes the following bug reports:\r\n - Bug: 183239 - Unicode problem - HANA node.js client return wrong results \"???\"\r\n - Bug: 183364 - Error: result set has not been fetched yet when selecting an NCHAR column\r\n - Bug: 183368 - Unicode characters not readable when using a stream\r\n\r\n## Version 2.3.99\r\n\r\n### Changes\r\n\r\n - Bug: 172007 - WebSockets cannot reliably detect socket failures for reconnect logic \r\n - Bug: 180692 - enable TLS 1.2 in openssl versions pre 1.1.0\r\n - Bug: 181793 - [SQLDBC] WebSockets do not support ping/pong for DBaaS\r\n\r\n## Version 2.3.92-rel\r\n\r\n### Changes\r\n\r\n - Bug: 179911 - Array type returned by Connection.execute is truncated\r\n - Bug: 179717 - node.js client crashes the app if a JS error happens in parallel\r\n - Bug: 179718  - a procedure call via createProcStatement doesn't include the object for scalar results\r\n - Bug: 178819 - Cannot fetch spatial types using stream\r\n\r\n## Version 2.3.78\r\n\r\n### Changes\r\n\r\n - Bug: 178841  - Resultset.getValues returns incorrect data for double/real/float\r\n\r\n## Version 2.3.75\r\n\r\n### Changes\r\n\r\n - Bug: 178226 - MDX SELECT returns no results\r\n\r\n## Version 2.3.67\r\n\r\nNote: This version contains HappyMake-built binaries for Linux x64.\r\n\r\n### Changes\r\n\r\n - Bug: 176354 - prepared-statement.exec doesn't support parameter bindings with an array of arrays\r\n - Bug: 176359 - result objects of procedure calls are different in node-hdb vs. hana-client\r\n - Bug: 176361 - node-hdb treats undefined in parameters bindings as null, hana-client reports an error\r\n - Bug: 176397 - Process exits unexpectedly when 'setWarningCallback' is used\r\n - Bug: 174396 - DVF8 SQLDBC_SQLTypes for ODBC and DBCAPI\r\n\r\n## Version 2.3.65-ms\r\n\r\n### Changes\r\n\r\n - Bug: 175368 - Authentication fails if password contains a semicolon (;)\r\n - Bug: 176053 - instanceNumber connection property not supported\r\n - Bug: 175381 - [DBCAPI] Lob data could be truncated\r\n - Bug: 174309 - [SQLDBC] detect ResultSetPart overrun (DEV_ASSERTS in ResultDataIterator needed to be converted to runtime errors to prevent undefined behavior due to incorrect RESULTSET parts)\r\n\r\n## Version 2.3.63-ms\r\n\r\n### Changes\r\n\r\n - Bug: 175602 - Error when inserting zero-length stream into HANA through node client\r\n - Bug: 175368 - Authentication fails if password contains a semicolon\r\n - Bug: 175712 - Intermittent failures when inserting blobs into HANA through streams\r\n\r\n## Version 2.3.59-ms\r\n\r\n### Changes\r\n\r\n - Bug: 170723 - crash in dbcapi_get_function_code\r\n - Bug: 170934 - Failed Client Conti: node.js giving regex_error\r\n - Bug: 174161 - [DBCAPI] - DBCAPI reuses previous ResultSet bindings when fetching more results for a multi-resultset query\r\n - Bug: 173705 - garbage collector causes sporadic crashes\r\n - Enhancement: PPC BE support\r\n - Enhancement: Node 8 support\r\n\r\n## Version 2.3.41\r\n\r\n### Changes\r\n\r\n - Bug: 169885 - Connection pooling\r\n\r\n## Version 2.3.40\r\n\r\n### Changes\r\n\r\n - Bug: 169668 - wrong value returned from ResultSet.getValue(N)\r\n - Bug: 169674 - Main thread blocks when destroying a statement through garbage collector\r\n - Bug: 168663 - Cannot unset client info\r\n\r\n## Version 2.3.39 (Nexus Release, Takt5)\r\n\r\n### Changes\r\n\r\n - Bug: 160073 - Cannot create TLS-encrypted connection using certificate string\r\n\r\n## Version 2.3.38\r\n\r\n### Changes\r\n\r\n - Bug: 167516 - Crash if integer input parameter is given an empty string\r\n - Bug: 167524 - Crash when iterating an empty result set or a result set is not fully consumed\r\n - Bug: 167504 - No way to specify multiple hosts for connection\r\n - Bug: 167517 - Data type 53 incorrect in TypeCode.js\r\n - Bug: 167531 - Cannot determine if a Connection is connected\r\n - Bug: 167112 - Streaming API -- insert statement returns \"undefined\" result\r\n\r\n## Version 2.3.31\r\n\r\n### Changes\r\n\r\n - Bug: 162268 - statement options are not supported in statement.exec\r\n - Bug: 165051 - Coverity CID 140729 - Dereference before null check\r\n\r\n## Version 2.3.28\r\n\r\n### Changes\r\n\r\n - Bug: 163582 - MDX SELECT is not handled properly\r\n\r\n## Version 2.3.27\r\n\r\n### Changes\r\n\r\n - Bug: 163070 - clientsBarrier.seq fails - node4 test crashes\r\n - Bug: 163236 - Failed Client Conti: NodeJS crashing on master\r\n - Bug: 163374 - node driver returns incorrect numbers for large BIGINT\r\n - Bug: 163375 - node driver returns incorrect unicode strings for NCLOB\r\n\r\n## Version 2.3.23\r\n\r\n### Changes\r\n\r\n - Bug: 162924 - dbcapi crashes when fetching multiple resultsets\r\n\r\n## Version 2.3.21 (Nexus Release, Takt 3, npm.sap.com)\r\n\r\n### Changes\r\n\r\n - Bug: 162265 - end() is not available out-of-the-box\r\n\r\n\r\n\r\n# Hana 2 SP02 Drivers\r\n\r\n\r\n## Version 2.2.64\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 181384 - [SQLDBC] - LOB data got lost in batch mode if the lob data length greater than a network packet size\r\n - Bug: 182139 - [SQLDBC] - Error -10922 (200501) Write transaction already started on other connection in ABAP report\r\n - Bug: 180790 - [SQLDBC] - SDA query failure due to connection timeout error -10807 (Add socket timeout support)\r\n - Bug: 155895 - [SQLDBC] - Insert of timestamps as strings behaves different between cursor.execute() and cursor.executemany()\r\n - Bug: 182476 - [SQLDBC] - Fetching a BOOLEAN value as string Host Type returns \\\"TRUE\\\" or \\\"FALSE\\\" instead of \\\"1\\\" or \\\"0\\\"\r\n\r\n## Version 2.2.62\r\n\r\n### Changes\r\n\r\n - Bug: 178226 - [node] - MDX SELECT returns no results\r\n - Bug: 179911 - [node] - Array type returned by Connection.execute is truncated\r\n - Bug: 176397 - [node] - Process exits unexpectedly when 'setWarningCallback' is used\r\n - Bug: 175459 - [SQLDBC] - error message improvement for numeric overflow\r\n - Bug: 178841 - [node] - Resultset.getValues returns incorrect data for double/real/float\r\n - Bug: 178680 - [SQLDBC] - Access violation while batch-inserting BLOB-placeholder in expression\r\n - Bug: 180561 - [SQLDBC] - BasisClient lacks CRASH_ASSERT_* macros\r\n - Bug: 178819 - [node] - Cannot fetch spatial types using stream\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 175459 - [SQLDBC] - error message improvement for numeric overflow\r\n - Bug: 178680 - [SQLDBC] - Access violation while batch-inserting BLOB-placeholder in expression\r\n - Bug: 180561 - [SQLDBC] - BasisClient lacks CRASH_ASSERT_* macros\r\n\r\n## Version 2.2.57\r\n\r\n### Changes\r\n\r\n - Bug: 175712 - [node] - Intermittent failures when inserting blobs into HANA through streams\r\n - Bug: 173705 - [node] - garbage collector causes sporadic crashes\r\n - Bug: 175368 - [node] - Authentication fails if password contains a semicolon (;)\r\n - Bug: 176053 - [node] - instanceNumber connection property not supported\r\n - Bug: 169885 - [node] - Connection pooling\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 174651 - [SQLDBC] - Network compression assertions on non-rel builds on distributed system\r\n - Bug: 168750 - [SQLDBC] - Many transactions were blocked by record locks right after secondary replication was registered, and record locks were never released\r\n - Bug: 176544 - [SQLDBC] - testJtClientsDistributed table placement should be default\r\n\r\n## Version 2.2.53\r\n\r\n### Changes\r\n\r\n - Bug: 170723 - [node] - crash in dbcapi_get_function_code\r\n - Bug: 169885 - [node] - Connection pooling\r\n\r\n### Underling SQLDBC changes\r\n\r\n - Bug: 170954 - [SQLDBC] - The second part can be off by a second for the timestamp output param in a procedure call\r\n - Bug: 171387 - [SQLDBC] - Trace content removal too aggressive\r\n - Bug: 174788 - [SQLDBC] - Statement routing not working for batch updates if 1-level part. key in the set-clause\r\n - Bug: 168697 - [SQLDBC] - DLL Autocommit setting will get lost on reconnect\r\n - Bug: 163336 - [SQLDBC] - General error;600 failed routed execution: anchor is switched in runtime: line 0 col 0 (at pos 0) after topology changed on SDA source site\r\n - Bug: 171093 - [SQLDBC] - SQL level tracing should imply DISTRIBUTION tracing but does not\r\n - Bug: 174161 - [SQLDBC] - DBCAPI reuses previous ResultSet bindings when fetching more results for a multi-resultset query\r\n\r\n## Version 2.2.39 (included in Rev 24 ; 2.00.024)\r\n\r\n### Changes\r\n\r\n - Bug: 169668 - wrong value returned from ResultSet.getValue(N)\r\n - Bug: 169674 - Main thread blocks when destroying a statement through garbage collector\r\n - Bug: 168663 - Cannot unset client info\r\n\r\n## Version 2.2.37\r\n\r\n### Changes\r\n\r\n - Bug: 160073 - Cannot create TLS-encrypted connection using certificate string\r\n - Bug: 167516 - Crash if integer input parameter is given an empty string\r\n - Bug: 167524 - Crash when iterating an empty result set or a result set is not fully consumed\r\n - Bug: 167504 - No way to specify multiple hosts for connection\r\n - Bug: 167517 - Data type 53 incorrect in TypeCode.js\r\n - Bug: 167531 - Cannot determine if a Connection is connected\r\n - Bug: 160073 - Cannot create TLS-encrypted connection using certificate string\r\n - Bug: 167112 - Streaming API -- insert statement returns \"undefined\" result\r\n\r\n## Version 2.2.35 (included in Rev 23 ; 2.00.023)\r\n\r\n### Changes\r\n\r\n - Bug: 162268 - statement options are not supported in statement.exec\r\n - Bug: 165051 - Coverity CID 140729 - Dereference before null check\r\n - Bug: 163582 - MDX SELECT is not handled properly\r\n - Bug: 163070 - clientsBarrier.seq fails - node4 test crashes\r\n - Bug: 163236 - Failed Client Conti: NodeJS crashing on master\r\n\r\n## Version 2.2.34\r\n\r\n### Changes\r\n\r\n - Bug: 163374 - node driver returns incorrect numbers for large BIGINT\r\n - Bug: 163375 - node driver returns incorrect unicode strings for NCLOB\r\n - Bug: 160968 - Failed Client Conti: ADO.NET - ColumnMapping tests fail sporadically but often\r\n\r\n## Version 2.2.31\r\n\r\n### Changes\r\n\r\n - Bug: 162924 - dbcapi crashes when fetching multiple resultsets\r\n\r\n## Version 2.2.28 (included in 2.00.022)\r\n\r\n### Changes\r\n\r\n - Bug: 162265 - end() is not available out-of-the-box\r\n - Bug: 160083 - Writing a stream from an HTTP IncomingMessage hangs\r\n - Bug: 160422 - Writing a stream that is not an instance of Readable crashes\r\n - Bug: 156392 - crash in ResultSet.getValues()\r\n - Bug: 159735 - Need to know total number of rows returned without fetching each one\r\n - Bug: 159649 - crash in getInputParameters\r\n - Bug: 160416 - Need a way to close a stream early\r\n\r\n## Version 2.2.27\r\n\r\n### Changes\r\n\r\n - Bug: 154982 - clients.seq fails - node tests on Windows fail with RC = 65280\r\n - Bug: 156105 - executing procedure call with CLOB output parameter very slow\r\n - Bug: 156119 - How to insert data from a stream\r\n - Bug: 150587 - cannot call stored procedures with named parameters\r\n\r\n## Version 2.2.25 (included in 2.00.021)\r\n\r\n### Changes\r\n\r\n - Bug: 156388 - Readable streams are not implemented correctly\r\n - Bug: 156389 - ResultSet.close() is not available as an async method\r\n - Bug: 156133 - Cannot determine if a statement was dropped\r\n - Bug: 156146 - INOUT parameter gets wrong value and type, depending on input parameter type\r\n - Bug: 155535 - If no parameters passed to stmt.execQuery, cannot get output parameter values\r\n - Bug: 156386 - ResultSet.getValues() crashes if connection was closed\r\n - Bug: 153647 - wrong number of arguments in callback from exec for DDL\r\n - Bug: 153657 - passing too many parameters should return an error\r\n - Bug: 153674 - getParameterValue for boolean type returns invalid value\r\n\r\n## Version 2.2.24\r\n\r\n### Changes\r\n\r\n - Bug: 153503 - params for statement.exec (and connection.exec) should not include output parameters\r\n - Bug: 153506 - Cannot get value for output parameter if no input param provided\r\n - Bug: 153656 - cannot get value from inout parameter\r\n - Bug: 153683 - setClientInfo() doesn't work as expected\r\n\r\n## Version 2.2.22 (included in 2.00.020)\r\n\r\n### Changes\r\n\r\n - Bug: 152564 -  Error doesn't have stack trace\r\n\r\n## Version 2.2.20 (initial version)\r\n\r\n### Changes\r\n\r\n - Bug: 152218 - wrong number of arguments in callback of connect\r\n - Bug: 150564 - \"No more result\" error\r\n - Bug: 150561 - wrong number of arguments in callback from commit and rollback\r\n - Bug: 150546 - crash in Connection::setClientInfo()\r\n - Bug: 150165 - getParameterValue doesn't work\r\n - Bug: 148776 - node.js client crashes when used in generic-pool with connections in parallel\r\n - Bug: 148128 - Exception from ExecuteReader when executing select with long case block\r\n - Bug: 145975 - warnings are (sometimes) fatal\r\n - Bug: 145953 - APIs are too picky\r\n - Bug: 145974 - Column metadata unavailable outside of the streaming interface\r\n - Bug: 145971 - Need isClosed() function on a streaming ResultSet\r\n - Bug: 145970 - need access to parameter metadata\r\n - Bug: 145976 - data type codes do not align with protocol/node-hdb\r\n"},{"name":"README.md","content":"# @sap/hana-client\r\n\r\nFully-featured Node.js driver for [SAP HANA](https://www.sap.com/products/hana.html). It is used to connect, issue SQL queries, and obtain result sets.\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install @sap/hana-client\r\n```\r\n\r\n## Prerequisites\r\n\r\nThis driver communicates with the native HANA libraries, and thus requires\r\nplatform-specific native binaries. The official hosted version includes\r\nprecompiled libraries for Linux, Windows and Mac OS X.\r\n\r\nThe @sap/hana-client driver supports versions of Node.js 8.11.2 and higher.\r\n\r\n## Community\r\n\r\nSAP Community provides a forum where you can ask and answer questions, and\r\ncomment and vote on the questions of others and their answers.\r\n\r\nSee [SAP HANA Community Questions](https://answers.sap.com/tags/73554900100700000996) for details.\r\n\r\n## Help Guide\r\n\r\nThe SAP HANA Node.js Driver help guide and API reference can be found on [help.sap.com](https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-US/a5c332936d9f47d8b820a4ecc427352c.html).\r\n\r\n## Getting Started\r\n\r\n```js\r\nvar hana = require('@sap/hana-client');\r\n\r\nvar conn = hana.createConnection();\r\n\r\nvar conn_params = {\r\n  serverNode  : 'myserver:30015',\r\n  uid         : 'system',\r\n  pwd         : 'Password123'\r\n};\r\n\r\nconn.connect(conn_params, function(err) {\r\n  if (err) throw err;\r\n  conn.exec('SELECT Name, Description FROM Products WHERE id = ?', [301], function (err, result) {\r\n    if (err) throw err;\r\n\r\n    console.log('Name: ', result[0].Name, ', Description: ', result[0].Description);\r\n    // output --> Name: Tee Shirt, Description: V-neck\r\n    conn.disconnect();\r\n  })\r\n});\r\n```\r\n\r\n## Establish a database connection\r\n\r\n### Connecting\r\n\r\nA database connection object is created by calling `createConnection`.  The\r\nconnection is established by calling the connection object's `connect` method,\r\nand passing in an object representing connection parameters.\r\n\r\n#### Example: Connecting over TCP/IP\r\n\r\n```js\r\nconn.connect({\r\n  host    : 'myserver',\r\n  port    : '30015',\r\n  uid     : 'system',\r\n  pwd     : 'Password123'\r\n});\r\n```\r\n\r\n### Disconnecting\r\n\r\n```js\r\nconn.disconnect(function(err) {\r\n  if (err) throw err;\r\n  console.log('Disconnected');\r\n});\r\n```\r\n\r\n## Direct Statement Execution\r\n\r\nDirect statement execution is the simplest way to execute SQL statements. The\r\ninputs are the SQL command to be executed, and an optional array of positional\r\narguments. The result is returned using callbacks. The type of returned result\r\ndepends on the kind of statement.\r\n\r\n### DDL Statement\r\n\r\nIn the case of a successful DDL Statement, nothing is returned.\r\n\r\n```js\r\nconn.exec('CREATE TABLE Test (id INTEGER PRIMARY KEY, msg VARCHAR(128))', function (err, result) {\r\n  if (err) throw err;\r\n  console.log('Table Test created!');\r\n});\r\n```\r\n\r\n### DML Statement\r\n\r\nIn the case of a DML Statement the number of `affectedRows` is returned.\r\n\r\n```js\r\nconn.exec(\"INSERT INTO Test VALUES(1, 'Hello')\", function (err, affectedRows) {\r\n  if (err) throw err;\r\n  console.log('Number of affected rows:', affectedRows);\r\n});\r\n```\r\n\r\n### Query\r\n\r\nThe `exec` function is a convenient way to completely retrieve the result of a\r\nquery. In this case all selected rows are fetched and returned in the callback.\r\n\r\n```js\r\nconn.exec(\"SELECT * FROM Test WHERE id < 5\", function (err, rows) {\r\n  if (err) throw err;\r\n  console.log('Rows:', rows);\r\n});\r\n```\r\n\r\nValues in the query can be substitued with JavaScript variables by using `?`\r\nplaceholders in the query, and passing an array of positional arguments.\r\n\r\n```js\r\nconn.exec(\"SELECT * FROM Test WHERE id BETWEEN ? AND ?\", [5, 8], function (err, rows) {\r\n  if (err) throw err;\r\n  console.log('Rows:', rows);\r\n});\r\n```\r\n\r\n## Prepared Statement Execution\r\n\r\n### Prepare a Statement\r\n\r\nThe connection returns a `statement` object which can be executed multiple times.\r\n\r\n```js\r\nconn.prepare('SELECT * FROM Test WHERE id = ?', function (err, stmt){\r\n  if (err) throw err;\r\n  // do something with the statement\r\n});\r\n```\r\n\r\n### Execute a Statement\r\n\r\nThe execution of a prepared statement is similar to the direct statement execution.\r\nThe first parameter of `exec` function is an array with positional parameters.\r\n\r\n```js\r\nstmt.exec([16], function(err, rows) {\r\n  if (err) throw err;\r\n  console.log(\"Rows: \", rows);\r\n});\r\n```\r\n\r\n### Execute a Batch Statement\r\n\r\nThe execution of a prepared batch statement is similar to the direct statement execution.\r\nThe first parameter of `execBatch` function is an array with positional parameters.\r\n\r\n```js\r\nvar stmt=conn.prepare(\"INSERT INTO Customers(ID, NAME) VALUES(?, ?)\");\r\nstmt.execBatch([[1, 'Company 1'], [2, 'Company 2']], function(err, rows) {\r\n  if (err) throw err;\r\n  console.log(\"Rows: \", rows);\r\n});\r\n```\r\n\r\n### Execute a Query\r\n\r\nThe execution of a prepared query is similar to the direct statement execution.\r\nThe first parameter of `execQuery` function is an array with positional parameters.\r\n\r\n```js\r\nvar stmt=conn.prepare(\"SELECT * FROM Customers WHERE ID >= ? AND ID < ?\");\r\nstmt.execQuery([100, 200], function(err, rs) {\r\n  if (err) throw err;\r\n    var rows = [];\r\n    while (rs.next()) {\r\n      rows.push(rs.getValues());\r\n    }\r\n  console.log(\"Rows: \", rows);\r\n});\r\n```\r\n\r\n### Drop Statement\r\n\r\n```js\r\nstmt.drop(function(err) {\r\n  if (err) throw err;\r\n});\r\n```\r\n\r\n## Transaction Handling\r\n\r\n__Transactions are automatically commited.__ Setting autocommit to false implicitly\r\nstarts a new transaction that must be explicitly committed, or rolled back.\r\n\r\n### Commit a Transaction\r\n\r\n```js\r\nconn.setAutoCommit(false);\r\n// Execute some statements\r\nconn.commit(function(err) {\r\n  if (err) throw err;\r\n  console.log('Transaction commited.');\r\n});\r\n```\r\n\r\n### Rollback a Transaction\r\n\r\n```js\r\nconn.setAutoCommit(false);\r\n// Execute some statements\r\nconn.rollback(function(err) {\r\n  if (err) throw err;\r\n  console.log('Transaction rolled back.');\r\n});\r\n```\r\n\r\n## Resources\r\n\r\n+ [SAP HANA Documentation](https://help.sap.com/viewer/f1b440ded6144a54ada97ff95dac7adf/latest/en-US/a5c332936d9f47d8b820a4ecc427352c.html)\r\n"}]