[{"name":"README.md","content":"# service-providers\r\n\r\nThis module provides various service providers:\r\n\r\n# Direct URL Service Provider\r\n\r\nProvides the ability to consume a service from a URL ( a direct service url rather then through SAP cloud destination service.\r\nThe main use case is when creating an application for demo use or for local development when detached from SAP Cloud\r\n\r\n# Local Metadata File Service Provider\r\n\r\nProvides the ability to use a dummy service represented by metadata.xml file from the local workspace of the developer.\r\nThe main use case is when creating an application for demo use and run it with mock data.\r\n\r\n# Current Project Service Provider\r\n\r\nProvides the ability to consume services from the current CAP project. The service can be java or node.\r\nThe main use case is: a developer adds a _UI_ module to _CAP_ project and he wants to bind the UI with a service (java/node) he has in his project.\r\nThe flow contains also a change of connectivity details in the `package.json/mta.yaml/xsapp.json`, where we declare the dependencies. Later on, the dependency will be reflected in the `Run Configuration`.\r\n\r\n## Requirements\r\n\r\nThe flow starts and ends in the same behaviour we have for service consumption. \r\nAdditional scenario will be added to the system selection:\r\n\r\n    My SAP system\r\n    API hub\r\n    Current project\r\n    Local (will be the next one)\r\n\r\nWhen user selects 'Current project' we should display the all found services from the current CAP project.\r\n</br>The services can be: _Java, Node_.\r\n</br>The format should be: _'service name'_.\r\n</br>Service biding (data connection) - the flow is: binding a service to a UI module, therefore the binding process should be as it is today update service's dependency in the `package.json/mta.yaml/xsapp.json`.\r\n"}]