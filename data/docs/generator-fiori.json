[{"name":"CHANGELOG.md","content":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## [1.6.4] - 2022-06-23\r\n### Added\r\n- Added a check when using a destination in SAP Business Application Studio with the Fiori generator to ensure that the destination catalog service(s) can be found.\r\n\r\n#### Changed\r\n- Changed deployment configuration with clear text and hints whilst enforcing transport request validation where applicable.\r\n\r\n### Fixed\r\n- Fixed issue where an invalid saved SAP System in Windows was not displaying the correct error message.\r\n- Fixed ABAP deployment issue where user could be asked to re-authenticate against backend even if they had already authenticated successfully.\r\n\r\n## [1.6.3] - 2022-06-09\r\n### Added\r\n- The list of minimum SAPUI5 versions available during project generation are now grouped into `maintained versions` and `out of maintenance versions` for easy reference.\r\n- Added a check when deploying to an existing SAPUI5 ABAP repository with a new SAP App ID.  Previously the deployment would overwrite the existing one, now the user is asked to confirm the overwrite.\r\n\r\n### Fixed\r\n- Fixed an issue where the CDS watch script for an SAP Fiori application in a Node.js CAP project was not getting created.\r\n- Fixed an issue where the previews are failing for a Fiori Freestyle application when created with Data Source as `None`.\r\n- Fixed an issue where the reuse library referenced in an existing project was not being loaded from the local workspace.\r\n\r\n## [1.6.1] - 2022-05-26\r\n### Added\r\n- Added unique non-identifable `toolsId` identifer to the manifest.json file for generated projects to support telemetry.\r\n\r\n#### Changed\r\n- Updated validation of Node.js CAP data sources to detail if the compilation of the services failed.\r\n- Improved the error message when an OData service URL provided does not reference an OData service.\r\n\r\n### Fixed\r\n- Fixed issue when using API Business Hub in SAP Business Application Studio with local preview.\r\n- Fixed issue where the Generator would not follow http redirects for an OData service URL.\r\n\r\n## [1.6.0] - 2022-05-12\r\n### Added\r\n- Added support for the SAP Fiori elements Overview Page floorplan with an OData V4 data source.\r\n- Added Ability to generate Cloud Foundry deployment configuration for an existing SAP Fiori project in a non-interactive mode.\r\n\r\n#### Changed\r\n- Updated the launch targets generated for a SAP Fiori application in VSCode to remove those allowing you to specify an SAPUI5 version at runtime.  Please use the Fiori Run Configurations tool to change the version of SAPUI5 needed.\r\n \r\n### Fixed\r\n- Fixed issue where adding an SAP Fiori application to a JAVA Cap Project may fail to start if the relevant plugins and configuration were not already present in the project. These updates are now added as part of generation if needed.\r\n- Fixed the Form Entry Object Page floorplan to only accept OData V4 services.\r\n\r\n## [1.5.5] - 2022-04-28\r\n### Added\r\n- Added support for the SAP Fiori elements Worklist floorplan with an OData V4 data source.\r\n\r\n#### Changed\r\n- Adding a new system during generation will now display the username of the user after authentication to the system.\r\n- The deployment name is no longer automatically populated from the module name when adding deployment configuration.\r\n\r\n### Fixed\r\n- Fixed CAP services retrieval to support services defined in nested folders in CAP projects.\r\n\r\n## [1.5.4] - 2022-04-14\r\n### Added\r\n- Added support for instance based destinations in deployment configuration for local Node.js CAP projects in SAP Business Application Studio.\r\n\r\n#### Changed\r\n- Fiori generator for application type `SAP Fiori elements` now consumes the open source SAP Fiori elements templates published [here](https://github.com/SAP/open-ux-tools).\r\n\r\n### Fixed\r\n- Fixed bug where VSCode launch configuration would not start the project correctly in certain situations.\r\n- Fixed issue where the Fiori generator would allow the user to continue if the mandatory navigation entity was not selected.\r\n\r\n## [1.5.3] - 2022-03-31\r\n### Added\r\n- Added support for creating new saved SAP systems in VSCode.  Users can click on the '+' icon and select to create an ABAP on Premise or ABAP Environment on SAP Business Technology Platform saved system.  Users must test the connection to validate it connects before saving.\r\n\r\n#### Changed\r\n- Determining if telemetry data is to be captured during generation is now determined from the global SAP Fiori tools setting in the command palette: `Fiori: Change Telemetry Settings`.\r\n\r\n### Fixed\r\n- Fixed bug where message longtexts were not displayed in the console for ABAP deployment errors.  These can be copied and pasted into the browser for more details.\r\n- Fixed bug where the SAP Fiori generator could crash if the project folder location was read-only.\r\n- Fixed error where SAP Fiori freestyle projects with an uploaded metadata file were not being validated correctly.\r\n\r\n## [1.5.2] - 2022-03-17\r\n### Fixed\r\n- Fixed invalid xs-security.json file location when using generator in non-interactive mode for CAP projects.\r\n- Fixed launch configurations in VSCode when the Fiori project is generated inside an MTA subfolder.\r\n- Fixed bug where App Router configuration needed to be added to an MTA.yaml file before Fiori deployment configuration.\r\n- Fixed issue with deployment errors containing longtext messages that did not have the associated URL clickable.\r\n\r\n## [1.5.1] - 2022-03-03\r\n#### Added\r\n- Added warning during deployment if deploying to an ABAP system that uses a lower version of SAPUI5 than that specified as the minimum SAPUI5 version in the SAP Fiori project being deployed.\r\n\r\n#### Changed\r\n- Added entity selection details to the `README.md` file for a generated SAP Fiori application.\r\n\r\n### Fixed\r\n- Fixed issue with generated applications not working with SAPUI5 versions greater than or equal to 1.100.0\r\n- The `start-variants-management` script will not be available if the SAP Fiori project was generated by uploading a metadata document rather than using a live service.\r\n\r\n## [1.5.0] - 2022-02-17\r\n#### Added\r\n- Added support for editing saved SAP systems in VSCode by selecting the saved system from the SAP Systems list and updating as needed.  Users must test the connection to validate it connects before saving.\r\n- Added support for matching the suggested minimum SAPUI5 version with the backend ABAP system, where applicable.  The SAPUI5 version dropdown will now default to the same version of SAPUI5 if the data source provided is an ABAP backend and the SAPUI5 version can be determined. \r\n\r\n#### Changed\r\n- Removed the `Latest` label from the list of minimum SAPUI5 versions.  The version of SAPUI5 choosen during generation will now be a fixed version from that selected.\r\n- Generated applications with a OData V2 data source now use an external mockserver for mock support, rather than the SAPUI5 client side mock.\r\n\r\n### Fixed\r\n- The generated `README.md` file now correctly details if the application was generated with the Fiori elements or Fiori freestlye generator.\r\n\r\n## [1.4.7] - 2022-02-03\r\n#### Changed\r\n- Updated the `Analytical List Page` floorplan, when used with an V4 OData service, to now only support version 1.90 and above of SAPUI5.  This enables the generated project to adhere to the latest recommended configuration.\r\n- Updated the local preview `npm` targets to not use the browser cache to ensure the latest updates are being reflected in the browser.\r\n- Removed unneeded i18n references from the generated manifest file.\r\n\r\n### Fixed\r\n- Fixed an issue where the Fiori generator would crash if attempting to connect to an on-premise system using SAML in VSCode.\r\n\r\n## [1.4.6] - 2022-01-20\r\n#### Added\r\n- Generating an SAP Fiori freestyle application will launch the `Application Info` page for that application after generation completes. \r\n\r\n#### Changed\r\n- The SAP Fiori freestyle template `SAP Fiori Master-Detail Application` has been renamed `SAP Fiori List-Detail Application`.\r\n\r\n### Fixed\r\n- Starting your SAP Fiori application from the launch/debug configuration with a specified version of UI5 will now use that specific version of UI5.\r\n- Fixed linting errors displayed after application is deployed.\r\n- SAP Fiori freestyle applications generated with a CAP project no longer identify as SAP Fiori elements applications within the SAP Fiori tools suite.\r\n\r\n## [1.4.4] - 2021-12-09\r\n#### Added\r\n- Added support for the experimental SAP Horizon theme, as long as a supported version of UI5 is selected during generation.\r\n\r\n#### Changed\r\n- Choosing the UI5 version for your application is no longer under `Advanced Options` and is now directly on the `Project Attributes` step for better visibility.\r\n\r\n### Fixed\r\n- Selecting a Fiori freestyle SAPUI5 template with no datasource no longer crashes the generator.\r\n- Performing a test deployment no longer reports the result as an error unless the test deployment fails.\r\n\r\n## [1.4.3] - 2021-11-25\r\n#### Added\r\n- A new SAP Fiori elements floor plan is now available.  The `Form Entry Object Page` floor plan for V4 OData sources allows you to create an SAP Fiori application with an object page for data entry.\r\n- The `List Report Object Page` floor plan and the new `Form Entry Object Page` floor plan can now optionally generate UI annotations during generation if there are none already available in the supplied data source.  **Note:** This is an experimental feature and can be switched off by disabling the `Sap › Ux › Application Modeler: Enable Experimental Features` option in the settings.\r\n\r\n#### Changed\r\n- Generated applications now use the Fiori CLI in the generated launch configuration to start the application.\r\n\r\n### Fixed\r\n- Fixed crash in the `CF Application Router` generator if an MTA ID with invalid characters is provided.\r\n- Using the SAP Fiori generator from the command line in Business Application Studio now supports data sources using the API Business Hub.\r\n- Generating a SAP Fiori freestyle application into a CAP project with an `mta.yaml` file should now launch successfully.\r\n- Using a Java CAP project with the SAP Fiori generator no longer requires a `package.json` file in the root folder.\r\n\r\n## [1.4.1] - 2021-11-11\r\n#### Added\r\n- Generating an Analytical List Page application with an OData V4 data source will now default to a table type of `AnalyticalTable`, and the user will no longer be asked to choose a table type.  The user can change this table type after generation using the Page Editor tool.\r\n\r\n#### Changed\r\n- Fiori generator for application type `SAPUI5 freestyle` now consumes the open source Freestyle templates published [here](https://github.com/SAP/open-ux-tools).\r\n\r\n### Fixed\r\n- Saved SAP systems should not ask the user to re-authenticate when being used with the Fiori generator in VSCode, unless needed.\r\n\r\n## [1.4.0] - 2021-10-28\r\n#### Added\r\n- UUA Authentication is now supported during deployment without launching a browser, as long as the relevant authentication parameters are supplied. See the SAP Fiori tools help portal for full details.\r\n\r\n### Fixed\r\n- Generating an application into a CAP project no longer adds unnecessary npm dependencies.\r\n- Destinations in SAP Business Application Studio are now filtered to show only those that can be used in the generator.\r\n\r\n## [1.3.7] - 2021-10-14\r\n#### Added\r\n- A new npm script for ABAP deployment configuration has been added, `deploy-test`.  Using this target will allow you to validate your deployment configuration without actually deploying.\r\n\r\n## [1.3.6] - 2021-10-07\r\n### Fixed\r\n- OData services that require a querystring parameter in the URL are now supported.\r\n\r\n## [1.3.5] - 2021-09-30\r\n#### Added\r\n- The Fiori command line tools now has help context information available.  Typing `npx fiori help` will give the user a list of commands that the Fiori command line tools support.  Help text for individual Fiori commands can also be displayed, e.g. `npx fiori add help`.\r\n\r\n### Fixed\r\n- Adding deployment configuration to a Fiori application with an existng MTA project should now successfully update the `mta.yaml` and `package.json` files in the parent folder.\r\n- Fixed standalone deployment configuration for Cloud Foundry destinations.\r\n- The Fiori generator no longer crashes if the Cloud Foundry account does not match that configured in SAP Business Application Studio.\r\n\r\n## [1.3.3] - 2021-09-16\r\n#### Added\r\n- The generator now supports optionally adding eslint validation to the generated project.  Choosing this option from the advanced options of the generator will add the eslint libraries and a new target `npm run lint` to perform the validation.\r\n- ABAP deployment now allows the user to provide a project ZIP file from either the local filesystem or from a remote URL.\r\n- Successful deployment to Cloud Foundry will provide instructions on how to retreive the URL of the deployed application.\r\n- Using the `CF Application Router Generator` for generating a multi-targeted application no longer asks for the version of the MTA, but will default to `0.0.1` in the generated `mta.yaml` file.\r\n\r\n### Fixed\r\n- Better handling for destinations with SAML authentication.\r\n- Deployment logic updated to ensure only files in the `dist` folder are uploaded.\r\n- Better support for long MTA identifier names during Cloud Foundry deployment.\r\n- Improved support for project folders with spaces with the generator.\r\n\r\n## [1.3.2] - 2021-09-02\r\n#### Added\r\n- Added ability to optionally include UI5 code assistance libraries to the generated application by choosing it in the advanced options of the generator.\r\n- Using a Saved System in VSCode will now ask the user to re-authenticate if the saved credentials are no longer valid.\r\n\r\n### Fixed\r\n- Fixed an issue which caused the Fiori generator to crash when connecting to a Cloud Foundry service if the SAP Business Application Studio subaccount is not the same as the Cloud Foundry organisation.\r\n\r\n## [1.3.1] - 2021-08-19\r\n#### Added\r\n- Added support for generating Fiori applications using the SAP API Business Hub from the Service Center in Business Application Studio.\r\n- Non identifiable and optional telemetry data has been added for deployment.\r\n\r\n### Fixed\r\n- The `minUI5Version` version in the generated `manifest.json` file now details the UI5 version used during generation.\r\n- Improved support for detecting Reuse libraries in the local workspace.\r\n\r\n## [1.3.0] - 2021-07-28\r\n### Fixed\r\n- Fixed an issue which caused the Fiori generator to crash due to presence of multiple schemas in the metadata file\r\n- Fixed an issue where generated project was missing undeploy script when deploy config was created for Cloud Foundry environment\r\n- Fixed an issue where the cloned reuse library with missing description in i18 file was not being listed for being added as a reference\r\n\r\n\r\n## [1.2.5] - 2021-07-22\r\n#### Added\r\n- Added support for Cloud Foundry deployment configuration during non-interactive generation.\r\n\r\n### Fixed\r\n- Better support for determining if pre-requisite `mta` library is installed before attempting to add Cloud Foundry deployment configuration.\r\n- Removed erroneous telemetry error messages when using the generator from the command line.\r\n- Fixed the deployment name character restrictions for ABAP deployment. \r\n\r\n## [1.2.4] - 2021-07-08\r\n#### Added\r\n- Destinations configured with a service URL endpoint, or a hostname, can now be used with the Fiori generator in Business Application Studio.\r\n- Reuse components and libraries in the local workspace can now be added to your project.  Use the command palette entry `Fiori: Add Reference to SAP Fiori Reusable Libraries` to invoke this functionality.\r\n\r\n### Fixed\r\n- In Business Application Studio, the Cloud Foundry Destination dropdown in the Deployment Configuration step of the Generator should now successfully return all available destinations.\r\n\r\n## [1.2.3] - 2021-06-24\r\n#### Added\r\n- Deploying to a system that requires authentication will now prompt for a username and password if a local `.env` file with the credentials is not present.\r\n- Installing the generator in a custom location is now supported.\r\n\r\n### Fixed\r\n- Freestyle applications generated for a CAP project will no longer contain invalid test artefacts.\r\n- The `start-local` npm target now works with the SAP Belize theme.\r\n- Deleting a saved SAP system from VSCode now also deletes the authentication token from the secure storage.\r\n- Deployed Fiori elements applications now correctly display the application title.\r\n\r\n## [1.2.1] - 2021-06-10\r\n#### Added\r\n- Added support for the Service Center in Business Application Studio.  Services selected in the Service Center can now be used with the Fiori generator and the user will not be asked to provide a data source during generation, the selected service from the Service Center will be used instead.\r\n- Added support for Destinations in Business Application Studio that have been configured with a service endpoint URL rather than a catalog service.\r\n\r\n### Fixed\r\n- Requesting authentication for a saved system in VSCode no longer launches multiple browsers to authenticate. Only one browser should now open.\r\n- Browser title for deployed applications now correctly displays the application title.\r\n- Upgraded UI5 libraries to resolve security vulnerabilities.\r\n\r\n## [1.2.0] - 2021-05-28\r\n### Fixed\r\n- The Fiori generator will be automatically installed if it is invoked from the command palette in VSCode and not already installed.\r\n- Projects migrated from WebIDE to Business Application Studio can now be deployed.\r\n- Migrated projects now include an OPA test script where applicable.\r\n\r\n## [1.1.11] - 2021-05-14\r\n#### Added\r\n- Added support to include undeployment script (check `undeploy` script in package.json) when deployment configuration is generated for ABAP systems.\r\n\r\n#### Fixed\r\n- To ensure consistency, all generated V2, V4 or CAP applications will now have a header bar and preview will launch the application in a browser directly without showing Fiori launchpad first\r\n\r\n## [1.1.10] - 2021-04-29\r\n#### Added\r\n- Improved the destination catalog service request to ensure the list of services returned is filtered to those suitable for Fiori applications.  Note: the catalog service needs to also be updated to accommodate this change, if not, the existing list is returned.\r\n\r\n#### Fixed\r\n- The Fiori migration wizard on Business Application Studio no longer asks for the client field.\r\n\r\n## [1.1.9] - 2021-04-15\r\n#### Added\r\n- Fiori elements applications generated with the following floor plans now have simple OPA automated tests generated with the project:\r\n\t- List Report Object Page (with either a V2 or V4 OData service)\r\n\t- Analytical List Page (with an V4 OData service)\r\n- Added Ability to generate a Fiori freestyle application from the command line in a non-interactive mode.\r\n- Floor plan icons in the generator have been updated.\r\n- The deployment configuration questions have been reduced where system information can already be determined.\r\n- The generator now requires [MTA](https://www.npmjs.com/package/mta) Node.js package (version 1.0 or higher) to be installed globally.  Please ensure you have updated by executing `npm install -g mta`.\r\n\r\n#### Fixed\r\n- Navigating back and forwards within the wizard should not lose previously completed steps.\r\n- The generator will no longer suggest the first folder in a workspace to generate the application into.\r\n- Better handling of long module names for deployment\r\n- The generator README.MD file now correctly details the floor plan used.\r\n\r\n## [1.1.7] - 2021-04-01\r\n#### Added\r\n- Uploading a metadata document for V4 OData services is now supported.\r\n- Better error messaging when the destination in Business Application Studio is not available.\r\n\r\n#### Fixed\r\n- The freestyle floor plans now correctly generate for a CAP project.\r\n- Going back from deployment to the project attributes step in the wizard now retains the data between steps.\r\n- Adding launchpad config on the command line can now overwrite existing configuration if desired.\r\n\r\n## [1.1.6] - 2021-03-26\r\n#### Fixed\r\n- Adding Cloud Foundry deployment configuration in Business Application Studio during generation no longer results in an error.\r\n\r\n## [1.1.5] - 2021-03-18\r\n#### Added\r\n- Freestyle SAPUI5 floor plan now supports OData V4 services.\r\n- The analytical list page floor plan with OData V4 service now supports navigation entities.\r\n- Adding deployment configuration for Cloud Foundry now supports the managed application router.\r\n- Using the `CF Application Router Generator` for generating a multi-targeted application now supports the managed application router.\r\n\r\n#### Fixed\r\n- Applications deployed to the managed application router cannot resolve the ui5 destination.\r\n- In some cases, validation messages for invalid OData service URLs were not being displayed.\r\n\r\n## [1.1.4] - 2021-03-04\r\n#### Added\r\n- Added support for the central Fiori Launchpad for managed app router configurations.\r\n- Generated projects no longer contain a `.npmrc` file and use the global settings.\r\n- Project generation time has been improved.\r\n\r\n#### Fixed\r\n- The Fiori generator no longer has a conflict with the SAP Mobile Development Kit VSCode extension.\r\n- Fixed invalid 401 error for OData service URL endpoints.\r\n- Project folder is no longer created before generation starts.\r\n- Deployment to Cloud Foundry now supports Org name with spaces.\r\n- Updating an existing MTA file with deployment configuration on Windows is now supported.\r\n\r\n## [1.1.2] - 2021-02-19\r\n#### Added\r\n- Support for adding project deployment configuration to an existing managed app router.\r\n- Project paths in generated launch configuration are now relative.\r\n- Migrating an existing application now prompts for system client.\r\n- In SAP Business Application Studio, the destination name for MTA deployment configuration is now a dropdown of available destinations rather than a free text field.\r\n- For ABAP deployment configuration, the user can now optionally provide a deployment description.\r\n\r\n#### Fixed\r\n- Standalone deployment to Cloud Foundry no longer returns an error.\r\n\r\n## [1.1.0] - 2021-02-05\r\n#### Added\r\n- Initial Version\r\n- Consolidated the existing `Fiori elements` and `Fiori freestyle` generators into one. The first step of the combined generator will ask you to choose which type of application you would like to generate.\r\n- Added support for deployment configuration as part of generation. Users can now choose to add either Cloud Foundry or ABAP deployment configuration using the generator if they wish.\r\n- Added support for Fiori launch pad (FLP) configuration as part of generation.  \r\n- Added a new `Cloud Foundry Application Router Generator` that allows the user to generate generic Cloud Foundry configuration which can then be used with subsequent Fiori projects.\r\n- Added support for custom paths for folder locations in CDS projects.\r\n- The authenticated username is now displayed alongside the saved system name when using VSCode.\r\n"},{"name":"generators","nodes":[{"name":"fiori-elements","nodes":[{"name":"templates","nodes":[{"name":"README.md","content":"## Application Details\r\n|               |\r\n| ------------- |\r\n|**Generation Date and Time**<br><%= genDate %>|\r\n|**App Generator**<br><%= genId %>|\r\n|**App Generator Version**<br><%= genVersion %>|\r\n|**Generation Platform**<br><%= genPlatform %>|\r\n|**Floorplan Used**<br><%= templateLabel %>|\r\n|**Service Type**<br><%= dataSourceLabel %>|<% if(metadataFilename) { %>\r\n|**Metadata File**<br><%= metadataFilename %><% } else { %>\r\n|**Service URL**<br><%= serviceUrl %><%}%>\r\n|**Module Name**<br><%= projectName %>|\r\n|**Application Title**<br><%= projectTitle %>|\r\n|**Namespace**<br><%= projectNamespace %>|\r\n|**UI5 Theme**<br><%= ui5Theme %>|\r\n|**UI5 Version**<br><% if (projectUI5Version===\"\") { %><%- \"Latest\" %><% } else { %><%- projectUI5Version %><% } %>|\r\n|**Enable Code Assist Libraries**<br><% if(enableCodeAssist === true) { %><%= \"True\" %><% } else { %><%= \"False\" %><% }%>|\r\n|**Add Eslint configuration**<br><% if(enableEslint === true) { %><%= \"True, see https://www.npmjs.com/package/eslint-plugin-fiori-custom for the eslint rules.\" %><% } else { %><%= \"False\" %><% }%>|\r\n|**Enable Telemetry**<br><% if(enableTelemetry === false) { %><%= \"False\" %><% } else { %><%= \"True\" %><% } %>|<% if (additionalEntries) additionalEntries.forEach(entry => { %>\r\n|**<%= entry.label %>**<br><%= entry.value %>|<%})%>\r\n\r\n## <%= projectName %>\r\n\r\n<%= projectDescription %>\r\n\r\n### Starting the generated app\r\n\r\n-   This app has been generated using the SAP Fiori tools - App Generator, as part of the SAP Fiori tools suite.  <%= launchText %><% if(showMockDataInfo) {%>\r\n\r\n- It is also possible to run the application using mock data that reflects the OData Service URL supplied during application generation.  In order to run the application with Mock Data, run the following from the generated app root folder:\r\n\r\n```\r\n    npm run start-mock\r\n```<%}%>\r\n\r\n#### Pre-requisites:\r\n\r\n1. Active NodeJS LTS (Long Term Support) version and associated supported NPM version.  (See https://nodejs.org)\r\n\r\n\r\n"}]}]},{"name":"fiori-freestyle","nodes":[{"name":"templates","nodes":[{"name":"README.md","content":"## Application Details\r\n|               |\r\n| ------------- |\r\n|**Generation Date and Time**<br><%= genDate %>|\r\n|**App Generator**<br><%= genId %>|\r\n|**App Generator Version**<br><%= genVersion %>|\r\n|**Generation Platform**<br><%= genPlatform %>|\r\n|**Floorplan Used**<br><%= templateLabel %>|\r\n|**Service Type**<br><%= dataSourceLabel %>|<% if(metadataFilename) { %>\r\n|**Metadata File**<br><%= metadataFilename %><% } else { %>\r\n|**Service URL**<br><%= serviceUrl %><%}%>\r\n|**Module Name**<br><%= projectName %>|\r\n|**Application Title**<br><%= projectTitle %>|\r\n|**Namespace**<br><%= projectNamespace %>|\r\n|**UI5 Theme**<br><%= ui5Theme %>|\r\n|**UI5 Version**<br><% if (projectUI5Version===\"\") { %><%- \"Latest\" %><% } else { %><%- projectUI5Version %><% } %>|\r\n|**Enable Code Assist Libraries**<br><% if(enableCodeAssist === true) { %><%= \"True\" %><% } else { %><%= \"False\" %><% }%>|\r\n|**Add Eslint configuration**<br><% if(enableEslint === true) { %><%= \"True, see https://www.npmjs.com/package/eslint-plugin-fiori-custom for the eslint rules.\" %><% } else { %><%= \"False\" %><% }%>|\r\n|**Enable Telemetry**<br><% if(enableTelemetry === false) { %><%= \"False\" %><% } else { %><%= \"True\" %><% } %>|<% if (additionalEntries) additionalEntries.forEach(entry => { %>\r\n|**<%= entry.label %>**<br><%= entry.value %>|<%})%>\r\n\r\n## <%= projectName %>\r\n\r\n<%= projectDescription %>\r\n\r\n### Starting the generated app\r\n\r\n-   This app has been generated using the SAP Fiori tools - App Generator, as part of the SAP Fiori tools suite.  <%= launchText %><% if(showMockDataInfo) {%>\r\n\r\n- It is also possible to run the application using mock data that reflects the OData Service URL supplied during application generation.  In order to run the application with Mock Data, run the following from the generated app root folder:\r\n\r\n```\r\n    npm run start-mock\r\n```<%}%>\r\n\r\n#### Pre-requisites:\r\n\r\n1. Active NodeJS LTS (Long Term Support) version and associated supported NPM version.  (See https://nodejs.org)\r\n\r\n\r\n"}]}]},{"name":"project-generator","nodes":[{"name":"templates","nodes":[{"name":"README.md","content":"## Application Details\r\n|               |\r\n| ------------- |\r\n|**Generation Date and Time**<br><%= genDate %>|\r\n|**App Generator**<br><%= genId %>|\r\n|**App Generator Version**<br><%= genVersion %>|\r\n|**Generation Platform**<br><%= genPlatform %>|\r\n|**Floorplan Used**<br><%= templateLabel %>|\r\n|**Service Type**<br><%= dataSourceLabel %>|<% if(metadataFilename) { %>\r\n|**Metadata File**<br><%= metadataFilename %><% } else { %>\r\n|**Service URL**<br><%= serviceUrl %><%}%>\r\n|**Module Name**<br><%= projectName %>|\r\n|**Application Title**<br><%= projectTitle %>|\r\n|**Namespace**<br><%= projectNamespace %>|\r\n|**UI5 Theme**<br><%= ui5Theme %>|\r\n|**UI5 Version**<br><% if (projectUI5Version===\"\") { %><%- \"Latest\" %><% } else { %><%- projectUI5Version %><% } %>|\r\n|**Enable Code Assist Libraries**<br><% if(enableCodeAssist === true) { %><%= \"True\" %><% } else { %><%= \"False\" %><% }%>|\r\n|**Add Eslint configuration**<br><% if(enableEslint === true) { %><%= \"True, see https://www.npmjs.com/package/eslint-plugin-fiori-custom for the eslint rules.\" %><% } else { %><%= \"False\" %><% }%>|<% if (additionalEntries) additionalEntries.forEach(entry => { %>\r\n|**<%= entry.label %>**<br><%= entry.value %>|<%})%>\r\n\r\n## <%= projectName %>\r\n\r\n<%= projectDescription %>\r\n\r\n### Starting the generated app\r\n\r\n-   This app has been generated using the SAP Fiori tools - App Generator, as part of the SAP Fiori tools suite.  <%= launchText %><% if(showMockDataInfo) {%>\r\n\r\n- It is also possible to run the application using mock data that reflects the OData Service URL supplied during application generation.  In order to run the application with Mock Data, run the following from the generated app root folder:\r\n\r\n```\r\n    npm run start-mock\r\n```<%}%>\r\n\r\n#### Pre-requisites:\r\n\r\n1. Active NodeJS LTS (Long Term Support) version and associated supported NPM version.  (See https://nodejs.org)\r\n\r\n\r\n"}]}]}]},{"name":"README.md","content":"# @sap/generator-fiori\r\n\r\n## Features\r\n\r\nThe **SAP Fiori application generator** provides a single entry point to generate both SAP Fiori elements applications and SAP Fiori freestyle applications. Users can choose the type of template required, along with the relevant data source, and an application will be generated into the specified folder.\r\n\r\nThe generated application conforms to the [Fiori Design guidelines](https://experience.sap.com/fiori-design-web/floorplans/floorplan-overview/) and SAP best practices.\r\n\r\n## Installation\r\n\r\n1. Get [Node.js](https://nodejs.org/en/download/)\r\n1. Install Yeoman(https://https://yeoman.io/) by executing `npm install -g yo`. Note: `yo` version 4.3.0 or higher required for macOS Monterey.\r\n1. Install the [MTA](https://www.npmjs.com/package/mta) Node.js package (version 1.0 or higher) by executing `npm install -g mta`.\r\n\r\nThe SAP Fiori generator can be installed using either of the following methods:\r\n\r\n- **Install the generator from NPM**\r\n\r\n  - Execute\r\n\r\n    ```sh\r\n    npm install -g @sap/generator-fiori\r\n    ```\r\n\r\n- **Install the generator from the SAP Fiori Tools extension pack.**\r\n\r\n  - Installing the SAP Fiori Tools extension pack will automatically check if the SAP Fiori generator is installed and install it if necessary.\r\n\r\nAfter installation, verify your installation to see if Yeoman has been installed correctly with the Fiori generator.\r\n\r\n```\r\nyo\r\n```\r\n\r\n  Make sure you see the `@sap/fiori` generator listed.\r\n\r\n## Launch Fiori application generator\r\n\r\n### Using Yeoman\r\n\r\n- `yo`\r\n\r\nOR\r\n\r\n### Using the Yeoman Application Wizard\r\n\r\n- Additionally you can use the Yeoman Application Wizard for a more feature rich user experience.\r\n- Download the latest release of the Yeoman Application Wizard from the VSCode marketplace.  Search for 'Application Wizard' in the marketplace.\r\n- Invoke the Yeoman UI Wizard in VSCode by calling `CMD + Shift + P -> Open Application Wizard`\r\n- This will show all Yeoman templates that have been installed on the user's machine, and should include an option for the `SAP Fiori application`\r\n- Alternatively, if you have the SAP Fiori tools pack installed, you can call `CMD + Shift + P -> Fiori: Open Application Generator`.  This will launch the Yeoman UI Wizard but restrict it to just work with with the SAP Fiori Tools Application Generator.\r\n\r\n## Usage for Fiori elements application\r\n\r\nOnce SAP Fiori application generator is launched successfully, a user is asked to choose the application type. The user can choose between Fiori\r\nelements and Fiori freestyle applications. The templates (floorplans) of the selected application type are then listed for user to\r\nchoose.\r\n\r\n### Generator Wizard Steps\r\n\r\n#### 1. Template selection\r\n\r\nSelect the required template type to use when generating your application. The generator currently supports the following templates:\r\n\r\n**SAP Fiori elements**\r\n- List Report Object Page\r\n- Worklist\r\n- Analytical List Page\r\n- Overview Page\r\n\r\n**SAP Fiori freestyle**\r\n- SAP Fiori Worklist Application\r\n- SAP Fiori Master-Detail Application\r\n- SAPUI5 Application\r\n\r\n#### 2. Select Data Source\r\n\r\nCurrently, the generator supports the following methods to provide the Data Source:\r\n\r\n- **Connect to a System**\r\n\r\n  You can connect to a System in VSCode by selecting one of the following methods:\r\n\r\n  1. You can choose to connect to an existing ABAP on premise system by providing the URL and optional SAP Client identifier.  If the URL requires authentication, you will need to provide those details during generation.\r\n  1. You can connect to an ABAP environment on the SAP Business Technology Platform.  In this case, you must provide a local file that defines the service connection details for the desired ABAP Environment.  Once you provide these details, a browser tab will launch for you to provide authentication details.\r\n\r\n  In both cases, if you choose to save the SAP system for future reference, the system details will be stored in the secure storage location of your operating system.\r\n\r\n- **Connect to an OData service**\r\n\r\n  Enter the OData endpoint URL you wish to use in your generated application. Currently, the generator supports an OData endpoint that is either unauthenticated or authenticated with Basic authentication. For an authenticated OData endpoint, you will be asked to provide a username and password.\r\n\r\n- **Connect to SAP API Business Hub**\r\n\r\n  You can use any of the services available in the SAP API Business Hub by providing your authentication details and choosing the relevant service.\r\n\r\n- **Use a Local CAP Project**\r\n\r\n  For Odata V4 CAP projects, you can reference an existing project and use the service in that project during generation.\r\n\r\n- **Upload a data service metadata file**\r\n\r\n  Upload a service metadata file that represents the back end service from the file system. This allows the user to generate the application without relying on a back end service being available.\r\n\r\n  **Note:** Uploading a data service metadata file will restrict the generated application to only be available using mock data.\r\n\r\n#### 3. Select relevant entities\r\n\r\nOnce the data source has been supplied, the **SAP Fiori application generator** will present a list of entities from the OData service to choose.\r\n\r\n#### 4. Add project descriptor data\r\n\r\nIn the next step, provide the following information:\r\n\r\n- **Module name** Required.  Must be alpha-numberic and cannot contain spaces.  The generated NodeJS application will use the module name as its package name.  Will also be used as the folder name of the generated application.\r\n- **App Title** Required.  This will be the title in the header of the generated application\r\n- **Namespace** Required.  The UI5 project namespace to be used.  Must start with a letter and contain letters, digits and periods only.\r\n- **Description** Required. The text description of the application.\r\n- **Parent Folder** Required.  The parent folder into which the new application will be generated.  The new application will be generated in a new folder with the `Module Name` as detailed above.  If there already exists a folder with the same name, the user must choose a new Module name.\r\n\r\n- **Advanced Configuration** Optional.  The user can choose to customise the generated application with the following options:\r\n\r\n  - **UI5 CSS Theme**\r\n  - **UI5 Javascript Library Version**\r\n\r\n- **Deployment Configuration** Optional.  If selected, an extra step will be added to the generator for adding deployment configuration using either ABAP or Cloud Foundry\r\n\r\n- **FLP Configuration** Optional.  If selected, an extra step will be added to the generator for adding Fiori launchpad configuration to the generated application.\r\n\r\n### Running the generated app\r\n\r\nAfter the application has been successfully generated, open a terminal and browse to the root folder of the generated application. For a V2 template application, there are two methods available to run the application:\r\n\r\n- **Running the application with connection to the live OData endpoint**\r\n\r\n  Start the application using `npm start`.  This will make the application available on `localhost:8080`, and will connect to the live OData endpoint.  If the OData endpoint requires authentication, the user will be asked to authenticate in the browser.\r\n\r\n- **Running the application using mock data (V2 only)**\r\n\r\n  Start the application using `npm run start-mock`.  This will make the application available on `localhost:8080`, but will use a mock server to reflect the OData endpoint.  This ensures that developers can use the application without having to connect to a live OData service.\r\n\r\n- **Running the application using context menu**\r\n\r\n  Under the `src` folder, find the `app.json` file.  Right click and select **Open Preview in Browser** (launches a browser with your application).\r\n\r\n\r\n## Prerequisites\r\n\r\nThe generated application requires the following software to be installed:\r\n\r\n- [NodeJS](https://nodejs.org/en/download/) Node version must be >10.15.3 - 10.x or 12.13.\r\n- [MTA](https://www.npmjs.com/package/mta) MTA Version must be >= 1.0\r\n- Windows OS requires [windows-build-tools](https://www.npmjs.com/package/windows-build-tools) NPM module installed globally.\r\n\r\n## Support\r\n\r\nJoin the [SAP Fiori Tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.\r\nPlease assign tag: _SAP Fiori tools_\r\n\r\nTo log an issue with SAP Fiori Tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n"}]