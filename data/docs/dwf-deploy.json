[{"name":"CHANGELOG.md","content":"# Changelog\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [2.6.4] - 2022-04-08\r\nAdded:\r\n- LICENSE file\r\n- BOM.json\r\n\r\nFixed:\r\n- For release on NPMJS via MoMa pipeline\r\n## [2.6.1] - 2021-08-20\r\nAdded:\r\n- Logs the nodejs version\r\n\r\nFixed:\r\n- Supports node 14\r\n\r\n## [2.6.0] - 2021-01-29\r\nAdded:\r\n- To be used with DWF 2.0 SP06\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Supports node 12\r\n\r\n## [2.5.0] - 2020-12-15\r\nAdded:\r\n-\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Requires engine ^10.0.0 || ^12.0.0\r\n\r\n## [2.4.1] - 2020-03-19\r\nAdded:\r\n-\r\n\r\nFixed:\r\n- Updates the used node dependencies\r\n- Requires engine ^8.0.0 || ^10.0.0\r\n\r\n## [2.4.0] - 2018-09-13\r\nAdded:\r\n- .dwfdlmtablegroup - the design time artifact for modeling text, where the content of the file can be any valid text\r\n- .dwfndso - the design time artifact for modeling text, where the content of the file can be any valid text\r\n\r\nFixed:\r\n- .dwfnamespace - calculation and handling\r\n\r\n## [2.3.0] - 2018-03-05\r\nAdded:\r\n- Released for DWF 2 SP03\r\n\r\nFixed:\r\n- changelog - complies with the 'Keep a Changelog' format\r\n- Requires engine ^6.9.1\r\n\r\n## [2.2.4] - 2017-09-07\r\n### Fixed\r\n- .dwfnamespace - fixed calculation, will require redeploy\r\n\r\n## [2.2.3] - 2017-08-15\r\n### Fixed\r\n- license â€“ shall have no license\r\n\r\n## [2.2.2] - 2017-08-11\r\n### Fixed\r\n- trace - the version of the module\r\n- repository - properly to update the providers and object types\r\n\r\n## [2.2.1] - 2017-06-29\r\n### Fixed\r\n- minor fixes\r\n- dwfdlmprofile - aligns with the general requirements for deployment of design time artefacts\r\n- log and trace - handles better the sensitive data\r\n- verbose - traces the details of the request and response\r\n\r\n## [2.2.0] - 2017-05-30\r\n### Added\r\n- .dwfnamespace - schema validation\r\n- repository - persists the calculated hash in the object instance\r\n- dwf-template - removes the open source dependencies that are required for its Backend module, because they shall be made available via the dwf-dws-client\r\n- .dwftaskchain -  delta-deployment\r\n\r\n## [2.0.3] - 2017-03-21\r\n### Fixed\r\n- dwf-template - bumps the versions of express and body-parser\r\n\r\n## [2.0.2] - 2017-03-21\r\n### Fixed\r\n- dwf-template - removes the dependency to swagger-express-mw\r\n\r\n## [2.0.1] - 2017-03-14\r\n### Added\r\n- dwf-template - adds the open source dependencies that are required for its Backend module\r\n\r\n### Fixed\r\n- stdout and stderr - writes synchronously to avoid loss of log output in case of crashes, etc.\r\n- trace - removes the sensitive information for the traced data\r\n- dwf-template - adds the dependencies that are required by the Backend module of our dwf-template\r\n- ssl certificate - loads the certificate by calling xsenv.loadCertificates(). If no certificates are loaded, then falls back to process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0 to avoid rejecting unauthorized backends\r\n- org_guid and space_guid - fetched from the environment and pushed to the repository\r\n\r\n## [2.0.0] - 2017-02-23\r\n### Added\r\n- dwf module environment - isolation per version, currently used for version 1\r\n- repository - updates the dwf repository after dwf service provider is modified\r\n- .dwfnamespace - the design time artifact for modeling namespaces, wihch are different than the default ones\r\n- command line arguments - help, version, trace, verbose, exit and rejectUnauthorized\r\n- .dwftaskchain - batch post for all task chains will replace the old post per task chain, to ensure the deployment transaction of module level\r\n- .txt - the design time artifact for modeling text, where the content of the file can be any valid text\r\n- .{any extension} - rejects the deployment of dwf-modules, which contain unsupported file extensions\r\n - .dwftaskchain - the design time artifact for modeling task chains, where the content of the file shall be a valid stringified json\r\n\r\n### Fixed\r\n- empty dwf module - Cannot read property 'forEach' of undefined: \\@sap\\dwf-deploy\\lib\\dwf\\repository.js:35\r\n- .dwftaskchain - supports nameless designtime files (i.e. .dwftaskchain as a complete file name)\r\n- service instance - logs the name of the service instance (a.k.a. container) to which is deploying\r\n- environment - expects the finalized structure for DWF 2.0 SP00 and HANA 2 SP01\r\n- the stack trace of an error - will not be lost, but will be traced\r\n- .dwftaskchain - will check the status code in the response of the post http call\r\n- .dwftaskchain - will abort the deployment, when two or more designtime files defining the same runtime object\r\n- .dwftaskchain - the default namespace of the runtime object is now prefixed with {mta.yaml mta name}.{mta.yaml dwf-module name}\r\n - .dwftaskchain - the name of the runtime object is derived by the file name, but without its file extension\r\n"},{"name":"README.md","content":"stable: [master](../../tree/master) - [change log](../../tree/master/CHANGELOG.md) - [latest release](../../releases/latest) |  development: [master](../../tree/master) - [change log](../../tree/master/CHANGELOG.md) - [all releases](../../releases) - [development guidelines](../../wiki)\r\n\r\n# dwf-deploy\r\n\r\nThe DWF Deploy\r\n - Checks for unsupported design time artefacts - ok (DWF 2.0 SP01)\r\n - Prepares the payload for the materialization (i.e. processes the dwfnamespace files) - ok (DWF 2.0 SP01)\r\n - Executes the materialization of the design to runtime objects, where the transactional scope is on module level [dwf-runtime](../../../../DWF/dwf-runtime) - ok (DWF 2.0 SP01)\r\n - Grants required privileges to the technical user (i.e. to be able to perform the exposed actions) - TODO\r\n\r\nThe implementation is based on [xs2/hdideploy.js](../../../../xs2/hdideploy.js).\r\n\r\n```\r\n  +-----------------+            +-----------------+    +-----------------+\r\n  | dwf module      |            | Web IDE         |    | ... module      |\r\n  | w/ dwf-deploy   |            |                 |    |                 |\r\n  +-----------------+            +-----------------+    +-----------------+\r\n\r\n           |                              |                      |\r\n           |                              |                      |\r\n \\/ design -> runtime                        \\/ discover/execute\r\n           |                              |                      |\r\n           |                              |                      |\r\n\r\n  +-----------------------------------------------------------------------+\r\n  | dwf-runtime                                                           |\r\n  | types(toe,dlm), instances(toe/chaim, dlm/profile), actions (execute)  |\r\n  +-----------------------------------------------------------------------+\r\n```\r\n\r\nThe materialization patterns\r\n - .txt - accepted, but not processed\r\n - .dwfnamespace - overwrites the default logic for calculating the namespace. Default namespace for the src folder is calculated based on the following setting { \"name\": \"{mta.yaml mta name}.{mta.yaml dwf-module name}.src\", \"subfolder\": \"append\" }\r\n - .dwftaskchain - {mta name}/{dwf-module name}/src/.../toeChainExample.dwftaskchain -> {dwf-toe url per extension}/<namespace>/toeChainExample\r\n - .dwfdlmprofile - {mta name}/{dwf-module name}/src/.../dlmProfileExample.dwfdlmprofile -> {dwf-dlm-backend url per extension}\r\n\r\nThe considered scenarios\r\n - deploy/update: version >= 2.0.x\r\n - rename: version >= 2.2.x\r\n - delete: version >= 2.2.x\r\n - delta: version >= 2.2.x\r\n\r\n"}]