[{"name":"CHANGELOG.md","content":"# Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\r\n\r\n## [2.6.6] - 2022-04-09\r\n\r\n### Changed\r\n\r\n- Add LICENSE file\r\n\r\n## [2.6.0] - 2021-01-27\r\n\r\n### Changed\r\n\r\n- Update node.js version\r\n- Update \"@sap/hana-client\" to \"2.6.58\"\r\n- Update \"@sap/hdbext\" to \"7.0.1\"\r\n- Update \"@sap/logging\" to \"6.0.0\"\r\n\r\n## [2.5.4] - 2019-04-04\r\n\r\n### Changed\r\n\r\n- Bump logging version to 4.1.0\r\n\r\n## [2.5.3] - 2019-02-19\r\n\r\n### Removed\r\n\r\n- Remove activation id from message text\r\n\r\n## [2.5.2] - 2019-02-05\r\n\r\n### Changed\r\n\r\n- Modify error handling for task execution\r\n- Update npm-shrinkwrap.json\r\n\r\n## [2.5.1] - 2019-01-29\r\n\r\n### Changed\r\n\r\n- Remove module \"lodash\"\r\n\r\n## [2.5.0] - 2019-01-24\r\n\r\n### Changed\r\n\r\n- Update module \"@sap/hdbext\" from \"5.0.0\" to \"5.1.0\"\r\n- Update module \"express\" from \"4.16.3\" to \"4.16.4\"\r\n- Update module \"lodash\" from \"4.17.4\" to \"4.17.11\"\r\n\r\n## [2.4.3] - 2019-01-02\r\n\r\n### Fixed\r\n\r\n- Removed devDependencies from npm-shrinkwrap.json\r\n\r\n## [2.4.2] - 2018-12-21\r\n\r\n### Changed\r\n\r\n- Replace module \"hdb\" with \"@sap/hdbext\"\r\n\r\n## [2.4.1] - 2018-11-05\r\n\r\n### Added\r\n\r\n- Set application name while opening db connection.\r\n\r\n## [2.4.0] - 2018-09-14\r\n\r\n### Changed\r\n\r\n- Check url-api version of DWF runtime / DWF Task Orchestration Engine\r\n- Update checking service credentials of db service /helpers/dbClient\r\n- Fix callback handling of module /hanaNative/tasks/getMsgTableNames\r\n- Switch from ESLint to StandardJS\r\n- Fix NDSO getOperationInfo calls\r\n- Replace module \"@sap/hdbext\" by \"hdb\"\r\n- Correct typos in texts in /i18n/toe.properties\r\n- Update versions of used modules\r\n\r\n## [2.3.3] - 2018-03-05\r\n\r\n### Changed\r\n\r\n- Remove default value of message table for task type execute procedure\r\n- Update versions of used modules and npm-shrinkwrap.json\r\n- Support value help button for ndso names\r\n- Limit ndso SQL result to 50\r\n- Set Certificate Authority for tasktype load from url\r\n\r\n## [2.3.2] - 2018-01-22\r\n\r\n### Changed\r\n\r\n- Update versions of used @sap modules and npm-shrinkwrap.json.\r\n\r\n## [2.3.1] - 2018-01-19\r\n\r\n### Changed\r\n\r\n- Update npm-shrinkwrap.json.\r\n- Allow empty path parameters for value help services.\r\n- Correct names of value help placeholders of registered task types.\r\n- Update versions of used @sap modules.\r\n\r\n## [2.3.0] - 2018-01-12\r\n\r\n### Added\r\n\r\n- Initial version for Data Warehousing Foundation 2.0 SP03: Adjust the parameter models of the task types\r\nto new features provided by the parameter form control.\r\n"},{"name":"README.md","content":"# Data Warehouse Services Client\r\nThis Node.js package registers the SAP default task types at the Data Warehouse\r\nScheduler that need access to the local HDI and DWF containers of the consuming\r\nproject. In addition it runs an HTTP server to provide task type related\r\nendpoints for value helps and task execution.\r\n\r\n# Usage\r\nAdd this package as dependency in a standard Node.js module in your XSA\r\napplication.\r\n\r\nIn your development descriptor `mta.yaml` ensure that HDI (type\r\n`com.sap.xs.hdi-container` and DWF (type `com.sap.xs.dwf-edw-client`) services\r\nare bound in the resources section. For example:\r\n\r\n```yaml\r\nresources:\r\n- name: myapp-dws\r\n  type: com.sap.xs.dwf-edw-client\r\n  properties:\r\n      dwf-edw-client-name: ${service-name}\r\n- name: myapp-hdi\r\n  type: com.sap.xs.hdi-container\r\n  properties:\r\n      hdi-container-name: ${service-name}\r\n```\r\n\r\nThe service instances have to be required by the module consuming this package\r\n\r\n```yaml\r\nmodules:\r\n- name: myapp-Backend\r\n  type: nodejs\r\n  path: Backend\r\n  requires:\r\n    - name: myapp-hdi\r\n    - name: myapp-dws\r\n```\r\n\r\nIn the start script of your Node.js module load this package and instantiate\r\nthe client for the Task Orchestration Engine of the Data Warehouse Scheduler\r\n(TOE):\r\n\r\n```js\r\nconst xsenv = require('@sap/xsenv');\r\nconst dwsClient = require('@sap/dwf-dws-client');\r\n\r\nconst loopBackUrl = JSON.parse(process.env.VCAP_APPLICATION).full_application_uris[0];\r\nconst rejectUnauth = true;\r\nconst TaskChain = dwsClient.taskChain.createTaskChainClient(\r\n  xsenv.getServices({\r\n    dwf: {\r\n      tag: 'dwf'\r\n    }\r\n  }).dwf,\r\n  loopBackUrl,\r\n  rejectUnauth\r\n);\r\n```\r\n\r\nTo allow the scheduler to call the registered endpoints, start an HTTP server\r\nand expose the routes. Below, you see an example using\r\n[express.js](https://expressjs.com).\r\n**Be aware** that this example omits proper authentication and\r\nauthorization checks which must be implemented for productive use.\r\n\r\n```js\r\nconst PORT = process.env.PORT || 3000;\r\nconst express = require('express');\r\nconst app = express();\r\n\r\nTaskChain.addRouter(app, '/backend');\r\napp.listen(PORT, err => {\r\n  if (err) {\r\n    console.error(err);\r\n    process.exit(2);\r\n  }\r\n\r\n  TaskChain.registerTaskGroups(err1 => {\r\n    if (err1) {\r\n      console.error(err1);\r\n      process.exit(1);\r\n    }\r\n    console.log('Backend module listening on: ' + PORT);\r\n  });\r\n});\r\n```"}]