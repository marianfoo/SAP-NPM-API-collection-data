[{"name":"CHANGELOG.md","content":"# Change Log\r\nAll notable changes to this project are documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/) and the changelog is formatted based on [Keep a Changelog](http://keepachangelog.com/).\r\n## [1.6.0] - 2022-05-05\r\n### Changed\r\n- The `fiori-tools-proxy` is now using the [@sap-ux/ui5-proxy-middleware](https://www.npmjs.com/package/@sap-ux/ui5-proxy-middleware) for proxying the UI5 sources\r\n\r\n## [1.5.5] - 2022-04-21\r\n### Fixed\r\n- Fixed an issue with the `fiori-tools-servestatic` middleware not serving files starting with a dot\r\n\r\n## [1.5.4] - 2022-04-07\r\n### Fixed\r\n- Fixed an issue with escaping runtime arguments on Windows with Node.js version 16\r\n\r\n## [1.5.3] - 2022-03-24\r\n### Added\r\n- Added support of new run configuration UI options\r\n\r\n### Fixed\r\n- Fixed an issue where developer variant creation is not starting with SAPUI5 version 1.100.0 and higher\r\n- Fixed an issue where an exception was thrown for SAPUI5 versions <= 1.65 when starting the application preview\r\n\r\n## [1.5.2] - 2022-03-10\r\n### Fixed\r\n- Fixed an issue with the validation of SAPUI5 snapshot versions when starting developer variant creation\r\n\r\n### Changed\r\n- If a port is explictly defined when previewing the application, then this port is not automatically changed, if it is occupied\r\n\r\n## [1.5.1] - 2022-02-24\r\n### Fixed\r\n- Fixed an issue with reading and comparing UI5 versions\r\n- Fixed an issue with previewing applications using services behind a corporate proxy\r\n\r\n### Changed\r\n- Build is no longer executed automatically before starting the application in an external Fiori Launchpad to accomodate custom build procedures\r\n\r\n## [1.5.0] - 2022-02-10\r\n### Fixed\r\n- Fixed an issue with reading and comparing UI5 versions\r\n- Fixed an issue with previewing applications using project based destination\r\n\r\n### Changed\r\n- Requests are not forwarded anymore to next available middleware if UI5 proxy returns 404\r\n\r\n## [1.4.7] - 2022-01-27\r\n### Changed\r\n- Forward request to next available middleware if UI5 proxy response returns 404\r\n- Consolidate UI5 version handling\r\n\r\n## [1.4.6] - 2022-01-13\r\n### Fixed\r\n- Improved variant management validation logic\r\n\r\n## [1.4.3] - 2021-11-18\r\n### Changed\r\n- Updated help texts\r\n\r\n### Fixed\r\n- Fixed an issue with resetting the IAppState on the Object Page\r\n\r\n## [1.4.1] - 2021-11-04\r\n### Fixed\r\n- Fixed minor issues\r\n\r\n## [1.4.0] - 2021-10-21\r\n### Added\r\n- Added a new option to create delivery variants/views\r\n\r\n### Fixed\r\n- Removed wrong WARN messages in the terminal when executing `npx fiori run`\r\n\r\n## [1.3.7] - 2021-10-07\r\n### Changed\r\n- Fixed minor issues and refactoring\r\n\r\n## [1.3.5] - 2021-09-23\r\n### Added\r\n- Added help options for SAP Fiori tools CLI. Typing `npx fiori help` will give the list of commands that the command line tools support. Help text for individual `fiori` commands can also be displayed, e.g. `npx fiori add help`.\r\n\r\n### Fixed\r\n- Stability fixes\r\n\r\n## [1.3.3] - 2021-09-09\r\n### Added\r\n- Added instructions for users on how to retrieve the URL of a deployed application on Cloud foundry\r\n\r\n### Fixed\r\n- Fixed Regex for injecting the UI5 URL into the application's HTML file\r\n\r\n## [1.3.1] - 2021-08-12\r\n### Fixed\r\n- Fixed minor issues\r\n\r\n## [1.3.0] - 2021-07-29\r\n### Added\r\n- Provided the possibility to load UI5 libs directly from CDN, instead of loading via the fiori-tools-proxy\r\n- Introduced iAppState handling. The iAppState is now being deleted when an application is reloaded\r\n\r\n## [1.2.5] - 2021-07-15\r\n### Changed\r\n- Internal improvements and refactoring\r\n\r\n## [1.2.4] - 2021-07-01\r\n### Changed\r\n- Minor fixes and refactoring\r\n\r\n## [1.2.3] - 2021-06-17\r\n### Added\r\n- Added new configuration parameter `fallthrough` for the fiori-tools-servestatic middleware\r\n\r\n## [1.2.1] - 2021-06-03\r\n### Fixed\r\n- Updated dependencies versions because of security fixes\r\n\r\n### Added\r\n- Support for previewing application with destinations that have as URL the full path to the OData service\r\n\r\n## [1.2.0] - 2021-05-20\r\n### Fixed\r\n- Fixed previewing an application with MTA configuration\r\n\r\n## [1.1.11] - 2021-05-06\r\n### Added\r\n- Added new command `npx fiori undeploy` to undeploy an application from ABAP system\r\n\r\n### Fixed\r\n- Fixed an issue causing the application preview to fail if a custom port greater than 9010 is specified\r\n\r\n## [1.1.9] - 2021-04-08\r\n### Added\r\n* Added support in proxy for backend system credentials stored in secure store or in .env file\r\n* Added new proxy configuration property: xfwd\r\n* Added a client property to the YAML file to be used for proxy destination handling\r\n\r\n## [1.1.5] - 2021-03-11\r\n### Fixed\r\n* Improved handling of runtime arguments\r\n\r\n### Added\r\n* Added support for proxying WebSockets\r\n\r\n## [1.1.4] - 2021-02-25\r\n### Fixed\r\n* Fixed handling of the ui5 version parameter in the Fiori CLI\r\n* Hide credentials from proxy url\r\n\r\n### Added\r\n* Notify user when new version is available to install\r\n\r\n## [1.1.2] - 2021-02-11\r\n### Fixed\r\n* Fixed fetching of user information when creating a system\r\n\r\n## [1.1.0] - 2021-01-27\r\n### Fixed\r\n* Fixed HTTPS support for the Livereload of the application\r\n* Fixed automatic SSL certificate creation\r\n* Fixed handling of boolean parameters in the Fiori cli\r\n* Fixed caching issues\r\n\r\n## [1.0.28] - 2021-01-14\r\n### Added\r\n* Support preview of applications based on datasource url of a destination configuration inside a destination instance\r\n\r\n### Fixed\r\n* Fixed several issues in conjunction with preview start in SAP Business Application Studio\r\n* Improved UI of the web page for providing the service key to a service\r\n\r\n## [1.0.26] - 2020-12-03\r\n### Added\r\n* Preview support of applications based on SAP API Business Hub services\r\n* Additional instructions provided to the user when generating `flp-config` to allow integration with the Launchpad module using SAP Business Application Studio\r\n\r\n### Fixed\r\n* Fixed issue when reading the NO_PROXY configuration\r\n\r\n## [1.0.25] - 2020-11-18\r\n### Fixed\r\n* Use ATO Catalog to fetch ATO settings\r\n* Other minor fixes\r\n\r\n### Added\r\n* Proxy support for SAP API Business Hub in SAP Business Application Studio\r\n\r\n## [1.0.24] - 2020-11-05\r\n### Fixed\r\n* Fixed dependency installation in the application folder\r\n* Unable to change folder for a project while generating the deployment configuration on windows\r\n* Fixed the generated xs-app.json for non-SAP systems\r\n\r\n### Added\r\n* Added support for multiple paths configuration for the fiori-tools-servestatic middleware\r\n\r\n\r\n## [1.0.22] - 2020-10-21\r\n### Fixed\r\n* Reduced bundle size\r\n\r\n## [1.0.21] - 2020-10-07\r\n### Fixed\r\n* Build sources are no longer minified to improve debugging.\r\n* Error logging improved\r\n* Fixed issues with unit tests\r\n\r\n### Added\r\n* Provided API to read and remove flex changes from the user's workspace\r\n\r\n\r\n## [1.0.19] - 2020-09-23\r\n### Fixed\r\n* Connectivity service information was missing from the generated mta.yaml for destinations that require it for deployment \r\n\r\n### Added\r\n* Support for specifying username/password provided in an environment variable and passing these as CLI arguments, instead of entering these in ui5.yaml file for deployment\r\n* Provide API to write flex changes into the user's workspace\r\n\r\n## [1.0.18] - 2020-09-09\r\n\r\n### Fixed\r\n* Fixed issue with re-deployment to ABAP\r\n* Updated version of the livereload package\r\n* Fixed configuration for Fiori Launchpad when deploying to Cloud Foundry\r\n\r\n### Added\r\n* Support deployment to S/4HANA Cloud\r\n\r\n## [1.0.16] - 2020-09-02\r\n\r\n### Fixed\r\n* Fix for UI5 parameters provided as string instead of array\r\n* Fix for caching of ui5 sources\r\n* Correct documentation for command to add deployment config\r\n* Improvement for command prompt when creating deployment config for mta project\r\n\r\n### Added\r\n* Updated documentation with info relevant to Cloud Foundry\r\n\r\n## [1.0.15] - 2020-08-12\r\n\r\n### Fixed\r\n* Intent ID is not overwritten when creating the SAP Fiori Launchpad deploy configuration\r\n\r\n## [1.0.11] - 2020-07-29\r\n\r\n### Fixed\r\n* Fixed path re-write issue in App Studio\r\n* Fixed Windows bundling issue\r\n* Fixed issue with fiori run command on Windows\r\n* Other minor fixes\r\n\r\n### Added\r\n* Deploy to Cloud Foundry\r\n* Confirmation added when starting the deployment process\r\n* Confirmation added for app name during deploy config generation\r\n* Confirmation added for target name during deploy config generation\r\n* Confirmation added for sap client during deploy config generation\r\n\r\n## [1.0.9] - 2020-07-16\r\n\r\n### Fixed\r\n\r\n* Fix loading of custom libs\r\n\r\n### Added\r\n\r\n* Add run command to Fiori CLI\r\n* Read fiori run cli params in the proxy middleware\r\n* Readme file updated\r\n\r\n## [1.0.8] - 2020-07-01\r\n### Fixed\r\n- Readme file updated\r\n\r\n## [1.0.7] - 2020-06-17\r\n### Fixed\r\n- Minor stability fixes\r\n\r\n## [1.0.0] - 2020-06-16\r\nRelease status: GA\r\n\r\nWe are pleased to announce the official GA of the ux-ui5-tooling.\r\n\r\n## [0.0.89] - 2020-06-03\r\n### Added\r\n- Multiple back-ends support\r\n- Support for custom UI5 modules\r\n\r\n## [0.0.86] - 2020-05-20\r\n### Added\r\n - Additional deploy functionality (see `npx fiori help`)\r\n - New command `fiori add flp-config` to add Fiori launchpad configuration\r\n - System keys can be uploaded to users secure store\r\n \r\n### Fixed\r\n - Logged URL after deploy is now correct and can be opened\r\n - Namespace check for `z` space during deploy configuration is not case sensitive anymore\r\n - Package name is now all capitals when sending to backend during deployment\r\n - Warning before overwriting existing deploy configuration\r\n\r\n## [0.0.85] - 2020-05-08\r\n### Added\r\n - Downloading of UI5 sources from NPM\r\n\r\n### Fixed\r\n- Reading proxy configuration from VSCode\r\n- Loading UI5 sources in SAP Business Application Studio\r\n- Live reload configuration\r\n\r\n## [0.0.84] - 2020-04-22\r\n### Added\r\n- Destinations support for SAP Business Application Studio\r\n\r\n### Fixed\r\n- Cookies and CSRF token issues fixed\r\n\r\n## [0.0.81] - 2020-04-09\r\n### Added\r\n- Deploy to ABAP functionality with OAuth support\r\n- New middleware for serving local ui5 sources\r\n- Support of snapshot UI5 versions for internal users\r\n\r\n### Fixed\r\n- Fix preview with local UI5 resources\r\n- Add proper handling for ui5Uri arg\r\n- Add proper handling of space separated & quoted runtime args\r\n\r\n## [0.0.79] - 2020-03-24\r\n### Fixed\r\n- Resolved issue when requests are tunneled via proxy\r\n\r\n## [0.0.68] - 2020-02-07\r\n### Added\r\n- CHANGELOG.md documenting the changes\r\n- Internal: enhanced test coverage\r\n\r\n## [0.0.65] - 2020-01-31\r\n### Fixed\r\n- Resolved issues when proxying OData requests to SAP systems with CSRF protection enabled\r\n\r\n## [0.0.62] - 2020-01-17\r\n### Added\r\n- Initial version\r\n- Included proxy and live load middlewares\r\n"},{"name":"dist","nodes":[{"name":"markdowns","nodes":[{"name":"add","nodes":[{"name":"add.en.md","content":"SAP Fiori tools CLI.\r\n\r\nCOMMAND NAME:\r\n\r\n    add - Create or update a target configuration\r\n\r\nUSAGE:\r\n\r\n    fiori add [SUBCOMMAND] [...OPTIONS]\r\n\r\nSUBCOMMANDS:\r\n\r\n    deploy-config - Generate or update deploy config in ui5-deploy.yaml file.\r\n|               |    |                            |\r\n|---------------|----|----------------------------|\r\n| --package     | -p | Package name of target deploy system |\r\n| --transport   | -t | Transport number of target deploy system |\r\n| --client      | -l | Client number of target deploy system |\r\n| --index       | -i | Generate index.html in the app (y/n) |\r\n| --overwrite   | -f | Overwrite existing deploy config (y/n) |\r\n| --config      | -c | App deploy config file name if it is not ui5-deploy.yaml |\r\n| --base        | -b | App configuration file name if it is not ui5.yaml |\r\n\r\n    flp-config - Generate or update Fior Launchpad configuration\r\n|               |    |                            |\r\n|---------------|----|----------------------------|\r\n| --object      | -o | Semantic object |\r\n| --action      | -a | Action |\r\n| --title       | -t | Title displayed on Fiori Launchpad tile |\r\n| --subtitle    | -s | Subtile displayed on Fiori Launchpad tile |\r\n| --overwrite   | -f | Overwrite existing FLP config (y/n) |\r\n\r\n    flp-embedded-config - Adds the necessary configuration for running a Fiori application in FLP Embedded Mode. Mandatory parameters\r\n|               |    |                            |\r\n|---------------|----|----------------------------|\r\n| --bspApplication      |    | The BSP of your application |\r\n| --config      |    | Path to the YAML file from which to copy the backend configuration |\r\n| --flp         |    | Path to the FLP in the backend, e.g. sap/bc/ui5_ui5/ui2/ushell/shells/abap/Fiorilaunchpad.html |\r\n\r\n    variants-config - Adds the necessary configuration for enabling Variant Management for your Fiori application\r\n"}]},{"name":"cfDeploy","nodes":[{"name":"cfDeploy.en.md","content":"SAP Fiori tools CLI.\r\n\r\nCOMMAND NAME:\r\n\r\n    cfDeploy - Deploy project bundle to Cloud Foundry \r\n\r\nUSAGE:\r\n\r\n    fiori cfDeploy"}]},{"name":"deploy","nodes":[{"name":"deploy.en.md","content":"SAP Fiori tools CLI.\r\n\r\nCOMMAND NAME:\r\n\r\n    deploy - Deploy project bundle to ABAP system\r\n\r\nUSAGE:\r\n\r\n    fiori deploy [...OPTIONS]\r\n\r\nOPTIONS:\r\n\r\n|                |     |             |\r\n|----------------|-----|-------------|\r\n| --config       | -c  | Path to deployment config yaml file, default ui5-deploy.yaml |\r\n| --destination  | -d  | Destination of BTP system |\r\n| --failfast     | -f  | Terminate deploy and throw error when encoutering first error (y/N) |\r\n| --yes          | -y  | Generate index.html file (y/n) |\r\n| --url          | -u  | URL of deploy target ABAP system |\r\n| --client       | -l  | Client number of deploy target ABAP system |\r\n| --transport    | -t  | Transport number for deploy target ABAP system |\r\n| --name         | -n  | Project name of the app |\r\n| --package      | -p  | Package name for deploy target ABAP system |\r\n| --description  | -e  | Project description of the app |\r\n| --archive-url  | -au | Download app bundle from this url and upload this bundle for deployment |\r\n| --strict-ssl   | -ss | Perform certificate validation on archive url (Y/n)|\r\n| --archive-path | -ap | Provide path of the app bundle for deployment |\r\n| --testMode     | -tm | Run deploy in test mode. ABAP backend reports deploy error without actual deploy the bundle. |\r\n"}]},{"name":"index","nodes":[{"name":"index.en.md","content":"SAP Fiori tools CLI.\r\n\r\nUSAGE:\r\n\r\n    fiori [COMMAND] [COMMAND OPTIONS]\r\n\r\nCOMMAND:\r\n\r\n|               | |                                         |\r\n|---------------|-|-----------------------------------------|\r\n| add           | | Create or update a target configuration |\r\n| run           | | Starts a local web server for running a FE application |\r\n| deploy        | | Deploy project bundle to ABAP system |\r\n| undeploy      | | Undeploy project on ABAP system |\r\n| cfDeploy      | | Deploy project bundle to Cloud Foundry |\r\n\r\nGLOBAL COMMAND OPTIONS:\r\n\r\n|               |    |             |\r\n|---------------|----|-------------|\r\n| --help        | -h | Show help for the given command |"}]},{"name":"run","nodes":[{"name":"run.en.md","content":"SAP Fiori tools CLI.\r\n\r\nCOMMAND NAME:\r\n\r\n    run - Starts a local web server for running a FE application\r\n\r\nUSAGE:\r\n\r\n    fiori run [...OPTIONS]\r\n\r\nOPTIONS:\r\n\r\n|                |     |             |\r\n|----------------|-----|-------------|\r\n| --config       | -c  | Path to config file (default: ui5.yaml in project root folder) |\r\n| --verbose      |     | Enable verbose logging (default: false) |\r\n| --port         | -p  | Port to start the server on (default for HTTP: 8080, HTTPS: 8443) |\r\n| --open         | -o  | Open web server root directory in default browser |\r\n| --https        |     | Enables HTTPS over the HTTP/2 protocol for the web server (default: false). If --key and --cert parameters are not provided with this parameter, a private key and certificate will be created automatically if OpenSSL is installed. Using HTTPS over HTTP/2 is currently not supported in SAP Business Application Studio |\r\n| --key          |     | Path to the private key for https (default: \"$HOME/.ui5/server/server.key\") |\r\n| --cert         |     | Path to the certificate for https (default: \"$HOME/.ui5/server/server.crt\") |\r\n| --ui5          |     | UI5 version to use when running the application (default: version from ui5.yaml) |\r\n| --ui5Uri       |     | UI5 uri to load the UI5 resources from (default: uri from ui5.yaml) |\r\n| --proxy        |     | Proxy configuration. e.g. https://myproxy:8443 (default: uses host machine proxy configuration) |\r\n"}]},{"name":"undeploy","nodes":[{"name":"undeploy.en.md","content":"SAP Fiori tools CLI.\r\n\r\nCOMMAND NAME:\r\n\r\n    undeploy - Undeploy project on ABAP system  \r\n\r\nUSAGE:\r\n\r\n    fiori undeploy [...OPTIONS]\r\n\r\nOPTIONS:\r\n\r\n|                |     |             |\r\n|----------------|-----|-------------|\r\n| --config       | -c  | Path to deployment config yaml file, default ui5-deploy.yaml |\r\n| --destination  | -d  | Destination of BTP system |\r\n| --url          | -u  | URL of deploy target ABAP system |\r\n| --transport    | -t  | Transport number for deploy target ABAP system |\r\n| --name         | -n  | Project name of the app |\r\n"}]}]}]},{"name":"doc","nodes":[{"name":"abap-deploy.md","content":"# Task: Deployment to ABAP\r\n\r\nThe deployment to ABAP task allows deploying Fiori applications to SAP systems using the [SAPUI5 Repository OData service](https://sapui5.hana.ondemand.com/#/topic/a883327a82ef4cc792f3c1e7b7a48de8.html).\r\n\r\n**Pre-requisites:**\r\n* SAP component SAP_UI 7.53 or higher is installed in your SAP system\r\n* Service needs to be enabled and accessible from your development environment ([how to check this](https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html)) \r\n* For operations on a SAPUI5 ABAP repository, you need the S_DEVELOP authorization.\r\n\r\n**Limitations:**\r\n* the task does not create ABAP transports, therefore, it requires an existing transport if the target ABAP package requires a transport\r\n* only Basic Authentication (user/password based authentication) as well as OAuth2 with the SAP Cloud Platform \r\n\r\n## Example Configuration\r\nExecuting `ui5 build --config ui5-deploy.yaml` in your project with the configuration below in a `ui5-deploy.yaml`, manually added to the project, would deploy all files of your `dist` folder except files ending with `.test.js` and the `internal.md` file. The target system is XYZ with client 200. Username and password for authentication will be read from the environment variables `XYZ_USER` and `XYZ_PASSWORD`.\r\n\r\nBased on this example, the application will be created/updated as `/TEST/SAMPLE_APP` in package `/TEST/UPLOAD` and all changes will be recorded in transport request `XYZQ300582`.\r\n\r\nContent of `ui5-deploy.yaml`\r\n\r\n```\r\nbuilder:\r\n  customTasks:\r\n  - name: deploy-to-abap\r\n    afterTask: replaceVersion\r\n    configuration:\r\n      target:\r\n        url: https://XYZ.sap-system.corp:44311\r\n        client: 200\r\n        auth: basic\r\n      credentials:\r\n        username: env:XYZ_USER\r\n        password: env:XYZ_PASSWORD\r\n      app:\r\n        name: /TEST/SAMPLE_APP\r\n        package: /TEST/UPLOAD\r\n        transport: XYZQ300582\r\n      exclude:\r\n      - .*\\.test.js\r\n      - internal.md\r\n```\r\n\r\n### Command to create the ui5-deploy.yaml file\r\nA newly created project does not contain a deployment configuration (`ui5-deploy.yaml`) but you can create it by executing `npx fiori create deploy-config`. You will be prompted for required information and then the file will be created based on your input and the content of the existing `ui5.yaml` file used for the preview. In addition to creating the configuration, the create deployment command will also update your `package.json` so that you can execute `npm run deploy` afterwards to deploy your application.\r\n\r\n\r\n### Setting environment variables in a .env file\r\nIf you prefer to keep the environment variables in a file, an option can be to create ```.env``` file at the root of your project which contains the environment variables that can be referenced in the ui5.yaml file. \r\n\r\nIt is recommended that you do not have your actual username and password in the ```ui5.yaml```.\r\n\r\n```\r\nXYZ_USER=[MY_USER_NAME]\r\nXYZ_PASSWORD=[MY_PASSWORD]\r\n```\r\n\r\n\r\n## Command to deploy\r\nAfter completing the changes in the configuration files, execute ```npm run deploy``` at command line\r\n\r\n### Accessing the deployed app\r\nBased on the sample configurations above, after deploying the app, you can access the app using URL: https://XYZ.sap-system.corp:44311/sap/bc/ui5-ui5/test/sample_app/index.html?sap-client=200#app-preview\r\n\r\n## Documentation on the Configuration options\r\nIn addition to defining parameters in the main yaml file, every parameter can also be defined as environment variable that is referenced in yaml. Using the `dotenv` module, the task also supports project specific environment variables defined in a `.env` file in the root of your project. To reference an environment variable the pattern `env:VAR_NAME` must be used.\r\n\r\n### target\r\nThe target object contains properties identifying your target SAP system.\r\n\r\n#### url\r\n- `<string> pattern <protocol>://<hostname>[:<port>]` (required)\r\n- This parameter must contain a url pointing to your target SAP system\r\n\r\n\r\n#### client\r\n- `<number> range [0..999]` (optional)\r\n- The client property is used to identify the SAP client that is to be used in the backend system. It translates to the url parameter `sap-client=<client>` If the client parameter is not provide, the default client will be used. \r\n\r\n#### scp\r\n- `<boolean>` (default: `false`)\r\n- By default the deployment task will use basic authentication when connecting to the backend. If the target system is ABAP Environment on SAP Cloud Platform, this parameter needs to be set to `true`.\r\n\r\n#### service\r\n- `<string>` (default: `/sap/opu/odata/UI5/ABAP_REPOSITORY_SRV`)\r\n- Path pointing to the SAPUI5 ABAP repository OData service in your target system. This parameter only needs to be used if the service is exposed at a different path in your backend system e.g. via alias.\r\n\r\n### credentials (optional)\r\nThe credentials object is mainly required for CI/CD based deployments and it needs to contain the required parameters to authenticate at your target system. We strongly encourage to not add the credentials directly but use references to environment variables e.g. `env:MY_VARIABLE` here.\r\n\r\nFor local usage, we recommand to not use the credentials object at all. As result, the deployment task will utilize the operating systems secure storage maintain credentials.\r\n\r\n#### username\r\n- `<string>` (required)\r\n- SAP business user for the target system. The user requires authorizations to create/update the target ABAP development object.\r\n\r\n#### password\r\n- `<string>` (required)\r\n- Password required to authenticate the previously configured user. IMPORTANT: while technically possible to add the password to your config, we strongly DISCOURAGE that but recommend instead the use of environment variables.\r\n\r\n### app\r\nThe app object describes the backend object that is created/updated as result of the deployment.\r\n\r\n#### name\r\n- `<string>` (required)\r\n- Unique name of the application. The name is used as part of the application url as well as the name of the ABAP development object used as container for the app.\r\n\r\n#### package\r\n- `<string>` (required for new apps)\r\n- Name of an existing ABAP package that is used as parent of the deployed application. The parameter is required for the creation of the application in the backend. Any following deployment updating the application does not require the package parameter, i.e. it will be ignored.\r\n\r\n#### transport \r\n- `<string>` (optional)\r\n- The transport parameter refers to a transport request number that is to be used to record changes to the backend application object. The property is optional because it is only required if the package that is used for deployments requires transport requests.\r\n\r\n#### description\r\n- `<string>` (optional)\r\n- Optional description added to the created application object in the backend.\r\n\r\n### exclude\r\n- `<string[] array of regex>` (optional)\r\n- By default the deployment task will create an archive (zip file) of all build files and send it to the backend. By using exclude, you can define expressions to match files that shall not be included into the deployment. Note: `string.match()` is used to evaluate the expressions.\r\n\r\n### index\r\n- `true|false` (default: `false`)\r\n- If set to `true`, then an additional index.html will be generated and deployed to run the application standalone.\r\n\r\n### test\r\n- `true|false` (default: `false`)\r\n- If set to `true`, the task will run through all steps including sending the archive to the SAP backend. The backend will not deploy the app but run the pre-deployment checklist and return the result.\r\n\r\n## FAQ\r\n\r\n**My backend system contains the SAP_UI component version 7.53 or newer, but the SAPUI5 repository service cannot be reached.**\r\n\r\n*A: Please check if the service has been activated. More information at https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html.*\r\n\r\n**The SAPUI5 repository service is active and reachable but whenever I deploy an application I see the following error \"Request failed with status code 400\".**\r\n\r\nThis could have multiple reasons, please check the console for more information or open transaction `/IWFND/ERROR_LOG` and check the server logs. A common issue is that during the setup, configuring a virus scan profile has been forgotten. This can be corrected in transaction `/IWFND/VIRUS_SCAN`.\r\n\r\n\r\n"},{"name":"app-reload.md","content":"# Middleware: Application Reload\r\n\r\nThe application reload middleware allows developers to preview Fiori elements applications while developing/configuring them. Whenever a file relevant for Fiori elements is changed, the application reload middleware will refresh the application preview.\r\n\r\n# Example Configuration\r\nExecuting `ui5 serve` in your project with the configuration below in a `ui5.yaml` would start the application reload middleware with its default settings.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-appreload\r\n    afterMiddleware: compression\r\n```\r\n\r\n## Configuration options\r\nThe application reload middleware does not require any configuration parameters. However, there are optional parameters that can be used if the project structure differs from standard Fiori elements projects.\r\n\r\n### path\r\n- `<string>` (default: `webapp`)\r\nPath that is to be watched. By default the standard UI5 `webapp` folder is used\r\n\r\n### ext\r\n- `<string>` (default: `html,js,json,xml,properties,change`)\r\nChange this parameter to select a custom set of file extensions that are to be watched\r\n\r\n### port\r\n- `<int>` (default: `35729`)\r\nPort to be used to communicate file system changes\r\n\r\n### debug\r\n- `<boolean>` (default: `false`)\r\nSet this parameter to get more log information.\r\n\r\n"},{"name":"doc","nodes":[{"name":"abap-deploy.md","content":"# Task: Deployment to ABAP\r\n\r\nThe deployment to ABAP task allows deploying Fiori applications to SAP systems using the [SAPUI5 Repository OData service](https://sapui5.hana.ondemand.com/#/topic/a883327a82ef4cc792f3c1e7b7a48de8.html).\r\n\r\n**Pre-requisites:**\r\n* SAP component SAP_UI 7.53 or higher is installed in your SAP system\r\n* Service needs to be enabled and accessible from your development environment ([how to check this](https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html)) \r\n* For operations on a SAPUI5 ABAP repository, you need the S_DEVELOP authorization.\r\n\r\n**Limitations:**\r\n* the task does not create ABAP transports, therefore, it requires an existing transport if the target ABAP package requires a transport\r\n* only Basic Authentication (user/password based authentication) as well as OAuth2 with the SAP Cloud Platform \r\n\r\n## Example Configuration\r\nExecuting `ui5 build --config ui5-deploy.yaml` in your project with the configuration below in a `ui5-deploy.yaml`, manually added to the project, would deploy all files of your `dist` folder except files ending with `.test.js` and the `internal.md` file. The target system is XYZ with client 200. Username and password for authentication will be read from the environment variables `XYZ_USER` and `XYZ_PASSWORD`.\r\n\r\nBased on this example, the application will be created/updated as `/TEST/SAMPLE_APP` in package `/TEST/UPLOAD` and all changes will be recorded in transport request `XYZQ300582`.\r\n\r\nContent of `ui5-deploy.yaml`\r\n\r\n```\r\nbuilder:\r\n  customTasks:\r\n  - name: deploy-to-abap\r\n    afterTask: replaceVersion\r\n    configuration:\r\n      target:\r\n        url: https://XYZ.sap-system.corp:44311\r\n        client: 200\r\n        auth: basic\r\n      credentials:\r\n        username: env:XYZ_USER\r\n        password: env:XYZ_PASSWORD\r\n      app:\r\n        name: /TEST/SAMPLE_APP\r\n        package: /TEST/UPLOAD\r\n        transport: XYZQ300582\r\n      exclude:\r\n      - .*\\.test.js\r\n      - internal.md\r\n```\r\n\r\n### Command to create the ui5-deploy.yaml file\r\nA newly created project does not contain a deployment configuration (`ui5-deploy.yaml`) but you can create it by executing `npx fiori create deploy-config`. You will be prompted for required information and then the file will be created based on your input and the content of the existing `ui5.yaml` file used for the preview. In addition to creating the configuration, the create deployment command will also update your `package.json` so that you can execute `npm run deploy` afterwards to deploy your application.\r\n\r\n\r\n### Setting environment variables in a .env file\r\nIf you prefer to keep the environment variables in a file, an option can be to create ```.env``` file at the root of your project which contains the environment variables that can be referenced in the ui5.yaml file. \r\n\r\nIt is recommended that you do not have your actual username and password in the ```ui5.yaml```.\r\n\r\n```\r\nXYZ_USER=[MY_USER_NAME]\r\nXYZ_PASSWORD=[MY_PASSWORD]\r\n```\r\n\r\n\r\n## Command to deploy\r\nAfter completing the changes in the configuration files, execute ```npm run deploy``` at command line\r\n\r\n### Accessing the deployed app\r\nBased on the sample configurations above, after deploying the app, you can access the app using URL: https://XYZ.sap-system.corp:44311/sap/bc/ui5-ui5/test/sample_app/index.html?sap-client=200#app-preview\r\n\r\n## Documentation on the Configuration options\r\nIn addition to defining parameters in the main yaml file, every parameter can also be defined as environment variable that is referenced in yaml. Using the `dotenv` module, the task also supports project specific environment variables defined in a `.env` file in the root of your project. To reference an environment variable the pattern `env:VAR_NAME` must be used.\r\n\r\n### target\r\nThe target object contains properties identifying your target SAP system.\r\n\r\n#### url\r\n- `<string> pattern <protocol>://<hostname>[:<port>]` (required)\r\n- This parameter must contain a url pointing to your target SAP system\r\n\r\n\r\n#### client\r\n- `<number> range [0..999]` (optional)\r\n- The client property is used to identify the SAP client that is to be used in the backend system. It translates to the url parameter `sap-client=<client>` If the client parameter is not provide, the default client will be used. \r\n\r\n#### scp\r\n- `<boolean>` (default: `false`)\r\n- By default the deployment task will use basic authentication when connecting to the backend. If the target system is ABAP Environment on SAP Cloud Platform, this parameter needs to be set to `true`.\r\n\r\n#### service\r\n- `<string>` (default: `/sap/opu/odata/UI5/ABAP_REPOSITORY_SRV`)\r\n- Path pointing to the SAPUI5 ABAP repository OData service in your target system. This parameter only needs to be used if the service is exposed at a different path in your backend system e.g. via alias.\r\n\r\n### credentials (optional)\r\nThe credentials object is mainly required for CI/CD based deployments and it needs to contain the required parameters to authenticate at your target system. We strongly encourage to not add the credentials directly but use references to environment variables e.g. `env:MY_VARIABLE` here.\r\n\r\nFor local usage, we recommand to not use the credentials object at all. As result, the deployment task will utilize the operating systems secure storage maintain credentials.\r\n\r\n#### username\r\n- `<string>` (required)\r\n- SAP business user for the target system. The user requires authorizations to create/update the target ABAP development object.\r\n\r\n#### password\r\n- `<string>` (required)\r\n- Password required to authenticate the previously configured user. IMPORTANT: while technically possible to add the password to your config, we strongly DISCOURAGE that but recommend instead the use of environment variables.\r\n\r\n### app\r\nThe app object describes the backend object that is created/updated as result of the deployment.\r\n\r\n#### name\r\n- `<string>` (required)\r\n- Unique name of the application. The name is used as part of the application url as well as the name of the ABAP development object used as container for the app.\r\n\r\n#### package\r\n- `<string>` (required for new apps)\r\n- Name of an existing ABAP package that is used as parent of the deployed application. The parameter is required for the creation of the application in the backend. Any following deployment updating the application does not require the package parameter, i.e. it will be ignored.\r\n\r\n#### transport \r\n- `<string>` (optional)\r\n- The transport parameter refers to a transport request number that is to be used to record changes to the backend application object. The property is optional because it is only required if the package that is used for deployments requires transport requests.\r\n\r\n#### description\r\n- `<string>` (optional)\r\n- Optional description added to the created application object in the backend.\r\n\r\n### exclude\r\n- `<string[] array of regex>` (optional)\r\n- By default the deployment task will create an archive (zip file) of all build files and send it to the backend. By using exclude, you can define expressions to match files that shall not be included into the deployment. Note: `string.match()` is used to evaluate the expressions.\r\n\r\n### index\r\n- `true|false` (default: `false`)\r\n- If set to `true`, then an additional index.html will be generated and deployed to run the application standalone.\r\n\r\n### test\r\n- `true|false` (default: `false`)\r\n- If set to `true`, the task will run through all steps including sending the archive to the SAP backend. The backend will not deploy the app but run the pre-deployment checklist and return the result.\r\n\r\n## FAQ\r\n\r\n**My backend system contains the SAP_UI component version 7.53 or newer, but the SAPUI5 repository service cannot be reached.**\r\n\r\n*A: Please check if the service has been activated. More information at https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html.*\r\n\r\n**The SAPUI5 repository service is active and reachable but whenever I deploy an application I see the following error \"Request failed with status code 400\".**\r\n\r\nThis could have multiple reasons, please check the console for more information or open transaction `/IWFND/ERROR_LOG` and check the server logs. A common issue is that during the setup, configuring a virus scan profile has been forgotten. This can be corrected in transaction `/IWFND/VIRUS_SCAN`.\r\n\r\n\r\n"},{"name":"app-reload.md","content":"# Middleware: Application Reload\r\n\r\nThe application reload middleware allows developers to preview Fiori elements applications while developing/configuring them. Whenever a file relevant for Fiori elements is changed, the application reload middleware will refresh the application preview.\r\n\r\n# Example Configuration\r\nExecuting `ui5 serve` in your project with the configuration below in a `ui5.yaml` would start the application reload middleware with its default settings.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-appreload\r\n    afterMiddleware: compression\r\n```\r\n\r\n## Configuration options\r\nThe application reload middleware does not require any configuration parameters. However, there are optional parameters that can be used if the project structure differs from standard Fiori elements projects.\r\n\r\n### path\r\n- `<string>` (default: `webapp`)\r\nPath that is to be watched. By default the standard UI5 `webapp` folder is used\r\n\r\n### ext\r\n- `<string>` (default: `html,js,json,xml,properties,change`)\r\nChange this parameter to select a custom set of file extensions that are to be watched\r\n\r\n### port\r\n- `<int>` (default: `35729`)\r\nPort to be used to communicate file system changes\r\n\r\n### debug\r\n- `<boolean>` (default: `false`)\r\nSet this parameter to get more log information.\r\n\r\n"},{"name":"proxy.md","content":"# Middleware: Proxy\r\n\r\nThe proxy middleware provides you with the capabilities to connect to diffent back-end systems or to switch the UI5 version of the application.\r\n\r\n# Configuration Examples\r\n\r\n## Connecting to a back-end system\r\nExecuting `ui5 serve` in your project with the configuration below in the `ui5.yaml` file would forward any request starting with the `path` parameter to the provided back-end `url`.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\n\r\nIf the back-end is hidden behind a destination then you can also provide the `destination` in the configuration.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n```\r\n\r\nYou can also connect to multiple back-end systems like this.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /northwind\r\n      url: https://my.backend_2.com:1234\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\nIf you want to connect to a `Steampunk` back-end then you will need to provide the following configuration.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.steampunk.com:1234\r\n      scp: true\r\n```\r\n\r\n## UI5\r\nBy using the proxy configuration one can also change the UI5 version, which is used to preview the application. With the application generation also the initial ui5 configuration for the proxy is created. It looks e.g. like this.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      path:\r\n      - /resources\r\n      - /test-resources\r\n      url: https://sapui5.hana.ondemand.com\r\n      version: 1.78.0\r\n```\r\nBy using the `version` parameter one can choose the UI5 version which will used when `ui5 serve` is executed.\r\n"},{"name":"servestatic.md","content":"# Middleware: Serve Static\r\n\r\nThe serve static middleware provides the capability to serve static UI5 resources. Hence you can serve UI5 resources locally from your machine.\r\n\r\n**Pre-requisites:**\r\nSAPUI5 SDK version is downloaded and extracted locally on the machine. One can download UI5 resources from https://tools.hana.ondemand.com/#sapui5\r\n\r\n# Example Configuration\r\nExecuting `ui5 serve` in your project with the configuration below in a `ui5.yaml` file would serve the UI5 sources from your machine.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    mountPath: /resources|/test-resources\r\n    configuration:\r\n      path: \"/Path/To/SAPUI5-SDK/\"\r\n```"}]},{"name":"proxy.md","content":"# Middleware: Proxy\r\n\r\nThe proxy middleware provides you with the capabilities to connect to diffent back-end systems or to switch the UI5 version of the application.\r\n\r\n# Configuration Examples\r\n\r\n## Connecting to a back-end system\r\nExecuting `ui5 serve` in your project with the configuration below in the `ui5.yaml` file would forward any request starting with the `path` parameter to the provided back-end `url`.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\n\r\nIf the back-end is hidden behind a destination then you can also provide the `destination` in the configuration.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n```\r\n\r\nYou can also connect to multiple back-end systems like this.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /northwind\r\n      url: https://my.backend_2.com:1234\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\nIf you want to connect to a `Steampunk` back-end then you will need to provide the following configuration.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.steampunk.com:1234\r\n      scp: true\r\n```\r\n\r\n## UI5\r\nBy using the proxy configuration one can also change the UI5 version, which is used to preview the application. With the application generation also the initial ui5 configuration for the proxy is created. It looks e.g. like this.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      path:\r\n      - /resources\r\n      - /test-resources\r\n      url: https://sapui5.hana.ondemand.com\r\n      version: 1.78.0\r\n```\r\nBy using the `version` parameter one can choose the UI5 version which will used when `ui5 serve` is executed.\r\n"},{"name":"servestatic.md","content":"# Middleware: Serve Static\r\n\r\nThe serve static middleware provides the capability to serve static UI5 resources. Hence you can serve UI5 resources locally from your machine.\r\n\r\n**Pre-requisites:**\r\nSAPUI5 SDK version is downloaded and extracted locally on the machine. One can download UI5 resources from https://tools.hana.ondemand.com/#sapui5\r\n\r\n# Example Configuration\r\nExecuting `ui5 serve` in your project with the configuration below in a `ui5.yaml` file would serve the UI5 sources from your machine.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    mountPath: /resources|/test-resources\r\n    configuration:\r\n      path: \"/Path/To/SAPUI5-SDK/\"\r\n```"}]},{"name":"README.md","content":"# @sap/ux-ui5-tooling\r\n\r\nThe SAP Fiori Tools - UI5 Tooling contains a selection of custom [middlewares](https://sap.github.io/ui5-tooling/pages/extensibility/CustomServerMiddleware/) that can be used with the command `ui5 serve` as well as custom [tasks](https://sap.github.io/ui5-tooling/pages/extensibility/CustomTasks/) that can be used with the command `ui5 build`. \r\nFurthermore, the module expose the cli `fiori` offering e.g. the [`fiori run`](#run) command is a wrapper of the `ui5 serve` commands and provides some additional parameters as well as `fiori add deploy-config` and `fiori add flp-config` to extend an existing project.\r\n\r\n## [**Middlewares**](#middlewares)\r\n\r\nSAP Fiori tools use the capabilities of custom middlewares to start and preview SAP Fiori elements or SAPUI5 freestyle applications, e.g. to enable auto refresh, to switch the version of SAPUI5 sources or to serve static resources. Starting with version `1.3.0` the behaviour of the preview of the SAP Fiori applications has changed. Now the persistent iAppState is ignored in order to have the source code changes always apply when application is refreshed. If you want to enable the iAppState then you need to add the URL parameter `fiori-tools-iapp-state=true` to the browser URL, e.g. `http://localhost:8080/test/flpSandbox.html?fiori-tools-iapp-state=true#masterDetail-display`.\r\n\r\n### [**1. Application Reload**](#1-application-reload)\r\n\r\nThe application reload middleware allows developers to preview SAP Fiori applications while developing/configuring them. Whenever a file relevant for the SAP Fiori application is changed, the reload middleware will refresh the application preview.\r\n\r\n#### Example Configuration\r\n\r\nExecuting `npx fiori run` in your project with the configuration below in a `ui5.yaml` would start the application reload middleware with its default settings.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-appreload\r\n    afterMiddleware: compression\r\n```\r\n\r\n#### Configuration options\r\n\r\nThe application reload middleware does not require any configuration parameters. However, there are optional parameters that can be used if the project structure differs from standard SAP Fiori projects.\r\n\r\n#### path\r\n\r\n- `<string>` (default: `webapp`)\r\nPath that is to be watched. By default the standard SAPUI5 `webapp` folder is used\r\n\r\n#### ext\r\n\r\n- `<string>` (default: `html,js,json,xml,properties,change`)\r\nChange this parameter to select a custom set of file extensions that are to be watched\r\n\r\n#### port\r\n\r\n- `<int>` (default: `35729`)\r\nPort to be used to communicate file system changes\r\n\r\n#### debug\r\n\r\n- `<boolean>` (default: `false`)\r\nSet this parameter to get more log information.\r\n\r\n### [**2. Proxy**](#2-proxy)\r\n\r\nThe proxy middleware provides you with the capabilities to connect to diffent back-end systems or to switch the SAPUI5 version of the application. The proxy is based on the [http-proxy-middleware](https://www.npmjs.com/package/http-proxy-middleware).\r\n\r\n### Configuration Examples\r\n\r\n#### [Connecting to a back-end system](#connecting-to-a-back-end-system)\r\n\r\nExecuting `npx fiori run` in your project with the configuration below in the `ui5.yaml` file would forward any request starting with the `path` parameter to the provided back-end `url`.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\n\r\n#### [Connecting to a back-end system with destination](#connecting-to-a-back-end-system-with-destination)\r\n\r\nIf the back-end is hidden behind a destination then you can also provide the `destination` in the configuration.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n```\r\n#### [Connecting to a back-end system with destination and principal propagation](#connecting-to-a-back-end-system-with-destination-and-principal-propagation)\r\n\r\nIf the back-end destination is configured to use principal propagation, then in some cases the requests might fail. If this occurs then you will need to set the optional property `xfwd` to `true`. This will add the x-forwared headers to the proxy requests.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n      xfwd: true\r\n```\r\n#### [Connecting to multiple back-end systems](#connecting-to-multiple-back-end-systems)\r\nYou can also connect to multiple back-end systems like this.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /northwind\r\n      url: https://my.backend_2.com:1234\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n```\r\n#### [Connecting to the SAP Business Technology Platform](#connecting-to-the-sap-business-technology-platform)\r\nIf you want to connect to an ABAP Environment on SAP Business Technology Platform then you will need to set the optional property `scp` to `true`. For any other target, remove this property or set it to `false`.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.steampunk.com:1234\r\n      scp: true\r\n```\r\n\r\n#### [Connecting to the SAP API Business Hub](#connecting-to-the-sap-api-business-hub)\r\nIf you want to connect to the SAP API Business Hub then you will need to set the optional property `apiHub` to `true`, and set the corresponding `path` and `url`, e.g.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /s4hanacloud\r\n      url: https://api.sap.com\r\n      apiHub: true\r\n```\r\n#### [Proxying WebSockets](#proxying-websockets)\r\nIf you want the proxy to handle also WebSockets, then you need to set the optional property `ws` to `true`, e.g.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n      ws: true\r\n```\r\n\r\n#### [Changing the path to which a request is proxied](#changing-the-path-to-which-a-request-is-proxied)\r\nLet's that you want to configure the proxy to send requests from a certain path `/services/odata` to a destination with a specified entry path `/my/entry/path`. Then you need to do the following:\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    backend:\r\n    - path: /services/odata\r\n      pathPrefix: /my/entry/path\r\n      url: https://my.backend.com:1234\r\n      destination: my_backend\r\n```\r\n\r\n#### [Providing Proxy Configuration](#providing-proxy-configuration)\r\nBy the default the `fiori-tools-proxy` will read the proxy configuration from the Node.js environment variables `proxy`, `https-proxy` and `noproxy`. If those variables are not set, then you can also provide the proxy configuration in the `ui5.yaml` file. **Please note: if you want to exclude any domains from the proxy then you will need to set the `noproxy` variable, e.g. `npm config set noproxy \"sap.com\"`**.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    proxy: https://myproxy.com:8443\r\n    backend:\r\n    - path: /sap\r\n      url: https://my.backend.com:1234\r\n\r\n```\r\n\r\n#### [UI5](#ui5)\r\n\r\nBy using the proxy configuration one can also change the SAPUI5 version, which is used to preview the application. By using the `version` parameter one can change the SAPUI5 version as follows:\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      path:\r\n      - /resources\r\n      - /test-resources\r\n      url: https://sapui5.hana.ondemand.com\r\n      version: 1.78.0\r\n```\r\n\r\nStarting with `ux-ui5-tooling` version `1.4.7`, if the `version` property is not set in the `ui5.yaml`, then the `minUI5Version` from `manifest.json` will be used for the application preview. If the `version` property is set, but it is empty, then the `latest` SAPUI5 version from https://ui5.sap.com will be used for the application preview. For any other case the value of the `version` property will be used for the application preview.\r\n\r\n**Note:** all UI5 requests are routed through the proxy. Sometimes this can cause performance issues. If you don't want route the UI5 requests through the proxy, then you can set parameter `directLoad: true`. This will inject the UI5 url in the HTML file of the application and thus the UI5 libs will be loaded directly.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      path:\r\n      - /resources\r\n      - /test-resources\r\n      url: https://sapui5.hana.ondemand.com\r\n      version: 1.78.0\r\n      directLoad: true\r\n```\r\n\r\nStarting with version `1.6.0` one can use the following syntax for proxying different UI5 requests to different URLs, e.g.\r\n\r\n```\r\n- name: fiori-tools-proxy\r\n  afterMiddleware: compression\r\n  configuration:\r\n    ui5:\r\n      paths:\r\n        - path: /resources\r\n          url: https://ui5.sap.com\r\n        - path: /test-resources\r\n          src: https://sapui5.hana.ondemand.com\r\n      version: '1.100.1'\r\n```\r\n\r\n### [**3. Serve Static**](#3-serve-static)\r\n\r\nThe serve static middleware provides the capability to serve any static resources locally from your machine. E.g. you can serve SAPUI5 locally or any other resources.\r\n\r\n\r\n#### [Example Configuration for serving locally SAPUI5](#example-configuration-for-serving-locally-ui5)\r\n\r\n**Pre-requisites:**\r\nSAPUI5 SDK version is downloaded and extracted locally on the machine. One can download UI5 resources from <https://tools.hana.ondemand.com/#sapui5>\r\n\r\nExecuting `npx fiori run` in your project with the configuration below in a `ui5.yaml` file would serve the UI5 sources from your machine. Any request starting with the `path` parameter will be forwarded to the local path provided in the `src` parameter.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n        - path: /test-resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n```\r\n\r\n#### [Example Configuration for serving any resources locally](#example-configuration-for-serving-any-resources-locally)\r\nExecuting `npx fiori run` in your project with the configuration below in a `ui5.yaml` file would serve resources from your machine. Any request starting with the `path` parameter will be forwarded to the local path provided in the `src` parameter.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /images\r\n          src: \"Path/To/images\"\r\n        - path: /libs\r\n          src: \"Path/To/libs\"\r\n```\r\n\r\n### [Configuration options](#configuration-options-1)\r\nAdditionaly you can specify any of the configuration options (excluding `setHeaders`!) of the [serve-static](https://www.npmjs.com/package/serve-static) middleware.\r\n\r\nE.g. you can set `fallthrough: false`, which will cause the middleware to return 404 error, when it can't find a file on the local system:\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n        - path: /test-resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n      fallthrough: false\r\n```\r\n\r\nAlternatively you can set e.g. `fallthrough: false` only for specific requests:\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-servestatic\r\n    afterMiddleware: compression\r\n    configuration:\r\n      paths:\r\n        - path: /resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n          fallthrough: false\r\n        - path: /test-resources\r\n          src: \"Path/To/SAPUI5-SDK\"\r\n```\r\n\r\n### [**4. Preview**](#4-preview)\r\nThe `fiori-tools-preview` middleware enables the developer variant creation for SAP Fiori applications.\r\n\r\n### Example configuration\r\nExecuting `npx fiori run --open preview.html` in your project with the configuration below in the `ui5.yaml` opens a new browser tab with the application switched to UI adaptation mode for variant creation. The file `preview.html` is created dynamically at runtime by the `fiori-tools-preview` middleware.\r\n\r\n```\r\nserver:\r\n  customMiddleware:\r\n  - name: fiori-tools-preview\r\n    afterMiddleware: fiori-tools-appreload\r\n    configuration:\r\n      component: myapp\r\n      ui5Theme: sap_fiori_3\r\n```\r\n\r\n### Configuration options\r\n- **`component`** - application component of the SAP Fiori application (value is prefilled when the application is generated with https://www.npmjs.com/package/@sap/generator-fiori).\r\n- **`ui5Theme`** - SAP Fiori theme of the application (value is prefilled when the application is generated with https://www.npmjs.com/package/@sap/generator-fiori).\r\n- **`libs`** - a comma separated list of additional libraries that should be loaded, e.g. `libs: my.custom.lib1, my.custom.lib2`\r\n\r\n## [**Tasks**](#tasks)\r\n\r\nSAP Fiori Tools use the capabilities of custom tasks to deploy the SAP Fiori projects to ABAP servers.\r\n\r\n### [Deployment to ABAP](#deployment-to-abap)\r\n\r\nThe deployment to ABAP task allows deploying SAP Fiori applications to SAP systems using the [SAPUI5 Repository OData service](https://sapui5.hana.ondemand.com/#/topic/a883327a82ef4cc792f3c1e7b7a48de8.html).\r\n\r\n**Pre-requisites:**\r\n\r\n* SAP component SAP_UI 7.53 or higher is installed in your SAP system\r\n* Service needs to be enabled and accessible from your development environment ([how to check this](https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html))\r\n* For operations on a SAPUI5 ABAP repository, you need the S_DEVELOP authorization.\r\n\r\n**Notes:**\r\n\r\n* the task does not create ABAP transports, therefore, it requires an existing transport if the target ABAP package requires a transport\r\n* only Basic Authentication (user/password based authentication) as well as OAuth2 with the SAP Business Technology Platform\r\n\r\n## Example Configuration\r\n\r\nExecuting `ui5 build --config ui5-deploy.yaml` in your project with the configuration below in a `ui5-deploy.yaml`, manually added to the project, would deploy all files of your `dist` folder except files ending with `.test.js` and the `internal.md` file. The target system is XYZ with client 200. Username and password for authentication will be read from the environment variables `XYZ_USER` and `XYZ_PASSWORD`.\r\n\r\nBased on this example, the application will be created/updated as `/TEST/SAMPLE_APP` in package `/TEST/UPLOAD` and all changes will be recorded in transport request `XYZQ300582`.\r\n\r\nContent of `ui5-deploy.yaml`\r\n\r\n```\r\nbuilder:\r\n  customTasks:\r\n  - name: deploy-to-abap\r\n    afterTask: replaceVersion\r\n    configuration:\r\n      target:\r\n        url: https://XYZ.sap-system.corp:44311\r\n        client: 200\r\n        auth: basic\r\n      credentials:\r\n        username: env:XYZ_USER\r\n        password: env:XYZ_PASSWORD\r\n      app:\r\n        name: /TEST/SAMPLE_APP\r\n        package: /TEST/UPLOAD\r\n        transport: XYZQ300582\r\n      exclude:\r\n      - .*\\.test.js\r\n      - internal.md\r\n```\r\n\r\n### Command to create the ui5-deploy.yaml file\r\n\r\nA newly created project does not contain a deployment configuration (`ui5-deploy.yaml`) but you can create it by executing `npx fiori add deploy-config`. You will be prompted for required information and then the file will be created based on your input and the content of the existing `ui5.yaml` file used for the preview. In addition to creating the configuration, the create deployment command will also update your `package.json` so that you can execute `npm run deploy` afterwards to deploy your application.\r\n\r\n### Setting environment variables in a .env file\r\n\r\nIf you prefer to keep the environment variables in a file, an option can be to create ```.env``` file at the root of your project which contains the environment variables that can be referenced in the ui5.yaml file.\r\n\r\nIMPORTANT: The username and password property will **only** accept environment variable references in the ```ui5-deploy.yaml```.\r\n\r\n```\r\nXYZ_USER=[MY_USER_NAME]\r\nXYZ_PASSWORD=[MY_PASSWORD]\r\n```\r\n\r\n## Command to deploy\r\n\r\nAfter completing the changes in the configuration files, execute the command `npm run deploy`. The deployment task is by default interactive and requires that the user confirms the deploy configuration. If such a confirmation is not required or desired then it can be disable by adding `-- -y` to the `deploy` script e.g. `ui5 build preload --config ui5-deploy.yaml -- -y`\r\n\r\n### Accessing the deployed app\r\n\r\nBased on the sample configurations above, after deploying the app, you can access the app using URL: <https://XYZ.sap-system.corp:44311/sap/bc/ui5-ui5/test/sample_app/index.html?sap-client=200#app-preview>\r\n\r\n## Documentation on the Configuration options\r\n\r\nIn addition to defining parameters in the main yaml file, every parameter can also be defined as environment variable that is referenced in yaml. Using the `dotenv` module, the task also supports project specific environment variables defined in a `.env` file in the root of your project. To reference an environment variable the pattern `env:VAR_NAME` must be used.\r\n\r\n### target\r\n\r\nThe target object contains properties identifying your target SAP system.\r\n\r\n#### url\r\n\r\n- `<string> pattern <protocol>://<hostname>[:<port>]` (required)\r\n- This parameter must contain a url pointing to your target SAP system\r\n\r\n#### client\r\n\r\n- `<number> range [0..999]` (optional)\r\n- The client property is used to identify the SAP client that is to be used in the backend system. It translates to the url parameter `sap-client=<client>` If the client parameter is not provide, the default client will be used.\r\n\r\n#### scp\r\n\r\n- `<boolean>` (default: `false`)\r\n- By default the deployment task will use basic authentication when connecting to the backend. If the target system is ABAP Environment on SAP Business Technology Platform, this parameter needs to be set to `true`.\r\n\r\n#### service\r\n\r\n- `<string>` (default: `/sap/opu/odata/UI5/ABAP_REPOSITORY_SRV`)\r\n- Path pointing to the SAPUI5 ABAP repository OData service in your target system. This parameter only needs to be used if the service is exposed at a different path in your backend system e.g. via alias.\r\n\r\n### credentials (optional)\r\n\r\nThe credentials object is mainly required for CI/CD based deployments and it needs to contain the required parameters to authenticate at your target system. It is only possible to use references to environment variables e.g. `env:MY_VARIABLE` here, plain username and password are not supported.\r\n\r\nFor local usage, we recommend to not use the credentials object at all. As result, the deployment task will utilize the operating systems secure storage maintain credentials.\r\n\r\n#### username\r\n\r\n- `<string>` (required)\r\n- SAP business user for the target system. The user requires authorizations to create/update the target ABAP development object.\r\n\r\n#### password\r\n\r\n- `<string>` (required)\r\n- Password required to authenticate the previously configured user. IMPORTANT: while technically possible to add the password to your config, we strongly DISCOURAGE that but recommend instead the use of environment variables.\r\n\r\n### app\r\n\r\nThe app object describes the backend object that is created/updated as result of the deployment.\r\n\r\n#### name\r\n\r\n- `<string>` (required)\r\n- Unique name of the application. The name is used as part of the application url as well as the name of the ABAP development object used as container for the app.\r\n\r\n#### package\r\n\r\n- `<string>` (required for new apps)\r\n- Name of an existing ABAP package that is used as parent of the deployed application. The parameter is required for the creation of the application in the backend. Any following deployment updating the application does not require the package parameter, i.e. it will be ignored.\r\n\r\n#### transport\r\n\r\n- `<string>` (optional)\r\n- The transport parameter refers to a transport request number that is to be used to record changes to the backend application object. The property is optional because it is only required if the package that is used for deployments requires transport requests.\r\n\r\n#### description\r\n\r\n- `<string>` (optional)\r\n- Optional description added to the created application object in the backend.\r\n\r\n### exclude\r\n\r\n- `<string[] array of regex>` (optional)\r\n- By default the deployment task will create an archive (zip file) of all build files and send it to the backend. By using exclude, you can define expressions to match files that shall not be included into the deployment. Note: `string.match()` is used to evaluate the expressions.\r\n\r\n### index\r\n\r\n- `true|false` (default: `false`)\r\n- If set to `true`, then an additional index.html will be generated and deployed to run the application standalone.\r\n\r\n### test\r\n\r\n- `true|false` (default: `false`)\r\n- If set to `true`, the task will run through all steps including sending the archive to the SAP backend. The backend will not deploy the app but run the pre-deployment checklist and return the result.\r\n\r\n## [Commands](#commands)\r\n### [fiori run](#fiori-run---starts-a-local-web-server-for-running-a-fe-application) - starts a local web server for running a FE application\r\n#### Options\r\n\r\n* `--config, c` - Path to config file (default: `ui5.yaml` in root folder of the project).\r\n* `--verbose` - Enable verbose logging (default: `false`).\r\n* `--port, -p` - Port to start the server on (default for HTTP: 8080, HTTPS: 8443).\r\n* `--open, -o` - Open web server root directory in default browser. Optionally, supplied relative path will be appended to the root URL.\r\n* `--https` - Enables HTTPS over the HTTP/2 protocol for the web server (default: `false`). If you provide the `--https` parameter, but you do not provide the `--key` and `--cert` parameters, then a private key and certificate will be created automatically. **Note: For the automatic key and certificate generation, you need to have OpenSSL installed on your OS. Using HTTPS over HTTP/2 is currently not supported in SAP Business Application Studio.**\r\n* `--key` - Path to the private key for https (default: `\"$HOME/.ui5/server/server.key\"`).\r\n* `--cert` - Path to the certificate for https (default: `\"$HOME/.ui5/server/server.crt\"`).\r\n* `--ui5` - UI5 version to use when running the application (default: version from `ui5.yaml`).\r\n* `--ui5Uri` - UI5 uri to load the UI5 resources from (default: uri from `ui5.yaml`).\r\n* `--proxy` - specify proxy configuration, e.g. `https://myproxy:8443` (default: uses host machine proxy configuration, if any).\r\n\r\n### [fiori add deploy-config](#fiori-add-deploy-config---adds-a-deployment-configuration-to-the-project) - adds a deployment configuration to the project\r\n\r\nThe command allows adding a deployment configuration to the project. The command supports the generation of a configuration for deployment to an ABAP system or to a Cloud Foundry space.\r\n\r\n#### Deployment to ABAP \r\nIf `ABAP` is chosen as target then the CLI will prompt the required information to generate a `ui5-deploy.yaml` required for the `deploy-to-abap` task.\r\n\r\n#### Deployment to Cloud Foundry (CF)\r\nFor the deployment to CF, an MTA configuration will be created. The command allows to create a new configuration i.e. a new `mta.yaml` file or updates an existing `mta.yaml` with the information required for deployment. After successfully creating the configuration, running `npm run build` in the MTA directory that contains the application will try to build a deployable mtar file that can then be deployed to CF with `npm run deploy`.\r\n\r\n**Pre-requisites:**\r\n\r\n* Availablity of the [`mta`](https://github.com/SAP/cloud-mta) executable in the path.\r\nUse `npm i -g mta` to install globally\r\n* Availability of Cloud Foundry CLI tools. Installation instructions: https://docs.cloudfoundry.org/cf-cli/install-go-cli.html\r\n* Availability of CF multiapps plugin. Installation instructions: https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/27f3af39c2584d4ea8c15ba8c282fd75.html\r\n* A correctly configured destination to the backend system\r\n* User authorization on CF to deploy\r\n\r\n#### Artifacts & configuration created\r\n\r\nRunning the command/task, results in a directory structure that looks like this:\r\n```\r\nmta_directory\r\n|_ application_directory\r\n   |_ ...\r\n   |_ webapp\r\n      |_ ...\r\n      |_ manifest.json\r\n   |_ ui5.yaml\r\n|_ cf\r\n   |_ deployer\r\n   |_ router\r\n   |_ flp (optional)\r\n...\r\n|_ package.json\r\n|_ mta.yaml\r\n```\r\n#### Information required to generate the configuration\r\n##### Location of MTA Directory\r\nThe tool finds the nearest parent directory that contains a `mta.yaml` and offers that as the MTA directory. Failing that, it defaults to the parent directory of the application.\r\n\r\n##### Destination\r\nDestination configured to connect to the backend on Cloud Foundry. If there's a setting in `ui5.yaml`, that value is offered as the default.\r\n\r\n##### Prefix\r\nPrefix used for the ID of the MTA and the service names. It defaults to the namespace of the app. If a namespace is not found, it defaults to `test`. Please choose a prefix so that the service names are unique to your MTA. Otherwise deployment by multiple people will overwrite the same service.\r\n\r\nAt the end of the generation, it's possible to optionally generate  SAP Fiori launchpad configuration (default: no).\r\n\r\n### [fiori add flp-config](#fiori-add-flp-config---fiori-launchpad-configuration-generation) - Fiori Launchpad configuration generation\r\nIt's possible to create configuration and artifacts required to run the application in an SAP Fiori launchpad. Depending on the target, the command will update either only the application `manifest.json` with the required inbound navigation property, or will also enhance the MTA configuration to contain a standalone FLP on CF.\r\n\r\n### [fiori deploy](#fiori-deploy---performs-the-deployment-of-the-application-into-an-abap-system) - performs the deployment of the application into an ABAP system\r\nDeploys an application to an ABAP frontend server.\r\n\r\n#### Options\r\n\r\n* `--config, c` - Path to config file (default: `ui5-deploy.yaml` in root folder of the project).\r\n* `--noConfig` - Only CLI arguments will be used, no config file is read.\r\n* `--destination, -d` - The destination used in SAP Business Application Studio (default: destination from `ui5-deploy.yaml`).\r\n* `--url, -u` - The url of the service endpoint at the ABAP system (default: url from `ui5-deploy.yaml`).\r\n* `--username` - Name of environment variable containing a username to authenticate (default: username from `ui5-deploy.yaml`).\r\n* `--password` - Name of environment variable containing a password to authenticate (default: password from `ui5-deploy.yaml`).\r\n* `--client, -l` - The ABAP client (default: client from `ui5-deploy.yaml`).\r\n* `--transport, -t` - The id of the transport request (default: transport from `ui5-deploy.yaml`).\r\n* `--name, -n` - The application name (default: name from `ui5-deploy.yaml`).\r\n* `--package, -p` - The ABAP package (default: package from `ui5-deploy.yaml`).\r\n* `--description, -e` - The application description (default: description from `ui5-deploy.yaml`).\r\n* `--yes, -y` - Deploy without asking for confirmation.\r\n* `--failfast, -f` - Throw an error if something goes wrong and exit with a return code != 0.\r\n\r\n\r\n## [FAQ](#faq)\r\n\r\n**My backend system contains the SAP_UI component version 7.53 or newer, but the SAPUI5 repository service cannot be reached.**\r\n\r\n*A: Please check if the service has been activated. More information at <https://help.sap.com/viewer/68bf513362174d54b58cddec28794093/7.52.5/en-US/bb2bfe50645c741ae10000000a423f68.html.>*\r\n\r\n**The SAPUI5 repository service is active and reachable but whenever I deploy an application I see the following error \"Request failed with status code 400\".**\r\n\r\nThis could have multiple reasons, please check the console for more information or open transaction `/IWFND/ERROR_LOG` and check the server logs. A common issue is that during the setup, configuring a virus scan profile has been forgotten. This can be corrected in transaction `/IWFND/VIRUS_SCAN`.\r\n\r\n**SSL certificate creation and installation fails with: `Unable to find openssl - please make sure it is installed and available in your PATH`.**\r\n\r\nMost probably the `OpenSSL` package is not installed on your OS. Please install it and make sure that it is available in your `PATH` environment variable.\r\n\r\n## [Support](#support)\r\n\r\nJoin the [SAP Fiori Tools Community](https://community.sap.com/search/?by=updated&ct=blog&mt=73555000100800002345). Ask Questions, Read the Latest Blogs, Explore Content.  \r\nPlease assign tag: _SAP Fiori tools_.\r\n\r\nTo log an issue with SAP Fiori Tools, please see [Contact SAP Support](https://help.sap.com/viewer/1bb01966b27a429ebf62fa2e45354fea/Latest/en-US).\r\n\r\n## [Documentation](#documentation) \r\n\r\n- Visit **SAP Help Portal** for [SAP Fiori Tools](https://help.sap.com/viewer/product/SAP_FIORI_tools/Latest/en-US) documentation. \r\n\r\n## [License](#license)\r\n\r\n<details>\r\n    <summary>SAP DEVELOPER LICENSE AGREEMENT</summary>\r\n    <p/>\r\n    Please scroll down and read the following Developer License Agreement carefully (\"Developer Agreement\").  By clicking \"I Accept\" or by attempting to download, or install, or use the SAP software and other materials that accompany this Developer Agreement (\"SAP Materials\"), You agree that this Developer Agreement forms a legally binding agreement between You (\"You\" or \"Your\") and SAP SE, for and on behalf of itself and its subsidiaries and affiliates (as defined in Section 15 of the German Stock Corporation Act) and You agree to be bound by all of the terms and conditions stated in this Developer Agreement. If You are trying to access or download the SAP Materials on behalf of Your employer or as a consultant or agent of a third party (either \"Your Company\"), You represent and warrant that You have the authority to act on behalf of and bind Your Company to the terms of this Developer Agreement and everywhere in this Developer Agreement that refers to 'You' or 'Your' shall also include Your Company. If You do not agree to these terms, do not click \"I Accept\", and do not attempt to access or use the SAP Materials.\r\n    <p/>\r\n    1.  LICENSE:\r\n    <br/>SAP grants You a non-exclusive, non-transferable, non-sublicensable, revocable, limited use license to copy, reproduce and distribute the application programming interfaces (\"API\"), documentation, plug-ins, templates, scripts and sample code (\"Tools\") on a desktop, laptop, tablet, smart phone, or other appropriate computer device that You own or control (any, a \"Computer\") to create new applications (\"Customer Applications\"). You agree that the Customer Applications will not: (a) unreasonably impair, degrade or reduce the performance or security of any SAP software applications, services or related technology (\"Software\"); (b) enable the bypassing or circumventing of SAP's license restrictions and/or provide users with access to the Software to which such users are not licensed; (c) render or provide, without prior written consent from SAP, any information concerning SAP software license terms, Software, or any other information related to SAP products; or (d) permit mass data extraction from an SAP product to a non-SAP product, including use, modification, saving or other processing of such data in the non-SAP product. In exchange for the right to develop Customer Applications under this Agreement, You covenant not to assert any Intellectual Property Rights in Customer Applications created by You against any SAP product, service, or future SAP development.\r\n    <p/>\r\n    2.  INTELLECTUAL PROPERTY:\r\n    <br/>(a) SAP or its licensors retain all ownership and intellectual property rights in the APIs, Tools and Software. You may not: a) remove or modify any marks or proprietary notices of SAP, b) provide or make the APIs, Tools or Software available to any third party, c) assign this Developer Agreement or give or transfer the APIs, Tools or Software or an interest in them to another individual or entity, d) decompile, disassemble or reverse engineer (except to the extent permitted by applicable law) the APIs Tools or Software, (e) create derivative works of or based on the APIs, Tools or Software, (f) use any SAP name, trademark or logo, or (g) use the APIs or Tools to modify existing Software or other SAP product functionality or to access the Software or other SAP products' source code or metadata.\r\n    <br/>(b) Subject to SAP's underlying rights in any part of the APIs, Tools or Software, You retain all ownership and intellectual property rights in Your Customer Applications.\r\n    <p/>\r\n    3. FREE AND OPEN SOURCE COMPONENTS:\r\n    <br/>The SAP Materials may include certain third party free or open source components (\"FOSS Components\"). You may have additional rights in such FOSS Components that are provided by the third party licensors of those components.\r\n    <p/>\r\n    4. THIRD PARTY DEPENDENCIES:\r\n    <br/>The SAP Materials may require certain third party software dependencies (\"Dependencies\") for the use or operation of such SAP Materials. These dependencies may be identified by SAP in Maven POM files, product documentation or by other means. SAP does not grant You any rights in or to such Dependencies under this Developer Agreement. You are solely responsible for the acquisition, installation and use of Dependencies. SAP DOES NOT MAKE ANY REPRESENTATIONS OR WARRANTIES IN RESPECT OF DEPENDENCIES, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND OF FITNESS FOR A PARTICULAR PURPOSE. IN PARTICULAR, SAP DOES NOT WARRANT THAT DEPENDENCIES WILL BE AVAILABLE, ERROR FREE, INTEROPERABLE WITH THE SAP MATERIALS, SUITABLE FOR ANY PARTICULAR PURPOSE OR NON-INFRINGING.  YOU ASSUME ALL RISKS ASSOCIATED WITH THE USE OF DEPENDENCIES, INCLUDING WITHOUT LIMITATION RISKS RELATING TO QUALITY, AVAILABILITY, PERFORMANCE, DATA LOSS, UTILITY IN A PRODUCTION ENVIRONMENT, AND NON-INFRINGEMENT. IN NO EVENT WILL SAP BE LIABLE DIRECTLY OR INDIRECTLY IN RESPECT OF ANY USE OF DEPENDENCIES BY YOU.\r\n    <p/>\r\n    5.  WARRANTY:\r\n    <br/>a)  If You are located outside the US or Canada: AS THE API AND TOOLS ARE PROVIDED TO YOU FREE OF CHARGE, SAP DOES NOT GUARANTEE OR WARRANT ANY FEATURES OR QUALITIES OF THE TOOLS OR API OR GIVE ANY UNDERTAKING WITH REGARD TO ANY OTHER QUALITY. NO SUCH WARRANTY OR UNDERTAKING SHALL BE IMPLIED BY YOU FROM ANY DESCRIPTION IN THE API OR TOOLS OR ANY AVAILABLE DOCUMENTATION OR ANY OTHER COMMUNICATION OR ADVERTISEMENT. IN PARTICULAR, SAP DOES NOT WARRANT THAT THE SOFTWARE WILL BE AVAILABLE UNINTERRUPTED, ERROR FREE, OR PERMANENTLY AVAILABLE.  FOR THE TOOLS AND API ALL WARRANTY CLAIMS ARE SUBJECT TO THE LIMITATION OF LIABILITY STIPULATED IN SECTION 4 BELOW.\r\n    <br/>b)  If You are located in the US or Canada: THE API AND TOOLS ARE LICENSED TO YOU \"AS IS\", WITHOUT ANY WARRANTY, ESCROW, TRAINING, MAINTENANCE, OR SERVICE OBLIGATIONS WHATSOEVER ON THE PART OF SAP. SAP MAKES NO EXPRESS OR IMPLIED WARRANTIES OR CONDITIONS OF SALE OF ANY TYPE WHATSOEVER, INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND OF FITNESS FOR A PARTICULAR PURPOSE. IN PARTICULAR, SAP DOES NOT WARRANT THAT THE SOFTWARE WILL BE AVAILABLE UNINTERRUPTED, ERROR FREE, OR PERMANENTLY AVAILABLE.  YOU ASSUME ALL RISKS ASSOCIATED WITH THE USE OF THE API AND TOOLS, INCLUDING WITHOUT LIMITATION RISKS RELATING TO QUALITY, AVAILABILITY, PERFORMANCE, DATA LOSS, AND UTILITY IN A PRODUCTION ENVIRONMENT.\r\n    <p/>\r\n    6.  LIMITATION OF LIABILITY:\r\n    <br/>a)  If You are located outside the US or Canada: IRRESPECTIVE OF THE LEGAL REASONS, SAP SHALL ONLY BE LIABLE FOR DAMAGES UNDER THIS AGREEMENT IF SUCH DAMAGE (I) CAN BE CLAIMED UNDER THE GERMAN PRODUCT LIABILITY ACT OR (II) IS CAUSED BY INTENTIONAL MISCONDUCT OF SAP OR (III) CONSISTS OF PERSONAL INJURY. IN ALL OTHER CASES, NEITHER SAP NOR ITS EMPLOYEES, AGENTS AND SUBCONTRACTORS SHALL BE LIABLE FOR ANY KIND OF DAMAGE OR CLAIMS HEREUNDER.\r\n    <br/>b)  If You are located in the US or Canada: IN NO EVENT SHALL SAP BE LIABLE TO YOU, YOUR COMPANY OR TO ANY THIRD PARTY FOR ANY DAMAGES IN AN AMOUNT IN EXCESS OF $100 ARISING IN CONNECTION WITH YOUR USE OF OR INABILITY TO USE THE TOOLS OR API OR IN CONNECTION WITH SAP'S PROVISION OF OR FAILURE TO PROVIDE SERVICES PERTAINING TO THE TOOLS OR API, OR AS A RESULT OF ANY DEFECT IN THE API OR TOOLS. THIS DISCLAIMER OF LIABILITY SHALL APPLY REGARDLESS OF THE FORM OF ACTION THAT MAY BE BROUGHT AGAINST SAP, WHETHER IN CONTRACT OR TORT, INCLUDING WITHOUT LIMITATION ANY ACTION FOR NEGLIGENCE. YOUR SOLE REMEDY IN THE EVENT OF BREACH OF THIS DEVELOPER AGREEMENT BY SAP OR FOR ANY OTHER CLAIM RELATED TO THE API OR TOOLS SHALL BE TERMINATION OF THIS AGREEMENT. NOTWITHSTANDING ANYTHING TO THE CONTRARY HEREIN, UNDER NO CIRCUMSTANCES SHALL SAP AND ITS LICENSORS BE LIABLE TO YOU OR ANY OTHER PERSON OR ENTITY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, OR INDIRECT DAMAGES, LOSS OF GOOD WILL OR BUSINESS PROFITS, WORK STOPPAGE, DATA LOSS, COMPUTER FAILURE OR MALFUNCTION, ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSS, OR EXEMPLARY OR PUNITIVE DAMAGES.\r\n    <p/>\r\n    7.  INDEMNITY:\r\n    <br/>You will fully indemnify, hold harmless and defend SAP against law suits based on any claim: (a) that any Customer Application created by You infringes or misappropriates any patent, copyright, trademark, trade secrets, or other proprietary rights of a third party, or (b) related to Your alleged violation of the terms of this Developer Agreement.\r\n    <p/>\r\n    8.  EXPORT:\r\n    <br/>The Tools and API are subject to German, EU and US export control regulations. You confirm that: a) You will not use the Tools or API for, and will not allow the Tools or API to be used for, any purposes prohibited by German, EU and US law, including, without limitation, for the development, design, manufacture or production of nuclear, chemical or biological weapons of mass destruction; b) You are not located in Cuba, Iran, Sudan, Iraq, North Korea, Syria, nor any other country to which the United States has prohibited export or that has been designated by the U.S. Government as a \"terrorist supporting\" country (any, an \"US Embargoed Country\"); c) You are not a citizen, national or resident of, and are not under the control of, a US Embargoed Country; d) You will not download or otherwise export or re-export the API or Tools, directly or indirectly, to a US Embargoed Country nor to citizens, nationals or residents of a US Embargoed Country; e) You are not listed on the United States Department of Treasury lists of Specially Designated Nationals, Specially Designated Terrorists, and Specially Designated Narcotic Traffickers, nor listed on the United States Department of Commerce Table of Denial Orders or any other U.S. government list of prohibited or restricted parties and f) You will not download or otherwise export or re-export the API or Tools , directly or indirectly, to persons on the above-mentioned lists.\r\n    <p/>\r\n    9.  SUPPORT:\r\n    <br/>Other than what is made available on the SAP Community Website (SCN) by SAP at its sole discretion and by SCN members, SAP does not offer support for the API or Tools which are the subject of this Developer Agreement.\r\n    <p/>\r\n    10.  TERM AND TERMINATION:\r\n    <br/>You may terminate this Developer Agreement by destroying all copies of the API and Tools on Your Computer(s). SAP may terminate Your license to use the API and Tools immediately if You fail to comply with any of the terms of this Developer Agreement, or, for SAP's convenience by providing you with ten (10) day's written notice of termination (including email). In case of termination or expiration of this Developer Agreement, You must destroy all copies of the API and Tools immediately.  In the event Your Company or any of the intellectual property you create using the API, Tools or Software are acquired (by merger, purchase of stock, assets or intellectual property or exclusive license), or You become employed, by a direct competitor of SAP, then this Development Agreement and all licenses granted in this Developer Agreement shall immediately terminate upon the date of such acquisition.\r\n    <p/>\r\n    11.  LAW/VENUE:\r\n    <br/>a)  If You are located outside the US or Canada: This Developer Agreement is governed by and construed in accordance with the laws of the Germany. You and SAP agree to submit to the exclusive jurisdiction of, and venue in, the courts of Karlsruhe in Germany in any dispute arising out of or relating to this Developer Agreement.\r\n    <br/>b)  If You are located in the US or Canada: This Developer Agreement shall be governed by and construed under the Commonwealth of Pennsylvania law without reference to its conflicts of law principles. In the event of any conflicts between foreign law, rules, and regulations, and United States of America law, rules, and regulations, United States of America law, rules, and regulations shall prevail and govern. The United Nations Convention on Contracts for the International Sale of Goods shall not apply to this Developer Agreement. The Uniform Computer Information Transactions Act as enacted shall not apply.\r\n    <p/>\r\n    12. MISCELLANEOUS:\r\n    <br/>This Developer Agreement is the complete agreement for the API and Tools licensed (including reference to information/documentation contained in a URL). This Developer Agreement supersedes all prior or contemporaneous agreements or representations with regards to the subject matter of this Developer Agreement. If any term of this Developer Agreement is found to be invalid or unenforceable, the surviving provisions shall remain effective. SAP's failure to enforce any right or provisions stipulated in this Developer Agreement will not constitute a waiver of such provision, or any other provision of this Developer Agreement.\r\n\r\n</details>\r\n"}]