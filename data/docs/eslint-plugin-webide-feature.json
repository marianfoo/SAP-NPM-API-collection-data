[{"name":"CHANGELOG.md","content":"# Changelog for Eslint Plugin Web IDE Feature\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\n## 1.3.22 - 14/03/2019\r\n\r\n### Added\r\n\r\n- Added support for service aliases.\r\n\r\n## 1.3.21 - 28/11/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"no-private-apis\" was fixed to show errors when service is private and uses a method.\r\n\r\n## 1.3.20 - 25/11/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"plugin-provides-valid\" was fixed to reduce the number of false positive warnings\r\n\r\n## 1.3.19 - 28/10/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"no-private-apis\" was fixed to reduce the number of false positive warnings\r\n\r\n## 1.3.17 - 14/08/2018\r\n\r\n### Fixed\r\n\r\n- Fixed relative url in configs files.\r\n\r\n## 1.3.16 - 09/08/2018\r\n\r\n### Added\r\n\r\n- Added recommended-new.json - only webide-eslint related checks\r\n\r\n## 1.3.15 - 26/04/2018\r\n\r\n### Updated\r\n\r\n- Update package version.\r\n\r\n## 1.3.14 - 26/04/2018\r\n\r\n### Updated\r\n\r\n- Update Web IDE package version in dev-dependencies.\r\n\r\n## 1.3.13 - 28/02/2018\r\n\r\n### Fixed\r\n\r\n- The rule \"no-private-apis\" reports errors with empty service name: 'error The \"\" service is a \"private\" service'.\r\n- The rule \"no-private-methods\" crashes with error: \"Cannot read property 'startsWith' of undefined\".\r\n- The rule \"feature-description-valid\" severity has changed from \"error\" to \"warn\".\r\n- The rule \"unicorn/prefer-starts-ends-with\" is turned off.\r\n\r\n## 1.3.12 - 15/02/2018\r\n\r\n### Added\r\n\r\n- Added recommended-internal.json - the recommended rules configuration for internal webide feature developers.\r\n\r\n### Fixed\r\n\r\n- Tied the SDK version used by no-private-apis rule to the latest Web IDE version.\r\n\r\n## 1.3.7 - 31/01/2018\r\n\r\n### Fixed\r\n\r\n- Fixed bundled-uris-valid - added validity checks for more use cases (for example, uris with white spaces)\r\n- Fixed consistent-ids - fixed consistency check of bundled features ids\r\n- Fixed no-unused-required-services - added check for not used required services (via oContext.service and not via this.context.service)\r\n- Fixed handling of ignored paths\r\n- Formatting rules were excluded from recommended config\r\n\r\n## 1.3.4 - 16/01/2018\r\n\r\n### Added\r\n\r\n- Added no-private-apis to rules library\r\n- Added bundled-uris-valid to rules library\r\n- Added no-deprecated-fields to rules library\r\n- Added homepage-url-valid to rules library\r\n- Added consistent-ids to rules library\r\n- Added no-optional-features to rules library\r\n- Added feature-author-valid to rules library\r\n- Added webide-dependencies-consistent to rules library\r\n- Added plugin-name-valid to rules library\r\n- Added plugin-provides-valid to rules library\r\n- Added valid-json-files to rules library\r\n- Added no-unused-required-services to rules library\r\n\r\n### Removed\r\n\r\n- Removed plugin-path from rules library\r\n- Removed requires-services from rules library\r\n\r\n### Renamed\r\n\r\n- Renamed packagejson-description to feature-description-valid in rules library\r\n- Renamed packagejson-exists to package-json-exists in rules library\r\n- Renamed packagejson-name to feature-name-valid in rules library\r\n- Renamed packagejson-version to feature-version-valid in rules library\r\n\r\n### Fixed\r\n\r\n- Problem with \"Unused required service\" rule - dot service names\r\n- services/methods implemented within my feature are all flagged as private\r\n- .eslintignore not working good with linter\r\n\r\n## 1.2.3 - 20/12/2017\r\n\r\nThis is the initial version of Eslint Plugin Web IDE Feature. It contains a set of eslint rules for static code checks to be used by Web IDE feature developers.\r\n\r\n### Added\r\n\r\n- Added no-private-methods to rules library\r\n- Added packagejson-description to rules library\r\n- Added packagejson-exists to rules library\r\n- Added packagejson-name to rules library\r\n- Added packagejson-version to rules library\r\n- Added plugin-path to rules library\r\n- Added requires-services to rules library\r\n"},{"name":"docs","nodes":[{"name":"predefined-plugins.md","content":"﻿# Predefined plugins for feature validations\r\n\r\n## Predefined plugins\r\n\r\n• **[RequireJS](https://github.com/cvisco/eslint-plugin-requirejs) - Enforce code conventions for RequireJS modules with ESLint.**\r\n\r\nRules severity configuration\r\n\r\n    \"plugin:requirejs/recommended\",\r\n\r\nand [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/recommended.json#L10-L12).\r\n\r\n---\r\n\r\n• **[es5](https://github.com/nkt/eslint-plugin-es5) - ESLint plugin for ES5 users.**\r\nThis plugin sets default values to 'error', which is too strict, then we gave [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/recommended.json#L14-L31) for the plugin.\r\n\r\n---\r\n\r\n• **[Lodash](https://github.com/wix/eslint-plugin-lodash) - Lodash specific linting rules.**\r\nThis plugin sets default values for stylistic issues to 'error', which is too strict, then [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/common.json#L64-L102) for the plugin.\r\n\r\n---\r\n\r\n• **[ESLint](https://github.com/mysticatea/eslint-plugin-eslint-comments) Comments - Best practices about ESLint directive comments (/_eslint-disable_/, etc...)**\r\n\r\nOur recommendation rules severity for the plugin\r\n\r\n    \"plugin:eslint-comments/recommended\"\r\n\r\nand [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/recommended.json#L33-L36).\r\n\r\n---\r\n\r\n• **[JSDoc](https://github.com/gajus/eslint-plugin-jsdoc) - Linting rules for JSDoc comments.**\r\nThis plugin sets default values for to 'error', which is too strict, then recommendation [rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/common.json#L104-L116) for the plugin:\r\n\r\n---\r\n\r\n• **[XSS](https://github.com/Rantanen/eslint-plugin-xss) - Tries to detect XSS issues in codebase before they end up in production.**\r\n\r\nOur [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/common.json#L120-L121) for the plugin\r\n\r\n---\r\n\r\n• **[unicorn](https://github.com/sindresorhus/eslint-plugin-unicorn) - Various awesome ESLint rules.**\r\n\r\nOur recommendation rules severity for the plugin\r\n\"plugin:unicorn/recommended\",\r\n\r\nand [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/recommended.json#L38-L50).\r\n\r\n---\r\n\r\n• **[promise](https://github.com/xjamundx/eslint-plugin-promise) - Enforce best practices for JavaScript promises.**\r\nOur recommendation rules severity for the plugin\r\n\r\n    \"plugin:promise/recommended\"\r\n\r\nand [recommendation rules severity](https://github.wdf.sap.corp/DevX/eslint-plugin-webide-feature/blob/master/lib/configs/recommended.json#L52-L54).\r\n"},{"name":"rules","nodes":[{"name":"bundled-uris-valid.md","content":"# Items in _bundledPlugins_ and _bundledFeatures_ arrays must start with \"file:\" and have a valid URI. (_bundled-uris-valid_)\r\n\r\n## Rule Details\r\n\r\nIn the **package.json** file of an SAP Web IDE feature, you provide the _bundledPlugins_ and/or _bundledFeatures_ arrays. The _bundled-uris-valid_ rule checks that each bundled plugin and/or feature URI starts with \"file:\" and that the URI path provided is valid.\r\n\r\nExamples of **correct** code for this rule:\r\n\r\n```json\r\n\"bundledPlugins\": {\r\n    \"sap.webide.example.plugin\": \"file:src/webide-plugin-example\"\r\n }\r\n\r\n\"bundledFeatures\": {\r\n    \"sap.webide.example.feature\": \"file:src/webide-feature-example\"\r\n }\r\n```\r\n\r\nExamples of **incorrect** code for this rule:\r\n\r\n```json\r\n\"bundledPlugins\": {\r\n    \"sap.webide.example.plugin\": \"src/webide-plugin-example\"\r\n }\r\n\r\n \"bundledFeatures\": {\r\n    \"sap.webide.example.feature\": \"file: src/webide feature example\"\r\n }\r\n```\r\n"},{"name":"consistent-ids.md","content":"# Each \"package.json\" and \"plugin.json\" file must have consistent IDs. (_consistent-ids_)\r\n\r\n## Rule Details\r\n\r\nIn every **package.json** and **plugin.json** file there must be consistent IDs, or the _consistent-ids_ rule displays an alert.\r\n"},{"name":"feature-author-valid.md","content":"# A \"package.json\" file must contain a valid _author_ field with _name_ and _icon_ fields. (_feature-author-valid_)\r\n\r\n## Rule Details\r\n\r\nThe _author_ field together with its _name_ and _icon_ fields are mandatory in a **package.json** file of an SAP Web IDE feature. If they are invalid or missing, the _feature-author-valid_ rule displays an alert.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n        \"author\": {\r\n\t\t\t\"name\": \"featureName1\",\r\n\t\t\t\"icon\": \"https://www.website.com\"\r\n\t\t}\r\n```\r\n\r\n```json\r\n\t\"author\": {\r\n\t\t\"name\": \"featureName2\",\r\n\t\t\"icon\": \"/icon.png\"\r\n\t}\r\n}\r\n```\r\n\r\nExamples of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"author\": {\r\n\t\t\"name\": \"featureName3\",\r\n\t\t\"icon\": \"https://white space.com\"\r\n\t}\r\n}\r\n```\r\n\r\n```json\r\n{\r\n\t\"author\": {\r\n\t\t\"name\": \"featureName4\",\r\n\t\t\"icon\": \"noProtocol\"\r\n\t}\r\n}\r\n```\r\n"},{"name":"feature-description-valid.md","content":"# A \"package.json\" file must contain a valid _description_ field. (_feature-description-valid_)\r\n\r\n## Rule Details\r\n\r\nIf the _description_ field is missing or invalid in a **package.json** file of an SAP Web IDE feature, the _feature-description-valid_ rule displays an alert.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"myFeature\",\r\n\t\"description\": \"Opens a dialog box.\"\r\n}\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"myFeature\"\r\n}\r\n```\r\n"},{"name":"feature-name-valid.md","content":"# A \"package.json\" file must contain a valid _name_ field. (_feature-name-valid_)\r\n\r\n## Rule Details\r\n\r\nThe _feature-name-valid_ rule displays an alert when the **package.json** file of a feature does not contain a valid _name_ field.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"myFeature\"\r\n}\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"description\": \"Opens a dialog box.\"\r\n}\r\n```\r\n"},{"name":"feature-version-valid.md","content":"# A \"package.json\" file must contain a valid _version_ field. (_feature-version-valid_)\r\n\r\n## Rule Details\r\n\r\nThe _feature-version-valid_ rule displays an alert when the **package.json** file of a feature does not contain a valid _version_ field.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"myFeature\",\r\n\t\"version\": \"1.0.0\"\r\n}\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"myFeature\"\r\n}\r\n```\r\n"},{"name":"homepage-url-valid.md","content":"# A \"package.json\" file must contain a _homepage_ field with a valid path. (_homepage-url-valid_)\r\n\r\n## Rule Details\r\n\r\nIf the _homepage_ field is missing or has an invalid path in a **package.json** file of an SAP Web IDE feature, the _homepage-url-valid_ rule displays an alert.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"featureName1\",\r\n\t\"homepage\": \"https://www.website.com\"\r\n}\r\n```\r\n\r\nExamples of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"featureName2\",\r\n\t\"homepage\": \"https://white space.com\"\r\n}\r\n```\r\n\r\n```json\r\n{\r\n\t\"name\": \"featureName3\",\r\n\t\"homepage\": \"noProtocol\"\r\n}\r\n```\r\n\r\n```json\r\n{\r\n\t\"name\": \"featureName4\",\r\n\t\"homepage\": \"onlyProtocol:\"\r\n}\r\n```\r\n"},{"name":"no-deprecated-fields.md","content":"# A \"package.json\" file should not contain _deprecatedPluginExtensions_ or _deprecatedConfigIncludes_ fields. (_no-deprecated-fields_)\r\n\r\n## Rule Details\r\n\r\nIf the _deprecatedPluginExtensions_ or _deprecatedConfigIncludes_ field exists in a **package.json** file of an SAP Web IDE feature, the _no-deprecated-fields_ rule displays an alert.\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"deprecatedConfigIncludes\": {},\r\n\r\n\t\"deprecatedPluginExtensions\": {}\r\n}\r\n```\r\n"},{"name":"no-optional-features.md","content":"# A \"package.json\" file must not contain an _optionalBundledFeatures_ field. (_no-optional-features_)\r\n\r\n## Rule Details\r\n\r\nIf the _optionalBundledFeatures_ field exists in a **package.json** file of an SAP Web IDE feature, the _no-optional-features_ rule displays an alert.\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"optionalBundledFeatures\": {\r\n\t\t\"optFeatureId\": \"file:optFeaturePath/package.json\"\r\n\t}\r\n}\r\n```\r\n"},{"name":"no-private-apis.md","content":"# Do not use private APIs. (_no-private-apis_)\r\n\r\n## Rule Details\r\n\r\nDevelopers who are developing features in SAP Web IDE should not use private APIs.\r\n\r\nFor more information about permitted APIs, see the _API Reference_ in the [SAP Web IDE SDK](https://sdk-sapwebide.dispatcher.hana.ondemand.com/index.html).\r\n"},{"name":"no-private-methods.md","content":"# Do not use private methods. (_no-private-methods_)\r\n\r\n## Rule Details\r\n\r\nDevelopers who are developing features in SAP Web IDE should not use private methods. According to the convention in JavaScript, these private methods usually start with an underscore (\\_); therefore it is recommended **not** to use methods whose names begin with underscores.\r\n\r\n```js\r\nthis.context.service.myService.myMethod();\r\n```\r\n\r\nWhen private methods use expressions such as the above example, the _no-private-methods_ rule displays an alert.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```js\r\nthis.context.service.log.info();\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```js\r\nthis.context.service.log._info();\r\n```\r\n"},{"name":"no-unused-required-services.md","content":"# All required services in a \"plugin.json\" file must be in use. (_no-unused-required-services_)\r\n\r\n## Rule Details\r\n\r\nThe _no-unused-required-services_ rule displays an alert if there is a service in the _\"requires\":\"services\"_ section of a **plugin.json** file (see code snippet below) that is not used either in the **plugin.json** file itself or in the plugin's JavaScript code.\r\n\r\n```json\r\n\"requires\": {\r\n\t\t\"services\": [\r\n\t\t\t\"usernotification\",\r\n\t\t\t\"log\",\r\n\t\t\t\"command\",\r\n\t\t\t\"commandGroup\"\r\n\t\t]\r\n\t}\r\n```\r\n"},{"name":"package-json-exists.md","content":"# A \"package.json\" file must exist in a feature's root folder. (_package-json-exists_)\r\n\r\n## Rule Details\r\n\r\nThe _package-json-exists_ rule displays a warning when there is no **package.json** file in a feature's root folder.\r\n"},{"name":"plugin-name-valid.md","content":"# A \"plugin.json\" file must contain a valid _name_ field (_plugin-name-valid_)\r\n\r\n## Rule Details\r\n\r\nThe _plugin-name-valid_ rule displays an alert when a **plugin.json** file of a feature does not contain a valid _name_ field.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"myPlugin\"\r\n}\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"description\": \"Opens a dialog box.\"\r\n}\r\n```\r\n"},{"name":"plugin-provides-valid.md","content":"# The _services_ and _interfaces_ file references in a \"plugin.json\" file must be valid. (_plugin-provides-valid_)\r\n\r\n## Rule Details\r\n\r\nThe _plugin-provides-valid_ rule displays an alert when a **plugin.json** file contains services and interfaces that include an invalid or nonexistent file reference.\r\n\r\nA service must include two properties: the _implements_ property and one of the following properties:\r\n\r\n- _module_\r\n- _factory_\r\n\r\n| Property Name | Description                                                                                                                                                                                                                              |\r\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| _implements_  | Must contain the corresponding interface for the service mentioned in the _module_ or _factory_ property.                                                                                                                                |\r\n| _module_      | Must have a valid plugin name (the current plugin name) followed by a slash \\(\\/\\) that is followed by a path to the **service .js** file.                                                                                               |\r\n| _factory_     | Must have a valid factory service name that appears in the _requires_ or _provides_ block. NOTE: For more information, see _Service Factories_ in the [SAP Web IDE SDK](https://sdk-sapwebide.dispatcher.hana.ondemand.com/index.html#). |\r\n\r\nExample using the _implements_ and _module_ properties:\r\n\r\n```\r\n{\r\n    \"provides\": {\r\n        \"services\": {\r\n            \"myService\": {\r\n                \"implements\": \"SomeInterface\",\r\n                \"module\": \"some.plugin.name/MyService\"\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n```\r\n\r\nExample using the _implements_ and _factory_ properties:\r\n\r\n```\r\n{\r\n    \"requires\": {\r\n        \"services\": [\r\n            \"myExampleServiceFactory\"\r\n        ]\r\n    },\r\n    \"provides\": {\r\n        \"services\": {\r\n            \"myService\": {\r\n                \"implements\": \"SomeInterface\",\r\n                \"factory\": \"myExampleServiceFactory\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAn interface must contain a value as shown below.\r\n\r\n```\r\n{\r\n    \"provides\": {\r\n        \"interfaces\": {\r\n            \"SomeInterface\": \"some.plugin.name/SomeInterface\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe value string must consist of a valid plugin name (the current plugin name) followed by a slash \\(\\/\\) that is followed by a path to the interface JSON file.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"some.plugin.name\",\r\n\t\"provides\": {\r\n\t\t\"services\": {\r\n\t\t\t\"myService\": {\r\n\t\t\t\t\"implements\": \"SomeInterface\",\r\n\t\t\t\t\"module\": \"some.plugin.name/MyService\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"interfaces\": {\r\n\t\t\t\"SomeInterface\": \"some.plugin.name/SomeInterface\"\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"name\": \"some.plugin.name\",\r\n\t\"provides\": {\r\n\t\t\"services\": {\r\n\t\t\t\"myService\": {\r\n\t\t\t\t\"implements\": \"SomeInterface\",\r\n\t\t\t\t\"module\": \"some.other.plugin.name/MyService\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n```\r\n{\r\n    \"name\": \"some.plugin.name\",\r\n    \"provides\": {\r\n        \"services\": {\r\n            \"myService\": {\r\n                \"implements\": \"SomeInterface\",\r\n                \"factory\": \"myFactory\"\r\n            }\r\n        },\r\n\t   \"interfaces\": {\r\n\t       \"SomeInterface\": \"some.plugin.name/SomeInterface\"\r\n\t   }\r\n    }\r\n}\r\n```\r\n\r\n**NOTE**: The _module_ path should point to the current plugin.\r\n"},{"name":"valid-json-files.md","content":"# All JSON files in a feature must be valid. (_valid-json-files_)\r\n\r\n## Rule Details\r\n\r\nThe _valid-json-files_ rule displays an alert if an SAP Web IDE feature contains an invalid JSON file.\r\n\r\nFor more information about the JSON file structure and specifications, see [https://www.json.org](https://www.json.org/).\r\n"},{"name":"webide-dependencies-consistent.md","content":"# A _webideDependencies_ section should be declared properly. (_webide-dependencies-consistent_)\r\n\r\n## Rule Details\r\n\r\nThe _webideDependencies_ section in a **package.json** file is an array of SAP Web IDE feature dependencies. If the _webideDependencies_ section exists in the **package.json** file, then each feature in this array should be declared in the _peerDependencies_ section, and be assigned a version in the form of **\"\\*\"** or **\"x\"** only.\r\n\r\nExample of **correct** code for this rule:\r\n\r\n```json\r\n{\r\n\t\"webideDependencies\": [\"feature1\", \"feature2\"],\r\n\t\"peerDependencies\": { \"feature1\": \"*\", \"feature2\": \"x\" }\r\n}\r\n```\r\n\r\nExample of **incorrect** code for this rule:\r\n\r\n```json\r\n/*missing \"peerDependencies\" section in this case*/\r\n{\r\n\t\"webideDependencies\": [\"feature1\", \"feature2\"]\r\n}\r\n```\r\n"}]}]},{"name":"README.md","content":"# ESLint plugin for SAP Web IDE features\r\n\r\n## Table of contents\r\n\r\n- [Overview](#overview)\r\n- [Usage](#usage)\r\n- [List of rules](#list-of-rules)\r\n\r\n## Overview\r\n\r\nThis is the eslint plugin for Web IDE features. It contains a set of eslint rules and recommended ESLint configuration for static code checks to be used by Web IDE feature developers.\r\n\r\n## Usage\r\n\r\n### Add linting to tests\r\n\r\nTo add this package as a dependency in your package.json file, do the following:\r\n\r\n1. Under the \"scripts\" section, add: `\"lint\": \"eslint src\"`\r\n1. Under the \"scripts\" section, add: \"npm run lint\" to the test section: `\"test\": \"npm run lint && ...\"`\r\n1. Under the \"devDependencies\" section, add the following dependency: `\"@sap/eslint-plugin-webide-feature\": \"a.b.c\"`\r\n1. Add `.eslintrc.json` file with the following content:\r\n\r\n```json\r\n{\r\n\t\"plugins\": [\"@sap/webide-feature\"],\r\n\t\"extends\": \"plugin:@sap/webide-feature/recommended-internal\"\r\n}\r\n```\r\n\r\nThe linting checks will be executed as part of tests.\r\n\r\n**Please note that each version of this ESLint plugin corresponds to certain version of SAP Web IDE. As cloud version of SAP Web IDE is continiously updated it is strongly recommended to update the version of this plugin as soon as it is released. To update your feature to use the latest version of ESLint plugin, run: npm install --save-exact @sap/eslint-plugin-webide-feature@latest**\r\n\r\n### Fix existing lint issues\r\n\r\nAfter you have added linting, please execute it with `npm run lint`. Do not worry if you see lots of warnings and errors most of the can be fixed automatically with [--fix option of ESLint](https://eslint.org/docs/user-guide/command-line-interface#--fix), by running `node_modules/.bin/eslint src --fix`. Remaining issues can be fixed manually or ignored by [using special comments or overrding recommended configuration values](https://eslint.org/docs/user-guide/configuring#configuring-rules). To fix the issues manually please refer to the documentation of specific rule.\r\n\r\n## List of rules\r\n\r\n| Rule                                                                           | Description                                                                                             | Recommended Severity |\r\n| :----------------------------------------------------------------------------- | :------------------------------------------------------------------------------------------------------ | :------------------- |\r\n| [no-private-methods](docs/rules/no-private-methods.md)                         | Do not invoke private methods                                                                           | Error                |\r\n| [no-private-apis](docs/rules/no-private-apis.md)                               | Do not invoke private methods                                                                           | Warning              |\r\n| [bundled-uris-valid](docs/rules/bundled-uris-valid.md)                         | \"bundledPlugins\" and \"bundledFeatures\" arrays items must start with \"file:\" and have valid uri          | Error                |\r\n| [no-deprecated-fields](docs/rules/no-deprecated-fields.md)                     | package.json file should contain neither deprecatedPluginExtensions nor deprecatedConfigIncludes fields | Warning              |\r\n| [feature-description-valid](docs/rules/feature-description-valid.md)           | package.json file must contain description field                                                        | Warning              |\r\n| [homepage-url-valid](docs/rules/homepage-url-valid.md)                         | package.json file must contain a homepage field with a valid path                                       | Warning              |\r\n| [package-json-exists](docs/rules/package-json-exists.md)                       | package.json file must exist in feature's root folder                                                   | Error                |\r\n| [consistent-ids](docs/rules/consistent-ids.md)                                 | each package.json and plugin.json file must has consistent ids                                          | Error                |\r\n| [feature-name-valid](docs/rules/feature-name-valid.md)                         | package.json file must contain name field                                                               | Error                |\r\n| [no-optional-features](docs/rules/no-optional-features.md)                     | package.json file must not contain optionalBundledFeatures field                                        | Error                |\r\n| [feature-author-valid](docs/rules/feature-author-valid.md)                     | package.json file must contain an author field with name and icon                                       | Warning              |\r\n| [feature-version-valid](docs/rules/feature-version-valid.md)                   | package.json file must contain a version field                                                          | Error                |\r\n| [webide-dependencies-consistent](docs/rules/webide-dependencies-consistent.md) | \"webideDependencies\" section should be declared properly                                                | Error                |\r\n| [plugin-name-valid](docs/rules/plugin-name-valid.md)                           | plugin.json file must contain name field                                                                | Error                |\r\n| [plugin-provides-valid](docs/rules/plugin-provides-valid.md)                   | service and interface file references in \"plugin.json\" file must be valid                               | Error                |\r\n| [no-unused-required-services](docs/rules/no-unused-required-services.md)       | All required services of a plugin must be in use                                                        | Warning              |\r\n| [valid-json-files](docs/rules/valid-json-files.md)                             | All JSON files in a feature must be valid                                                               | Error                |\r\n"}]