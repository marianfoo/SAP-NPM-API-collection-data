[{"name":"CHANGELOG.md","content":"# Change Log\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThis project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\nThe format is based on [Keep a Changelog](http://keepachangelog.com/).\r\n\r\n## 3.2.2\r\n- Internal refactorings.\r\n\r\n## 3.2.1\r\n- Bugfixes\r\n- Using latest versions of libs `lodash`, `@sap/fibers`, `@sap/hdbext` and `@sap/xsjs`.\r\n\r\n## 3.2.0\r\n- Support for Node.js 14.\r\n\r\n## 3.1.3\r\n- Use `lodash` in version `4.17.15`.\r\n\r\n## 3.1.2\r\n- Internal restructuring.\r\n\r\n## 3.1.1\r\n- More bug fixes.\r\n\r\n## 3.1.0\r\n\r\n### Changed\r\n- Using latest versions of libs `@sap/fibers`, `@sap/hdbext` and `@sap/xsjs`.\r\n\r\n## 3.0.3 - 2019-02-14\r\n\r\n### Changed\r\n- use latest fibers\r\n\r\n## 3.0.2 - 2019-02-13\r\n\r\n### Changed\r\n- use correct hdbext\r\n\r\n## 3.0.1 - 2019-02-12\r\n\r\n### Changed\r\n- use latest hdbext and fibers\r\n\r\n### Fixed\r\n- npm-shrinkwrap.json cleansed\r\n\r\n## 3.0.0 - 2018-10-12\r\n\r\n### Changed\r\n- use @sap/hana-client instead of node-hdb\r\n\r\n## 2.0.15 - 2018-04-19\r\n\r\n### Fixed\r\n- use newer fibers to enable running on newer node.js runtimes\r\n\r\n## 2.0.14 - 2018-01-18\r\n\r\n### Changed\r\n- cleaned integrity field from npm-shrinkwrap.json to avoid checksum errors on customer side\r\n\r\n## 2.0.13 - 2018-01-15\r\n\r\n### Changed\r\n- use released version of hdbext\r\n- added missing double quote for table names in createTestTable\r\n\r\n## 2.0.12 - 2018-01-12\r\n\r\n### Added\r\n- CHANGELOG.md\r\n\r\n## 2.0.11 - 2018-01-12\r\n\r\n### Added\r\n- Node 8 support.\r\n\r\n### Fixed\r\n- Update dependencies.\r\n\r\n## 2.0.10 - 2018-01-09\r\n\r\n### Added\r\n- console output for test results\r\n\r\n### Fixed\r\n- jasmine.toEqualObject matches semantic equality\r\n- correct decimal value of a column in a row in resultSet\r\n- expect().toEqual(jasmine.any()) fixed\r\n- Can't wait without a fiber bug\r\n- set package parameter\r\n- sqlExecutor.execQuery (when hdbConnection) returns correct ColumnType and ColumnTypeName\r\n- execSingle works for update statement\r\n"},{"name":"README.md","content":"@sap/xsjs-test\r\n=========\r\n\r\nUnit test framework for the compatibility layer (XS runtime)\r\n\r\nSimple steps to use xsjs-test in your project:\r\n* Declare a dev dependency to @sap/xsjs-test in your XSJS application project (package.json)\r\n* Your tests are in folder test/ parallel to package.json and lib/\r\n* Configure a xstest script in your application package.json which runs xstest script\r\n* Run with npm run xstest\r\n\r\n\r\n## Details\r\n\r\n1) Dev dependency to @sap/xsjs-test\r\nPlease verify which version of @sap/xsjs-test is released and refer to it accordingly. Dev dependency means that @sap/xsjs-test will be installed only in local dev installation, not in productive installation. Another option would be to install @sap/xsjs-test globally on your PC:\r\n```Shell\r\nnpm install -g @sap/xsjs-test\r\n```\r\nThen you do not need to include it in dev dependency, it is visible everywhere on your workstation.\r\n\r\n2) Test folder\r\nNormally xsjs runtime files are under xsjs/  folder.\r\nSo following paths are expected:\r\n<<project>>/xsjs/package.json\r\n<<project>>/xsjs/lib/\r\n<<project>>/xsjs/test/\r\nThe last path is where the tests are expected. Of course you are free to put the tests in another folder, but then a special configuration is required.\r\n\r\n3) Test script\r\nThere is a normal binary script defined in bin folder. The normal way would be to define a script in the application package.json\r\n```JSON\r\n\"scripts\": {\r\n  \"xstest\" : \"xstest\"\r\n  }\r\n```\r\n\r\n\r\n4) Test execution\r\n```Shell\r\nnpm run xstest\r\n```\r\n\r\n5) Example configuration in file ./test/xstest.json\r\n```javascript\r\n{\r\n    test: {\r\n        format: \"xml\", // optional, default: \"html\"\r\n        pattern: \".*[Tt]Test\", // optional, default: \"\".*[Tt]Test\"\r\n        reportdir: \"test results folder\", // optional, default: \".\"\r\n        filename: \"test results file name without extension\" // optional, default: \"report\"\r\n    },\r\n    coverage: {\r\n        reporting: {\r\n            reports: [\"json\"] // default: \"html\"\r\n        },\r\n        dir: \"coverage results folder\", // optional, default: \"{test.reportdir}/coverage\"\r\n        filename: \"coverage results file name without extension\" // optional, default \"coverage\"\r\n    }\r\n}\r\n```\r\n\r\n## Known Restrictions\r\n\r\n* jasmine.callHTTPService() (see http://help.sap.com/hana/SAP_HANA_XS_Unit_JavaScript_API_Reference_en/jasmine.html ) is not supported because of the different underlying architecture of XSA. Instead of writing integration tests going through http, you should rely on pure unit tests to check the expected responses.\r\n* jasmine.tags is not supported.\r\n* jasmine.addProfile() is not supported.\r\n* describe( ... ).x() is not supported.\r\n* spys on globals like Date, Array, etc. won't work because each xsjslib is executed in a separate context. Try to stub/spy/mock via local members of your test instead.\r\n* jasmine.hdbConnection not supported (use jasmine.dbConnection)\r\n* jasmine.log is not supported (use console.log)\r\n* describeDB() and xdescribeDB() are not supported because they were already deprecated before (see http://help.sap.com/hana/SAP_HANA_XS_Unit_JavaScript_API_Reference_en/global.html#describeDb )\r\n* jasmine expect().toThrowError() is not supported (use toThrow(new Error()) instead)\r\n* tableUtils::copy*UserSchema() (http://help.sap.com/hana/SAP_HANA_XS_Unit_JavaScript_API_Reference_en/module-tableUtils-TableUtils.html) are not supported on HDI because there is a) no schema to copy from and b) by default no writable user schema\r\n* tableUtils.fillFromCsvFile() is not supported. Use HDI *.tableimport files instead to fill your HDI container with test data.\r\n* mockstar is discouraged/deprecated. Use HDI containers instead. If you need to reference larger test data, use HDI synonyms.\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license.txt).\r\n"}]