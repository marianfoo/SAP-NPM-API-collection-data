[{"name":"README.md","content":"[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\r\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\r\n\r\n# logger-for-bas-extensions\r\n\r\nLogger Library For Business Application Studio Extensions.\r\n\r\nThis performs logging to the workspace container in SAP Business Application Studio in JSON format\r\nwith the intent for the logs to be collected, saved, and processed by a separate service.\r\n\r\n## Installation\r\n\r\nEnter the following command to install the library using npm install:\r\n\r\n- `npm install @sap/logger-for-bas-extensions --save`\r\n\r\n## Usage\r\n\r\nHere is a sample of how to use the library:\r\n\r\n```typescript\r\nimport { getLogger, logLevelsKeys } from \"@sap/logger-for-bas-extensions\";\r\n\r\nlogger = await getLogger({\r\n  level: logLevelsKeys.error,\r\n  // Supply your package's name here.\r\n  label: \"<ExtensionName>\",\r\n  // Supply your package's version\r\n  version: \"1.2.3\",\r\n});\r\n\r\nif (logger !== undefined) {\r\n  // NOOP because the log level is `error` and `warn` < `error``\r\n  logger.warn(\"oops I did it again!\");\r\n\r\n  logger.fatal(\"Oy Vey!\");\r\n  // -> {\"label\":\"myLabel\",\"version\":\"1.2.3\",\"level\":\"fatal\",\"message\":\"Oy Vey!\",\"time\":\"2019-10-31T13:24:26.740Z\"}\r\n\r\n  // With Custom Payload Properties\r\n  logger.fatal(\"Input size out of bounds!\", { size: \"10000000B\" });\r\n  // ->\r\n  // {\r\n  //   label: \"myLabel\",\r\n  //   version: \"1.2.3\",\r\n  //   level: \"fatal\",\r\n  //   message: \"Input size out of bounds!\",\r\n  //   size: \"10000000B\",\r\n  //   time: \"2019-10-31T13:24:26.740Z\"\r\n  // }\r\n}\r\n```\r\n"}]