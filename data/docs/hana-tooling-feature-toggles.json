[{"name":"CHANGELOG.md","content":"## 1.1.0\r\n\r\n### New Features\r\n-  Support passing feature toggles as an object\r\n\r\n## 1.0.1\r\n\r\n### Fixes\r\n- Add type declarations\r\n\r\n## 1.0.0\r\n\r\nInitial release\r\n"},{"name":"README.md","content":"# @sap/hana-tooling-feature-toggles\r\nA node library for checking feature toggles. It gives you the option to create standard feature toggles and also feature toggles for Visual Studio Code commands.\r\n\r\n## Usage\r\n\r\n### Instantiation\r\n\r\nCreate an instance managing your feature toggles. The first parameter has to be either a JSON object or a string. The second parameter is the name of your Visual Studio Code extension (optional) if you want to enable / disable Visual Studio Code commands. The third parameter is a Visual Studio Code API object (optional).\r\nDepending on the type of your first parameter the module will\r\na) directly use the provided feature toggles.\r\nb) check if the string is stringified JSON.\r\nc) try to read the file at the provided path.\r\n\r\nPure Node.js:\r\n\r\n```javascript\r\n    // With JSON parameter.\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const myFeatures = {\r\n        \"featureToggles\": [\r\n            {\r\n                \"name\": \"helloworld\",\r\n                \"status\": \"released\"\r\n            }\r\n        ]\r\n    };\r\n    const FeatureToggleInstance = new FeatureToggles(myFeatures);\r\n```\r\n```javascript\r\n    // With string parameter.\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const FeatureToggleInstance = new FeatureToggles(__dirname + \"/../features.json\");\r\n```\r\n```javascript\r\n    // With stringified JSON parameter.\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const myFeatures = {\r\n        \"featureToggles\": [\r\n            {\r\n                \"name\": \"helloworld\",\r\n                \"status\": \"released\"\r\n            }\r\n        ]\r\n    };\r\n    const featureString = JSON.stringify(myFeatures);\r\n    const FeatureToggleInstance = new FeatureToggles(featureString);\r\n```\r\n\r\n\r\nVisual Studio Code:\r\n\r\n```javascript\r\n    const vscode = require( 'vscode' );\r\n    import FeatureToggles = require(\"@sap/hana-tooling-feature-toggles\");\r\n    const FeatureToggleInstance = new FeatureToggles(__dirname + \"/../features.json\", \"featuretoggletest\", vscode);\r\n```\r\n\r\nThe structure of your JSON object / file (first parameter) should be:\r\n\r\n```json\r\n{\r\n    \"featureToggles\": [\r\n        {\r\n            \"name\": \"helloworld\",\r\n            \"status\": \"released\"\r\n        },\r\n        {\r\n            \"name\": \"helloworlddisabled\",\r\n            \"status\": \"dev\"\r\n        },\r\n        {\r\n            \"name\": \"helloworldqa\",\r\n            \"status\": \"candidate\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nThe name is the unique identifier of your feature and the status determines whether it is in development, a candidate for release or a released feature.\r\n\r\n### API\r\n\r\n```javascript\r\n    FeatureToggles.isFeatureEnabled(\"featureToggleName\")\r\n```\r\n\r\nThis function checks if the feature 'featureToggleName' is enabled inside your specified .json file for feature toggles:\r\n- If the feature is enabled (for example 'helloworld' in the code above), it will return true.\r\n- If the feature is disabled (for example 'helloworlddisabled' in the code above), it will call _isFeatureQaEnabled(\"featureToggleName\") and return the internal result.\r\n\r\n```javascript\r\n    FeatureToggles.isCommandEnabled(\"featureToggleName\")\r\n```\r\n\r\nThis function should only be used if you are developing a Visual Studio Code extension and want to set feature toggles for commands. It will work like '.isFeatureEnabled(\"featureToggleName\")' with the difference that it will set a Visual Studio Code context variable which makes the command visible to the user.\r\n\r\nThe set Visual Studio Code context variable will be:\r\n```javascript\r\n    \"extensionName:featureToggleName\"\r\n```\r\n\r\nSo the package.json file of your extension should contain the following structure:\r\n\r\n```javascript\r\n\t\"contributes\": {\r\n\t\t\"commands\": [\r\n\t\t\t{\r\n\t\t\t\t\"command\": \"extensionName.commandName\",\r\n\t\t\t\t\"title\": \"Hello World (enabled)\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"menus\": {\r\n\t\t\t\"commandPalette\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"command\": \"extensionName.commandName\",\r\n\t\t\t\t\t\"when\": \"extensionName:featureToggleName1\"\r\n                }\r\n            ],\r\n            \"editor/context\": [\r\n                {\r\n\t\t\t\t\t\"command\": \"extensionName.commandName\",\r\n\t\t\t\t\t\"when\": \"extensionName:featureToggleName2\"\r\n\t\t\t\t}\r\n            ]\r\n        }\r\n    }\r\n```\r\n\r\n## License\r\nThis package is provided under the terms of the [SAP Developer License Agreement](https://tools.hana.ondemand.com/developer-license-3_1.txt)."}]